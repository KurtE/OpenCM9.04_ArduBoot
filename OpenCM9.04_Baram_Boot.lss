
OpenCM9.04_Baram_Boot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000134  08000000  08000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .flashtext    00000000  08000134  08000134  000100e4  2**0
                  CONTENTS
  2 .text         000026ac  08000134  08000134  00008134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         000000e4  20000000  080027e0  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          0000063c  200000e4  080028c4  000100e4  2**2
                  ALLOC
  5 ._usrstack    00000100  20000720  08002f00  000100e4  2**0
                  ALLOC
  6 .comment      00000070  00000000  00000000  000100e4  2**0
                  CONTENTS, READONLY
  7 .ARM.attributes 00000031  00000000  00000000  00010154  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000fd0  00000000  00000000  00010188  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0000b192  00000000  00000000  00011158  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000027f0  00000000  00000000  0001c2ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000367f  00000000  00000000  0001eada  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002198  00000000  00000000  0002215c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003d91  00000000  00000000  000242f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000060cb  00000000  00000000  00028085  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000fd8  00000000  00000000  0002e150  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20005000 	andcs	r5, r0, r0
 8000004:	08001941 	stmdaeq	r0, {r0, r6, r8, fp, ip}
 8000008:	08000add 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, fp}
 800000c:	08000adf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r9, fp}
 8000010:	08000ae1 	stmdaeq	r0, {r0, r5, r6, r7, r9, fp}
 8000014:	08000ae3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, fp}
 8000018:	08000ae5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, fp}
	...
 800002c:	08000ae9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, fp}
 8000030:	08000ae7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r9, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000aeb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r9, fp}
 800003c:	08000aed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, fp}
 8000040:	08000b01 	stmdaeq	r0, {r0, r8, r9, fp}
 8000044:	08000b03 	stmdaeq	r0, {r0, r1, r8, r9, fp}
 8000048:	08000b05 	stmdaeq	r0, {r0, r2, r8, r9, fp}
 800004c:	08000b07 	stmdaeq	r0, {r0, r1, r2, r8, r9, fp}
 8000050:	08000b09 	stmdaeq	r0, {r0, r3, r8, r9, fp}
 8000054:	08000b0b 	stmdaeq	r0, {r0, r1, r3, r8, r9, fp}
 8000058:	08000b0d 	stmdaeq	r0, {r0, r2, r3, r8, r9, fp}
 800005c:	08000b0f 	stmdaeq	r0, {r0, r1, r2, r3, r8, r9, fp}
 8000060:	08000b11 	stmdaeq	r0, {r0, r4, r8, r9, fp}
 8000064:	08000b13 	stmdaeq	r0, {r0, r1, r4, r8, r9, fp}
 8000068:	08000b15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp}
	...
 8000088:	08000b17 	stmdaeq	r0, {r0, r1, r2, r4, r8, r9, fp}
 800008c:	08000b19 	stmdaeq	r0, {r0, r3, r4, r8, r9, fp}
 8000090:	08000b1b 	stmdaeq	r0, {r0, r1, r3, r4, r8, r9, fp}
 8000094:	08000b1f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r8, r9, fp}
 8000098:	08000b21 	stmdaeq	r0, {r0, r5, r8, r9, fp}
 800009c:	08000b23 	stmdaeq	r0, {r0, r1, r5, r8, r9, fp}
 80000a0:	08000b25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp}
 80000a4:	08000b27 	stmdaeq	r0, {r0, r1, r2, r5, r8, r9, fp}
 80000a8:	08000b29 	stmdaeq	r0, {r0, r3, r5, r8, r9, fp}
 80000ac:	08000b2b 	stmdaeq	r0, {r0, r1, r3, r5, r8, r9, fp}
 80000b0:	08000b2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, fp}
 80000b4:	08000b41 	stmdaeq	r0, {r0, r6, r8, r9, fp}
 80000b8:	08000b43 	stmdaeq	r0, {r0, r1, r6, r8, r9, fp}
 80000bc:	08000b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp}
 80000c0:	08000b47 	stmdaeq	r0, {r0, r1, r2, r6, r8, r9, fp}
 80000c4:	08000b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp}
 80000c8:	08000b4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, r9, fp}
 80000cc:	08000b4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, fp}
 80000d0:	08000b4f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r8, r9, fp}
 80000d4:	08000b51 	stmdaeq	r0, {r0, r4, r6, r8, r9, fp}
 80000d8:	08000b85 	stmdaeq	r0, {r0, r2, r7, r8, r9, fp}
 80000dc:	08000bc1 	stmdaeq	r0, {r0, r6, r7, r8, r9, fp}
 80000e0:	08000bc3 	stmdaeq	r0, {r0, r1, r6, r7, r8, r9, fp}
 80000e4:	08000bc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, fp}
 80000e8:	08000bc7 	stmdaeq	r0, {r0, r1, r2, r6, r7, r8, r9, fp}
 80000ec:	08000bc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, fp}
 80000f0:	08000bcb 	stmdaeq	r0, {r0, r1, r3, r6, r7, r8, r9, fp}
 80000f4:	08000bcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, fp}
 80000f8:	08000bcf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, r9, fp}
 80000fc:	08000bd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, fp}
 8000100:	08000bd3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, r9, fp}
 8000104:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000108:	08000bd7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r8, r9, fp}
 800010c:	08000bd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, fp}
 8000110:	08000bdb 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, fp}
 8000114:	08000bdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, fp}
 8000118:	08000bdf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r8, r9, fp}
 800011c:	08000be1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, fp}
 8000120:	08000be3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, r9, fp}
 8000124:	08000be5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, fp}
 8000128:	08000be7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r8, r9, fp}
 800012c:	08000be9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, fp}
 8000130:	0000f85f 	andeq	pc, r0, pc, asr r8	; <UNPREDICTABLE>

Disassembly of section .text:

08000134 <__WFI>:
; Return         : None
;******************************************************************************/
.thumb_func
__WFI: 
 
    WFI
 8000134:	bf30      	wfi
    BX r14
 8000136:	4770      	bx	lr

08000138 <__WFE>:
; Return         : None
;******************************************************************************/
.thumb_func
__WFE:

    WFE
 8000138:	bf20      	wfe
    BX r14
 800013a:	4770      	bx	lr

0800013c <__SEV>:
; Return         : None
;******************************************************************************/
.thumb_func
__SEV:

    SEV
 800013c:	bf40      	sev
    BX r14
 800013e:	4770      	bx	lr

08000140 <__ISB>:
; Return         : None
;******************************************************************************/
.thumb_func
__ISB:

    ISB
 8000140:	f3bf 8f6f 	isb	sy
    BX r14
 8000144:	4770      	bx	lr

08000146 <__DSB>:
; Return         : None
;******************************************************************************/
.thumb_func
__DSB:

    DSB
 8000146:	f3bf 8f4f 	dsb	sy
    BX r14
 800014a:	4770      	bx	lr

0800014c <__DMB>:
; Return         : None
;******************************************************************************/
.thumb_func
__DMB:

    DMB
 800014c:	f3bf 8f5f 	dmb	sy
    BX r14
 8000150:	4770      	bx	lr

08000152 <__SVC>:
; Return         : None
;******************************************************************************/
.thumb_func
__SVC:

    SVC 0x01
 8000152:	df01      	svc	1
    BX r14
 8000154:	4770      	bx	lr

08000156 <__MRS_CONTROL>:
; Return         : - r4 : Cortex-M3 CONTROL register value.
;******************************************************************************/
.thumb_func
__MRS_CONTROL:

  MRS  r0,control
 8000156:	f3ef 8014 	mrs	r0, CONTROL
  BX r14
 800015a:	4770      	bx	lr

0800015c <__MSR_CONTROL>:
; Return         : None
;******************************************************************************/
.thumb_func
__MSR_CONTROL:

  MSR control, r0
 800015c:	f380 8814 	msr	CONTROL, r0
  ISB
 8000160:	f3bf 8f6f 	isb	sy
  BX r14
 8000164:	4770      	bx	lr

08000166 <__MRS_PSP>:
; Return         : - r0 : Process Stack value.
;******************************************************************************/
.thumb_func
__MRS_PSP:

  MRS r0, psp
 8000166:	f3ef 8009 	mrs	r0, PSP
  BX r14
 800016a:	4770      	bx	lr

0800016c <__MSR_PSP>:
; Return         : None
;******************************************************************************/
.thumb_func
__MSR_PSP:
 
    MSR psp,  r0      /* set Process Stack value*/
 800016c:	f380 8809 	msr	PSP, r0
    BX r14
 8000170:	4770      	bx	lr

08000172 <__MRS_MSP>:
; Return         : - r0 : Main Stack value.
;******************************************************************************/
.thumb_func
__MRS_MSP:

  MRS r0, msp
 8000172:	f3ef 8008 	mrs	r0, MSP
  BX r14
 8000176:	4770      	bx	lr

08000178 <__MSR_MSP>:
; Return         : None
;******************************************************************************/
.thumb_func
__MSR_MSP: 
 
    MSR msp, r0  /*; set Main Stack value*/
 8000178:	f380 8808 	msr	MSP, r0
    BX r14
 800017c:	4770      	bx	lr

0800017e <__SETPRIMASK>:
; Return         : None
;******************************************************************************/
.thumb_func
__SETPRIMASK:

  CPSID i
 800017e:	b672      	cpsid	i
  BX r14
 8000180:	4770      	bx	lr

08000182 <__RESETPRIMASK>:
; Return         : None
;******************************************************************************/
.thumb_func
__RESETPRIMASK:

  CPSIE i
 8000182:	b662      	cpsie	i
  BX r14
 8000184:	4770      	bx	lr

08000186 <__SETFAULTMASK>:
; Return         : None
;******************************************************************************/
.thumb_func
__SETFAULTMASK:

  CPSID f
 8000186:	b671      	cpsid	f
  BX r14
 8000188:	4770      	bx	lr

0800018a <__RESETFAULTMASK>:
; Return         : None
;******************************************************************************/
.thumb_func
__RESETFAULTMASK:

  CPSIE f
 800018a:	b661      	cpsie	f
  BX r14
 800018c:	4770      	bx	lr

0800018e <__BASEPRICONFIG>:
; Return         : None
;******************************************************************************/
.thumb_func
__BASEPRICONFIG:

  MSR basepri, r0
 800018e:	f380 8811 	msr	BASEPRI, r0
  BX r14
 8000192:	4770      	bx	lr

08000194 <__GetBASEPRI>:
; Return         : - r0 : Base Priority value 
;******************************************************************************/
.thumb_func
__GetBASEPRI:

  MRS r0, basepri_max
 8000194:	f3ef 8012 	mrs	r0, BASEPRI_MAX
  BX r14
 8000198:	4770      	bx	lr

0800019a <__REV_HalfWord>:
; Return         : - r0 : holds tve variable value after byte reversing.
;******************************************************************************/
.thumb_func
__REV_HalfWord: 
 
  REV16 r0, r0
 800019a:	ba40      	rev16	r0, r0
  BX r14
 800019c:	4770      	bx	lr

0800019e <__REV_Word>:
; Return         : - r0 : holds tve variable value after byte reversing.
;******************************************************************************/
.thumb_func
__REV_Word: 
 
  REV r0, r0
 800019e:	ba00      	rev	r0, r0
  BX r14
 80001a0:	4770      	bx	lr
	...

080001a4 <ClearTimeOutBuffer>:
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
 80001a4:	4b01      	ldr	r3, [pc, #4]	; (80001ac <ClearTimeOutBuffer+0x8>)
 80001a6:	2200      	movs	r2, #0
 80001a8:	601a      	str	r2, [r3, #0]
 80001aa:	4770      	bx	lr
 80001ac:	200000e4 	andcs	r0, r0, r4, ror #1

080001b0 <CheckTimeOut>:
u8 CheckTimeOut(void)
{
	// Check timeout
	// Return: 0 is false, 1 is true(timeout occurred)

	if( gu32TimingCounter1ms > 16){
 80001b0:	4b03      	ldr	r3, [pc, #12]	; (80001c0 <CheckTimeOut+0x10>)
 80001b2:	6818      	ldr	r0, [r3, #0]
		return 1;

	}else
		return 0;
}
 80001b4:	2810      	cmp	r0, #16
 80001b6:	bf94      	ite	ls
 80001b8:	2000      	movls	r0, #0
 80001ba:	2001      	movhi	r0, #1
 80001bc:	4770      	bx	lr
 80001be:	bf00      	nop
 80001c0:	200000e4 	andcs	r0, r0, r4, ror #1

080001c4 <Interrupt1ms>:

//For Dynamixel
void Interrupt1ms(void)
{
	gu32TimingCounter1ms++;
 80001c4:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <Interrupt1ms+0x10>)
 80001c6:	681a      	ldr	r2, [r3, #0]
 80001c8:	3201      	adds	r2, #1
 80001ca:	601a      	str	r2, [r3, #0]
	gu32TimingCounter1ms_Txd++;
 80001cc:	685a      	ldr	r2, [r3, #4]
 80001ce:	3201      	adds	r2, #1
 80001d0:	605a      	str	r2, [r3, #4]
 80001d2:	4770      	bx	lr
 80001d4:	200000e4 	andcs	r0, r0, r4, ror #1

080001d8 <Timer_Configuration>:
}

void Timer_Configuration(void)
{
 80001d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;

	/* TIM2 configuration */
	TIM_TimeBaseStructure.TIM_Period = 79;
 80001da:	234f      	movs	r3, #79	; 0x4f
 80001dc:	f8ad 3008 	strh.w	r3, [sp, #8]
	TIM_TimeBaseStructure.TIM_Prescaler = 0;
	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0x0000;

	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 80001e0:	a901      	add	r1, sp, #4
	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;

	/* TIM2 configuration */
	TIM_TimeBaseStructure.TIM_Period = 79;
	//TIM_TimeBaseStructure.TIM_Period = 7;
	TIM_TimeBaseStructure.TIM_Prescaler = 0;
 80001e2:	2300      	movs	r3, #0
	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0x0000;

	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 80001e4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;

	/* TIM2 configuration */
	TIM_TimeBaseStructure.TIM_Period = 79;
	//TIM_TimeBaseStructure.TIM_Period = 7;
	TIM_TimeBaseStructure.TIM_Prescaler = 0;
 80001e8:	f8ad 3004 	strh.w	r3, [sp, #4]
	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
 80001ec:	f8ad 300a 	strh.w	r3, [sp, #10]
	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 80001f0:	f8ad 3006 	strh.w	r3, [sp, #6]
	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0x0000;
 80001f4:	f88d 300c 	strb.w	r3, [sp, #12]

	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 80001f8:	f001 fa4e 	bl	8001698 <TIM_TimeBaseInit>

	/* Immediate load of TIM2 Precaler value */
	//       when interrupt resolution is 1us, SysTick->CTRL |= SysTick_Counter_Enable; in
	//       SysTick_CounterCmd(u32 SysTick_Counter) endlessly looping...
	TIM_PrescalerConfig(TIM2, 899, TIM_PSCReloadMode_Immediate);
 80001fc:	2201      	movs	r2, #1
 80001fe:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8000202:	f240 3183 	movw	r1, #899	; 0x383
 8000206:	f001 fa7a 	bl	80016fe <TIM_PrescalerConfig>
	//TIM_PrescalerConfig(TIM2, 8, TIM_PSCReloadMode_Immediate);

	TIM_ClearFlag(TIM2, TIM_FLAG_Update);
 800020a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800020e:	2101      	movs	r1, #1
 8000210:	f001 fa78 	bl	8001704 <TIM_ClearFlag>

	/* TIM2 IT enable */
	//       I don't know why enabling TIM_IT_CC1 makes while(gwTimingDelay != 0); endless loop...
	//TIM_ITConfig(TIM2, TIM_IT_CC1, ENABLE);
	TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);
 8000214:	2101      	movs	r1, #1
 8000216:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800021a:	460a      	mov	r2, r1
 800021c:	f001 fa66 	bl	80016ec <TIM_ITConfig>

	/* TIM2 enable counter */
	//TIM_Cmd(TIM2, ENABLE);


}
 8000220:	b005      	add	sp, #20
 8000222:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08000228 <TxDByte>:




void TxDByte(u8 dat)
{
 8000228:	b510      	push	{r4, lr}
 800022a:	4604      	mov	r4, r0
	USART_ClearFlag( USART2, USART_FLAG_TC );//modified @new CM-900 2012-07-24
 800022c:	2140      	movs	r1, #64	; 0x40
 800022e:	4807      	ldr	r0, [pc, #28]	; (800024c <TxDByte+0x24>)
 8000230:	f001 fb62 	bl	80018f8 <USART_ClearFlag>
	USART_SendData(USART2,dat);
 8000234:	4805      	ldr	r0, [pc, #20]	; (800024c <TxDByte+0x24>)
 8000236:	4621      	mov	r1, r4
 8000238:	f001 fb50 	bl	80018dc <USART_SendData>
	while( USART_GetFlagStatus(USART2, USART_FLAG_TC)==RESET );
 800023c:	4803      	ldr	r0, [pc, #12]	; (800024c <TxDByte+0x24>)
 800023e:	2140      	movs	r1, #64	; 0x40
 8000240:	f001 fb54 	bl	80018ec <USART_GetFlagStatus>
 8000244:	2800      	cmp	r0, #0
 8000246:	d0f9      	beq.n	800023c <TxDByte+0x14>
}
 8000248:	bd10      	pop	{r4, pc}
 800024a:	bf00      	nop
 800024c:	40004400 	andmi	r4, r0, r0, lsl #8

08000250 <TxDString>:
    bByte -= bTmp*10;
    TxDByte( bByte+'0');
}

void TxDString(char *str)
{
 8000250:	b510      	push	{r4, lr}
 8000252:	1e44      	subs	r4, r0, #1
	int i;
	for(i=0; str[i] ; i++)
 8000254:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8000258:	b110      	cbz	r0, 8000260 <TxDString+0x10>
	{
		TxDByte(str[i]);
 800025a:	f7ff ffe5 	bl	8000228 <TxDByte>
 800025e:	e7f9      	b.n	8000254 <TxDString+0x4>
	}
}
 8000260:	bd10      	pop	{r4, pc}

08000262 <TxDHex8>:

void TxDHex8(u16 bSentData)
{
 8000262:	b510      	push	{r4, lr}
 8000264:	4604      	mov	r4, r0
	u16 bTmp;
	
	bTmp = ((bSentData>>4)&0x000f) + (u8)'0';
 8000266:	f3c0 1303 	ubfx	r3, r0, #4, #4
 800026a:	f103 0030 	add.w	r0, r3, #48	; 0x30
	if(bTmp > '9') bTmp += 7;
 800026e:	2839      	cmp	r0, #57	; 0x39
 8000270:	bf88      	it	hi
 8000272:	f103 0037 	addhi.w	r0, r3, #55	; 0x37
	TxDByte(bTmp);
	
	bTmp = (bSentData & 0x000f) + (u8)'0';
 8000276:	f004 040f 	and.w	r4, r4, #15
{
	u16 bTmp;
	
	bTmp = ((bSentData>>4)&0x000f) + (u8)'0';
	if(bTmp > '9') bTmp += 7;
	TxDByte(bTmp);
 800027a:	b2c0      	uxtb	r0, r0
 800027c:	f7ff ffd4 	bl	8000228 <TxDByte>
	
	bTmp = (bSentData & 0x000f) + (u8)'0';
 8000280:	f104 0030 	add.w	r0, r4, #48	; 0x30
	if(bTmp > '9') bTmp += 7;
 8000284:	2839      	cmp	r0, #57	; 0x39
 8000286:	bf88      	it	hi
 8000288:	f104 0037 	addhi.w	r0, r4, #55	; 0x37
	TxDByte(bTmp);
 800028c:	b2c0      	uxtb	r0, r0
}
 800028e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	if(bTmp > '9') bTmp += 7;
	TxDByte(bTmp);
	
	bTmp = (bSentData & 0x000f) + (u8)'0';
	if(bTmp > '9') bTmp += 7;
	TxDByte(bTmp);
 8000292:	f7ff bfc9 	b.w	8000228 <TxDByte>

08000296 <TxDHex16>:
}

void TxDHex16(u16 wSentData)
{
 8000296:	b510      	push	{r4, lr}
 8000298:	4604      	mov	r4, r0
	TxDHex8((wSentData>>8)&0x00ff );
 800029a:	0a00      	lsrs	r0, r0, #8
 800029c:	f7ff ffe1 	bl	8000262 <TxDHex8>
	TxDHex8( wSentData&0x00ff);
 80002a0:	b2e0      	uxtb	r0, r4
}
 80002a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
}

void TxDHex16(u16 wSentData)
{
	TxDHex8((wSentData>>8)&0x00ff );
	TxDHex8( wSentData&0x00ff);
 80002a6:	f7ff bfdc 	b.w	8000262 <TxDHex8>

080002aa <TxDHex32>:
}

void TxDHex32(u32 lSentData)
{
 80002aa:	b510      	push	{r4, lr}
 80002ac:	4604      	mov	r4, r0
	TxDHex16((lSentData>>16)&0x0000ffff );
 80002ae:	0c00      	lsrs	r0, r0, #16
 80002b0:	f7ff fff1 	bl	8000296 <TxDHex16>
	TxDHex16( lSentData&0x0000ffff);
 80002b4:	b2a0      	uxth	r0, r4
}
 80002b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
}

void TxDHex32(u32 lSentData)
{
	TxDHex16((lSentData>>16)&0x0000ffff );
	TxDHex16( lSentData&0x0000ffff);
 80002ba:	f7ff bfec 	b.w	8000296 <TxDHex16>

080002be <USB_TxDString>:
    USB_TxDByte( bByte+'0');
}


void USB_TxDString(char *str)
{
 80002be:	b510      	push	{r4, lr}
 80002c0:	1e44      	subs	r4, r0, #1
	int i;
	for(i=0; str[i] ; i++)
 80002c2:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 80002c6:	b110      	cbz	r0, 80002ce <USB_TxDString+0x10>
	{
		USB_TxDByte(str[i]);
 80002c8:	f000 ff0e 	bl	80010e8 <USB_TxDByte>
 80002cc:	e7f9      	b.n	80002c2 <USB_TxDString+0x4>
	}
}
 80002ce:	bd10      	pop	{r4, pc}

080002d0 <Delay>:
* Input          : nTime: specifies the delay time length, in milliseconds.
* Output         : None
* Return         : None
*******************************************************************************/
void Delay(u32 nTime)
{
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4604      	mov	r4, r0
	/* Enable the SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Enable);
 80002d4:	2001      	movs	r0, #1
 80002d6:	f001 fa23 	bl	8001720 <SysTick_CounterCmd>

	TimingDelay = nTime;
 80002da:	4b07      	ldr	r3, [pc, #28]	; (80002f8 <Delay+0x28>)
 80002dc:	601c      	str	r4, [r3, #0]

	while(TimingDelay != 0);
 80002de:	681c      	ldr	r4, [r3, #0]
 80002e0:	2c00      	cmp	r4, #0
 80002e2:	d1fc      	bne.n	80002de <Delay+0xe>

	/* Disable SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Disable);
 80002e4:	f06f 0001 	mvn.w	r0, #1
 80002e8:	f001 fa1a 	bl	8001720 <SysTick_CounterCmd>
	/* Clear SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Clear);
 80002ec:	4620      	mov	r0, r4
}
 80002ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	while(TimingDelay != 0);

	/* Disable SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Disable);
	/* Clear SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Clear);
 80002f2:	f001 ba15 	b.w	8001720 <SysTick_CounterCmd>
 80002f6:	bf00      	nop
 80002f8:	20000138 	andcs	r0, r0, r8, lsr r1

080002fc <StringCompare>:
	return 0;
}
*/

u16 StringCompare(char *bpA, char *bpB, int limit)
{
 80002fc:	b530      	push	{r4, r5, lr}
 80002fe:	4604      	mov	r4, r0
	u16 wCount;
	wCount = 0;
	while(bpA[wCount] == bpB[wCount])
 8000300:	2301      	movs	r3, #1
 8000302:	f814 5b01 	ldrb.w	r5, [r4], #1
 8000306:	f811 0b01 	ldrb.w	r0, [r1], #1
 800030a:	4285      	cmp	r5, r0
 800030c:	d10b      	bne.n	8000326 <StringCompare+0x2a>
	{
		wCount++;
		if ( wCount >= limit)
 800030e:	4293      	cmp	r3, r2
{
	u16 wCount;
	wCount = 0;
	while(bpA[wCount] == bpB[wCount])
	{
		wCount++;
 8000310:	b298      	uxth	r0, r3
		if ( wCount >= limit)
 8000312:	da09      	bge.n	8000328 <StringCompare+0x2c>
			return wCount;
		if((bpA[wCount] == '\0' && bpB[wCount] == '\0') || wCount > COMMAND_BUFFER_SIZE-1 ) return wCount;
 8000314:	7825      	ldrb	r5, [r4, #0]
 8000316:	b90d      	cbnz	r5, 800031c <StringCompare+0x20>
 8000318:	780d      	ldrb	r5, [r1, #0]
 800031a:	b12d      	cbz	r5, 8000328 <StringCompare+0x2c>
 800031c:	3301      	adds	r3, #1
 800031e:	2b51      	cmp	r3, #81	; 0x51
 8000320:	d1ef      	bne.n	8000302 <StringCompare+0x6>
 8000322:	2050      	movs	r0, #80	; 0x50
 8000324:	bd30      	pop	{r4, r5, pc}
	}
	return 0;
 8000326:	2000      	movs	r0, #0
}
 8000328:	bd30      	pop	{r4, r5, pc}

0800032a <StringCopy>:

u16 StringCopy(char *bpDst, char *bpSrc)
{
 800032a:	4602      	mov	r2, r0
 800032c:	b530      	push	{r4, r5, lr}
 800032e:	3901      	subs	r1, #1
 8000330:	f100 040a 	add.w	r4, r0, #10
    u16 bCount;
    for(bCount =0; bCount < IDE_COMMAND_LENGTH/*COMMAND_BUFFER_SIZE*/; bCount++)
    {
        bpDst[bCount] = bpSrc[bCount];
 8000334:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8000338:	1a13      	subs	r3, r2, r0
 800033a:	f802 5b01 	strb.w	r5, [r2], #1
        if(bpSrc[bCount] == '\0') break;
 800033e:	780d      	ldrb	r5, [r1, #0]
 8000340:	b29b      	uxth	r3, r3
 8000342:	b115      	cbz	r5, 800034a <StringCopy+0x20>
}

u16 StringCopy(char *bpDst, char *bpSrc)
{
    u16 bCount;
    for(bCount =0; bCount < IDE_COMMAND_LENGTH/*COMMAND_BUFFER_SIZE*/; bCount++)
 8000344:	42a2      	cmp	r2, r4
 8000346:	d1f5      	bne.n	8000334 <StringCopy+0xa>
 8000348:	230a      	movs	r3, #10
    {
        bpDst[bCount] = bpSrc[bCount];
        if(bpSrc[bCount] == '\0') break;
    }
    return bCount;
}
 800034a:	4618      	mov	r0, r3
 800034c:	bd30      	pop	{r4, r5, pc}
	...

08000350 <USART_Configuration>:
	FLASHStatus = FLASH_ErasePage( EEPROM_START_ADDRESS);
	FLASH_Lock();
}
#endif
void USART_Configuration(u8 PORT, u32 baudrate)
{
 8000350:	b530      	push	{r4, r5, lr}
 8000352:	4604      	mov	r4, r0
 8000354:	460d      	mov	r5, r1
 8000356:	b085      	sub	sp, #20
	USART_InitTypeDef USART_InitStructure;

	USART_StructInit(&USART_InitStructure);
 8000358:	4668      	mov	r0, sp
 800035a:	f001 fa8f 	bl	800187c <USART_StructInit>

	USART_InitStructure.USART_BaudRate = baudrate;
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 800035e:	2300      	movs	r3, #0
 8000360:	f8ad 3004 	strh.w	r3, [sp, #4]
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
 8000364:	f8ad 3006 	strh.w	r3, [sp, #6]
	USART_InitStructure.USART_Parity = USART_Parity_No ;
 8000368:	f8ad 3008 	strh.w	r3, [sp, #8]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 800036c:	f8ad 300c 	strh.w	r3, [sp, #12]
	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;

	if( PORT == 1 )
 8000370:	2c01      	cmp	r4, #1
	USART_InitStructure.USART_BaudRate = baudrate;
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
	USART_InitStructure.USART_Parity = USART_Parity_No ;
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 8000372:	f04f 030c 	mov.w	r3, #12
{
	USART_InitTypeDef USART_InitStructure;

	USART_StructInit(&USART_InitStructure);

	USART_InitStructure.USART_BaudRate = baudrate;
 8000376:	9500      	str	r5, [sp, #0]
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
	USART_InitStructure.USART_Parity = USART_Parity_No ;
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 8000378:	f8ad 300a 	strh.w	r3, [sp, #10]

	if( PORT == 1 )
 800037c:	d112      	bne.n	80003a4 <USART_Configuration+0x54>
	{
		USART_DeInit(USART1);
 800037e:	481f      	ldr	r0, [pc, #124]	; (80003fc <USART_Configuration+0xac>)
 8000380:	f001 f9ee 	bl	8001760 <USART_DeInit>
		Delay(10);
 8000384:	200a      	movs	r0, #10
 8000386:	f7ff ffa3 	bl	80002d0 <Delay>
		/* Configure the USART1 */
		USART_Init(USART1, &USART_InitStructure);
 800038a:	481c      	ldr	r0, [pc, #112]	; (80003fc <USART_Configuration+0xac>)
 800038c:	4669      	mov	r1, sp
 800038e:	f001 fa31 	bl	80017f4 <USART_Init>

		/* Enable USART1 Receive and Transmit interrupts */
		USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
 8000392:	481a      	ldr	r0, [pc, #104]	; (80003fc <USART_Configuration+0xac>)
 8000394:	f240 5125 	movw	r1, #1317	; 0x525
 8000398:	4622      	mov	r2, r4
 800039a:	f001 fa86 	bl	80018aa <USART_ITConfig>
		//USART_ITConfig(USART1, USART_IT_TC, ENABLE);

		/* Enable the USART1 */
		USART_Cmd(USART1, ENABLE);
 800039e:	4817      	ldr	r0, [pc, #92]	; (80003fc <USART_Configuration+0xac>)
 80003a0:	4621      	mov	r1, r4
 80003a2:	e027      	b.n	80003f4 <USART_Configuration+0xa4>
	}

	else if( PORT == 2 )
 80003a4:	2c02      	cmp	r4, #2
 80003a6:	d111      	bne.n	80003cc <USART_Configuration+0x7c>
	{
		USART_DeInit(USART2);
 80003a8:	4815      	ldr	r0, [pc, #84]	; (8000400 <USART_Configuration+0xb0>)
 80003aa:	f001 f9d9 	bl	8001760 <USART_DeInit>
		Delay(10);
 80003ae:	200a      	movs	r0, #10
 80003b0:	f7ff ff8e 	bl	80002d0 <Delay>
		/* Configure the UART5 */
		USART_Init(USART2, &USART_InitStructure);
 80003b4:	4812      	ldr	r0, [pc, #72]	; (8000400 <USART_Configuration+0xb0>)
 80003b6:	4669      	mov	r1, sp
 80003b8:	f001 fa1c 	bl	80017f4 <USART_Init>

		/* Enable UART5 Receive and Transmit interrupts */
		USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);
 80003bc:	4810      	ldr	r0, [pc, #64]	; (8000400 <USART_Configuration+0xb0>)
 80003be:	f240 5125 	movw	r1, #1317	; 0x525
 80003c2:	2201      	movs	r2, #1
 80003c4:	f001 fa71 	bl	80018aa <USART_ITConfig>

		/* Enable the UART5 */
		USART_Cmd(USART2, ENABLE);
 80003c8:	480d      	ldr	r0, [pc, #52]	; (8000400 <USART_Configuration+0xb0>)
 80003ca:	e012      	b.n	80003f2 <USART_Configuration+0xa2>
	}

	else if( PORT == 3 )
 80003cc:	2c03      	cmp	r4, #3
 80003ce:	d113      	bne.n	80003f8 <USART_Configuration+0xa8>
	{

		USART_DeInit(USART3);
 80003d0:	480c      	ldr	r0, [pc, #48]	; (8000404 <USART_Configuration+0xb4>)
 80003d2:	f001 f9c5 	bl	8001760 <USART_DeInit>
		Delay(10);
 80003d6:	200a      	movs	r0, #10
 80003d8:	f7ff ff7a 	bl	80002d0 <Delay>
		/* Configure the USART3 */
		USART_Init(USART3, &USART_InitStructure);
 80003dc:	4809      	ldr	r0, [pc, #36]	; (8000404 <USART_Configuration+0xb4>)
 80003de:	4669      	mov	r1, sp
 80003e0:	f001 fa08 	bl	80017f4 <USART_Init>

		/* Enable USART3 Receive and Transmit interrupts */
		USART_ITConfig(USART3, USART_IT_RXNE, ENABLE);
 80003e4:	4807      	ldr	r0, [pc, #28]	; (8000404 <USART_Configuration+0xb4>)
 80003e6:	f240 5125 	movw	r1, #1317	; 0x525
 80003ea:	2201      	movs	r2, #1
 80003ec:	f001 fa5d 	bl	80018aa <USART_ITConfig>
		//USART_ITConfig(USART3, USART_IT_TC, ENABLE);

		/* Enable the USART3 */
		USART_Cmd(USART3, ENABLE);
 80003f0:	4804      	ldr	r0, [pc, #16]	; (8000404 <USART_Configuration+0xb4>)
 80003f2:	2101      	movs	r1, #1
 80003f4:	f001 fa4d 	bl	8001892 <USART_Cmd>
	}
}
 80003f8:	b005      	add	sp, #20
 80003fa:	bd30      	pop	{r4, r5, pc}
 80003fc:	40013800 	andmi	r3, r1, r0, lsl #16
 8000400:	40004400 	andmi	r4, r0, r0, lsl #8
 8000404:	40004800 	andmi	r4, r0, r0, lsl #16

08000408 <SerialMonitor>:
u8 gbCount =0;
#define IDE_COMMAND_LENGTH 10
extern volatile u16 USB_Rx_Cnt;
extern u8 USB_Rx_Buffer[VIRTUAL_COM_PORT_DATA_SIZE];
void SerialMonitor(void)
{
 8000408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	u16 bTerminate;//,bRxData;
	u8 dxlBaudrate =0;
	char bpCommand[COMMAND_LENGTH];
	int i;
	for(i=0;i<COMMAND_LENGTH;i++){
 800040c:	2300      	movs	r3, #0
u8 gbCount =0;
#define IDE_COMMAND_LENGTH 10
extern volatile u16 USB_Rx_Cnt;
extern u8 USB_Rx_Buffer[VIRTUAL_COM_PORT_DATA_SIZE];
void SerialMonitor(void)
{
 800040e:	b08d      	sub	sp, #52	; 0x34
	u16 bTerminate;//,bRxData;
	u8 dxlBaudrate =0;
	char bpCommand[COMMAND_LENGTH];
	int i;
	for(i=0;i<COMMAND_LENGTH;i++){
		bpCommand[i]='\0';
 8000410:	af08      	add	r7, sp, #32
 8000412:	2400      	movs	r4, #0
 8000414:	55dc      	strb	r4, [r3, r7]
{
	u16 bTerminate;//,bRxData;
	u8 dxlBaudrate =0;
	char bpCommand[COMMAND_LENGTH];
	int i;
	for(i=0;i<COMMAND_LENGTH;i++){
 8000416:	3301      	adds	r3, #1
 8000418:	2b10      	cmp	r3, #16
 800041a:	d1f9      	bne.n	8000410 <SerialMonitor+0x8>
extern volatile u16 USB_Rx_Cnt;
extern u8 USB_Rx_Buffer[VIRTUAL_COM_PORT_DATA_SIZE];
void SerialMonitor(void)
{
	u16 bTerminate;//,bRxData;
	u8 dxlBaudrate =0;
 800041c:	46a0      	mov	r8, r4
	}
	u8 bRxData=0;
	u8 usbRxCount = 0;
	//PrintProtectStatus();

	GPIO_ResetBits(PORT_LED, PIN_LED);					// LED On modified @new CM-900 with jason 2012-07-24
 800041e:	48b8      	ldr	r0, [pc, #736]	; (8000700 <SerialMonitor+0x2f8>)
 8000420:	2104      	movs	r1, #4
	GPIO_ResetBits(CM904_PORT_LED, CM904_PIN_LED);		// LED On modified @new CM-904
	USART_BUFFER_CLEAR;
 8000422:	4eb8      	ldr	r6, [pc, #736]	; (8000704 <SerialMonitor+0x2fc>)
 8000424:	4db8      	ldr	r5, [pc, #736]	; (8000708 <SerialMonitor+0x300>)
	}
	u8 bRxData=0;
	u8 usbRxCount = 0;
	//PrintProtectStatus();

	GPIO_ResetBits(PORT_LED, PIN_LED);					// LED On modified @new CM-900 with jason 2012-07-24
 8000426:	f000 ff83 	bl	8001330 <GPIO_ResetBits>
	GPIO_ResetBits(CM904_PORT_LED, CM904_PIN_LED);		// LED On modified @new CM-904
 800042a:	48b5      	ldr	r0, [pc, #724]	; (8000700 <SerialMonitor+0x2f8>)
 800042c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000430:	f000 ff7e 	bl	8001330 <GPIO_ResetBits>
	USART_BUFFER_CLEAR;
 8000434:	8034      	strh	r4, [r6, #0]
	int i;
	for(i=0;i<COMMAND_LENGTH;i++){
		bpCommand[i]='\0';
	}
	u8 bRxData=0;
	u8 usbRxCount = 0;
 8000436:	9400      	str	r4, [sp, #0]
	//PrintProtectStatus();

	GPIO_ResetBits(PORT_LED, PIN_LED);					// LED On modified @new CM-900 with jason 2012-07-24
	GPIO_ResetBits(CM904_PORT_LED, CM904_PIN_LED);		// LED On modified @new CM-904
	USART_BUFFER_CLEAR;
 8000438:	802c      	strh	r4, [r5, #0]
		}else{
			TxDString("\r\n -");
		}*/

		//GetCommandFromHost(gbpRxBuffer);
		while(!RXD_BUFFER_READY)
 800043a:	8832      	ldrh	r2, [r6, #0]
 800043c:	882b      	ldrh	r3, [r5, #0]
 800043e:	b292      	uxth	r2, r2
 8000440:	b29b      	uxth	r3, r3
 8000442:	429a      	cmp	r2, r3
 8000444:	d0f9      	beq.n	800043a <SerialMonitor+0x32>
#ifdef DEBUG_ENABLE_BY_USART2
	TxDString("USB_Rx_Cnt = ");	TxDHex8(USB_Rx_Cnt);	TxDString("\r\n");
	TxDString("USB_Rx_Buffer = ");	TxDString(USB_Rx_Buffer);	TxDString("\r\n");
#endif
	StringCopy(bpCommand,USB_Rx_Buffer);
	gbCount = USB_Rx_Cnt;
 8000446:	4cb1      	ldr	r4, [pc, #708]	; (800070c <SerialMonitor+0x304>)
 8000448:	f8df 92d8 	ldr.w	r9, [pc, #728]	; 8000724 <SerialMonitor+0x31c>
 800044c:	46a2      	mov	sl, r4
		}*/
#ifdef DEBUG_ENABLE_BY_USART2
	TxDString("USB_Rx_Cnt = ");	TxDHex8(USB_Rx_Cnt);	TxDString("\r\n");
	TxDString("USB_Rx_Buffer = ");	TxDString(USB_Rx_Buffer);	TxDString("\r\n");
#endif
	StringCopy(bpCommand,USB_Rx_Buffer);
 800044e:	4638      	mov	r0, r7
 8000450:	49af      	ldr	r1, [pc, #700]	; (8000710 <SerialMonitor+0x308>)
 8000452:	f7ff ff6a 	bl	800032a <StringCopy>
	gbCount = USB_Rx_Cnt;
 8000456:	f8b9 2000 	ldrh.w	r2, [r9]
#ifdef DEBUG_ENABLE_BY_USART2
	TxDString("bpCommand = ");	TxDString(bpCommand);	TxDString("\r\n");
	TxDString("gbCount = ");	TxDHex8(gbCount);	TxDString("\r\n");
#endif
	USB_Rx_Cnt = 0;
 800045a:	2300      	movs	r3, #0
#ifdef DEBUG_ENABLE_BY_USART2
	TxDString("USB_Rx_Cnt = ");	TxDHex8(USB_Rx_Cnt);	TxDString("\r\n");
	TxDString("USB_Rx_Buffer = ");	TxDString(USB_Rx_Buffer);	TxDString("\r\n");
#endif
	StringCopy(bpCommand,USB_Rx_Buffer);
	gbCount = USB_Rx_Cnt;
 800045c:	b2d2      	uxtb	r2, r2
 800045e:	7222      	strb	r2, [r4, #8]
#ifdef DEBUG_ENABLE_BY_USART2
	TxDString("bpCommand = ");	TxDString(bpCommand);	TxDString("\r\n");
	TxDString("gbCount = ");	TxDHex8(gbCount);	TxDString("\r\n");
#endif
	USB_Rx_Cnt = 0;
 8000460:	f8a9 3000 	strh.w	r3, [r9]
	for(i=0;i < VIRTUAL_COM_PORT_DATA_SIZE;i++ ){
		 USB_Rx_Buffer[i] = '\0';
 8000464:	49aa      	ldr	r1, [pc, #680]	; (8000710 <SerialMonitor+0x308>)
 8000466:	f04f 0b00 	mov.w	fp, #0
 800046a:	f803 b001 	strb.w	fp, [r3, r1]
#ifdef DEBUG_ENABLE_BY_USART2
	TxDString("bpCommand = ");	TxDString(bpCommand);	TxDString("\r\n");
	TxDString("gbCount = ");	TxDHex8(gbCount);	TxDString("\r\n");
#endif
	USB_Rx_Cnt = 0;
	for(i=0;i < VIRTUAL_COM_PORT_DATA_SIZE;i++ ){
 800046e:	3301      	adds	r3, #1
 8000470:	2b40      	cmp	r3, #64	; 0x40
 8000472:	9101      	str	r1, [sp, #4]
 8000474:	d1f6      	bne.n	8000464 <SerialMonitor+0x5c>

	}
		//bParaNum = StringProcess(bpCommand,ulpParameter,gbpRxBuffer);
		//bParaNum =1;
		//if(bParaNum != 0)
		if(/*gbCount == IDE_COMMAND_LENGTH &&*/gbCount > 3 && bpCommand[0] == 'A' && bpCommand[2] == '&')
 8000476:	2a03      	cmp	r2, #3
 8000478:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800047c:	f240 819b 	bls.w	80007b6 <SerialMonitor+0x3ae>
 8000480:	2b41      	cmp	r3, #65	; 0x41
 8000482:	f040 8198 	bne.w	80007b6 <SerialMonitor+0x3ae>
 8000486:	f89d 3022 	ldrb.w	r3, [sp, #34]	; 0x22
 800048a:	2b26      	cmp	r3, #38	; 0x26
 800048c:	f040 8195 	bne.w	80007ba <SerialMonitor+0x3b2>
		{
			//if(bParaNum > PARA_NUM) bParaNum = PARA_NUM;
			if( StringCompare(bpCommand,"AT&LD",5) )//if( StringCompare(bpCommand,"LD")|| StringCompare(bpCommand,"L") || bRxData == 'l' )
 8000490:	4638      	mov	r0, r7
 8000492:	49a0      	ldr	r1, [pc, #640]	; (8000714 <SerialMonitor+0x30c>)
 8000494:	2205      	movs	r2, #5
 8000496:	f7ff ff31 	bl	80002fc <StringCompare>
 800049a:	2800      	cmp	r0, #0
 800049c:	f000 8091 	beq.w	80005c2 <SerialMonitor+0x1ba>
				volatile TestStatus MemoryProgramStatus;

				vu32 tStartAddr;
				bRxData=0;

				FLASHStatus = FLASH_COMPLETE;
 80004a0:	2304      	movs	r3, #4
			//if(bParaNum > PARA_NUM) bParaNum = PARA_NUM;
			if( StringCompare(bpCommand,"AT&LD",5) )//if( StringCompare(bpCommand,"LD")|| StringCompare(bpCommand,"L") || bRxData == 'l' )
			{
				//TxDString("download\r\n");
				u32 EraseCounter = 0x00;
				vu32 NbrOfPage = 0x00;
 80004a2:	f8cd b018 	str.w	fp, [sp, #24]
				volatile TestStatus MemoryProgramStatus;

				vu32 tStartAddr;
				bRxData=0;

				FLASHStatus = FLASH_COMPLETE;
 80004a6:	f88d 3016 	strb.w	r3, [sp, #22]
				MemoryProgramStatus = PASSED;
 80004aa:	2301      	movs	r3, #1
 80004ac:	f88d 3017 	strb.w	r3, [sp, #23]

				gwAddressPointer = FLASH_START_ADDRESS;
 80004b0:	4b99      	ldr	r3, [pc, #612]	; (8000718 <SerialMonitor+0x310>)
				gwRxTotalCount = gwCalculatedCheckSum = 0;


				/* Unlock the Flash Program Erase controller */
				FLASH_Unlock();
				gbIsFlashLock = FALSE;
 80004b2:	f8df 929c 	ldr.w	r9, [pc, #668]	; 8000750 <SerialMonitor+0x348>
				bRxData=0;

				FLASHStatus = FLASH_COMPLETE;
				MemoryProgramStatus = PASSED;

				gwAddressPointer = FLASH_START_ADDRESS;
 80004b6:	60e3      	str	r3, [r4, #12]
				gwEndAddressPointer = FLASH_START_ADDRESS + 0xF800;
 80004b8:	f503 4378 	add.w	r3, r3, #63488	; 0xf800
 80004bc:	6123      	str	r3, [r4, #16]
						TxDString("\r\n Out of Range!\r\n");
					}
					continue;
				}// 2012-05-15 jason added from CM-530 Bootloader 1.01*/

				tStartAddr = gwAddressPointer;
 80004be:	68e3      	ldr	r3, [r4, #12]
 80004c0:	9307      	str	r3, [sp, #28]
				/*Init global variable related to flash download*/
				gwRxTotalCount = gwCalculatedCheckSum = 0;
 80004c2:	f8c4 b014 	str.w	fp, [r4, #20]
 80004c6:	f8c4 b018 	str.w	fp, [r4, #24]


				/* Unlock the Flash Program Erase controller */
				FLASH_Unlock();
 80004ca:	f000 fe3b 	bl	8001144 <FLASH_Unlock>
				gbIsFlashLock = FALSE;

				/* Define the number of page to be erased */
				NbrOfPage = ((gwEndAddressPointer - gwAddressPointer) / FLASH_PAGE_SIZE );  // 2012-05-15 jason added from CM-530 Bootloader 1.01
 80004ce:	6923      	ldr	r3, [r4, #16]
 80004d0:	68e2      	ldr	r2, [r4, #12]
				/*if ((FLASH_END_ADDRESS - gwAddressPointer) & 0x3ff)
				  NbrOfPage++;*/

				/* Clear All pending flags */
				FLASH_ClearFlag(FLASH_FLAG_BSY | FLASH_FLAG_EOP | FLASH_FLAG_PGERR | FLASH_FLAG_WRPRTERR);
 80004d2:	2035      	movs	r0, #53	; 0x35
				/* Unlock the Flash Program Erase controller */
				FLASH_Unlock();
				gbIsFlashLock = FALSE;

				/* Define the number of page to be erased */
				NbrOfPage = ((gwEndAddressPointer - gwAddressPointer) / FLASH_PAGE_SIZE );  // 2012-05-15 jason added from CM-530 Bootloader 1.01
 80004d4:	1a9b      	subs	r3, r3, r2
 80004d6:	0a9b      	lsrs	r3, r3, #10
				gwRxTotalCount = gwCalculatedCheckSum = 0;


				/* Unlock the Flash Program Erase controller */
				FLASH_Unlock();
				gbIsFlashLock = FALSE;
 80004d8:	f889 b000 	strb.w	fp, [r9]

				/* Define the number of page to be erased */
				NbrOfPage = ((gwEndAddressPointer - gwAddressPointer) / FLASH_PAGE_SIZE );  // 2012-05-15 jason added from CM-530 Bootloader 1.01
 80004dc:	9306      	str	r3, [sp, #24]
				/*if ((FLASH_END_ADDRESS - gwAddressPointer) & 0x3ff)
				  NbrOfPage++;*/

				/* Clear All pending flags */
				FLASH_ClearFlag(FLASH_FLAG_BSY | FLASH_FLAG_EOP | FLASH_FLAG_PGERR | FLASH_FLAG_WRPRTERR);
 80004de:	f000 fe45 	bl	800116c <FLASH_ClearFlag>

				// 2012-05-15 jason added from CM-530 Bootloader 1.01
				//TxDString("\r\nErasing....     ");

				/* Erase the FLASH pages */
				for(EraseCounter = 0; (EraseCounter < NbrOfPage) && (FLASHStatus == FLASH_COMPLETE) ; EraseCounter++)
 80004e2:	9b06      	ldr	r3, [sp, #24]
 80004e4:	459b      	cmp	fp, r3
 80004e6:	d21d      	bcs.n	8000524 <SerialMonitor+0x11c>
 80004e8:	f89d 3016 	ldrb.w	r3, [sp, #22]
 80004ec:	2b04      	cmp	r3, #4
 80004ee:	d119      	bne.n	8000524 <SerialMonitor+0x11c>
				{
					//u16 percent;
					if( (gwAddressPointer + (FLASH_PAGE_SIZE * EraseCounter)) > 0x0800F000)
 80004f0:	f8da 200c 	ldr.w	r2, [sl, #12]
 80004f4:	ea4f 238b 	mov.w	r3, fp, lsl #10
 80004f8:	4888      	ldr	r0, [pc, #544]	; (800071c <SerialMonitor+0x314>)
 80004fa:	441a      	add	r2, r3
 80004fc:	4282      	cmp	r2, r0
 80004fe:	4983      	ldr	r1, [pc, #524]	; (800070c <SerialMonitor+0x304>)
 8000500:	d810      	bhi.n	8000524 <SerialMonitor+0x11c>
						break;
					FLASHStatus = FLASH_ErasePage(gwAddressPointer + (FLASH_PAGE_SIZE * EraseCounter));
 8000502:	68c8      	ldr	r0, [r1, #12]
 8000504:	9103      	str	r1, [sp, #12]
 8000506:	4418      	add	r0, r3
 8000508:	9302      	str	r3, [sp, #8]
 800050a:	f000 fe65 	bl	80011d8 <FLASH_ErasePage>
					TxDHex32(gwAddressPointer + (FLASH_PAGE_SIZE * EraseCounter));
 800050e:	9903      	ldr	r1, [sp, #12]
				for(EraseCounter = 0; (EraseCounter < NbrOfPage) && (FLASHStatus == FLASH_COMPLETE) ; EraseCounter++)
				{
					//u16 percent;
					if( (gwAddressPointer + (FLASH_PAGE_SIZE * EraseCounter)) > 0x0800F000)
						break;
					FLASHStatus = FLASH_ErasePage(gwAddressPointer + (FLASH_PAGE_SIZE * EraseCounter));
 8000510:	f88d 0016 	strb.w	r0, [sp, #22]
					TxDHex32(gwAddressPointer + (FLASH_PAGE_SIZE * EraseCounter));
 8000514:	68c8      	ldr	r0, [r1, #12]
 8000516:	9b02      	ldr	r3, [sp, #8]

				// 2012-05-15 jason added from CM-530 Bootloader 1.01
				//TxDString("\r\nErasing....     ");

				/* Erase the FLASH pages */
				for(EraseCounter = 0; (EraseCounter < NbrOfPage) && (FLASHStatus == FLASH_COMPLETE) ; EraseCounter++)
 8000518:	f10b 0b01 	add.w	fp, fp, #1
				{
					//u16 percent;
					if( (gwAddressPointer + (FLASH_PAGE_SIZE * EraseCounter)) > 0x0800F000)
						break;
					FLASHStatus = FLASH_ErasePage(gwAddressPointer + (FLASH_PAGE_SIZE * EraseCounter));
					TxDHex32(gwAddressPointer + (FLASH_PAGE_SIZE * EraseCounter));
 800051c:	4418      	add	r0, r3
 800051e:	f7ff fec4 	bl	80002aa <TxDHex32>
 8000522:	e7de      	b.n	80004e2 <SerialMonitor+0xda>
				}
				//USB_TxDString("\b\b\b\b");
				//USB_TxD_Dec_U8(100);
				//USB_TxDString("\%");
				//TxDString("complete!\r\n");
				if( FLASHStatus != FLASH_COMPLETE )
 8000524:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8000528:	2b04      	cmp	r3, #4
 800052a:	d002      	beq.n	8000532 <SerialMonitor+0x12a>
				{
					FLASH_Lock();
 800052c:	f000 fe16 	bl	800115c <FLASH_Lock>
					continue;
 8000530:	e783      	b.n	800043a <SerialMonitor+0x32>
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
 8000532:	487b      	ldr	r0, [pc, #492]	; (8000720 <SerialMonitor+0x318>)
 8000534:	f7ff fec3 	bl	80002be <USB_TxDString>
				gbFlashDownloadStart = TRUE;
 8000538:	2101      	movs	r1, #1
				TIM_Cmd(TIM2, ENABLE);
 800053a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
					FLASH_Lock();
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
				gbFlashDownloadStart = TRUE;
 800053e:	7721      	strb	r1, [r4, #28]
				TIM_Cmd(TIM2, ENABLE);
 8000540:	f001 f8c8 	bl	80016d4 <TIM_Cmd>
				Delay(100); // some delay is needed because PC have some time to prepare data.
 8000544:	2064      	movs	r0, #100	; 0x64
 8000546:	f7ff fec3 	bl	80002d0 <Delay>

				while(1){
					//wait until flash-download is finished
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
 800054a:	4b76      	ldr	r3, [pc, #472]	; (8000724 <SerialMonitor+0x31c>)
 800054c:	881b      	ldrh	r3, [r3, #0]
 800054e:	b29b      	uxth	r3, r3
 8000550:	b11b      	cbz	r3, 800055a <SerialMonitor+0x152>
						usbRxCount = USB_Rx_Cnt;
 8000552:	4b74      	ldr	r3, [pc, #464]	; (8000724 <SerialMonitor+0x31c>)
 8000554:	881b      	ldrh	r3, [r3, #0]
 8000556:	b2db      	uxtb	r3, r3
 8000558:	9300      	str	r3, [sp, #0]
					if(CheckTimeOut()){
 800055a:	f7ff fe29 	bl	80001b0 <CheckTimeOut>
 800055e:	2800      	cmp	r0, #0
 8000560:	d0f3      	beq.n	800054a <SerialMonitor+0x142>
						gbFlashDownloadStart = FALSE;
 8000562:	f04f 0a00 	mov.w	sl, #0
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
 8000566:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800056a:	4651      	mov	r1, sl
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
						usbRxCount = USB_Rx_Cnt;
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
 800056c:	f884 a01c 	strb.w	sl, [r4, #28]
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
 8000570:	f8c4 a000 	str.w	sl, [r4]
					if(USB_Rx_Cnt != 0x0)
						usbRxCount = USB_Rx_Cnt;
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
 8000574:	f001 f8ae 	bl	80016d4 <TIM_Cmd>
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
 8000578:	e89d 000c 	ldmia.w	sp, {r2, r3}
 800057c:	4413      	add	r3, r2
 800057e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
 8000582:	f8a6 a000 	strh.w	sl, [r6]
 8000586:	f8a5 a000 	strh.w	sl, [r5]
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
 800058a:	6223      	str	r3, [r4, #32]
				gwCalculatedCheckSum = gwCalculatedCheckSum - gwReceivedCheckSumFromHost;
 800058c:	6963      	ldr	r3, [r4, #20]
 800058e:	6a22      	ldr	r2, [r4, #32]
 8000590:	1a9b      	subs	r3, r3, r2
 8000592:	6163      	str	r3, [r4, #20]
				/*while(!RXD_BUFFER_READY); //wait until check-sum data is received from PC
				gwReceivedCheckSumFromHost = RxDBufferFromHost();
				TxDString("\r\n gwReceivedCheckSumFromHost = ");	TxDHex32(gwReceivedCheckSumFromHost);	TxDString("\r\n");
				*/
				/* Lock again the Flash Program Erase controller */
				FLASH_Lock();
 8000594:	f000 fde2 	bl	800115c <FLASH_Lock>
				gbIsFlashLock = TRUE;
 8000598:	2301      	movs	r3, #1
 800059a:	f889 3000 	strb.w	r3, [r9]
			//	TxDString("\r\n Size:0X");TxDHex16(gwRxTotalCount);
			//	TxDString("  Checksum:"); TxDHex16((u8)(gwCalculatedCheckSum&0xff));TxDString("-");TxDHex16(gwReceivedCheckSumFromHost);
				if((gwCalculatedCheckSum&0xff) == gwReceivedCheckSumFromHost || gwReceivedCheckSumFromHost == '*' ){
 800059e:	6963      	ldr	r3, [r4, #20]
 80005a0:	6a22      	ldr	r2, [r4, #32]
 80005a2:	b2db      	uxtb	r3, r3
 80005a4:	4293      	cmp	r3, r2
 80005a6:	d003      	beq.n	80005b0 <SerialMonitor+0x1a8>
 80005a8:	4b58      	ldr	r3, [pc, #352]	; (800070c <SerialMonitor+0x304>)
 80005aa:	6a1b      	ldr	r3, [r3, #32]
 80005ac:	2b2a      	cmp	r3, #42	; 0x2a
 80005ae:	d101      	bne.n	80005b4 <SerialMonitor+0x1ac>
					USB_TxDString("Success..\n");
 80005b0:	485d      	ldr	r0, [pc, #372]	; (8000728 <SerialMonitor+0x320>)
 80005b2:	e000      	b.n	80005b6 <SerialMonitor+0x1ae>
				}
				else
					USB_TxDString("Fail..\n");
 80005b4:	485d      	ldr	r0, [pc, #372]	; (800072c <SerialMonitor+0x324>)
 80005b6:	f7ff fe82 	bl	80002be <USB_TxDString>
			//WDTCR = 0x08;
				Delay(100);
 80005ba:	2064      	movs	r0, #100	; 0x64
 80005bc:	f7ff fe88 	bl	80002d0 <Delay>
 80005c0:	e102      	b.n	80007c8 <SerialMonitor+0x3c0>

			}
			else if(StringCompare(bpCommand,"AT&GO",5))//else if(StringCompare(bpCommand,"GO")|| StringCompare(bpCommand,"G") || bRxData == 'g' )
 80005c2:	4638      	mov	r0, r7
 80005c4:	495a      	ldr	r1, [pc, #360]	; (8000730 <SerialMonitor+0x328>)
 80005c6:	2205      	movs	r2, #5
 80005c8:	f7ff fe98 	bl	80002fc <StringCompare>
 80005cc:	b148      	cbz	r0, 80005e2 <SerialMonitor+0x1da>
				/*if(bParaNum == 2){
					JumpAddress =  *(u32 *)(ulpParameter[0] + 4);
				}
				else*/
				{
					JumpAddress =  *(u32 *)(FLASH_START_ADDRESS + 4);
 80005ce:	4b59      	ldr	r3, [pc, #356]	; (8000734 <SerialMonitor+0x32c>)
				}
				//NVIC_SetVectorTable(NVIC_VectTab_FLASH, ((JumpAddress-4)&0xFFFF) );

				Jump_To_Application = (pFunction) JumpAddress;
 80005d0:	f8d3 9000 	ldr.w	r9, [r3]
					USB_TxDString("\r\n Go: ");
					USB_TxDHex32(JumpAddress);
					USB_TxDString("\r\n");
				}*/

				UsbVcpDisconnect();
 80005d4:	f000 fd6c 	bl	80010b0 <UsbVcpDisconnect>
				TxDString("\r\n Go: 0x");
				TxDHex32(JumpAddress);
				TxDString("\r\n");
#endif

				Delay(100);
 80005d8:	2064      	movs	r0, #100	; 0x64
 80005da:	f7ff fe79 	bl	80002d0 <Delay>
				Jump_To_Application();
 80005de:	47c8      	blx	r9
 80005e0:	e0f2      	b.n	80007c8 <SerialMonitor+0x3c0>
			}
			else if(StringCompare(bpCommand,"AT&RST",6)){
 80005e2:	4638      	mov	r0, r7
 80005e4:	4954      	ldr	r1, [pc, #336]	; (8000738 <SerialMonitor+0x330>)
 80005e6:	2206      	movs	r2, #6
 80005e8:	f7ff fe88 	bl	80002fc <StringCompare>
 80005ec:	b110      	cbz	r0, 80005f4 <SerialMonitor+0x1ec>
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("system reset \r\n ");
#endif
				NVIC_GenerateSystemReset();
 80005ee:	f000 ff21 	bl	8001434 <NVIC_GenerateSystemReset>
 80005f2:	e0e9      	b.n	80007c8 <SerialMonitor+0x3c0>
			}
			else if(StringCompare(bpCommand,"AT&TOSS",7)){
 80005f4:	4638      	mov	r0, r7
 80005f6:	4951      	ldr	r1, [pc, #324]	; (800073c <SerialMonitor+0x334>)
 80005f8:	2207      	movs	r2, #7
 80005fa:	f7ff fe7f 	bl	80002fc <StringCompare>
 80005fe:	2800      	cmp	r0, #0
 8000600:	f000 80cd 	beq.w	800079e <SerialMonitor+0x396>
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("TOSS Mode for dynamixel \r\n ");
#endif
				USB_TxDString("TOSS MODE OK\r\n ");
 8000604:	484e      	ldr	r0, [pc, #312]	; (8000740 <SerialMonitor+0x338>)
 8000606:	f7ff fe5a 	bl	80002be <USB_TxDString>
				if(bpCommand [7] == '=' || bpCommand [7] == '*' ){
 800060a:	f89d 1027 	ldrb.w	r1, [sp, #39]	; 0x27
 800060e:	293d      	cmp	r1, #61	; 0x3d
 8000610:	d002      	beq.n	8000618 <SerialMonitor+0x210>
 8000612:	292a      	cmp	r1, #42	; 0x2a
 8000614:	f040 80d8 	bne.w	80007c8 <SerialMonitor+0x3c0>

					if(gbCount == 9){
 8000618:	7a23      	ldrb	r3, [r4, #8]
 800061a:	2b09      	cmp	r3, #9
 800061c:	d107      	bne.n	800062e <SerialMonitor+0x226>
						if(bpCommand[8] > 47 && bpCommand[8] < 58){
 800061e:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8000622:	3b30      	subs	r3, #48	; 0x30
 8000624:	b2db      	uxtb	r3, r3
 8000626:	2b09      	cmp	r3, #9
 8000628:	bf98      	it	ls
 800062a:	4698      	movls	r8, r3
 800062c:	e013      	b.n	8000656 <SerialMonitor+0x24e>
							dxlBaudrate = bpCommand[8] - 48;
						}

					}else if(gbCount == 10){
 800062e:	2b0a      	cmp	r3, #10
 8000630:	d111      	bne.n	8000656 <SerialMonitor+0x24e>
						if(bpCommand[8] > 47 && bpCommand[8] < 58 && bpCommand[9] > 47 && bpCommand[9] < 58 ){
 8000632:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 8000636:	3a30      	subs	r2, #48	; 0x30
 8000638:	b2d3      	uxtb	r3, r2
 800063a:	2b09      	cmp	r3, #9
 800063c:	d80b      	bhi.n	8000656 <SerialMonitor+0x24e>
 800063e:	f89d 3029 	ldrb.w	r3, [sp, #41]	; 0x29
 8000642:	3b30      	subs	r3, #48	; 0x30
 8000644:	b2db      	uxtb	r3, r3
 8000646:	2b09      	cmp	r3, #9
							dxlBaudrate = (bpCommand[8] - 48)*10 + (bpCommand[9] - 48);
 8000648:	bf9e      	ittt	ls
 800064a:	eb02 0882 	addls.w	r8, r2, r2, lsl #2
 800064e:	eb03 0848 	addls.w	r8, r3, r8, lsl #1
 8000652:	fa5f f888 	uxtbls.w	r8, r8
					//nothing...
					}
#ifdef DEBUG_ENABLE_BY_USART2
					//TxDString("Dxl baud rate =  ");TxD_Dec_U8(dxlBaudrate);TxDString("\r\n ");
#endif
					if(bpCommand[7] == '='){
 8000656:	293d      	cmp	r1, #61	; 0x3d
 8000658:	d106      	bne.n	8000668 <SerialMonitor+0x260>
					// Dynamixel 1.0
						USART_Configuration(1, dxl_get_baudrate(dxlBaudrate,0));
 800065a:	4b3a      	ldr	r3, [pc, #232]	; (8000744 <SerialMonitor+0x33c>)
		    default:
		        return 57600;
		    }

	}else{
		return (2000000 / (baudnum + 1));
 800065c:	f108 0101 	add.w	r1, r8, #1
#ifdef DEBUG_ENABLE_BY_USART2
					//TxDString("Dxl baud rate =  ");TxD_Dec_U8(dxlBaudrate);TxDString("\r\n ");
#endif
					if(bpCommand[7] == '='){
					// Dynamixel 1.0
						USART_Configuration(1, dxl_get_baudrate(dxlBaudrate,0));
 8000660:	2001      	movs	r0, #1
 8000662:	fb93 f1f1 	sdiv	r1, r3, r1
 8000666:	e008      	b.n	800067a <SerialMonitor+0x272>
 8000668:	f1b8 0f08 	cmp.w	r8, #8
 800066c:	bf96      	itet	ls
 800066e:	4b36      	ldrls	r3, [pc, #216]	; (8000748 <SerialMonitor+0x340>)
					//nothing...
					}
#ifdef DEBUG_ENABLE_BY_USART2
					//TxDString("Dxl baud rate =  ");TxD_Dec_U8(dxlBaudrate);TxDString("\r\n ");
#endif
					if(bpCommand[7] == '='){
 8000670:	f44f 4161 	movhi.w	r1, #57600	; 0xe100
 8000674:	f853 1028 	ldrls.w	r1, [r3, r8, lsl #2]
					// Dynamixel 1.0
						USART_Configuration(1, dxl_get_baudrate(dxlBaudrate,0));
						//TxDString("Dxl baud rate =  ");TxDHex32(dxl_get_baudrate(dxlBaudrate,0));TxDString("\r\n ");
					}else{
					// Dynamixel 2.0
						USART_Configuration(1, dxl_get_baudrate(dxlBaudrate,1));
 8000678:	2001      	movs	r0, #1
					}
					USART_BUFFER_CLEAR
					gbDXLWritePointer = gbDXLReadPointer = 0;
 800067a:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000754 <SerialMonitor+0x34c>
 800067e:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8000758 <SerialMonitor+0x350>
					// Dynamixel 1.0
						USART_Configuration(1, dxl_get_baudrate(dxlBaudrate,0));
						//TxDString("Dxl baud rate =  ");TxDHex32(dxl_get_baudrate(dxlBaudrate,0));TxDString("\r\n ");
					}else{
					// Dynamixel 2.0
						USART_Configuration(1, dxl_get_baudrate(dxlBaudrate,1));
 8000682:	f7ff fe65 	bl	8000350 <USART_Configuration>
					}
					USART_BUFFER_CLEAR
 8000686:	2300      	movs	r3, #0
 8000688:	8033      	strh	r3, [r6, #0]
 800068a:	802b      	strh	r3, [r5, #0]
					gbDXLWritePointer = gbDXLReadPointer = 0;
 800068c:	f88a 3000 	strb.w	r3, [sl]
 8000690:	f88b 3000 	strb.w	r3, [fp]
					USB_Rx_Cnt = 0;
 8000694:	f8a9 3000 	strh.w	r3, [r9]
					while(1)
					{

						if(USB_Rx_Cnt > 0)//if(gwUSARTReadPtr != gwUSARTWritePtr) //USB -> DXL
 8000698:	4b22      	ldr	r3, [pc, #136]	; (8000724 <SerialMonitor+0x31c>)
 800069a:	881b      	ldrh	r3, [r3, #0]
 800069c:	b29b      	uxth	r3, r3
 800069e:	2b00      	cmp	r3, #0
 80006a0:	d062      	beq.n	8000768 <SerialMonitor+0x360>
						{
#ifdef DEBUG_ENABLE_BY_USART2
							TxDString("USB_Rx_Cnt = ");	TxDHex8(USB_Rx_Cnt);	TxDString("\r\n");
							TxDString("USB_Rx_Buffer = ");	TxDString(USB_Rx_Buffer);	TxDString("\r\n");
#endif
							if(USB_Rx_Buffer[0] == '!' && USB_Rx_Buffer[1] == '!' && USB_Rx_Buffer[2] == '!'){
 80006a2:	9a01      	ldr	r2, [sp, #4]
 80006a4:	4b1a      	ldr	r3, [pc, #104]	; (8000710 <SerialMonitor+0x308>)
 80006a6:	7812      	ldrb	r2, [r2, #0]
 80006a8:	2a21      	cmp	r2, #33	; 0x21
 80006aa:	d10f      	bne.n	80006cc <SerialMonitor+0x2c4>
 80006ac:	785a      	ldrb	r2, [r3, #1]
 80006ae:	2a21      	cmp	r2, #33	; 0x21
 80006b0:	d10c      	bne.n	80006cc <SerialMonitor+0x2c4>
 80006b2:	789b      	ldrb	r3, [r3, #2]
 80006b4:	2b21      	cmp	r3, #33	; 0x21
 80006b6:	d109      	bne.n	80006cc <SerialMonitor+0x2c4>
								//TxDString("Escaped!!\r\n");
								USART_BUFFER_CLEAR
								USB_Rx_Cnt = 0;
 80006b8:	4a1a      	ldr	r2, [pc, #104]	; (8000724 <SerialMonitor+0x31c>)
							TxDString("USB_Rx_Cnt = ");	TxDHex8(USB_Rx_Cnt);	TxDString("\r\n");
							TxDString("USB_Rx_Buffer = ");	TxDString(USB_Rx_Buffer);	TxDString("\r\n");
#endif
							if(USB_Rx_Buffer[0] == '!' && USB_Rx_Buffer[1] == '!' && USB_Rx_Buffer[2] == '!'){
								//TxDString("Escaped!!\r\n");
								USART_BUFFER_CLEAR
 80006ba:	2300      	movs	r3, #0
 80006bc:	8033      	strh	r3, [r6, #0]
 80006be:	802b      	strh	r3, [r5, #0]
								USB_Rx_Cnt = 0;
 80006c0:	8013      	strh	r3, [r2, #0]
								gbDXLWritePointer = gbDXLReadPointer = 0;
 80006c2:	f88a 3000 	strb.w	r3, [sl]
 80006c6:	f88b 3000 	strb.w	r3, [fp]
								break;
 80006ca:	e07d      	b.n	80007c8 <SerialMonitor+0x3c0>
							}
							GPIO_SetBits(GPIOB, GPIO_Pin_5);	// TX Enable
 80006cc:	480c      	ldr	r0, [pc, #48]	; (8000700 <SerialMonitor+0x2f8>)
 80006ce:	2120      	movs	r1, #32
 80006d0:	f000 fe2c 	bl	800132c <GPIO_SetBits>
							for(i=0; i < USB_Rx_Cnt; i++){
 80006d4:	f04f 0900 	mov.w	r9, #0
 80006d8:	4b12      	ldr	r3, [pc, #72]	; (8000724 <SerialMonitor+0x31c>)
 80006da:	881a      	ldrh	r2, [r3, #0]
 80006dc:	b292      	uxth	r2, r2
 80006de:	4591      	cmp	r9, r2
 80006e0:	da3c      	bge.n	800075c <SerialMonitor+0x354>
								USART_SendData(USART1,(u8)USB_Rx_Buffer[i]);
 80006e2:	9b01      	ldr	r3, [sp, #4]
 80006e4:	4819      	ldr	r0, [pc, #100]	; (800074c <SerialMonitor+0x344>)
 80006e6:	f813 1009 	ldrb.w	r1, [r3, r9]
 80006ea:	f001 f8f7 	bl	80018dc <USART_SendData>
								while( USART_GetFlagStatus(USART1, USART_FLAG_TC)==RESET );
 80006ee:	4817      	ldr	r0, [pc, #92]	; (800074c <SerialMonitor+0x344>)
 80006f0:	2140      	movs	r1, #64	; 0x40
 80006f2:	f001 f8fb 	bl	80018ec <USART_GetFlagStatus>
 80006f6:	2800      	cmp	r0, #0
 80006f8:	d0f9      	beq.n	80006ee <SerialMonitor+0x2e6>
								USB_Rx_Cnt = 0;
								gbDXLWritePointer = gbDXLReadPointer = 0;
								break;
							}
							GPIO_SetBits(GPIOB, GPIO_Pin_5);	// TX Enable
							for(i=0; i < USB_Rx_Cnt; i++){
 80006fa:	f109 0901 	add.w	r9, r9, #1
 80006fe:	e7eb      	b.n	80006d8 <SerialMonitor+0x2d0>
 8000700:	40010c00 	andmi	r0, r1, r0, lsl #24
 8000704:	20000190 	mulcs	r0, r0, r1
 8000708:	2000013c 	andcs	r0, r0, ip, lsr r1
 800070c:	200000e4 	andcs	r0, r0, r4, ror #1
 8000710:	200006a5 	andcs	r0, r0, r5, lsr #13
 8000714:	08002721 	stmdaeq	r0, {r0, r5, r8, r9, sl, sp}
 8000718:	08003000 	stmdaeq	r0, {ip, sp}
 800071c:	0800f000 	stmdaeq	r0, {ip, sp, lr, pc}
 8000720:	08002727 	stmdaeq	r0, {r0, r1, r2, r5, r8, r9, sl, sp}
 8000724:	20000112 	andcs	r0, r0, r2, lsl r1
 8000728:	08002730 	stmdaeq	r0, {r4, r5, r8, r9, sl, sp}
 800072c:	0800273b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r8, r9, sl, sp}
 8000730:	08002743 	stmdaeq	r0, {r0, r1, r6, r8, r9, sl, sp}
 8000734:	08003004 	stmdaeq	r0, {r2, ip, sp}
 8000738:	08002749 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, sp}
 800073c:	08002750 	stmdaeq	r0, {r4, r6, r8, r9, sl, sp}
 8000740:	08002758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, sp}
 8000744:	001e8480 	andseq	r8, lr, r0, lsl #9
 8000748:	0800264c 	stmdaeq	r0, {r2, r3, r6, r9, sl, sp}
 800074c:	40013800 	andmi	r3, r1, r0, lsl #16
 8000750:	20000000 	andcs	r0, r0, r0
 8000754:	20000135 	andcs	r0, r0, r5, lsr r1
 8000758:	200006a4 	andcs	r0, r0, r4, lsr #13
								USART_SendData(USART1,(u8)USB_Rx_Buffer[i]);
								while( USART_GetFlagStatus(USART1, USART_FLAG_TC)==RESET );
							}
							USB_Rx_Cnt = 0;
 800075c:	2200      	movs	r2, #0
							GPIO_ResetBits(GPIOB, GPIO_Pin_5);	// RX Enable
 800075e:	481f      	ldr	r0, [pc, #124]	; (80007dc <SerialMonitor+0x3d4>)
 8000760:	2120      	movs	r1, #32
							GPIO_SetBits(GPIOB, GPIO_Pin_5);	// TX Enable
							for(i=0; i < USB_Rx_Cnt; i++){
								USART_SendData(USART1,(u8)USB_Rx_Buffer[i]);
								while( USART_GetFlagStatus(USART1, USART_FLAG_TC)==RESET );
							}
							USB_Rx_Cnt = 0;
 8000762:	801a      	strh	r2, [r3, #0]
							GPIO_ResetBits(GPIOB, GPIO_Pin_5);	// RX Enable
 8000764:	f000 fde4 	bl	8001330 <GPIO_ResetBits>

						}

						if(gbDXLWritePointer != gbDXLReadPointer){
 8000768:	4b1d      	ldr	r3, [pc, #116]	; (80007e0 <SerialMonitor+0x3d8>)
 800076a:	781a      	ldrb	r2, [r3, #0]
 800076c:	4b1d      	ldr	r3, [pc, #116]	; (80007e4 <SerialMonitor+0x3dc>)
 800076e:	781b      	ldrb	r3, [r3, #0]
 8000770:	429a      	cmp	r2, r3
 8000772:	d091      	beq.n	8000698 <SerialMonitor+0x290>
							while(gbDXLWritePointer != gbDXLReadPointer)//DXL -> USB
 8000774:	4b1a      	ldr	r3, [pc, #104]	; (80007e0 <SerialMonitor+0x3d8>)
 8000776:	7819      	ldrb	r1, [r3, #0]
 8000778:	4b1a      	ldr	r3, [pc, #104]	; (80007e4 <SerialMonitor+0x3dc>)
 800077a:	781a      	ldrb	r2, [r3, #0]
 800077c:	4291      	cmp	r1, r2
 800077e:	d08b      	beq.n	8000698 <SerialMonitor+0x290>
							{
								USB_TxDByte(gbpDXLDataBuffer[gbDXLReadPointer++]);
 8000780:	781a      	ldrb	r2, [r3, #0]
 8000782:	9302      	str	r3, [sp, #8]
 8000784:	b2d2      	uxtb	r2, r2
 8000786:	1c51      	adds	r1, r2, #1
 8000788:	b2c9      	uxtb	r1, r1
 800078a:	7019      	strb	r1, [r3, #0]
 800078c:	4916      	ldr	r1, [pc, #88]	; (80007e8 <SerialMonitor+0x3e0>)
 800078e:	5c88      	ldrb	r0, [r1, r2]
 8000790:	f000 fcaa 	bl	80010e8 <USB_TxDByte>
								gbDXLReadPointer = gbDXLReadPointer & USART_BUFFER_SIZE;
 8000794:	9b02      	ldr	r3, [sp, #8]
 8000796:	781a      	ldrb	r2, [r3, #0]
 8000798:	b2d2      	uxtb	r2, r2
 800079a:	701a      	strb	r2, [r3, #0]
 800079c:	e7ea      	b.n	8000774 <SerialMonitor+0x36c>
							}
						}
					}
				}
			}
			else if(StringCompare(bpCommand,"AT&NAME",7)){
 800079e:	4638      	mov	r0, r7
 80007a0:	4912      	ldr	r1, [pc, #72]	; (80007ec <SerialMonitor+0x3e4>)
 80007a2:	2207      	movs	r2, #7
 80007a4:	f7ff fdaa 	bl	80002fc <StringCompare>
 80007a8:	b108      	cbz	r0, 80007ae <SerialMonitor+0x3a6>
				USB_TxDString("CM-904\n");
 80007aa:	4811      	ldr	r0, [pc, #68]	; (80007f0 <SerialMonitor+0x3e8>)
 80007ac:	e00a      	b.n	80007c4 <SerialMonitor+0x3bc>
			}
			else{
				TxDString("No IDE Command!\r\n");
 80007ae:	4811      	ldr	r0, [pc, #68]	; (80007f4 <SerialMonitor+0x3ec>)
 80007b0:	f7ff fd4e 	bl	8000250 <TxDString>
 80007b4:	e008      	b.n	80007c8 <SerialMonitor+0x3c0>
			}

		}else{
			if(bpCommand[0] == 'A' && bpCommand[1] == 'T'){
 80007b6:	2b41      	cmp	r3, #65	; 0x41
 80007b8:	d106      	bne.n	80007c8 <SerialMonitor+0x3c0>
 80007ba:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80007be:	2b54      	cmp	r3, #84	; 0x54
 80007c0:	d102      	bne.n	80007c8 <SerialMonitor+0x3c0>
				USB_TxDString("OK\n");
 80007c2:	480d      	ldr	r0, [pc, #52]	; (80007f8 <SerialMonitor+0x3f0>)
 80007c4:	f7ff fd7b 	bl	80002be <USB_TxDString>
			}
		}
		gbCount = 0;
 80007c8:	2300      	movs	r3, #0
 80007ca:	7223      	strb	r3, [r4, #8]
		for(i=0;i<COMMAND_LENGTH;i++){
				bpCommand[i]='\0'; //clear command buffer
 80007cc:	2200      	movs	r2, #0
 80007ce:	54fa      	strb	r2, [r7, r3]
			if(bpCommand[0] == 'A' && bpCommand[1] == 'T'){
				USB_TxDString("OK\n");
			}
		}
		gbCount = 0;
		for(i=0;i<COMMAND_LENGTH;i++){
 80007d0:	3301      	adds	r3, #1
 80007d2:	2b10      	cmp	r3, #16
 80007d4:	d1fa      	bne.n	80007cc <SerialMonitor+0x3c4>
				bpCommand[i]='\0'; //clear command buffer
		}
		USART_BUFFER_CLEAR;
 80007d6:	8032      	strh	r2, [r6, #0]
 80007d8:	802a      	strh	r2, [r5, #0]
 80007da:	e62e      	b.n	800043a <SerialMonitor+0x32>
 80007dc:	40010c00 	andmi	r0, r1, r0, lsl #24
 80007e0:	200006a4 	andcs	r0, r0, r4, lsr #13
 80007e4:	20000135 	andcs	r0, r0, r5, lsr r1
 80007e8:	200005a4 	andcs	r0, r0, r4, lsr #11
 80007ec:	08002768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, sp}
 80007f0:	08002770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl, sp}
 80007f4:	08002778 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, sl, sp}
 80007f8:	0800278a 	stmdaeq	r0, {r1, r3, r7, r8, r9, sl, sp}

080007fc <RCC_Configuration>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_Configuration(void)
{
 80007fc:	b510      	push	{r4, lr}
  /* RCC system reset(for debug purpose) */
  RCC_DeInit();
 80007fe:	f000 fe25 	bl	800144c <RCC_DeInit>

  /* Enable HSE */
    RCC_HSEConfig(RCC_HSE_ON);
 8000802:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8000806:	f000 fe3f 	bl	8001488 <RCC_HSEConfig>

  /* Wait till HSE is ready */
    HSEStartUpStatus = RCC_WaitForHSEStartUp();
 800080a:	f000 ff25 	bl	8001658 <RCC_WaitForHSEStartUp>
 800080e:	4b1c      	ldr	r3, [pc, #112]	; (8000880 <RCC_Configuration+0x84>)

  if(HSEStartUpStatus == SUCCESS)
 8000810:	2801      	cmp	r0, #1

  /* Enable HSE */
    RCC_HSEConfig(RCC_HSE_ON);

  /* Wait till HSE is ready */
    HSEStartUpStatus = RCC_WaitForHSEStartUp();
 8000812:	4604      	mov	r4, r0
 8000814:	7018      	strb	r0, [r3, #0]

  if(HSEStartUpStatus == SUCCESS)
 8000816:	d00a      	beq.n	800082e <RCC_Configuration+0x32>
  }
	/* Enable peripheral clocks --------------------------------------------------*/
	//RCC_ADCCLKConfig(RCC_PCLK2_Div6);    // added 2012-05-10 jason

	/* Enable USART1, GPIOA, GPIOB, and AFIO clocks */ //add RCC_APB2Periph_GPIOC for USB_DISCONNECT pin by sm.lee 2012-08-13
	RCC_APB2PeriphClockCmd(	RCC_APB2Periph_USART1 |
 8000818:	f244 001d 	movw	r0, #16413	; 0x401d
 800081c:	2101      	movs	r1, #1
 800081e:	f000 fed7 	bl	80015d0 <RCC_APB2PeriphClockCmd>
  						    RCC_APB1Periph_USART2 |
  						    RCC_APB1Periph_PWR ,
  						    ENABLE);

	//PWR_BackupAccessCmd(ENABLE);
}
 8000822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
							RCC_APB2Periph_ADC2   |
#endif
						    RCC_APB2Periph_AFIO,
						    ENABLE);
	//add RCC_APB1Periph_USART2 clock @ new CM-900 with jason 2012-07-24
  	RCC_APB1PeriphClockCmd(
 8000826:	4817      	ldr	r0, [pc, #92]	; (8000884 <RCC_Configuration+0x88>)
 8000828:	2101      	movs	r1, #1
 800082a:	f000 bedd 	b.w	80015e8 <RCC_APB1PeriphClockCmd>
    HSEStartUpStatus = RCC_WaitForHSEStartUp();

  if(HSEStartUpStatus == SUCCESS)
  {
    /* Enable Prefetch Buffer */
    FLASH_PrefetchBufferCmd(FLASH_PrefetchBuffer_Enable);
 800082e:	2010      	movs	r0, #16
 8000830:	f000 fc7c 	bl	800112c <FLASH_PrefetchBufferCmd>

    /* Flash 2 wait state */
    FLASH_SetLatency(FLASH_Latency_2);
 8000834:	2002      	movs	r0, #2
 8000836:	f000 fc6d 	bl	8001114 <FLASH_SetLatency>

    /* HCLK = SYSCLK */
    RCC_HCLKConfig(RCC_SYSCLK_Div1); 
 800083a:	2000      	movs	r0, #0
 800083c:	f000 fe62 	bl	8001504 <RCC_HCLKConfig>
  
    /* PCLK2 = HCLK */
    RCC_PCLK2Config(RCC_HCLK_Div1); 
 8000840:	2000      	movs	r0, #0
 8000842:	f000 fe73 	bl	800152c <RCC_PCLK2Config>

    /* PCLK1 = HCLK/2 */
    RCC_PCLK1Config(RCC_HCLK_Div2);
 8000846:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800084a:	f000 fe65 	bl	8001518 <RCC_PCLK1Config>

    /* PLLCLK = 8MHz * 9 = 72 MHz */
    RCC_PLLConfig(RCC_PLLSource_HSE_Div1, RCC_PLLMul_9);
 800084e:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8000852:	f44f 11e0 	mov.w	r1, #1835008	; 0x1c0000
 8000856:	f000 fe33 	bl	80014c0 <RCC_PLLConfig>

    /* Enable PLL */ 
	RCC_PLLCmd(ENABLE);
 800085a:	4620      	mov	r0, r4
 800085c:	f000 fe3a 	bl	80014d4 <RCC_PLLCmd>

    /* Wait till PLL is ready */
    while(RCC_GetFlagStatus(RCC_FLAG_PLLRDY) == RESET)
 8000860:	2039      	movs	r0, #57	; 0x39
 8000862:	f000 fee5 	bl	8001630 <RCC_GetFlagStatus>
 8000866:	2800      	cmp	r0, #0
 8000868:	d0fa      	beq.n	8000860 <RCC_Configuration+0x64>
    {
    }
    /* Select PLL as system clock source */
    RCC_SYSCLKConfig(RCC_SYSCLKSource_PLLCLK);
 800086a:	2002      	movs	r0, #2
 800086c:	f000 fe38 	bl	80014e0 <RCC_SYSCLKConfig>
    /* Select USBCLK source */
    RCC_USBCLKConfig(RCC_USBCLKSource_PLLCLK_1Div5);
 8000870:	2000      	movs	r0, #0
 8000872:	f000 fe65 	bl	8001540 <RCC_USBCLKConfig>
    /* Wait till PLL is used as system clock source */
    while(RCC_GetSYSCLKSource() != 0x08)
 8000876:	f000 fe3d 	bl	80014f4 <RCC_GetSYSCLKSource>
 800087a:	2808      	cmp	r0, #8
 800087c:	d1fb      	bne.n	8000876 <RCC_Configuration+0x7a>
 800087e:	e7cb      	b.n	8000818 <RCC_Configuration+0x1c>
 8000880:	20000134 	andcs	r0, r0, r4, lsr r1
 8000884:	10820001 	addne	r0, r2, r1

08000888 <GPIO_Configuration>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_Configuration(void)
{
 8000888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;//��� ���� ���
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
	//GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 800088c:	4c44      	ldr	r4, [pc, #272]	; (80009a0 <GPIO_Configuration+0x118>)
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_Configuration(void)
{
 800088e:	b085      	sub	sp, #20


	GPIO_InitTypeDef GPIO_InitStructure;


	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;//��� ���� ���
 8000890:	2501      	movs	r5, #1
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
 8000892:	2328      	movs	r3, #40	; 0x28
	//GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000894:	4620      	mov	r0, r4
 8000896:	a903      	add	r1, sp, #12


	/* Configure USART2 Rx(Alter.F) (PA.3) as input floating */
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;//modified by sm.lee 2012-07-24
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 8000898:	2604      	movs	r6, #4
	GPIO_InitTypeDef GPIO_InitStructure;


	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;//��� ���� ���
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
 800089a:	f88d 300f 	strb.w	r3, [sp, #15]


	GPIO_InitTypeDef GPIO_InitStructure;


	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;//��� ���� ���
 800089e:	f8ad 500c 	strh.w	r5, [sp, #12]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 80008a2:	f88d 500e 	strb.w	r5, [sp, #14]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
	//GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80008a6:	f000 fced 	bl	8001284 <GPIO_Init>


	/* Configure USART2 Rx(Alter.F) (PA.3) as input floating */
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;//modified by sm.lee 2012-07-24
 80008aa:	2308      	movs	r3, #8
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80008ac:	4620      	mov	r0, r4
 80008ae:	a903      	add	r1, sp, #12
	//GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(GPIOA, &GPIO_InitStructure);


	/* Configure USART2 Rx(Alter.F) (PA.3) as input floating */
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;//modified by sm.lee 2012-07-24
 80008b0:	f8ad 300c 	strh.w	r3, [sp, #12]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	/* Configure USART2 Tx(Alter.F) (PA.2) as alternate function push-pull */
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;//modified by sm.lee 2012-07-24
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80008b4:	f04f 0803 	mov.w	r8, #3
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 80008b8:	f04f 0b18 	mov.w	fp, #24
	GPIO_Init(GPIOA, &GPIO_InitStructure);


	/* Configure USART2 Rx(Alter.F) (PA.3) as input floating */
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;//modified by sm.lee 2012-07-24
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 80008bc:	f88d 600f 	strb.w	r6, [sp, #15]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80008c0:	f000 fce0 	bl	8001284 <GPIO_Init>

	/* Configure USART2 Tx(Alter.F) (PA.2) as alternate function push-pull */
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;//modified by sm.lee 2012-07-24
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80008c4:	4620      	mov	r0, r4
 80008c6:	a903      	add	r1, sp, #12
#endif
/* Configure LED (PB.2) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = PIN_LED;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(PORT_LED, &GPIO_InitStructure);
 80008c8:	f504 6480 	add.w	r4, r4, #1024	; 0x400
	GPIO_Init(PORT_USB_POWER, &GPIO_InitStructure);
#endif
/* Configure LED (PB.2) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = PIN_LED;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 80008cc:	2710      	movs	r7, #16
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;//modified by sm.lee 2012-07-24
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	/* Configure USART2 Tx(Alter.F) (PA.2) as alternate function push-pull */
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;//modified by sm.lee 2012-07-24
 80008ce:	f8ad 600c 	strh.w	r6, [sp, #12]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80008d2:	f88d 800e 	strb.w	r8, [sp, #14]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 80008d6:	f88d b00f 	strb.w	fp, [sp, #15]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80008da:	f000 fcd3 	bl	8001284 <GPIO_Init>
#endif
/* Configure LED (PB.2) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = PIN_LED;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(PORT_LED, &GPIO_InitStructure);
 80008de:	4620      	mov	r0, r4
 80008e0:	a903      	add	r1, sp, #12

/* Configure LED (PB.2) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = CM904_PIN_LED;
 80008e2:	f44f 7900 	mov.w	r9, #512	; 0x200
	GPIO_InitStructure.GPIO_Pin =  PIN_USB_POWER;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
	GPIO_Init(PORT_USB_POWER, &GPIO_InitStructure);
#endif
/* Configure LED (PB.2) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = PIN_LED;
 80008e6:	f8ad 600c 	strh.w	r6, [sp, #12]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 80008ea:	f88d 500e 	strb.w	r5, [sp, #14]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 80008ee:	f88d 700f 	strb.w	r7, [sp, #15]
	GPIO_Init(PORT_LED, &GPIO_InitStructure);
 80008f2:	f000 fcc7 	bl	8001284 <GPIO_Init>

/* Configure LED (PB.2) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = CM904_PIN_LED;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(CM904_PORT_LED, &GPIO_InitStructure);
 80008f6:	4620      	mov	r0, r4
 80008f8:	a903      	add	r1, sp, #12
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(PORT_LED, &GPIO_InitStructure);

/* Configure LED (PB.2) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = CM904_PIN_LED;
 80008fa:	f8ad 900c 	strh.w	r9, [sp, #12]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 80008fe:	f88d 500e 	strb.w	r5, [sp, #14]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 8000902:	f88d 700f 	strb.w	r7, [sp, #15]
	GPIO_Init(CM904_PORT_LED, &GPIO_InitStructure);
 8000906:	f000 fcbd 	bl	8001284 <GPIO_Init>

/* Configure USB Disconnect pin (PA.8) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = USB_DISCONNECT_PIN;/*test for USB disconnect*/
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;// GPIO_Speed_50MHz;//GPIO_Speed_10MHz; PC13~15 is limited their' speed to 2Mhz
 800090a:	2302      	movs	r3, #2
 800090c:	f88d 300e 	strb.w	r3, [sp, #14]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(USB_DISCONNECT_PORT, &GPIO_InitStructure);
 8000910:	4b24      	ldr	r3, [pc, #144]	; (80009a4 <GPIO_Configuration+0x11c>)
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(CM904_PORT_LED, &GPIO_InitStructure);

/* Configure USB Disconnect pin (PA.8) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = USB_DISCONNECT_PIN;/*test for USB disconnect*/
 8000912:	f44f 5a00 	mov.w	sl, #8192	; 0x2000
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;// GPIO_Speed_50MHz;//GPIO_Speed_10MHz; PC13~15 is limited their' speed to 2Mhz
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(USB_DISCONNECT_PORT, &GPIO_InitStructure);
 8000916:	4618      	mov	r0, r3
 8000918:	a903      	add	r1, sp, #12
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(CM904_PORT_LED, &GPIO_InitStructure);

/* Configure USB Disconnect pin (PA.8) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = USB_DISCONNECT_PIN;/*test for USB disconnect*/
 800091a:	f8ad a00c 	strh.w	sl, [sp, #12]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;// GPIO_Speed_50MHz;//GPIO_Speed_10MHz; PC13~15 is limited their' speed to 2Mhz
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(USB_DISCONNECT_PORT, &GPIO_InitStructure);
 800091e:	9301      	str	r3, [sp, #4]
	GPIO_Init(CM904_PORT_LED, &GPIO_InitStructure);

/* Configure USB Disconnect pin (PA.8) as output push-pull */
	GPIO_InitStructure.GPIO_Pin = USB_DISCONNECT_PIN;/*test for USB disconnect*/
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;// GPIO_Speed_50MHz;//GPIO_Speed_10MHz; PC13~15 is limited their' speed to 2Mhz
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 8000920:	f88d 700f 	strb.w	r7, [sp, #15]
	GPIO_Init(USB_DISCONNECT_PORT, &GPIO_InitStructure);
 8000924:	f000 fcae 	bl	8001284 <GPIO_Init>

	GPIO_SetBits(USB_DISCONNECT_PORT, USB_DISCONNECT_PIN);//USB Pull-up must be disabled(go to High) during system power on
 8000928:	9b01      	ldr	r3, [sp, #4]
 800092a:	4651      	mov	r1, sl
 800092c:	4618      	mov	r0, r3
 800092e:	f000 fcfd 	bl	800132c <GPIO_SetBits>

	GPIO_InitStructure.GPIO_Pin = 	GPIO_Pin_5; //DXL DIR
 8000932:	f04f 0a20 	mov.w	sl, #32
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 8000936:	4620      	mov	r0, r4
 8000938:	a903      	add	r1, sp, #12
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(USB_DISCONNECT_PORT, &GPIO_InitStructure);

	GPIO_SetBits(USB_DISCONNECT_PORT, USB_DISCONNECT_PIN);//USB Pull-up must be disabled(go to High) during system power on

	GPIO_InitStructure.GPIO_Pin = 	GPIO_Pin_5; //DXL DIR
 800093a:	f8ad a00c 	strh.w	sl, [sp, #12]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800093e:	f88d 800e 	strb.w	r8, [sp, #14]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 8000942:	f88d 700f 	strb.w	r7, [sp, #15]
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 8000946:	f000 fc9d 	bl	8001284 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; //DXL RXD
 800094a:	2380      	movs	r3, #128	; 0x80
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 800094c:	4620      	mov	r0, r4
 800094e:	a903      	add	r1, sp, #12
	GPIO_InitStructure.GPIO_Pin = 	GPIO_Pin_5; //DXL DIR
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_Init(GPIOB, &GPIO_InitStructure);

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; //DXL RXD
 8000950:	f8ad 300c 	strh.w	r3, [sp, #12]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 8000954:	f88d 600f 	strb.w	r6, [sp, #15]
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 8000958:	f000 fc94 	bl	8001284 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6; //DXL TXD
 800095c:	2340      	movs	r3, #64	; 0x40
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 800095e:	4620      	mov	r0, r4
 8000960:	a903      	add	r1, sp, #12

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; //DXL RXD
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(GPIOB, &GPIO_InitStructure);

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6; //DXL TXD
 8000962:	f8ad 300c 	strh.w	r3, [sp, #12]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000966:	f88d 800e 	strb.w	r8, [sp, #14]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 800096a:	f88d b00f 	strb.w	fp, [sp, #15]
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 800096e:	f000 fc89 	bl	8001284 <GPIO_Init>

	GPIO_ResetBits(GPIOB, GPIO_Pin_5);	// TX Disable // RX Enable
 8000972:	4620      	mov	r0, r4
 8000974:	4651      	mov	r1, sl
 8000976:	f000 fcdb 	bl	8001330 <GPIO_ResetBits>

	GPIO_SetBits(PORT_LED, PIN_LED);		// LED Off
 800097a:	4620      	mov	r0, r4
 800097c:	4631      	mov	r1, r6
 800097e:	f000 fcd5 	bl	800132c <GPIO_SetBits>
	GPIO_SetBits(CM904_PORT_LED, CM904_PIN_LED);		// 904 LED Off
 8000982:	4620      	mov	r0, r4
 8000984:	4649      	mov	r1, r9
 8000986:	f000 fcd1 	bl	800132c <GPIO_SetBits>

	/* Configure USART1 Remap enable */
	GPIO_PinRemapConfig( GPIO_Remap_USART1, ENABLE);
 800098a:	4630      	mov	r0, r6
 800098c:	4629      	mov	r1, r5
 800098e:	f000 fcd1 	bl	8001334 <GPIO_PinRemapConfig>
	/* If use both DXL Enable_TX/RX pin and JTAG Debug/Downloading, need GPIO_Remap_SWJ_NoJTRST option */
	GPIO_PinRemapConfig( GPIO_Remap_SWJ_NoJTRST,ENABLE);//GPIO_Remap_SWJ_Disable, ENABLE);
 8000992:	4805      	ldr	r0, [pc, #20]	; (80009a8 <GPIO_Configuration+0x120>)
 8000994:	4629      	mov	r1, r5
 8000996:	f000 fccd 	bl	8001334 <GPIO_PinRemapConfig>


}
 800099a:	b005      	add	sp, #20
 800099c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009a0:	40010800 	andmi	r0, r1, r0, lsl #16
 80009a4:	40011000 	andmi	r1, r1, r0
 80009a8:	00300100 	eorseq	r0, r0, r0, lsl #2

080009ac <NVIC_Configuration>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_Configuration(void)
{
 80009ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
/*
 * Set the Vector Table base location at 0x08000000 in Boot-loader case
 * Set the Vector Table base location at 0x08003000 in Application case
 */
//	NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x3000);   
	NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x0);   
 80009ae:	2100      	movs	r1, #0
 80009b0:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
 80009b4:	f000 fd34 	bl	8001420 <NVIC_SetVectorTable>
#endif


/* Configure the NVIC Preemption Priority Bits */  
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
 80009b8:	f44f 60a0 	mov.w	r0, #1280	; 0x500

	/* Enable the USB RX0 Interrupt */
	 NVIC_InitStructure.NVIC_IRQChannel = USB_LP_CAN_RX0_IRQChannel;//USB_LP_CAN1_RX0_IRQn;
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
	 NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
	 NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 80009bc:	2401      	movs	r4, #1
	NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x0);   
#endif


/* Configure the NVIC Preemption Priority Bits */  
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
 80009be:	f000 fce3 	bl	8001388 <NVIC_PriorityGroupConfig>


	/* Enable the USB RX0 Interrupt */
	 NVIC_InitStructure.NVIC_IRQChannel = USB_LP_CAN_RX0_IRQChannel;//USB_LP_CAN1_RX0_IRQn;
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80009c2:	2500      	movs	r5, #0
/* Configure the NVIC Preemption Priority Bits */  
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);


	/* Enable the USB RX0 Interrupt */
	 NVIC_InitStructure.NVIC_IRQChannel = USB_LP_CAN_RX0_IRQChannel;//USB_LP_CAN1_RX0_IRQn;
 80009c4:	2314      	movs	r3, #20
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
	 NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
	 NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	 NVIC_Init(&NVIC_InitStructure);
 80009c6:	a801      	add	r0, sp, #4
/* Configure the NVIC Preemption Priority Bits */  
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);


	/* Enable the USB RX0 Interrupt */
	 NVIC_InitStructure.NVIC_IRQChannel = USB_LP_CAN_RX0_IRQChannel;//USB_LP_CAN1_RX0_IRQn;
 80009c8:	f88d 3004 	strb.w	r3, [sp, #4]
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80009cc:	f88d 5005 	strb.w	r5, [sp, #5]
	 NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 80009d0:	f88d 5006 	strb.w	r5, [sp, #6]
	 NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 80009d4:	f88d 4007 	strb.w	r4, [sp, #7]
	 NVIC_Init(&NVIC_InitStructure);
 80009d8:	f000 fce0 	bl	800139c <NVIC_Init>

	// Enable the USART1 Interrupt for DXL
	NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQChannel;
 80009dc:	2325      	movs	r3, #37	; 0x25
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	NVIC_Init(&NVIC_InitStructure);
 80009de:	a801      	add	r0, sp, #4
	 NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
	 NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	 NVIC_Init(&NVIC_InitStructure);

	// Enable the USART1 Interrupt for DXL
	NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQChannel;
 80009e0:	f88d 3004 	strb.w	r3, [sp, #4]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80009e4:	f88d 5005 	strb.w	r5, [sp, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 80009e8:	f88d 4006 	strb.w	r4, [sp, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 80009ec:	f88d 4007 	strb.w	r4, [sp, #7]
	NVIC_Init(&NVIC_InitStructure);
 80009f0:	f000 fcd4 	bl	800139c <NVIC_Init>

	 /* Enable the USART2 Interrupt */
	NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQChannel;// USART interrupt when connect to Zigbee USART
 80009f4:	2326      	movs	r3, #38	; 0x26
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	NVIC_Init(&NVIC_InitStructure);
 80009f6:	a801      	add	r0, sp, #4
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	NVIC_Init(&NVIC_InitStructure);

	 /* Enable the USART2 Interrupt */
	NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQChannel;// USART interrupt when connect to Zigbee USART
 80009f8:	f88d 3004 	strb.w	r3, [sp, #4]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
 80009fc:	f88d 4005 	strb.w	r4, [sp, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 8000a00:	f88d 5006 	strb.w	r5, [sp, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8000a04:	f88d 4007 	strb.w	r4, [sp, #7]
	NVIC_Init(&NVIC_InitStructure);
 8000a08:	f000 fcc8 	bl	800139c <NVIC_Init>

	NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQChannel;
 8000a0c:	231c      	movs	r3, #28
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	NVIC_Init(&NVIC_InitStructure);
 8000a0e:	a801      	add	r0, sp, #4
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	NVIC_Init(&NVIC_InitStructure);

	NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQChannel;
 8000a10:	f88d 3004 	strb.w	r3, [sp, #4]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
 8000a14:	f88d 4005 	strb.w	r4, [sp, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 8000a18:	f88d 4006 	strb.w	r4, [sp, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8000a1c:	f88d 4007 	strb.w	r4, [sp, #7]
	NVIC_Init(&NVIC_InitStructure);
 8000a20:	f000 fcbc 	bl	800139c <NVIC_Init>

}
 8000a24:	b003      	add	sp, #12
 8000a26:	bd30      	pop	{r4, r5, pc}

08000a28 <main>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
int main(void)
{
 8000a28:	b570      	push	{r4, r5, r6, lr}
	/* System Clocks Configuration */
	RCC_Configuration();
 8000a2a:	f7ff fee7 	bl	80007fc <RCC_Configuration>

	/* Configure the GPIO ports */
	GPIO_Configuration();
 8000a2e:	f7ff ff2b 	bl	8000888 <GPIO_Configuration>

	/* NVIC configuration */
	NVIC_Configuration();
 8000a32:	f7ff ffbb 	bl	80009ac <NVIC_Configuration>

	Timer_Configuration();
 8000a36:	f7ff fbcf 	bl	80001d8 <Timer_Configuration>

	/* SysTick end of count event each 1ms with input clock equal to 9MHz (HCLK/8, default) */
	SysTick_SetReload(9000);
 8000a3a:	f242 3028 	movw	r0, #9000	; 0x2328
 8000a3e:	f000 fe69 	bl	8001714 <SysTick_SetReload>

	/* Enable SysTick interrupt */
	SysTick_ITConfig(ENABLE);
 8000a42:	2001      	movs	r0, #1
 8000a44:	f000 fe80 	bl	8001748 <SysTick_ITConfig>

	IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
 8000a48:	f245 5055 	movw	r0, #21845	; 0x5555
 8000a4c:	f000 fc08 	bl	8001260 <IWDG_WriteAccessCmd>

	IWDG_SetPrescaler(IWDG_Prescaler_4);
 8000a50:	2000      	movs	r0, #0
 8000a52:	f000 fc0b 	bl	800126c <IWDG_SetPrescaler>

	IWDG_SetReload(10);
 8000a56:	200a      	movs	r0, #10
 8000a58:	f000 fc0e 	bl	8001278 <IWDG_SetReload>
#endif



	/* USART Configuration */
	USART_Configuration(2,57600); //Initialize USART 2 device
 8000a5c:	f44f 4161 	mov.w	r1, #57600	; 0xe100
 8000a60:	2002      	movs	r0, #2
 8000a62:	f7ff fc75 	bl	8000350 <USART_Configuration>
	USART_BUFFER_CLEAR;
 8000a66:	4a17      	ldr	r2, [pc, #92]	; (8000ac4 <main+0x9c>)
 8000a68:	2300      	movs	r3, #0
 8000a6a:	8013      	strh	r3, [r2, #0]
 8000a6c:	4a16      	ldr	r2, [pc, #88]	; (8000ac8 <main+0xa0>)
	Delay(70);
 8000a6e:	2046      	movs	r0, #70	; 0x46



	/* USART Configuration */
	USART_Configuration(2,57600); //Initialize USART 2 device
	USART_BUFFER_CLEAR;
 8000a70:	8013      	strh	r3, [r2, #0]
	Delay(70);
 8000a72:	f7ff fc2d 	bl	80002d0 <Delay>

	/* USB Init */
	USB_Init();
 8000a76:	f000 ff8b 	bl	8001990 <USB_Init>


	if(GPIO_ReadInputDataBit(GPIOA , GPIO_Pin_0) == SET )
 8000a7a:	4814      	ldr	r0, [pc, #80]	; (8000acc <main+0xa4>)
 8000a7c:	2101      	movs	r1, #1
 8000a7e:	f000 fc4f 	bl	8001320 <GPIO_ReadInputDataBit>
 8000a82:	2801      	cmp	r0, #1
 8000a84:	d102      	bne.n	8000a8c <main+0x64>
		TxDString("Detect Pin!\r\n");
 8000a86:	4812      	ldr	r0, [pc, #72]	; (8000ad0 <main+0xa8>)
 8000a88:	f7ff fbe2 	bl	8000250 <TxDString>
	TxDString("CM-9 SERISE SYSTEM INIT!\r\n");
#endif

	u32 NotApp = 0;

	if( *(u32 *)(FLASH_START_ADDRESS+ 4) == 0xFFFFFFFF )
 8000a8c:	4d11      	ldr	r5, [pc, #68]	; (8000ad4 <main+0xac>)
	{
		NotApp = 1;
	}	

	if(RCC_GetFlagStatus(RCC_FLAG_IWDGRST) != RESET || GPIO_ReadInputDataBit(GPIOA , GPIO_Pin_0) == SET || NotApp == 1)
 8000a8e:	207d      	movs	r0, #125	; 0x7d
	TxDString("CM-9 SERISE SYSTEM INIT!\r\n");
#endif

	u32 NotApp = 0;

	if( *(u32 *)(FLASH_START_ADDRESS+ 4) == 0xFFFFFFFF )
 8000a90:	682e      	ldr	r6, [r5, #0]
	{
		NotApp = 1;
	}	

	if(RCC_GetFlagStatus(RCC_FLAG_IWDGRST) != RESET || GPIO_ReadInputDataBit(GPIOA , GPIO_Pin_0) == SET || NotApp == 1)
 8000a92:	f000 fdcd 	bl	8001630 <RCC_GetFlagStatus>
 8000a96:	4604      	mov	r4, r0
 8000a98:	b110      	cbz	r0, 8000aa0 <main+0x78>
	{


		RCC_ClearFlag();
 8000a9a:	f000 fdf5 	bl	8001688 <RCC_ClearFlag>
		while(bDeviceState != CONFIGURED);  //Wait until USB CDC is fully initialized
 8000a9e:	e00b      	b.n	8000ab8 <main+0x90>
	if( *(u32 *)(FLASH_START_ADDRESS+ 4) == 0xFFFFFFFF )
	{
		NotApp = 1;
	}	

	if(RCC_GetFlagStatus(RCC_FLAG_IWDGRST) != RESET || GPIO_ReadInputDataBit(GPIOA , GPIO_Pin_0) == SET || NotApp == 1)
 8000aa0:	480a      	ldr	r0, [pc, #40]	; (8000acc <main+0xa4>)
 8000aa2:	2101      	movs	r1, #1
 8000aa4:	f000 fc3c 	bl	8001320 <GPIO_ReadInputDataBit>
 8000aa8:	2801      	cmp	r0, #1
 8000aaa:	d0f6      	beq.n	8000a9a <main+0x72>
 8000aac:	3601      	adds	r6, #1
 8000aae:	d0f4      	beq.n	8000a9a <main+0x72>
	TxDString("\r\n Go: 0x");
	TxDHex32(JumpAddress);
	TxDString("\r\n");
#endif
	Jump_To_Application = (pFunction) JumpAddress;
	Jump_To_Application();
 8000ab0:	682b      	ldr	r3, [r5, #0]
 8000ab2:	4798      	blx	r3
	return 0;
}
 8000ab4:	4620      	mov	r0, r4
 8000ab6:	bd70      	pop	{r4, r5, r6, pc}
	if(RCC_GetFlagStatus(RCC_FLAG_IWDGRST) != RESET || GPIO_ReadInputDataBit(GPIOA , GPIO_Pin_0) == SET || NotApp == 1)
	{


		RCC_ClearFlag();
		while(bDeviceState != CONFIGURED);  //Wait until USB CDC is fully initialized
 8000ab8:	4b07      	ldr	r3, [pc, #28]	; (8000ad8 <main+0xb0>)
 8000aba:	681b      	ldr	r3, [r3, #0]
 8000abc:	2b05      	cmp	r3, #5
 8000abe:	d1fb      	bne.n	8000ab8 <main+0x90>
#ifdef DEBUG_ENABLE_BY_USART2
		TxDString("Start serial monitor\r\n");
#endif
		SerialMonitor();
 8000ac0:	f7ff fca2 	bl	8000408 <SerialMonitor>
 8000ac4:	20000190 	mulcs	r0, r0, r1
 8000ac8:	2000013c 	andcs	r0, r0, ip, lsr r1
 8000acc:	40010800 	andmi	r0, r1, r0, lsl #16
 8000ad0:	0800278e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, sp}
 8000ad4:	08003004 	stmdaeq	r0, {r2, ip, sp}
 8000ad8:	20000124 	andcs	r0, r0, r4, lsr #2

08000adc <NMIException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void NMIException(void)
{
 8000adc:	4770      	bx	lr

08000ade <HardFaultException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void HardFaultException(void)
{
 8000ade:	4770      	bx	lr

08000ae0 <MemManageException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void MemManageException(void)
{
 8000ae0:	4770      	bx	lr

08000ae2 <BusFaultException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void BusFaultException(void)
{
 8000ae2:	4770      	bx	lr

08000ae4 <UsageFaultException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void UsageFaultException(void)
{
 8000ae4:	4770      	bx	lr

08000ae6 <DebugMonitor>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DebugMonitor(void)
{
 8000ae6:	4770      	bx	lr

08000ae8 <SVCHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SVCHandler(void)
{
 8000ae8:	4770      	bx	lr

08000aea <PendSVC>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void PendSVC(void)
{
 8000aea:	4770      	bx	lr

08000aec <SysTickHandler>:
{

	//IWDG_ReloadCounter(); //if you want to prevent resetting system, enable this function and adjust the timing
	//TxDString("IWDG counter reset!");

	if (TimingDelay != 0x00)
 8000aec:	4b03      	ldr	r3, [pc, #12]	; (8000afc <SysTickHandler+0x10>)
 8000aee:	681a      	ldr	r2, [r3, #0]
 8000af0:	b112      	cbz	r2, 8000af8 <SysTickHandler+0xc>
	{ 
		TimingDelay--;
 8000af2:	681a      	ldr	r2, [r3, #0]
 8000af4:	3a01      	subs	r2, #1
 8000af6:	601a      	str	r2, [r3, #0]
 8000af8:	4770      	bx	lr
 8000afa:	bf00      	nop
 8000afc:	20000138 	andcs	r0, r0, r8, lsr r1

08000b00 <WWDG_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void WWDG_IRQHandler(void)
{
 8000b00:	4770      	bx	lr

08000b02 <PVD_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void PVD_IRQHandler(void)
{
 8000b02:	4770      	bx	lr

08000b04 <TAMPER_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TAMPER_IRQHandler(void)
{
 8000b04:	4770      	bx	lr

08000b06 <RTC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RTC_IRQHandler(void)
{
 8000b06:	4770      	bx	lr

08000b08 <FLASH_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void FLASH_IRQHandler(void)
{
 8000b08:	4770      	bx	lr

08000b0a <RCC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_IRQHandler(void)
{
 8000b0a:	4770      	bx	lr

08000b0c <EXTI0_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI0_IRQHandler(void)
{
 8000b0c:	4770      	bx	lr

08000b0e <EXTI1_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI1_IRQHandler(void)
{
 8000b0e:	4770      	bx	lr

08000b10 <EXTI2_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI2_IRQHandler(void)
{
 8000b10:	4770      	bx	lr

08000b12 <EXTI3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI3_IRQHandler(void)
{
 8000b12:	4770      	bx	lr

08000b14 <EXTI4_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI4_IRQHandler(void)
{
 8000b14:	4770      	bx	lr

08000b16 <ADC1_2_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void ADC1_2_IRQHandler(void)
{
 8000b16:	4770      	bx	lr

08000b18 <USB_HP_CAN_TX_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USB_HP_CAN_TX_IRQHandler(void)
{
 8000b18:	4770      	bx	lr

08000b1a <USB_LP_CAN_RX0_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void USB_LP_CAN_RX0_IRQHandler(void)
{
	__USBCDC_ISR();
 8000b1a:	f000 b91d 	b.w	8000d58 <__USBCDC_ISR>

08000b1e <CAN_RX1_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void CAN_RX1_IRQHandler(void)
{
 8000b1e:	4770      	bx	lr

08000b20 <CAN_SCE_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void CAN_SCE_IRQHandler(void)
{
 8000b20:	4770      	bx	lr

08000b22 <EXTI9_5_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI9_5_IRQHandler(void)
{
 8000b22:	4770      	bx	lr

08000b24 <TIM1_BRK_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_BRK_IRQHandler(void)
{
 8000b24:	4770      	bx	lr

08000b26 <TIM1_UP_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_UP_IRQHandler(void)
{
 8000b26:	4770      	bx	lr

08000b28 <TIM1_TRG_COM_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_TRG_COM_IRQHandler(void)
{
 8000b28:	4770      	bx	lr

08000b2a <TIM1_CC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_CC_IRQHandler(void)
{
 8000b2a:	4770      	bx	lr

08000b2c <TIM2_IRQHandler>:
extern u8 CheckTimeOut(void);
extern void Interrupt1ms(void);
extern vu32      gu32TimingCounter1ms, gw1msCounter;

void TIM2_IRQHandler(void)
{
 8000b2c:	b508      	push	{r3, lr}

	/* Clear TIM2 update interrupt */
		TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
 8000b2e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8000b32:	2101      	movs	r1, #1
 8000b34:	f000 fdea 	bl	800170c <TIM_ClearITPendingBit>

		/* Toggle Red */
		//LED(YELLOW);
		Interrupt1ms();

}
 8000b38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	/* Clear TIM2 update interrupt */
		TIM_ClearITPendingBit(TIM2, TIM_IT_Update);

		/* Toggle Red */
		//LED(YELLOW);
		Interrupt1ms();
 8000b3c:	f7ff bb42 	b.w	80001c4 <Interrupt1ms>

08000b40 <TIM3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM3_IRQHandler(void)
{
 8000b40:	4770      	bx	lr

08000b42 <TIM4_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM4_IRQHandler(void)
{
 8000b42:	4770      	bx	lr

08000b44 <I2C1_EV_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void I2C1_EV_IRQHandler(void)
{
 8000b44:	4770      	bx	lr

08000b46 <I2C1_ER_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void I2C1_ER_IRQHandler(void)
{
 8000b46:	4770      	bx	lr

08000b48 <I2C2_EV_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void I2C2_EV_IRQHandler(void)
{
 8000b48:	4770      	bx	lr

08000b4a <I2C2_ER_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void I2C2_ER_IRQHandler(void)
{
 8000b4a:	4770      	bx	lr

08000b4c <SPI1_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SPI1_IRQHandler(void)
{
 8000b4c:	4770      	bx	lr

08000b4e <SPI2_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SPI2_IRQHandler(void)
{
 8000b4e:	4770      	bx	lr

08000b50 <USART1_IRQHandler>:

extern volatile u8  gbDXLWritePointer;
extern volatile u8  gbpDXLDataBuffer[256];

void USART1_IRQHandler(void)
{
 8000b50:	b510      	push	{r4, lr}
	if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET){
 8000b52:	4809      	ldr	r0, [pc, #36]	; (8000b78 <USART1_IRQHandler+0x28>)
 8000b54:	f240 5125 	movw	r1, #1317	; 0x525
 8000b58:	f000 fed2 	bl	8001900 <USART_GetITStatus>
 8000b5c:	b158      	cbz	r0, 8000b76 <USART1_IRQHandler+0x26>
		gbpDXLDataBuffer[gbDXLWritePointer++] = USART_ReceiveData(USART1);
 8000b5e:	4a07      	ldr	r2, [pc, #28]	; (8000b7c <USART1_IRQHandler+0x2c>)
 8000b60:	4805      	ldr	r0, [pc, #20]	; (8000b78 <USART1_IRQHandler+0x28>)
 8000b62:	7814      	ldrb	r4, [r2, #0]
 8000b64:	b2e4      	uxtb	r4, r4
 8000b66:	1c63      	adds	r3, r4, #1
 8000b68:	b2db      	uxtb	r3, r3
 8000b6a:	7013      	strb	r3, [r2, #0]
 8000b6c:	f000 feba 	bl	80018e4 <USART_ReceiveData>
 8000b70:	4b03      	ldr	r3, [pc, #12]	; (8000b80 <USART1_IRQHandler+0x30>)
 8000b72:	b2c0      	uxtb	r0, r0
 8000b74:	5518      	strb	r0, [r3, r4]
 8000b76:	bd10      	pop	{r4, pc}
 8000b78:	40013800 	andmi	r3, r1, r0, lsl #16
 8000b7c:	200006a4 	andcs	r0, r0, r4, lsr #13
 8000b80:	200005a4 	andcs	r0, r0, r4, lsr #11

08000b84 <USART2_IRQHandler>:


	//modified @new CM-900 for downloading 2012-07-24
	static u32 sr;
	/* Read one byte from the receive data register */
	gwpUSARTBuffer[(gwUSARTWritePtr++)&USART_BUFFER_SIZE] = USART_ReceiveData(USART2);
 8000b84:	490a      	ldr	r1, [pc, #40]	; (8000bb0 <USART2_IRQHandler+0x2c>)
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USART2_IRQHandler(void)
{
 8000b86:	b538      	push	{r3, r4, r5, lr}


	//modified @new CM-900 for downloading 2012-07-24
	static u32 sr;
	/* Read one byte from the receive data register */
	gwpUSARTBuffer[(gwUSARTWritePtr++)&USART_BUFFER_SIZE] = USART_ReceiveData(USART2);
 8000b88:	880b      	ldrh	r3, [r1, #0]
 8000b8a:	4d0a      	ldr	r5, [pc, #40]	; (8000bb4 <USART2_IRQHandler+0x30>)
 8000b8c:	b29b      	uxth	r3, r3
 8000b8e:	1c5a      	adds	r2, r3, #1
 8000b90:	b292      	uxth	r2, r2
 8000b92:	4628      	mov	r0, r5
 8000b94:	f3c3 0409 	ubfx	r4, r3, #0, #10
 8000b98:	800a      	strh	r2, [r1, #0]
 8000b9a:	f000 fea3 	bl	80018e4 <USART_ReceiveData>
 8000b9e:	4b06      	ldr	r3, [pc, #24]	; (8000bb8 <USART2_IRQHandler+0x34>)
 8000ba0:	b2c0      	uxtb	r0, r0
 8000ba2:	5518      	strb	r0, [r3, r4]
	sr = USART2->SR;
 8000ba4:	882b      	ldrh	r3, [r5, #0]
 8000ba6:	4a05      	ldr	r2, [pc, #20]	; (8000bbc <USART2_IRQHandler+0x38>)
 8000ba8:	b29b      	uxth	r3, r3
 8000baa:	6013      	str	r3, [r2, #0]
 8000bac:	bd38      	pop	{r3, r4, r5, pc}
 8000bae:	bf00      	nop
 8000bb0:	2000013c 	andcs	r0, r0, ip, lsr r1
 8000bb4:	40004400 	andmi	r4, r0, r0, lsl #8
 8000bb8:	200001a4 	andcs	r0, r0, r4, lsr #3
 8000bbc:	2000010c 	andcs	r0, r0, ip, lsl #2

08000bc0 <USART3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USART3_IRQHandler(void)
{
 8000bc0:	4770      	bx	lr

08000bc2 <EXTI15_10_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI15_10_IRQHandler(void)
{
 8000bc2:	4770      	bx	lr

08000bc4 <RTCAlarm_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RTCAlarm_IRQHandler(void)
{
 8000bc4:	4770      	bx	lr

08000bc6 <USBWakeUp_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USBWakeUp_IRQHandler(void)
{
 8000bc6:	4770      	bx	lr

08000bc8 <TIM8_BRK_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM8_BRK_IRQHandler(void)
{
 8000bc8:	4770      	bx	lr

08000bca <TIM8_UP_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM8_UP_IRQHandler(void)
{
 8000bca:	4770      	bx	lr

08000bcc <TIM8_TRG_COM_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM8_TRG_COM_IRQHandler(void)
{
 8000bcc:	4770      	bx	lr

08000bce <TIM8_CC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM8_CC_IRQHandler(void)
{
 8000bce:	4770      	bx	lr

08000bd0 <ADC3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void ADC3_IRQHandler(void)
{
 8000bd0:	4770      	bx	lr

08000bd2 <FSMC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void FSMC_IRQHandler(void)
{
 8000bd2:	4770      	bx	lr

08000bd4 <SDIO_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SDIO_IRQHandler(void)
{
 8000bd4:	4770      	bx	lr

08000bd6 <TIM5_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM5_IRQHandler(void)
{
 8000bd6:	4770      	bx	lr

08000bd8 <SPI3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SPI3_IRQHandler(void)
{
 8000bd8:	4770      	bx	lr

08000bda <UART4_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void UART4_IRQHandler(void)
{
 8000bda:	4770      	bx	lr

08000bdc <UART5_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void UART5_IRQHandler(void)
{
 8000bdc:	4770      	bx	lr

08000bde <TIM6_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM6_IRQHandler(void)
{
 8000bde:	4770      	bx	lr

08000be0 <TIM7_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM7_IRQHandler(void)
{
 8000be0:	4770      	bx	lr

08000be2 <DMA2_Channel1_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DMA2_Channel1_IRQHandler(void)
{
 8000be2:	4770      	bx	lr

08000be4 <DMA2_Channel2_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DMA2_Channel2_IRQHandler(void)
{
 8000be4:	4770      	bx	lr

08000be6 <DMA2_Channel3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DMA2_Channel3_IRQHandler(void)
{
 8000be6:	4770      	bx	lr

08000be8 <DMA2_Channel4_5_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DMA2_Channel4_5_IRQHandler(void)
{
 8000be8:	4770      	bx	lr
	...

08000bec <EP1_IN_Callback>:
* Return         : None.
*******************************************************************************/
void EP1_IN_Callback (void)
{

	FinishToSend = 0;
 8000bec:	4b01      	ldr	r3, [pc, #4]	; (8000bf4 <EP1_IN_Callback+0x8>)
 8000bee:	2200      	movs	r2, #0
 8000bf0:	701a      	strb	r2, [r3, #0]
 8000bf2:	4770      	bx	lr
 8000bf4:	20000110 	andcs	r0, r0, r0, lsl r1

08000bf8 <WriteFlash64>:
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}


bool WriteFlash64(u8* RxBuffer, u16 RxCount ){
 8000bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

	u16 lFlashCount;
	u8 lTheRestCount=0;
	volatile FLASH_Status FLASHStatus;

	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
 8000bfc:	4b37      	ldr	r3, [pc, #220]	; (8000cdc <WriteFlash64+0xe4>)
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}


bool WriteFlash64(u8* RxBuffer, u16 RxCount ){
 8000bfe:	b085      	sub	sp, #20

	u16 lFlashCount;
	u8 lTheRestCount=0;
	volatile FLASH_Status FLASHStatus;

	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
 8000c00:	781b      	ldrb	r3, [r3, #0]
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}


bool WriteFlash64(u8* RxBuffer, u16 RxCount ){
 8000c02:	4606      	mov	r6, r0

	u16 lFlashCount;
	u8 lTheRestCount=0;
	volatile FLASH_Status FLASHStatus;

	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
 8000c04:	2b01      	cmp	r3, #1
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}


bool WriteFlash64(u8* RxBuffer, u16 RxCount ){
 8000c06:	460f      	mov	r7, r1

	u16 lFlashCount;
	u8 lTheRestCount=0;
	volatile FLASH_Status FLASHStatus;

	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
 8000c08:	d064      	beq.n	8000cd4 <WriteFlash64+0xdc>
		return FALSE;

	lTheRestCount = 4 - (RxCount % 4);
 8000c0a:	f001 0403 	and.w	r4, r1, #3
 8000c0e:	f1c4 0404 	rsb	r4, r4, #4
 8000c12:	b2e4      	uxtb	r4, r4

	for(lFlashCount =0;lFlashCount < RxCount; lFlashCount += 4)
 8000c14:	2500      	movs	r5, #0
 8000c16:	42bd      	cmp	r5, r7
 8000c18:	d24c      	bcs.n	8000cb4 <WriteFlash64+0xbc>
		TxDByte(RxBuffer[lFlashCount]);
		TxDByte(RxBuffer[lFlashCount+1]);
		TxDByte(RxBuffer[lFlashCount+2]);
		TxDByte(RxBuffer[lFlashCount+3]);
#endif
		u32 data = (RxBuffer[lFlashCount+3]<<24)+(RxBuffer[lFlashCount+2]<<16)+(RxBuffer[lFlashCount+1]<<8)+RxBuffer[lFlashCount];
 8000c1a:	f105 0902 	add.w	r9, r5, #2
 8000c1e:	f816 3009 	ldrb.w	r3, [r6, r9]
 8000c22:	f105 0a03 	add.w	sl, r5, #3
 8000c26:	f816 200a 	ldrb.w	r2, [r6, sl]
 8000c2a:	f105 0801 	add.w	r8, r5, #1
 8000c2e:	041b      	lsls	r3, r3, #16
 8000c30:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 8000c34:	f816 2008 	ldrb.w	r2, [r6, r8]
 8000c38:	eb06 0b05 	add.w	fp, r6, r5
 8000c3c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8000c40:	5d72      	ldrb	r2, [r6, r5]
 8000c42:	4413      	add	r3, r2
		FLASHStatus = FLASH_ProgramWord(gwAddressPointer, data);
 8000c44:	4a26      	ldr	r2, [pc, #152]	; (8000ce0 <WriteFlash64+0xe8>)
 8000c46:	4619      	mov	r1, r3
 8000c48:	6810      	ldr	r0, [r2, #0]
 8000c4a:	9201      	str	r2, [sp, #4]
 8000c4c:	9300      	str	r3, [sp, #0]
 8000c4e:	f000 fae3 	bl	8001218 <FLASH_ProgramWord>

		if( (*(vu32*)gwAddressPointer) != data )
 8000c52:	9a01      	ldr	r2, [sp, #4]
		TxDByte(RxBuffer[lFlashCount+1]);
		TxDByte(RxBuffer[lFlashCount+2]);
		TxDByte(RxBuffer[lFlashCount+3]);
#endif
		u32 data = (RxBuffer[lFlashCount+3]<<24)+(RxBuffer[lFlashCount+2]<<16)+(RxBuffer[lFlashCount+1]<<8)+RxBuffer[lFlashCount];
		FLASHStatus = FLASH_ProgramWord(gwAddressPointer, data);
 8000c54:	f88d 000f 	strb.w	r0, [sp, #15]

		if( (*(vu32*)gwAddressPointer) != data )
 8000c58:	6811      	ldr	r1, [r2, #0]
 8000c5a:	9b00      	ldr	r3, [sp, #0]
 8000c5c:	6809      	ldr	r1, [r1, #0]
 8000c5e:	4299      	cmp	r1, r3
 8000c60:	d001      	beq.n	8000c66 <WriteFlash64+0x6e>
		{
			USB_TxDString("\r\n Download Failed!");
 8000c62:	4820      	ldr	r0, [pc, #128]	; (8000ce4 <WriteFlash64+0xec>)
 8000c64:	e004      	b.n	8000c70 <WriteFlash64+0x78>
			break;
		}

		if( gwAddressPointer > FLASH_END_ADDRESS )
 8000c66:	6811      	ldr	r1, [r2, #0]
 8000c68:	4b1f      	ldr	r3, [pc, #124]	; (8000ce8 <WriteFlash64+0xf0>)
 8000c6a:	4299      	cmp	r1, r3
 8000c6c:	d903      	bls.n	8000c76 <WriteFlash64+0x7e>
		{
			USB_TxDString("\r\n Download Overflow!");
 8000c6e:	481f      	ldr	r0, [pc, #124]	; (8000cec <WriteFlash64+0xf4>)
 8000c70:	f7ff fb25 	bl	80002be <USB_TxDString>
			break;
 8000c74:	e01e      	b.n	8000cb4 <WriteFlash64+0xbc>
		}

		if( FLASHStatus != FLASH_COMPLETE ) // flash writing error
 8000c76:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8000c7a:	2b04      	cmp	r3, #4
 8000c7c:	d001      	beq.n	8000c82 <WriteFlash64+0x8a>
		{
			USB_TxDString("\r\n flash writing error!");
 8000c7e:	481c      	ldr	r0, [pc, #112]	; (8000cf0 <WriteFlash64+0xf8>)
 8000c80:	e7f6      	b.n	8000c70 <WriteFlash64+0x78>
			break;
		}
		gwAddressPointer = gwAddressPointer + 4;
 8000c82:	6813      	ldr	r3, [r2, #0]

		gwCalculatedCheckSum += RxBuffer[lFlashCount+3]+RxBuffer[lFlashCount+2]+RxBuffer[lFlashCount+1]+RxBuffer[lFlashCount];
 8000c84:	481b      	ldr	r0, [pc, #108]	; (8000cf4 <WriteFlash64+0xfc>)
		if( FLASHStatus != FLASH_COMPLETE ) // flash writing error
		{
			USB_TxDString("\r\n flash writing error!");
			break;
		}
		gwAddressPointer = gwAddressPointer + 4;
 8000c86:	3304      	adds	r3, #4
 8000c88:	6013      	str	r3, [r2, #0]

		gwCalculatedCheckSum += RxBuffer[lFlashCount+3]+RxBuffer[lFlashCount+2]+RxBuffer[lFlashCount+1]+RxBuffer[lFlashCount];
 8000c8a:	f816 100a 	ldrb.w	r1, [r6, sl]
 8000c8e:	f816 3009 	ldrb.w	r3, [r6, r9]
 8000c92:	6802      	ldr	r2, [r0, #0]
 8000c94:	440b      	add	r3, r1
 8000c96:	f816 1008 	ldrb.w	r1, [r6, r8]
	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
		return FALSE;

	lTheRestCount = 4 - (RxCount % 4);

	for(lFlashCount =0;lFlashCount < RxCount; lFlashCount += 4)
 8000c9a:	3504      	adds	r5, #4
			USB_TxDString("\r\n flash writing error!");
			break;
		}
		gwAddressPointer = gwAddressPointer + 4;

		gwCalculatedCheckSum += RxBuffer[lFlashCount+3]+RxBuffer[lFlashCount+2]+RxBuffer[lFlashCount+1]+RxBuffer[lFlashCount];
 8000c9c:	440b      	add	r3, r1
 8000c9e:	f89b 1000 	ldrb.w	r1, [fp]
	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
		return FALSE;

	lTheRestCount = 4 - (RxCount % 4);

	for(lFlashCount =0;lFlashCount < RxCount; lFlashCount += 4)
 8000ca2:	b2ad      	uxth	r5, r5
			USB_TxDString("\r\n flash writing error!");
			break;
		}
		gwAddressPointer = gwAddressPointer + 4;

		gwCalculatedCheckSum += RxBuffer[lFlashCount+3]+RxBuffer[lFlashCount+2]+RxBuffer[lFlashCount+1]+RxBuffer[lFlashCount];
 8000ca4:	440b      	add	r3, r1
 8000ca6:	4413      	add	r3, r2
		//TxDString("loop CheckSum =");	TxDHex16(gwCalculatedCheckSum);	TxDString("\r\n");
		gwRxTotalCount+=4;
 8000ca8:	4a13      	ldr	r2, [pc, #76]	; (8000cf8 <WriteFlash64+0x100>)
			USB_TxDString("\r\n flash writing error!");
			break;
		}
		gwAddressPointer = gwAddressPointer + 4;

		gwCalculatedCheckSum += RxBuffer[lFlashCount+3]+RxBuffer[lFlashCount+2]+RxBuffer[lFlashCount+1]+RxBuffer[lFlashCount];
 8000caa:	6003      	str	r3, [r0, #0]
		//TxDString("loop CheckSum =");	TxDHex16(gwCalculatedCheckSum);	TxDString("\r\n");
		gwRxTotalCount+=4;
 8000cac:	6813      	ldr	r3, [r2, #0]
 8000cae:	3304      	adds	r3, #4
 8000cb0:	6013      	str	r3, [r2, #0]
 8000cb2:	e7b0      	b.n	8000c16 <WriteFlash64+0x1e>

	}

	if(lTheRestCount != 4 ){
 8000cb4:	2c04      	cmp	r4, #4
 8000cb6:	d00d      	beq.n	8000cd4 <WriteFlash64+0xdc>
		//TxDString("lTheRestCount=");	TxDHex16(lTheRestCount);	TxDString("\r\n");
		gwRxTotalCount -= lTheRestCount;
 8000cb8:	4a0f      	ldr	r2, [pc, #60]	; (8000cf8 <WriteFlash64+0x100>)
 8000cba:	6813      	ldr	r3, [r2, #0]
 8000cbc:	1b1b      	subs	r3, r3, r4
 8000cbe:	6013      	str	r3, [r2, #0]
		while(lTheRestCount){
			//TxDString("checksum deviation=");	TxDHex16(lFlashCount-lTheRestCount);	TxDString("\r\n");
			gwCalculatedCheckSum = gwCalculatedCheckSum - RxBuffer[(lFlashCount - lTheRestCount)];
 8000cc0:	4a0c      	ldr	r2, [pc, #48]	; (8000cf4 <WriteFlash64+0xfc>)
 8000cc2:	1b29      	subs	r1, r5, r4
 8000cc4:	6813      	ldr	r3, [r2, #0]
 8000cc6:	5c71      	ldrb	r1, [r6, r1]
			//TxDString("gwCalculatedCheckSum =");	TxDHex16(gwCalculatedCheckSum);	TxDString("\r\n");
			lTheRestCount--;
 8000cc8:	3c01      	subs	r4, #1
	if(lTheRestCount != 4 ){
		//TxDString("lTheRestCount=");	TxDHex16(lTheRestCount);	TxDString("\r\n");
		gwRxTotalCount -= lTheRestCount;
		while(lTheRestCount){
			//TxDString("checksum deviation=");	TxDHex16(lFlashCount-lTheRestCount);	TxDString("\r\n");
			gwCalculatedCheckSum = gwCalculatedCheckSum - RxBuffer[(lFlashCount - lTheRestCount)];
 8000cca:	1a5b      	subs	r3, r3, r1
	}

	if(lTheRestCount != 4 ){
		//TxDString("lTheRestCount=");	TxDHex16(lTheRestCount);	TxDString("\r\n");
		gwRxTotalCount -= lTheRestCount;
		while(lTheRestCount){
 8000ccc:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
			//TxDString("checksum deviation=");	TxDHex16(lFlashCount-lTheRestCount);	TxDString("\r\n");
			gwCalculatedCheckSum = gwCalculatedCheckSum - RxBuffer[(lFlashCount - lTheRestCount)];
 8000cd0:	6013      	str	r3, [r2, #0]
	}

	if(lTheRestCount != 4 ){
		//TxDString("lTheRestCount=");	TxDHex16(lTheRestCount);	TxDString("\r\n");
		gwRxTotalCount -= lTheRestCount;
		while(lTheRestCount){
 8000cd2:	d1f5      	bne.n	8000cc0 <WriteFlash64+0xc8>
			lTheRestCount--;
		}
	}

	return FALSE;
}
 8000cd4:	2000      	movs	r0, #0
 8000cd6:	b005      	add	sp, #20
 8000cd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cdc:	20000000 	andcs	r0, r0, r0
 8000ce0:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8000ce4:	0800279c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, sp}
 8000ce8:	0800fbff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr, pc}
 8000cec:	080027b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl, sp}
 8000cf0:	080027c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, sl, sp}
 8000cf4:	200000f8 	strdcs	r0, [r0], -r8
 8000cf8:	200000fc 	strdcs	r0, [r0], -ip

08000cfc <EP3_OUT_Callback>:
* Output         : None.
* Return         : None.
*******************************************************************************/
volatile u16 USB_Rx_Cnt =0;
void EP3_OUT_Callback(void)
{
 8000cfc:	b538      	push	{r3, r4, r5, lr}

	/* Get the received data buffer and update the counter */
	USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);
 8000cfe:	2003      	movs	r0, #3
 8000d00:	4910      	ldr	r1, [pc, #64]	; (8000d44 <EP3_OUT_Callback+0x48>)
 8000d02:	f001 fbdb 	bl	80024bc <USB_SIL_Read>

//#ifdef DEBUG_ENABLE_BY_USART2
	//TxDString("[USB]USB_Rx_Cnt = ");	TxDHex16(USB_Rx_Cnt);	TxDString("\r\n");
//#endif

	if(gbFlashDownloadStart == TRUE){
 8000d06:	4b10      	ldr	r3, [pc, #64]	; (8000d48 <EP3_OUT_Callback+0x4c>)
volatile u16 USB_Rx_Cnt =0;
void EP3_OUT_Callback(void)
{

	/* Get the received data buffer and update the counter */
	USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);
 8000d08:	4d10      	ldr	r5, [pc, #64]	; (8000d4c <EP3_OUT_Callback+0x50>)

//#ifdef DEBUG_ENABLE_BY_USART2
	//TxDString("[USB]USB_Rx_Cnt = ");	TxDHex16(USB_Rx_Cnt);	TxDString("\r\n");
//#endif

	if(gbFlashDownloadStart == TRUE){
 8000d0a:	781b      	ldrb	r3, [r3, #0]
volatile u16 USB_Rx_Cnt =0;
void EP3_OUT_Callback(void)
{

	/* Get the received data buffer and update the counter */
	USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);
 8000d0c:	b280      	uxth	r0, r0

//#ifdef DEBUG_ENABLE_BY_USART2
	//TxDString("[USB]USB_Rx_Cnt = ");	TxDHex16(USB_Rx_Cnt);	TxDString("\r\n");
//#endif

	if(gbFlashDownloadStart == TRUE){
 8000d0e:	2b01      	cmp	r3, #1
volatile u16 USB_Rx_Cnt =0;
void EP3_OUT_Callback(void)
{

	/* Get the received data buffer and update the counter */
	USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);
 8000d10:	8068      	strh	r0, [r5, #2]
 8000d12:	4c0c      	ldr	r4, [pc, #48]	; (8000d44 <EP3_OUT_Callback+0x48>)

//#ifdef DEBUG_ENABLE_BY_USART2
	//TxDString("[USB]USB_Rx_Cnt = ");	TxDHex16(USB_Rx_Cnt);	TxDString("\r\n");
//#endif

	if(gbFlashDownloadStart == TRUE){
 8000d14:	d106      	bne.n	8000d24 <EP3_OUT_Callback+0x28>
		ClearTimeOutBuffer();
 8000d16:	f7ff fa45 	bl	80001a4 <ClearTimeOutBuffer>
		WriteFlash64(USB_Rx_Buffer, USB_Rx_Cnt);
 8000d1a:	8869      	ldrh	r1, [r5, #2]
 8000d1c:	4620      	mov	r0, r4
 8000d1e:	b289      	uxth	r1, r1
 8000d20:	f7ff ff6a 	bl	8000bf8 <WriteFlash64>
	}

	gwpUSARTBuffer[gwUSARTWritePtr++&USART_BUFFER_SIZE] = USB_Rx_Buffer[0];
 8000d24:	490a      	ldr	r1, [pc, #40]	; (8000d50 <EP3_OUT_Callback+0x54>)
	//TxDString("gwUSARTWritePtr = ");	TxDHex32(gwpUSARTBuffer[gwUSARTWritePtr-1]);	TxDString("\r\n");

  
#ifndef STM32F10X_CL
	/* Enable the receive of data on EP3 */
	SetEPRxValid(ENDP3);
 8000d26:	2003      	movs	r0, #3
	if(gbFlashDownloadStart == TRUE){
		ClearTimeOutBuffer();
		WriteFlash64(USB_Rx_Buffer, USB_Rx_Cnt);
	}

	gwpUSARTBuffer[gwUSARTWritePtr++&USART_BUFFER_SIZE] = USB_Rx_Buffer[0];
 8000d28:	880b      	ldrh	r3, [r1, #0]
 8000d2a:	b29b      	uxth	r3, r3
 8000d2c:	1c5a      	adds	r2, r3, #1
 8000d2e:	b292      	uxth	r2, r2
 8000d30:	800a      	strh	r2, [r1, #0]
 8000d32:	7821      	ldrb	r1, [r4, #0]
 8000d34:	4a07      	ldr	r2, [pc, #28]	; (8000d54 <EP3_OUT_Callback+0x58>)
 8000d36:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8000d3a:	54d1      	strb	r1, [r2, r3]
  
#ifndef STM32F10X_CL
	/* Enable the receive of data on EP3 */
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}
 8000d3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	//TxDString("gwUSARTWritePtr = ");	TxDHex32(gwpUSARTBuffer[gwUSARTWritePtr-1]);	TxDString("\r\n");

  
#ifndef STM32F10X_CL
	/* Enable the receive of data on EP3 */
	SetEPRxValid(ENDP3);
 8000d40:	f001 badf 	b.w	8002302 <SetEPRxValid>
 8000d44:	200006a5 	andcs	r0, r0, r5, lsr #13
 8000d48:	20000100 	andcs	r0, r0, r0, lsl #2
 8000d4c:	20000110 	andcs	r0, r0, r0, lsl r1
 8000d50:	2000013c 	andcs	r0, r0, ip, lsr r1
 8000d54:	200001a4 	andcs	r0, r0, r4, lsr #3

08000d58 <__USBCDC_ISR>:

#ifndef STM32F10X_CL

//USB_Istr()
void __USBCDC_ISR(void)
{
 8000d58:	b538      	push	{r3, r4, r5, lr}

  wIstr = _GetISTR();
 8000d5a:	4d16      	ldr	r5, [pc, #88]	; (8000db4 <__USBCDC_ISR+0x5c>)
 8000d5c:	4c16      	ldr	r4, [pc, #88]	; (8000db8 <__USBCDC_ISR+0x60>)
 8000d5e:	682b      	ldr	r3, [r5, #0]
 8000d60:	b29b      	uxth	r3, r3
 8000d62:	8023      	strh	r3, [r4, #0]


  if (wIstr & ISTR_SOF )
 8000d64:	8823      	ldrh	r3, [r4, #0]
 8000d66:	0598      	lsls	r0, r3, #22
 8000d68:	d507      	bpl.n	8000d7a <__USBCDC_ISR+0x22>
#ifdef DEBUG
	  TxDString("SOF wIstr = ");
	  TxDHex16(wIstr);
	  TxDString("\r\n");
#endif
    _SetISTR((u16)CLR_SOF);
 8000d6a:	f64f 53ff 	movw	r3, #65023	; 0xfdff
    bIntPackSOF++;
 8000d6e:	4a13      	ldr	r2, [pc, #76]	; (8000dbc <__USBCDC_ISR+0x64>)
#ifdef DEBUG
	  TxDString("SOF wIstr = ");
	  TxDHex16(wIstr);
	  TxDString("\r\n");
#endif
    _SetISTR((u16)CLR_SOF);
 8000d70:	602b      	str	r3, [r5, #0]
    bIntPackSOF++;
 8000d72:	7813      	ldrb	r3, [r2, #0]
 8000d74:	3301      	adds	r3, #1
 8000d76:	b2db      	uxtb	r3, r3
 8000d78:	7013      	strb	r3, [r2, #0]
#ifdef SOF_CALLBACK
    SOF_Callback();
#endif
  }
/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
  if (wIstr & ISTR_CTR )
 8000d7a:	8823      	ldrh	r3, [r4, #0]
 8000d7c:	b21b      	sxth	r3, r3
 8000d7e:	2b00      	cmp	r3, #0
 8000d80:	da01      	bge.n	8000d86 <__USBCDC_ISR+0x2e>
	  TxDHex16(wIstr);
	  TxDString("\r\n");
#endif
    /* servicing of the endpoint correct transfer interrupt */
    /* clear of the CTR flag into the sub */
    CTR_LP(); //reply for device setup-request from Host
 8000d82:	f001 fbad 	bl	80024e0 <CTR_LP>
#ifdef CTR_CALLBACK
    //CTR_Callback();
#endif
  }
  /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  
  if (wIstr & ISTR_RESET)
 8000d86:	8823      	ldrh	r3, [r4, #0]
 8000d88:	0559      	lsls	r1, r3, #21
 8000d8a:	d505      	bpl.n	8000d98 <__USBCDC_ISR+0x40>
	  TxDString("RESET wIstr = ");
	  TxDHex16(wIstr);
	  TxDString("\r\n");
#endif

    _SetISTR((u16)CLR_RESET);
 8000d8c:	f64f 33ff 	movw	r3, #64511	; 0xfbff
 8000d90:	602b      	str	r3, [r5, #0]
    Device_Property.Reset();
 8000d92:	4b0b      	ldr	r3, [pc, #44]	; (8000dc0 <__USBCDC_ISR+0x68>)
 8000d94:	685b      	ldr	r3, [r3, #4]
 8000d96:	4798      	blx	r3
#ifdef RESET_CALLBACK
    RESET_Callback();
#endif
  }
/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
  if (wIstr & ISTR_DOVR )//& wInterrupt_Mask)
 8000d98:	8823      	ldrh	r3, [r4, #0]
 8000d9a:	045a      	lsls	r2, r3, #17
#ifdef DEBUG
	  TxDString("DOVR wIstr = ");
	  TxDHex16(wIstr);
	  TxDString("\r\n");
#endif
    _SetISTR((u16)CLR_DOVR);
 8000d9c:	bf44      	itt	mi
 8000d9e:	f64b 73ff 	movwmi	r3, #49151	; 0xbfff
 8000da2:	602b      	strmi	r3, [r5, #0]
#ifdef DOVR_CALLBACK
    DOVR_Callback();
#endif
  }
  /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
  if (wIstr & ISTR_ERR)// & wInterrupt_Mask)
 8000da4:	8823      	ldrh	r3, [r4, #0]
 8000da6:	049b      	lsls	r3, r3, #18
	TxDString("ERR wIstr = ");
	TxDHex16(wIstr);
	TxDString("\r\n");
#endif

    _SetISTR((u16)CLR_ERR);
 8000da8:	bf44      	itt	mi
 8000daa:	f64d 73ff 	movwmi	r3, #57343	; 0xdfff
 8000dae:	602b      	strmi	r3, [r5, #0]
 8000db0:	bd38      	pop	{r3, r4, r5, pc}
 8000db2:	bf00      	nop
 8000db4:	40005c44 	andmi	r5, r0, r4, asr #24
 8000db8:	200006e6 	andcs	r0, r0, r6, ror #13
 8000dbc:	20000118 	andcs	r0, r0, r8, lsl r1
 8000dc0:	2000005c 	andcs	r0, r0, ip, asr r0

08000dc4 <Virtual_Com_Port_SetConfiguration>:
*******************************************************************************/
void Virtual_Com_Port_SetConfiguration(void)
{
  DEVICE_INFO *pInfo = &Device_Info;
  //TxDString("Virtual_Com_Port_SetConfiguration\r\n");
  if (pInfo->Current_Configuration != 0)
 8000dc4:	4b03      	ldr	r3, [pc, #12]	; (8000dd4 <Virtual_Com_Port_SetConfiguration+0x10>)
 8000dc6:	7a9b      	ldrb	r3, [r3, #10]
 8000dc8:	b113      	cbz	r3, 8000dd0 <Virtual_Com_Port_SetConfiguration+0xc>
  {
    /* Device configured */
    bDeviceState = CONFIGURED;
 8000dca:	4b03      	ldr	r3, [pc, #12]	; (8000dd8 <Virtual_Com_Port_SetConfiguration+0x14>)
 8000dcc:	2205      	movs	r2, #5
 8000dce:	601a      	str	r2, [r3, #0]
 8000dd0:	4770      	bx	lr
 8000dd2:	bf00      	nop
 8000dd4:	200006f4 	strdcs	r0, [r0], -r4
 8000dd8:	20000124 	andcs	r0, r0, r4, lsr #2

08000ddc <Virtual_Com_Port_SetDeviceAddress>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_SetDeviceAddress (void)
{
  bDeviceState = ADDRESSED;
 8000ddc:	4b01      	ldr	r3, [pc, #4]	; (8000de4 <Virtual_Com_Port_SetDeviceAddress+0x8>)
 8000dde:	2204      	movs	r2, #4
 8000de0:	601a      	str	r2, [r3, #0]
 8000de2:	4770      	bx	lr
 8000de4:	20000124 	andcs	r0, r0, r4, lsr #2

08000de8 <Virtual_Com_Port_Status_In>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Status_In(void)
{
  if (Request == SET_LINE_CODING)
 8000de8:	4b03      	ldr	r3, [pc, #12]	; (8000df8 <Virtual_Com_Port_Status_In+0x10>)
 8000dea:	781a      	ldrb	r2, [r3, #0]
 8000dec:	2a20      	cmp	r2, #32
  {

    //USART_Config();
    //config changed
    Request = 0;
 8000dee:	bf04      	itt	eq
 8000df0:	2200      	moveq	r2, #0
 8000df2:	701a      	strbeq	r2, [r3, #0]
 8000df4:	4770      	bx	lr
 8000df6:	bf00      	nop
 8000df8:	2000011c 	andcs	r0, r0, ip, lsl r1

08000dfc <Virtual_Com_Port_Status_Out>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Status_Out(void)
{
 8000dfc:	4770      	bx	lr
	...

08000e00 <Virtual_Com_Port_Data_Setup>:
 // TxDString("Virtual_Com_Port_Data_Setup ->RequestNo = ");  TxDHex8(RequestNo);  TxDString("\r\n");
//#endif
  u8    *(*CopyRoutine)(u16);
  CopyRoutine = NULL;

  if (RequestNo == GET_LINE_CODING)
 8000e00:	2821      	cmp	r0, #33	; 0x21
* Output         : None.
* Return         : USB_UNSUPPORT or USB_SUCCESS.
*******************************************************************************/
int comstatetemp=0;
RESULT Virtual_Com_Port_Data_Setup(u8 RequestNo)
{
 8000e02:	b510      	push	{r4, lr}
 // TxDString("Virtual_Com_Port_Data_Setup ->RequestNo = ");  TxDHex8(RequestNo);  TxDString("\r\n");
//#endif
  u8    *(*CopyRoutine)(u16);
  CopyRoutine = NULL;

  if (RequestNo == GET_LINE_CODING)
 8000e04:	d108      	bne.n	8000e18 <Virtual_Com_Port_Data_Setup+0x18>
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 8000e06:	4b11      	ldr	r3, [pc, #68]	; (8000e4c <Virtual_Com_Port_Data_Setup+0x4c>)
 8000e08:	681b      	ldr	r3, [r3, #0]
 8000e0a:	781b      	ldrb	r3, [r3, #0]
 8000e0c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000e10:	2b21      	cmp	r3, #33	; 0x21
 8000e12:	d010      	beq.n	8000e36 <Virtual_Com_Port_Data_Setup+0x36>
    Request = SET_LINE_CODING;
  }

  if (CopyRoutine == NULL)
  {
    return USB_UNSUPPORT;
 8000e14:	2002      	movs	r0, #2
 8000e16:	bd10      	pop	{r4, pc}
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
    {
      CopyRoutine = Virtual_Com_Port_GetLineCoding;
    }
  }
  else if (RequestNo == SET_LINE_CODING)
 8000e18:	2820      	cmp	r0, #32
 8000e1a:	d1fb      	bne.n	8000e14 <Virtual_Com_Port_Data_Setup+0x14>
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 8000e1c:	4b0b      	ldr	r3, [pc, #44]	; (8000e4c <Virtual_Com_Port_Data_Setup+0x4c>)
    {
      CopyRoutine = Virtual_Com_Port_SetLineCoding;
    }
    Request = SET_LINE_CODING;
 8000e1e:	4a0c      	ldr	r2, [pc, #48]	; (8000e50 <Virtual_Com_Port_Data_Setup+0x50>)
      CopyRoutine = Virtual_Com_Port_GetLineCoding;
    }
  }
  else if (RequestNo == SET_LINE_CODING)
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 8000e20:	681b      	ldr	r3, [r3, #0]
 8000e22:	781b      	ldrb	r3, [r3, #0]
    {
      CopyRoutine = Virtual_Com_Port_SetLineCoding;
    }
    Request = SET_LINE_CODING;
 8000e24:	7010      	strb	r0, [r2, #0]
      CopyRoutine = Virtual_Com_Port_GetLineCoding;
    }
  }
  else if (RequestNo == SET_LINE_CODING)
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 8000e26:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    {
      CopyRoutine = Virtual_Com_Port_SetLineCoding;
 8000e2a:	2b21      	cmp	r3, #33	; 0x21
 8000e2c:	4b09      	ldr	r3, [pc, #36]	; (8000e54 <Virtual_Com_Port_Data_Setup+0x54>)
 8000e2e:	bf18      	it	ne
 8000e30:	2300      	movne	r3, #0
    }
    Request = SET_LINE_CODING;
  }

  if (CopyRoutine == NULL)
 8000e32:	b90b      	cbnz	r3, 8000e38 <Virtual_Com_Port_Data_Setup+0x38>
 8000e34:	e7ee      	b.n	8000e14 <Virtual_Com_Port_Data_Setup+0x14>

  if (RequestNo == GET_LINE_CODING)
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
    {
      CopyRoutine = Virtual_Com_Port_GetLineCoding;
 8000e36:	4b08      	ldr	r3, [pc, #32]	; (8000e58 <Virtual_Com_Port_Data_Setup+0x58>)
  if (CopyRoutine == NULL)
  {
    return USB_UNSUPPORT;
  }

  pInformation->Ctrl_Info.CopyData = CopyRoutine;
 8000e38:	4a04      	ldr	r2, [pc, #16]	; (8000e4c <Virtual_Com_Port_Data_Setup+0x4c>)
  pInformation->Ctrl_Info.Usb_wOffset = 0;
 8000e3a:	2400      	movs	r4, #0
  if (CopyRoutine == NULL)
  {
    return USB_UNSUPPORT;
  }

  pInformation->Ctrl_Info.CopyData = CopyRoutine;
 8000e3c:	6812      	ldr	r2, [r2, #0]
  pInformation->Ctrl_Info.Usb_wOffset = 0;
  (*CopyRoutine)(0);
 8000e3e:	4620      	mov	r0, r4
  if (CopyRoutine == NULL)
  {
    return USB_UNSUPPORT;
  }

  pInformation->Ctrl_Info.CopyData = CopyRoutine;
 8000e40:	6193      	str	r3, [r2, #24]
  pInformation->Ctrl_Info.Usb_wOffset = 0;
 8000e42:	8254      	strh	r4, [r2, #18]
  (*CopyRoutine)(0);
 8000e44:	4798      	blx	r3
  return USB_SUCCESS;
 8000e46:	4620      	mov	r0, r4
}
 8000e48:	bd10      	pop	{r4, pc}
 8000e4a:	bf00      	nop
 8000e4c:	20000714 	andcs	r0, r0, r4, lsl r7
 8000e50:	2000011c 	andcs	r0, r0, ip, lsl r1
 8000e54:	08000ea9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl, fp}
 8000e58:	08000e91 	stmdaeq	r0, {r0, r4, r7, r9, sl, fp}

08000e5c <Virtual_Com_Port_NoData_Setup>:
	else if(new_signal == 0x0){
		gbFlashDownloadStart = TRUE;

	}
	(gbFlashDownloadStart ? TxDString("gbFlashDownloadStart is true\r\n") : TxDString("gbFlashDownloadStart is false\r\n"));*/
  if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 8000e5c:	4b07      	ldr	r3, [pc, #28]	; (8000e7c <Virtual_Com_Port_NoData_Setup+0x20>)
 8000e5e:	681b      	ldr	r3, [r3, #0]
 8000e60:	781b      	ldrb	r3, [r3, #0]
 8000e62:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000e66:	2b21      	cmp	r3, #33	; 0x21
 8000e68:	d106      	bne.n	8000e78 <Virtual_Com_Port_NoData_Setup+0x1c>
  {
    if (RequestNo == SET_COMM_FEATURE)
 8000e6a:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8000e6e:	2802      	cmp	r0, #2
    {
      return USB_SUCCESS;
 8000e70:	bf14      	ite	ne
 8000e72:	2002      	movne	r0, #2
 8000e74:	2000      	moveq	r0, #0
 8000e76:	4770      	bx	lr
    {
      return USB_SUCCESS;
    }
  }

  return USB_UNSUPPORT;
 8000e78:	2002      	movs	r0, #2
}
 8000e7a:	4770      	bx	lr
 8000e7c:	20000714 	andcs	r0, r0, r4, lsl r7

08000e80 <Virtual_Com_Port_Get_Interface_Setting>:
* Return         : The address of the string descriptors.
*******************************************************************************/
RESULT Virtual_Com_Port_Get_Interface_Setting(u8 Interface, u8 AlternateSetting)
{
  //TxDString("Virtual_Com_Port_Get_Interface_Setting\r\n");
  if (AlternateSetting > 0)
 8000e80:	b921      	cbnz	r1, 8000e8c <Virtual_Com_Port_Get_Interface_Setting+0xc>
  {
    return USB_UNSUPPORT;
  }
  else if (Interface > 1)
 8000e82:	2801      	cmp	r0, #1
  {
    return USB_UNSUPPORT;
  }
  return USB_SUCCESS;
 8000e84:	bf8c      	ite	hi
 8000e86:	2002      	movhi	r0, #2
 8000e88:	2000      	movls	r0, #0
 8000e8a:	4770      	bx	lr
RESULT Virtual_Com_Port_Get_Interface_Setting(u8 Interface, u8 AlternateSetting)
{
  //TxDString("Virtual_Com_Port_Get_Interface_Setting\r\n");
  if (AlternateSetting > 0)
  {
    return USB_UNSUPPORT;
 8000e8c:	2002      	movs	r0, #2
  else if (Interface > 1)
  {
    return USB_UNSUPPORT;
  }
  return USB_SUCCESS;
}
 8000e8e:	4770      	bx	lr

08000e90 <Virtual_Com_Port_GetLineCoding>:
			  //Delay(5000);
			  //NVIC_GenerateSystemReset();
			  //NVIC_GenerateCoreReset();
	//}

  if (Length == 0)
 8000e90:	b920      	cbnz	r0, 8000e9c <Virtual_Com_Port_GetLineCoding+0xc>
  {
    pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
 8000e92:	4b03      	ldr	r3, [pc, #12]	; (8000ea0 <Virtual_Com_Port_GetLineCoding+0x10>)
 8000e94:	2208      	movs	r2, #8
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	821a      	strh	r2, [r3, #16]
    return NULL;
 8000e9a:	4770      	bx	lr
  }
  return(u8 *)&linecoding;
 8000e9c:	4801      	ldr	r0, [pc, #4]	; (8000ea4 <Virtual_Com_Port_GetLineCoding+0x14>)
}
 8000e9e:	4770      	bx	lr
 8000ea0:	20000714 	andcs	r0, r0, r4, lsl r7
 8000ea4:	20000054 	andcs	r0, r0, r4, asr r0

08000ea8 <Virtual_Com_Port_SetLineCoding>:
u8 *Virtual_Com_Port_SetLineCoding(u16 Length)
{
#ifdef DEBUG_ENABLE_BY_USART2
	TxDString("SetLineCoding bitrate = ");TxDHex32(linecoding.bitrate);  TxDString("\r\n");
#endif
   if(linecoding.bitrate == 0x4B0){
 8000ea8:	4b07      	ldr	r3, [pc, #28]	; (8000ec8 <Virtual_Com_Port_SetLineCoding+0x20>)
 8000eaa:	681b      	ldr	r3, [r3, #0]
 8000eac:	f5b3 6f96 	cmp.w	r3, #1200	; 0x4b0
		  //TxDString("System reset operates!\r\n");
		  comstatetemp = 100;
 8000eb0:	bf02      	ittt	eq
 8000eb2:	4b06      	ldreq	r3, [pc, #24]	; (8000ecc <Virtual_Com_Port_SetLineCoding+0x24>)
 8000eb4:	2264      	moveq	r2, #100	; 0x64
 8000eb6:	605a      	streq	r2, [r3, #4]
	}
  if (Length == 0)
 8000eb8:	b920      	cbnz	r0, 8000ec4 <Virtual_Com_Port_SetLineCoding+0x1c>
  {
    pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
 8000eba:	4b05      	ldr	r3, [pc, #20]	; (8000ed0 <Virtual_Com_Port_SetLineCoding+0x28>)
 8000ebc:	2208      	movs	r2, #8
 8000ebe:	681b      	ldr	r3, [r3, #0]
 8000ec0:	821a      	strh	r2, [r3, #16]
    return NULL;
 8000ec2:	4770      	bx	lr
  }

  return(u8 *)&linecoding;
 8000ec4:	4800      	ldr	r0, [pc, #0]	; (8000ec8 <Virtual_Com_Port_SetLineCoding+0x20>)
}
 8000ec6:	4770      	bx	lr
 8000ec8:	20000054 	andcs	r0, r0, r4, asr r0
 8000ecc:	2000011c 	andcs	r0, r0, ip, lsl r1
 8000ed0:	20000714 	andcs	r0, r0, r4, lsl r7

08000ed4 <Virtual_Com_Port_init>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_init(void)
{
 8000ed4:	b510      	push	{r4, lr}

  /* Update the serial number string descriptor with the data from the unique
  ID*/
  Get_SerialNum();
 8000ed6:	f000 f8ed 	bl	80010b4 <Get_SerialNum>

  pInformation->Current_Configuration = 0;
 8000eda:	4b05      	ldr	r3, [pc, #20]	; (8000ef0 <Virtual_Com_Port_init+0x1c>)
 8000edc:	2400      	movs	r4, #0
 8000ede:	681b      	ldr	r3, [r3, #0]
 8000ee0:	729c      	strb	r4, [r3, #10]

  /* Connect the device */
  PowerOn();
 8000ee2:	f000 f8a9 	bl	8001038 <PowerOn>

  /* Perform basic device initialization operations */
  USB_SIL_Init();
 8000ee6:	f001 fad9 	bl	800249c <USB_SIL_Init>

  bDeviceState = UNCONNECTED;
 8000eea:	4b02      	ldr	r3, [pc, #8]	; (8000ef4 <Virtual_Com_Port_init+0x20>)
 8000eec:	601c      	str	r4, [r3, #0]
 8000eee:	bd10      	pop	{r4, pc}
 8000ef0:	20000714 	andcs	r0, r0, r4, lsl r7
 8000ef4:	20000124 	andcs	r0, r0, r4, lsr #2

08000ef8 <Virtual_Com_Port_Reset>:
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Reset(void)
{
  /* Set Virtual_Com_Port DEVICE as not configured */
  pInformation->Current_Configuration = 0;
 8000ef8:	4b33      	ldr	r3, [pc, #204]	; (8000fc8 <Virtual_Com_Port_Reset+0xd0>)

  /* Current Feature initialization */
  pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
 8000efa:	4a34      	ldr	r2, [pc, #208]	; (8000fcc <Virtual_Com_Port_Reset+0xd4>)
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Reset(void)
{
  /* Set Virtual_Com_Port DEVICE as not configured */
  pInformation->Current_Configuration = 0;
 8000efc:	681b      	ldr	r3, [r3, #0]

  /* Current Feature initialization */
  pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
 8000efe:	79d2      	ldrb	r2, [r2, #7]
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Reset(void)
{
 8000f00:	b510      	push	{r4, lr}
  /* Set Virtual_Com_Port DEVICE as not configured */
  pInformation->Current_Configuration = 0;
 8000f02:	2400      	movs	r4, #0

  /* Current Feature initialization */
  pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
 8000f04:	725a      	strb	r2, [r3, #9]
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Reset(void)
{
  /* Set Virtual_Com_Port DEVICE as not configured */
  pInformation->Current_Configuration = 0;
 8000f06:	729c      	strb	r4, [r3, #10]

  /* Current Feature initialization */
  pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];

  /* Set Virtual_Com_Port DEVICE with the default Interface*/
  pInformation->Current_Interface = 0;
 8000f08:	72dc      	strb	r4, [r3, #11]

  /* Init EP3 OUT as Bulk endpoint */
  OTG_DEV_EP_Init(EP3_OUT, OTG_DEV_EP_TYPE_BULK, VIRTUAL_COM_PORT_DATA_SIZE);  
#else 

  SetBTABLE(BTABLE_ADDRESS);
 8000f0a:	4620      	mov	r0, r4
 8000f0c:	f001 f99e 	bl	800224c <SetBTABLE>

  /* Initialize Endpoint 0 */
  SetEPType(ENDP0, EP_CONTROL);
 8000f10:	4620      	mov	r0, r4
 8000f12:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f16:	f001 f9a1 	bl	800225c <SetEPType>
  SetEPTxStatus(ENDP0, EP_TX_STALL);
 8000f1a:	4620      	mov	r0, r4
 8000f1c:	2110      	movs	r1, #16
 8000f1e:	f001 f9ab 	bl	8002278 <SetEPTxStatus>
  SetEPRxAddr(ENDP0, ENDP0_RXADDR);
 8000f22:	4620      	mov	r0, r4
 8000f24:	2140      	movs	r1, #64	; 0x40
 8000f26:	f001 fa45 	bl	80023b4 <SetEPRxAddr>
  SetEPTxAddr(ENDP0, ENDP0_TXADDR);
 8000f2a:	2180      	movs	r1, #128	; 0x80
 8000f2c:	4620      	mov	r0, r4
 8000f2e:	f001 fa31 	bl	8002394 <SetEPTxAddr>
  Clear_Status_Out(ENDP0);
 8000f32:	4620      	mov	r0, r4
 8000f34:	f001 f9f8 	bl	8002328 <Clear_Status_Out>
  SetEPRxCount(ENDP0, Device_Property.MaxPacketSize);
 8000f38:	4b25      	ldr	r3, [pc, #148]	; (8000fd0 <Virtual_Com_Port_Reset+0xd8>)
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	f893 1034 	ldrb.w	r1, [r3, #52]	; 0x34
 8000f40:	f001 fa76 	bl	8002430 <SetEPRxCount>
  SetEPRxValid(ENDP0);
 8000f44:	4620      	mov	r0, r4
 8000f46:	f001 f9dc 	bl	8002302 <SetEPRxValid>

  /* Initialize Endpoint 1 */
  SetEPType(ENDP1, EP_BULK);
 8000f4a:	2001      	movs	r0, #1
 8000f4c:	4621      	mov	r1, r4
 8000f4e:	f001 f985 	bl	800225c <SetEPType>
  SetEPTxAddr(ENDP1, ENDP1_TXADDR);
 8000f52:	2001      	movs	r0, #1
 8000f54:	21c0      	movs	r1, #192	; 0xc0
 8000f56:	f001 fa1d 	bl	8002394 <SetEPTxAddr>
  SetEPTxStatus(ENDP1, EP_TX_NAK);
 8000f5a:	2001      	movs	r0, #1
 8000f5c:	2120      	movs	r1, #32
 8000f5e:	f001 f98b 	bl	8002278 <SetEPTxStatus>
  SetEPRxStatus(ENDP1, EP_RX_DIS);
 8000f62:	2001      	movs	r0, #1
 8000f64:	4621      	mov	r1, r4
 8000f66:	f001 f9a0 	bl	80022aa <SetEPRxStatus>

  /* Initialize Endpoint 2 */
  SetEPType(ENDP2, EP_INTERRUPT);
 8000f6a:	2002      	movs	r0, #2
 8000f6c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8000f70:	f001 f974 	bl	800225c <SetEPType>
  SetEPTxAddr(ENDP2, ENDP2_TXADDR);
 8000f74:	2002      	movs	r0, #2
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f7a:	f001 fa0b 	bl	8002394 <SetEPTxAddr>
  SetEPRxStatus(ENDP2, EP_RX_DIS);
 8000f7e:	2002      	movs	r0, #2
 8000f80:	4621      	mov	r1, r4
 8000f82:	f001 f992 	bl	80022aa <SetEPRxStatus>
  SetEPTxStatus(ENDP2, EP_TX_NAK);
 8000f86:	2002      	movs	r0, #2
 8000f88:	2120      	movs	r1, #32
 8000f8a:	f001 f975 	bl	8002278 <SetEPTxStatus>

  /* Initialize Endpoint 3 */
  SetEPType(ENDP3, EP_BULK);
 8000f8e:	2003      	movs	r0, #3
 8000f90:	4621      	mov	r1, r4
 8000f92:	f001 f963 	bl	800225c <SetEPType>
  SetEPRxAddr(ENDP3, ENDP3_RXADDR);
 8000f96:	2003      	movs	r0, #3
 8000f98:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000f9c:	f001 fa0a 	bl	80023b4 <SetEPRxAddr>
  SetEPRxCount(ENDP3, VIRTUAL_COM_PORT_DATA_SIZE);
 8000fa0:	2003      	movs	r0, #3
 8000fa2:	2140      	movs	r1, #64	; 0x40
 8000fa4:	f001 fa44 	bl	8002430 <SetEPRxCount>
  SetEPRxStatus(ENDP3, EP_RX_VALID);
 8000fa8:	2003      	movs	r0, #3
 8000faa:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000fae:	f001 f97c 	bl	80022aa <SetEPRxStatus>
  SetEPTxStatus(ENDP3, EP_TX_DIS);
 8000fb2:	2003      	movs	r0, #3
 8000fb4:	4621      	mov	r1, r4
 8000fb6:	f001 f95f 	bl	8002278 <SetEPTxStatus>

  /* Set this device to response on default address */
  SetDeviceAddress(0);
 8000fba:	4620      	mov	r0, r4
 8000fbc:	f001 f8cc 	bl	8002158 <SetDeviceAddress>
#endif /* STM32F10X_CL */

  bDeviceState = ATTACHED;
 8000fc0:	4b04      	ldr	r3, [pc, #16]	; (8000fd4 <Virtual_Com_Port_Reset+0xdc>)
 8000fc2:	2201      	movs	r2, #1
 8000fc4:	601a      	str	r2, [r3, #0]
 8000fc6:	bd10      	pop	{r4, pc}
 8000fc8:	20000714 	andcs	r0, r0, r4, lsl r7
 8000fcc:	080026b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, sp}
 8000fd0:	20000054 	andcs	r0, r0, r4, asr r0
 8000fd4:	20000124 	andcs	r0, r0, r4, lsr #2

08000fd8 <Virtual_Com_Port_GetDeviceDescriptor>:
* Return         : The address of the device descriptor.
*******************************************************************************/
u8 *Virtual_Com_Port_GetDeviceDescriptor(u16 Length)
{
	//TxDString("Virtual_Com_Port_GetDeviceDescriptor\r\n");
  return Standard_GetDescriptorData(Length, &Device_Descriptor);
 8000fd8:	4901      	ldr	r1, [pc, #4]	; (8000fe0 <Virtual_Com_Port_GetDeviceDescriptor+0x8>)
 8000fda:	f000 beb9 	b.w	8001d50 <Standard_GetDescriptorData>
 8000fde:	bf00      	nop
 8000fe0:	2000008c 	andcs	r0, r0, ip, lsl #1

08000fe4 <Virtual_Com_Port_GetConfigDescriptor>:
* Return         : The address of the configuration descriptor.
*******************************************************************************/
u8 *Virtual_Com_Port_GetConfigDescriptor(u16 Length)
{
	//TxDString("Virtual_Com_Port_GetConfigDescriptor\r\n");
  return Standard_GetDescriptorData(Length, &Config_Descriptor);
 8000fe4:	4901      	ldr	r1, [pc, #4]	; (8000fec <Virtual_Com_Port_GetConfigDescriptor+0x8>)
 8000fe6:	f000 beb3 	b.w	8001d50 <Standard_GetDescriptorData>
 8000fea:	bf00      	nop
 8000fec:	20000094 	mulcs	r0, r4, r0

08000ff0 <Virtual_Com_Port_GetStringDescriptor>:
* Return         : The address of the string descriptors.
*******************************************************************************/
u8 *Virtual_Com_Port_GetStringDescriptor(u16 Length)
{
  //TxDString("Virtual_Com_Port_GetStringDescriptor\r\n");
  u8 wValue0 = pInformation->USBwValue0;
 8000ff0:	4b05      	ldr	r3, [pc, #20]	; (8001008 <Virtual_Com_Port_GetStringDescriptor+0x18>)
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	78db      	ldrb	r3, [r3, #3]
  if (wValue0 > 4)
 8000ff6:	2b04      	cmp	r3, #4
 8000ff8:	d804      	bhi.n	8001004 <Virtual_Com_Port_GetStringDescriptor+0x14>
  {
    return NULL;
  }
  else
  {
    return Standard_GetDescriptorData(Length, &String_Descriptor[wValue0]);
 8000ffa:	4904      	ldr	r1, [pc, #16]	; (800100c <Virtual_Com_Port_GetStringDescriptor+0x1c>)
 8000ffc:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8001000:	f000 bea6 	b.w	8001d50 <Standard_GetDescriptorData>
  }
}
 8001004:	2000      	movs	r0, #0
 8001006:	4770      	bx	lr
 8001008:	20000714 	andcs	r0, r0, r4, lsl r7
 800100c:	2000009c 	mulcs	r0, ip, r0

08001010 <IntToUnicode>:
* Output         : None.
* Return         : None.
*******************************************************************************/

static void IntToUnicode (u32 value , u8 *pbuf , u8 len)
{
 8001010:	b530      	push	{r4, r5, lr}
  u8 idx = 0;

  for( idx = 0 ; idx < len ; idx ++)
 8001012:	2400      	movs	r4, #0
 8001014:	b2e3      	uxtb	r3, r4
 8001016:	4293      	cmp	r3, r2
 8001018:	d20d      	bcs.n	8001036 <IntToUnicode+0x26>
  {
    if( ((value >> 28)) < 0xA )
 800101a:	0f03      	lsrs	r3, r0, #28
 800101c:	2b09      	cmp	r3, #9
    {
      pbuf[ 2* idx] = (value >> 28) + '0';
 800101e:	bf94      	ite	ls
 8001020:	3330      	addls	r3, #48	; 0x30
    }
    else
    {
      pbuf[2* idx] = (value >> 28) + 'A' - 10;
 8001022:	3337      	addhi	r3, #55	; 0x37
 8001024:	f801 3014 	strb.w	r3, [r1, r4, lsl #1]
    }

    value = value << 4;

    pbuf[ 2* idx + 1] = 0;
 8001028:	2500      	movs	r5, #0
 800102a:	eb01 0344 	add.w	r3, r1, r4, lsl #1
    else
    {
      pbuf[2* idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;
 800102e:	0100      	lsls	r0, r0, #4

    pbuf[ 2* idx + 1] = 0;
 8001030:	705d      	strb	r5, [r3, #1]
 8001032:	3401      	adds	r4, #1
 8001034:	e7ee      	b.n	8001014 <IntToUnicode+0x4>
  }
}
 8001036:	bd30      	pop	{r4, r5, pc}

08001038 <PowerOn>:
* Input          : None.
* Output         : None.
* Return         : USB_SUCCESS.
*******************************************************************************/
RESULT PowerOn(void)
{
 8001038:	b508      	push	{r3, lr}
void USB_Cable_Config (FunctionalState NewState)
{
   if (NewState != DISABLE)
   {
	   /*TxDString("USB Pull-up Enabled\r\n");*/
 	  GPIO_ResetBits(USB_DISCONNECT_PORT, USB_DISCONNECT_PIN);
 800103a:	4809      	ldr	r0, [pc, #36]	; (8001060 <PowerOn+0x28>)
 800103c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001040:	f000 f976 	bl	8001330 <GPIO_ResetBits>
  /*** cable plugged-in ? ***/
  USB_Cable_Config(ENABLE);

  /*** CNTR_PWDN = 0 ***/
  wRegVal = CNTR_FRES;
  _SetCNTR(wRegVal);
 8001044:	4b07      	ldr	r3, [pc, #28]	; (8001064 <PowerOn+0x2c>)
 8001046:	2201      	movs	r2, #1
 8001048:	601a      	str	r2, [r3, #0]

  /*** CNTR_FRES = 0 ***/
  wInterrupt_Mask = 0;
  _SetCNTR(wInterrupt_Mask);
  /*** Clear pending interrupts ***/
  _SetISTR(0);
 800104a:	4a07      	ldr	r2, [pc, #28]	; (8001068 <PowerOn+0x30>)
  wRegVal = CNTR_FRES;
  _SetCNTR(wRegVal);

  /*** CNTR_FRES = 0 ***/
  wInterrupt_Mask = 0;
  _SetCNTR(wInterrupt_Mask);
 800104c:	2000      	movs	r0, #0
  /*** Clear pending interrupts ***/
  _SetISTR(0);
  /*** Set interrupt mask ***/
  wInterrupt_Mask = CNTR_RESETM | CNTR_SUSPM | CNTR_WKUPM | CNTR_CTRM ; //add CNTR_SOFM
 800104e:	4907      	ldr	r1, [pc, #28]	; (800106c <PowerOn+0x34>)
  wRegVal = CNTR_FRES;
  _SetCNTR(wRegVal);

  /*** CNTR_FRES = 0 ***/
  wInterrupt_Mask = 0;
  _SetCNTR(wInterrupt_Mask);
 8001050:	6018      	str	r0, [r3, #0]
  /*** Clear pending interrupts ***/
  _SetISTR(0);
 8001052:	6010      	str	r0, [r2, #0]
  /*** Set interrupt mask ***/
  wInterrupt_Mask = CNTR_RESETM | CNTR_SUSPM | CNTR_WKUPM | CNTR_CTRM ; //add CNTR_SOFM
 8001054:	f44f 421c 	mov.w	r2, #39936	; 0x9c00
 8001058:	800a      	strh	r2, [r1, #0]
  _SetCNTR(wInterrupt_Mask);
 800105a:	601a      	str	r2, [r3, #0]
#endif /* STM32F10X_CL */

  return USB_SUCCESS;
}
 800105c:	bd08      	pop	{r3, pc}
 800105e:	bf00      	nop
 8001060:	40011000 	andmi	r1, r1, r0
 8001064:	40005c40 	andmi	r5, r0, r0, asr #24
 8001068:	40005c44 	andmi	r5, r0, r4, asr #24
 800106c:	20000718 	andcs	r0, r0, r8, lsl r7

08001070 <USB_Cable_Config>:
* Input          : None.
* Return         : Status
*******************************************************************************/
void USB_Cable_Config (FunctionalState NewState)
{
   if (NewState != DISABLE)
 8001070:	b120      	cbz	r0, 800107c <USB_Cable_Config+0xc>
   {
	   /*TxDString("USB Pull-up Enabled\r\n");*/
 	  GPIO_ResetBits(USB_DISCONNECT_PORT, USB_DISCONNECT_PIN);
 8001072:	4805      	ldr	r0, [pc, #20]	; (8001088 <USB_Cable_Config+0x18>)
 8001074:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001078:	f000 b95a 	b.w	8001330 <GPIO_ResetBits>
   }
   else
   {
	   /*TxDString("USB Pull-up Disabled\r\n");*/
 	  GPIO_SetBits(USB_DISCONNECT_PORT, USB_DISCONNECT_PIN);
 800107c:	4802      	ldr	r0, [pc, #8]	; (8001088 <USB_Cable_Config+0x18>)
 800107e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001082:	f000 b953 	b.w	800132c <GPIO_SetBits>
 8001086:	bf00      	nop
 8001088:	40011000 	andmi	r1, r1, r0

0800108c <PowerOff>:
* Input          : None.
* Output         : None.
* Return         : USB_SUCCESS.
*******************************************************************************/
RESULT PowerOff()
{
 800108c:	b538      	push	{r3, r4, r5, lr}
#ifndef STM32F10X_CL
  /* disable all ints and force USB reset */
  _SetCNTR(CNTR_FRES);
 800108e:	4d06      	ldr	r5, [pc, #24]	; (80010a8 <PowerOff+0x1c>)
 8001090:	2301      	movs	r3, #1
 8001092:	602b      	str	r3, [r5, #0]
  /* clear interrupt status register */
  _SetISTR(0);
 8001094:	4b05      	ldr	r3, [pc, #20]	; (80010ac <PowerOff+0x20>)
 8001096:	2400      	movs	r4, #0
 8001098:	601c      	str	r4, [r3, #0]
  /* Disable the Pull-Up*/
  USB_Cable_Config(DISABLE);
 800109a:	4620      	mov	r0, r4
 800109c:	f7ff ffe8 	bl	8001070 <USB_Cable_Config>
  /* switch-off device */
 _SetCNTR(CNTR_FRES + CNTR_PDWN);
 80010a0:	2303      	movs	r3, #3
 80010a2:	602b      	str	r3, [r5, #0]

  /* sw variables reset */
  /* ... */

  return USB_SUCCESS;
}
 80010a4:	4620      	mov	r0, r4
 80010a6:	bd38      	pop	{r3, r4, r5, pc}
 80010a8:	40005c40 	andmi	r5, r0, r0, asr #24
 80010ac:	40005c44 	andmi	r5, r0, r4, asr #24

080010b0 <UsbVcpDisconnect>:
    PowerOn();
}

void UsbVcpDisconnect(void)
{
    PowerOff();
 80010b0:	f7ff bfec 	b.w	800108c <PowerOff>

080010b4 <Get_SerialNum>:
*******************************************************************************/
void Get_SerialNum(void)
{
  u32 Device_Serial0, Device_Serial1, Device_Serial2;

  Device_Serial0 = *(__IO u32*)(0x1FFFF7E8);
 80010b4:	4b09      	ldr	r3, [pc, #36]	; (80010dc <Get_SerialNum+0x28>)
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void Get_SerialNum(void)
{
 80010b6:	b510      	push	{r4, lr}
  u32 Device_Serial0, Device_Serial1, Device_Serial2;

  Device_Serial0 = *(__IO u32*)(0x1FFFF7E8);
 80010b8:	6818      	ldr	r0, [r3, #0]
  Device_Serial1 = *(__IO u32*)(0x1FFFF7EC);
 80010ba:	685c      	ldr	r4, [r3, #4]
  Device_Serial2 = *(__IO u32*)(0x1FFFF7F0);
 80010bc:	3308      	adds	r3, #8
 80010be:	681b      	ldr	r3, [r3, #0]

  Device_Serial0 += Device_Serial2;

  if (Device_Serial0 != 0)
 80010c0:	1818      	adds	r0, r3, r0
 80010c2:	d00a      	beq.n	80010da <Get_SerialNum+0x26>
  {
    IntToUnicode (Device_Serial0, &Virtual_Com_Port_StringSerial[2] , 8);
 80010c4:	4906      	ldr	r1, [pc, #24]	; (80010e0 <Get_SerialNum+0x2c>)
 80010c6:	2208      	movs	r2, #8
 80010c8:	f7ff ffa2 	bl	8001010 <IntToUnicode>
    IntToUnicode (Device_Serial1, &Virtual_Com_Port_StringSerial[18], 4);
 80010cc:	4620      	mov	r0, r4
  }

}
 80010ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  Device_Serial0 += Device_Serial2;

  if (Device_Serial0 != 0)
  {
    IntToUnicode (Device_Serial0, &Virtual_Com_Port_StringSerial[2] , 8);
    IntToUnicode (Device_Serial1, &Virtual_Com_Port_StringSerial[18], 4);
 80010d2:	4904      	ldr	r1, [pc, #16]	; (80010e4 <Get_SerialNum+0x30>)
 80010d4:	2204      	movs	r2, #4
 80010d6:	f7ff bf9b 	b.w	8001010 <IntToUnicode>
 80010da:	bd10      	pop	{r4, pc}
 80010dc:	1ffff7e8 	svcne	0x00fff7e8
 80010e0:	20000003 	andcs	r0, r0, r3
 80010e4:	20000013 	andcs	r0, r0, r3, lsl r0

080010e8 <USB_TxDByte>:
#endif



extern void USB_TxDByte(u8 dat)
{
 80010e8:	b513      	push	{r0, r1, r4, lr}
 80010ea:	ac02      	add	r4, sp, #8
 80010ec:	f804 0d01 	strb.w	r0, [r4, #-1]!
  vu32 StartTimer;
  vu32 TimeOut;
	//TxDByte(dat);
	Delay(5); //some delay is needed when data send to USB Host by sm6787@robotis.com
 80010f0:	2005      	movs	r0, #5
 80010f2:	f7ff f8ed 	bl	80002d0 <Delay>

  UserToPMABufferCopy(&dat, ENDP1_TXADDR,1);
 80010f6:	2201      	movs	r2, #1
 80010f8:	4620      	mov	r0, r4
 80010fa:	21c0      	movs	r1, #192	; 0xc0
 80010fc:	f001 f87b 	bl	80021f6 <UserToPMABufferCopy>
	SetEPTxCount(ENDP1, 1);
 8001100:	2001      	movs	r0, #1
 8001102:	4601      	mov	r1, r0
 8001104:	f001 f986 	bl	8002414 <SetEPTxCount>
	SetEPTxValid(ENDP1);
 8001108:	2001      	movs	r0, #1
 800110a:	f001 f8e7 	bl	80022dc <SetEPTxValid>
  
}
 800110e:	b002      	add	sp, #8
 8001110:	bd10      	pop	{r4, pc}
	...

08001114 <FLASH_SetLatency>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_LATENCY(FLASH_Latency));
  
  /* Sets the Latency value */
  FLASH->ACR &= ACR_LATENCY_Mask;
 8001114:	4b04      	ldr	r3, [pc, #16]	; (8001128 <FLASH_SetLatency+0x14>)
 8001116:	681a      	ldr	r2, [r3, #0]
 8001118:	f002 0238 	and.w	r2, r2, #56	; 0x38
 800111c:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_Latency;
 800111e:	681a      	ldr	r2, [r3, #0]
 8001120:	4310      	orrs	r0, r2
 8001122:	6018      	str	r0, [r3, #0]
 8001124:	4770      	bx	lr
 8001126:	bf00      	nop
 8001128:	40022000 	andmi	r2, r2, r0

0800112c <FLASH_PrefetchBufferCmd>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_PREFETCHBUFFER_STATE(FLASH_PrefetchBuffer));
  
  /* Enable or disable the Prefetch Buffer */
  FLASH->ACR &= ACR_PRFTBE_Mask;
 800112c:	4b04      	ldr	r3, [pc, #16]	; (8001140 <FLASH_PrefetchBufferCmd+0x14>)
 800112e:	681a      	ldr	r2, [r3, #0]
 8001130:	f022 0210 	bic.w	r2, r2, #16
 8001134:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_PrefetchBuffer;
 8001136:	681a      	ldr	r2, [r3, #0]
 8001138:	4310      	orrs	r0, r2
 800113a:	6018      	str	r0, [r3, #0]
 800113c:	4770      	bx	lr
 800113e:	bf00      	nop
 8001140:	40022000 	andmi	r2, r2, r0

08001144 <FLASH_Unlock>:
* Return         : None
*******************************************************************************/
void FLASH_Unlock(void)
{
  /* Authorize the FPEC Access */
  FLASH->KEYR = FLASH_KEY1;
 8001144:	4b03      	ldr	r3, [pc, #12]	; (8001154 <FLASH_Unlock+0x10>)
 8001146:	4a04      	ldr	r2, [pc, #16]	; (8001158 <FLASH_Unlock+0x14>)
 8001148:	605a      	str	r2, [r3, #4]
  FLASH->KEYR = FLASH_KEY2;
 800114a:	f102 3288 	add.w	r2, r2, #2290649224	; 0x88888888
 800114e:	605a      	str	r2, [r3, #4]
 8001150:	4770      	bx	lr
 8001152:	bf00      	nop
 8001154:	40022000 	andmi	r2, r2, r0
 8001158:	45670123 	strbmi	r0, [r7, #-291]!	; 0x123

0800115c <FLASH_Lock>:
* Return         : None
*******************************************************************************/
void FLASH_Lock(void)
{
  /* Set the Lock Bit to lock the FPEC and the FCR */
  FLASH->CR |= CR_LOCK_Set;
 800115c:	4a02      	ldr	r2, [pc, #8]	; (8001168 <FLASH_Lock+0xc>)
 800115e:	6913      	ldr	r3, [r2, #16]
 8001160:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001164:	6113      	str	r3, [r2, #16]
 8001166:	4770      	bx	lr
 8001168:	40022000 	andmi	r2, r2, r0

0800116c <FLASH_ClearFlag>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG)) ;
  
  /* Clear the flags */
  FLASH->SR = FLASH_FLAG;
 800116c:	4b01      	ldr	r3, [pc, #4]	; (8001174 <FLASH_ClearFlag+0x8>)
 800116e:	60d8      	str	r0, [r3, #12]
 8001170:	4770      	bx	lr
 8001172:	bf00      	nop
 8001174:	40022000 	andmi	r2, r2, r0

08001178 <FLASH_GetStatus>:
*******************************************************************************/
FLASH_Status FLASH_GetStatus(void)
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 8001178:	4b08      	ldr	r3, [pc, #32]	; (800119c <FLASH_GetStatus+0x24>)
 800117a:	68da      	ldr	r2, [r3, #12]
 800117c:	07d1      	lsls	r1, r2, #31
 800117e:	d409      	bmi.n	8001194 <FLASH_GetStatus+0x1c>
  {
    flashstatus = FLASH_BUSY;
  }
  else 
  {  
    if(FLASH->SR & FLASH_FLAG_PGERR)
 8001180:	68da      	ldr	r2, [r3, #12]
 8001182:	0752      	lsls	r2, r2, #29
 8001184:	d408      	bmi.n	8001198 <FLASH_GetStatus+0x20>
    { 
      flashstatus = FLASH_ERROR_PG;
    }
    else 
    {
      if(FLASH->SR & FLASH_FLAG_WRPRTERR)
 8001186:	68db      	ldr	r3, [r3, #12]
 8001188:	f013 0f10 	tst.w	r3, #16
      {
        flashstatus = FLASH_ERROR_WRP;
      }
      else
      {
        flashstatus = FLASH_COMPLETE;
 800118c:	bf14      	ite	ne
 800118e:	2003      	movne	r0, #3
 8001190:	2004      	moveq	r0, #4
 8001192:	4770      	bx	lr
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
  {
    flashstatus = FLASH_BUSY;
 8001194:	2001      	movs	r0, #1
 8001196:	4770      	bx	lr
  }
  else 
  {  
    if(FLASH->SR & FLASH_FLAG_PGERR)
    { 
      flashstatus = FLASH_ERROR_PG;
 8001198:	2002      	movs	r0, #2
      }
    }
  }
  /* Return the Flash Status */
  return flashstatus;
}
 800119a:	4770      	bx	lr
 800119c:	40022000 	andmi	r2, r2, r0

080011a0 <FLASH_WaitForLastOperation>:
* Return         : FLASH Status: The returned value can be: FLASH_BUSY, 
*                  FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or 
*                  FLASH_TIMEOUT.
*******************************************************************************/
FLASH_Status FLASH_WaitForLastOperation(u32 Timeout)
{ 
 80011a0:	b513      	push	{r0, r1, r4, lr}
 80011a2:	4604      	mov	r4, r0
  FLASH_Status status = FLASH_COMPLETE;
   
  /* Check for the Flash Status */
  status = FLASH_GetStatus();
 80011a4:	f7ff ffe8 	bl	8001178 <FLASH_GetStatus>

  /* Wait for a Flash operation to complete or a TIMEOUT to occur */
  while((status == FLASH_BUSY) && (Timeout != 0x00))
 80011a8:	2801      	cmp	r0, #1
 80011aa:	d10f      	bne.n	80011cc <FLASH_WaitForLastOperation+0x2c>
 80011ac:	b164      	cbz	r4, 80011c8 <FLASH_WaitForLastOperation+0x28>
* Output         : None
* Return         : None
*******************************************************************************/
static void delay(void)
{
  vu32 i = 0;
 80011ae:	2300      	movs	r3, #0
 80011b0:	9301      	str	r3, [sp, #4]

  for(i = 0xFF; i != 0; i--)
 80011b2:	23ff      	movs	r3, #255	; 0xff
 80011b4:	9301      	str	r3, [sp, #4]
 80011b6:	9b01      	ldr	r3, [sp, #4]
 80011b8:	b113      	cbz	r3, 80011c0 <FLASH_WaitForLastOperation+0x20>
 80011ba:	9b01      	ldr	r3, [sp, #4]
 80011bc:	3b01      	subs	r3, #1
 80011be:	e7f9      	b.n	80011b4 <FLASH_WaitForLastOperation+0x14>

  /* Wait for a Flash operation to complete or a TIMEOUT to occur */
  while((status == FLASH_BUSY) && (Timeout != 0x00))
  {
    delay();
    status = FLASH_GetStatus();
 80011c0:	f7ff ffda 	bl	8001178 <FLASH_GetStatus>
    Timeout--;
 80011c4:	3c01      	subs	r4, #1
 80011c6:	e7ef      	b.n	80011a8 <FLASH_WaitForLastOperation+0x8>
  }

  if(Timeout == 0x00 )
  {
    status = FLASH_TIMEOUT;
 80011c8:	2005      	movs	r0, #5
 80011ca:	e002      	b.n	80011d2 <FLASH_WaitForLastOperation+0x32>
 80011cc:	2c00      	cmp	r4, #0
 80011ce:	bf08      	it	eq
 80011d0:	2005      	moveq	r0, #5
  }

  /* Return the operation status */
  return status;
}
 80011d2:	b002      	add	sp, #8
 80011d4:	bd10      	pop	{r4, pc}
	...

080011d8 <FLASH_ErasePage>:
* Return         : FLASH Status: The returned value can be: FLASH_BUSY, 
*                  FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or 
*                  FLASH_TIMEOUT.
*******************************************************************************/
FLASH_Status FLASH_ErasePage(u32 Page_Address)
{
 80011d8:	b538      	push	{r3, r4, r5, lr}
 80011da:	4605      	mov	r5, r0

  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Page_Address));

  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(EraseTimeout);
 80011dc:	f640 70ff 	movw	r0, #4095	; 0xfff
 80011e0:	f7ff ffde 	bl	80011a0 <FLASH_WaitForLastOperation>
  
  if(status == FLASH_COMPLETE)
 80011e4:	2804      	cmp	r0, #4
 80011e6:	d114      	bne.n	8001212 <FLASH_ErasePage+0x3a>
  { 
    /* if the previous operation is completed, proceed to erase the page */
    FLASH->CR|= CR_PER_Set;
 80011e8:	4c0a      	ldr	r4, [pc, #40]	; (8001214 <FLASH_ErasePage+0x3c>)
    FLASH->AR = Page_Address; 
    FLASH->CR|= CR_STRT_Set;
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
 80011ea:	f640 70ff 	movw	r0, #4095	; 0xfff
  status = FLASH_WaitForLastOperation(EraseTimeout);
  
  if(status == FLASH_COMPLETE)
  { 
    /* if the previous operation is completed, proceed to erase the page */
    FLASH->CR|= CR_PER_Set;
 80011ee:	6923      	ldr	r3, [r4, #16]
 80011f0:	f043 0302 	orr.w	r3, r3, #2
 80011f4:	6123      	str	r3, [r4, #16]
    FLASH->AR = Page_Address; 
 80011f6:	6165      	str	r5, [r4, #20]
    FLASH->CR|= CR_STRT_Set;
 80011f8:	6923      	ldr	r3, [r4, #16]
 80011fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011fe:	6123      	str	r3, [r4, #16]
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
 8001200:	f7ff ffce 	bl	80011a0 <FLASH_WaitForLastOperation>

    if(status != FLASH_BUSY)
 8001204:	2801      	cmp	r0, #1
    {
      /* if the erase operation is completed, disable the PER Bit */
      FLASH->CR &= CR_PER_Reset;
 8001206:	bf1f      	itttt	ne
 8001208:	f641 73fd 	movwne	r3, #8189	; 0x1ffd
 800120c:	6922      	ldrne	r2, [r4, #16]
 800120e:	4013      	andne	r3, r2
 8001210:	6123      	strne	r3, [r4, #16]
    }
  }
  /* Return the Erase Status */
  return status;
}
 8001212:	bd38      	pop	{r3, r4, r5, pc}
 8001214:	40022000 	andmi	r2, r2, r0

08001218 <FLASH_ProgramWord>:
* Return         : FLASH Status: The returned value can be: FLASH_BUSY, 
*                  FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or 
*                  FLASH_TIMEOUT. 
*******************************************************************************/
FLASH_Status FLASH_ProgramWord(u32 Address, u32 Data)
{
 8001218:	b570      	push	{r4, r5, r6, lr}
 800121a:	4606      	mov	r6, r0

  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
 800121c:	200f      	movs	r0, #15
* Return         : FLASH Status: The returned value can be: FLASH_BUSY, 
*                  FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or 
*                  FLASH_TIMEOUT. 
*******************************************************************************/
FLASH_Status FLASH_ProgramWord(u32 Address, u32 Data)
{
 800121e:	460d      	mov	r5, r1

  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
 8001220:	f7ff ffbe 	bl	80011a0 <FLASH_WaitForLastOperation>
  
  if(status == FLASH_COMPLETE)
 8001224:	2804      	cmp	r0, #4
 8001226:	d117      	bne.n	8001258 <FLASH_ProgramWord+0x40>
  {
    /* if the previous operation is completed, proceed to program the new first 
    half word */
    FLASH->CR |= CR_PG_Set;
 8001228:	4c0c      	ldr	r4, [pc, #48]	; (800125c <FLASH_ProgramWord+0x44>)
  
    *(vu16*)Address = (u16)Data;

    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
 800122a:	200f      	movs	r0, #15
  
  if(status == FLASH_COMPLETE)
  {
    /* if the previous operation is completed, proceed to program the new first 
    half word */
    FLASH->CR |= CR_PG_Set;
 800122c:	6923      	ldr	r3, [r4, #16]
 800122e:	f043 0301 	orr.w	r3, r3, #1
 8001232:	6123      	str	r3, [r4, #16]
  
    *(vu16*)Address = (u16)Data;
 8001234:	b2ab      	uxth	r3, r5
 8001236:	8033      	strh	r3, [r6, #0]

    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
 8001238:	f7ff ffb2 	bl	80011a0 <FLASH_WaitForLastOperation>
 
    if(status == FLASH_COMPLETE)
 800123c:	2804      	cmp	r0, #4
 800123e:	d104      	bne.n	800124a <FLASH_ProgramWord+0x32>
    {
      /* if the previous operation is completed, proceed to program the new second 
      half word */
      *(vu16*)(Address + 2) = Data >> 16;
 8001240:	0c2d      	lsrs	r5, r5, #16
 8001242:	8075      	strh	r5, [r6, #2]
    
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
 8001244:	200f      	movs	r0, #15
 8001246:	f7ff ffab 	bl	80011a0 <FLASH_WaitForLastOperation>
        FLASH->CR &= CR_PG_Reset;
      }
    }
    else
    {
      if (status != FLASH_BUSY)
 800124a:	2801      	cmp	r0, #1
      {
        /* Disable the PG Bit */
        FLASH->CR &= CR_PG_Reset;
 800124c:	bf1f      	itttt	ne
 800124e:	f641 73fe 	movwne	r3, #8190	; 0x1ffe
 8001252:	6922      	ldrne	r2, [r4, #16]
 8001254:	4013      	andne	r3, r2
 8001256:	6123      	strne	r3, [r4, #16]
      }
     }
  }
  /* Return the Program Status */
  return status;
}
 8001258:	bd70      	pop	{r4, r5, r6, pc}
 800125a:	bf00      	nop
 800125c:	40022000 	andmi	r2, r2, r0

08001260 <IWDG_WriteAccessCmd>:
void IWDG_WriteAccessCmd(u16 IWDG_WriteAccess)
{
  /* Check the parameters */
  assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));

  IWDG->KR = IWDG_WriteAccess;
 8001260:	4b01      	ldr	r3, [pc, #4]	; (8001268 <IWDG_WriteAccessCmd+0x8>)
 8001262:	6018      	str	r0, [r3, #0]
 8001264:	4770      	bx	lr
 8001266:	bf00      	nop
 8001268:	40003000 	andmi	r3, r0, r0

0800126c <IWDG_SetPrescaler>:
void IWDG_SetPrescaler(u8 IWDG_Prescaler)
{
  /* Check the parameters */
  assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));

  IWDG->PR = IWDG_Prescaler;
 800126c:	4b01      	ldr	r3, [pc, #4]	; (8001274 <IWDG_SetPrescaler+0x8>)
 800126e:	6058      	str	r0, [r3, #4]
 8001270:	4770      	bx	lr
 8001272:	bf00      	nop
 8001274:	40003000 	andmi	r3, r0, r0

08001278 <IWDG_SetReload>:
void IWDG_SetReload(u16 Reload)
{
  /* Check the parameters */
  assert_param(IS_IWDG_RELOAD(Reload));

  IWDG->RLR = Reload;
 8001278:	4b01      	ldr	r3, [pc, #4]	; (8001280 <IWDG_SetReload+0x8>)
 800127a:	6098      	str	r0, [r3, #8]
 800127c:	4770      	bx	lr
 800127e:	bf00      	nop
 8001280:	40003000 	andmi	r3, r0, r0

08001284 <GPIO_Init>:
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x0F);
 8001284:	78ca      	ldrb	r2, [r1, #3]
*                    peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
 8001286:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x0F);

  if ((((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x10)) != 0x00)
 8001288:	06d4      	lsls	r4, r2, #27
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
    /* Output mode */
    currentmode |= (u32)GPIO_InitStruct->GPIO_Speed;
 800128a:	bf48      	it	mi
 800128c:	788c      	ldrbmi	r4, [r1, #2]
  }

/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
 800128e:	880d      	ldrh	r5, [r1, #0]
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x0F);
 8001290:	f002 030f 	and.w	r3, r2, #15
  if ((((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x10)) != 0x00)
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
    /* Output mode */
    currentmode |= (u32)GPIO_InitStruct->GPIO_Speed;
 8001294:	bf48      	it	mi
 8001296:	4323      	orrmi	r3, r4
  }

/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
 8001298:	f015 0fff 	tst.w	r5, #255	; 0xff
 800129c:	d01d      	beq.n	80012da <GPIO_Init+0x56>
  {
    tmpreg = GPIOx->CRL;
 800129e:	6801      	ldr	r1, [r0, #0]

    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 80012a0:	2400      	movs	r4, #0
    {
      pos = ((u32)0x01) << pinpos;
 80012a2:	2601      	movs	r6, #1
 80012a4:	40a6      	lsls	r6, r4
      /* Get the port pins position */
      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 80012a6:	ea06 0705 	and.w	r7, r6, r5

      if (currentpin == pos)
 80012aa:	42b7      	cmp	r7, r6
 80012ac:	d111      	bne.n	80012d2 <GPIO_Init+0x4e>
      {
        pos = pinpos << 2;
 80012ae:	ea4f 0e84 	mov.w	lr, r4, lsl #2
        /* Clear the corresponding low control register bits */
        pinmask = ((u32)0x0F) << pos;
 80012b2:	260f      	movs	r6, #15
 80012b4:	fa06 f60e 	lsl.w	r6, r6, lr
        tmpreg &= ~pinmask;
 80012b8:	ea21 0106 	bic.w	r1, r1, r6

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 80012bc:	2a28      	cmp	r2, #40	; 0x28
        /* Clear the corresponding low control register bits */
        pinmask = ((u32)0x0F) << pos;
        tmpreg &= ~pinmask;

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 80012be:	fa03 f60e 	lsl.w	r6, r3, lr
 80012c2:	ea41 0106 	orr.w	r1, r1, r6

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 80012c6:	d101      	bne.n	80012cc <GPIO_Init+0x48>
        {
          GPIOx->BRR = (((u32)0x01) << pinpos);
 80012c8:	6147      	str	r7, [r0, #20]
 80012ca:	e002      	b.n	80012d2 <GPIO_Init+0x4e>
        }
        else
        {
          /* Set the corresponding ODR bit */
          if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 80012cc:	2a48      	cmp	r2, #72	; 0x48
          {
            GPIOx->BSRR = (((u32)0x01) << pinpos);
 80012ce:	bf08      	it	eq
 80012d0:	6107      	streq	r7, [r0, #16]
  /* Configure the eight low port pins */
  if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
  {
    tmpreg = GPIOx->CRL;

    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 80012d2:	3401      	adds	r4, #1
 80012d4:	2c08      	cmp	r4, #8
 80012d6:	d1e4      	bne.n	80012a2 <GPIO_Init+0x1e>
            GPIOx->BSRR = (((u32)0x01) << pinpos);
          }
        }
      }
    }
    GPIOx->CRL = tmpreg;
 80012d8:	6001      	str	r1, [r0, #0]
  }

/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
 80012da:	2dff      	cmp	r5, #255	; 0xff
 80012dc:	d91f      	bls.n	800131e <GPIO_Init+0x9a>
  {
    tmpreg = GPIOx->CRH;
 80012de:	6841      	ldr	r1, [r0, #4]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 80012e0:	2400      	movs	r4, #0
 80012e2:	f104 0708 	add.w	r7, r4, #8
    {
      pos = (((u32)0x01) << (pinpos + 0x08));
 80012e6:	2601      	movs	r6, #1
 80012e8:	40be      	lsls	r6, r7
      /* Get the port pins position */
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 80012ea:	ea06 0705 	and.w	r7, r6, r5
      if (currentpin == pos)
 80012ee:	42b7      	cmp	r7, r6
 80012f0:	d111      	bne.n	8001316 <GPIO_Init+0x92>
      {
        pos = pinpos << 2;
 80012f2:	ea4f 0e84 	mov.w	lr, r4, lsl #2
        /* Clear the corresponding high control register bits */
        pinmask = ((u32)0x0F) << pos;
 80012f6:	260f      	movs	r6, #15
 80012f8:	fa06 f60e 	lsl.w	r6, r6, lr
        tmpreg &= ~pinmask;
 80012fc:	ea21 0106 	bic.w	r1, r1, r6

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8001300:	2a28      	cmp	r2, #40	; 0x28
        /* Clear the corresponding high control register bits */
        pinmask = ((u32)0x0F) << pos;
        tmpreg &= ~pinmask;

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 8001302:	fa03 f60e 	lsl.w	r6, r3, lr
 8001306:	ea41 0106 	orr.w	r1, r1, r6

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 800130a:	d101      	bne.n	8001310 <GPIO_Init+0x8c>
        {
          GPIOx->BRR = (((u32)0x01) << (pinpos + 0x08));
 800130c:	6147      	str	r7, [r0, #20]
 800130e:	e002      	b.n	8001316 <GPIO_Init+0x92>
        }
        /* Set the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 8001310:	2a48      	cmp	r2, #72	; 0x48
        {
          GPIOx->BSRR = (((u32)0x01) << (pinpos + 0x08));
 8001312:	bf08      	it	eq
 8001314:	6107      	streq	r7, [r0, #16]
/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
  {
    tmpreg = GPIOx->CRH;
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8001316:	3401      	adds	r4, #1
 8001318:	2c08      	cmp	r4, #8
 800131a:	d1e2      	bne.n	80012e2 <GPIO_Init+0x5e>
        {
          GPIOx->BSRR = (((u32)0x01) << (pinpos + 0x08));
        }
      }
    }
    GPIOx->CRH = tmpreg;
 800131c:	6041      	str	r1, [r0, #4]
 800131e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08001320 <GPIO_ReadInputDataBit>:
  
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
  
  if ((GPIOx->IDR & GPIO_Pin) != (u32)Bit_RESET)
 8001320:	6883      	ldr	r3, [r0, #8]
 8001322:	4219      	tst	r1, r3
  else
  {
    bitstatus = (u8)Bit_RESET;
  }
  return bitstatus;
}
 8001324:	bf14      	ite	ne
 8001326:	2001      	movne	r0, #1
 8001328:	2000      	moveq	r0, #0
 800132a:	4770      	bx	lr

0800132c <GPIO_SetBits>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  GPIOx->BSRR = GPIO_Pin;
 800132c:	6101      	str	r1, [r0, #16]
 800132e:	4770      	bx	lr

08001330 <GPIO_ResetBits>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  GPIOx->BRR = GPIO_Pin;
 8001330:	6141      	str	r1, [r0, #20]
 8001332:	4770      	bx	lr

08001334 <GPIO_PinRemapConfig>:
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_PinRemapConfig(u32 GPIO_Remap, FunctionalState NewState)
{
 8001334:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_REMAP(GPIO_Remap));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  tmpreg = AFIO->MAPR;
 8001336:	4c13      	ldr	r4, [pc, #76]	; (8001384 <GPIO_PinRemapConfig+0x50>)

  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
  tmp = GPIO_Remap & LSB_MASK;

  if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK))
 8001338:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 800133c:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000

  /* Check the parameters */
  assert_param(IS_GPIO_REMAP(GPIO_Remap));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  tmpreg = AFIO->MAPR;
 8001340:	6863      	ldr	r3, [r4, #4]

  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
  tmp = GPIO_Remap & LSB_MASK;
 8001342:	b282      	uxth	r2, r0

  if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK))
 8001344:	d106      	bne.n	8001354 <GPIO_PinRemapConfig+0x20>
  {
    tmpreg &= DBGAFR_SWJCFG_MASK;
    AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
 8001346:	6865      	ldr	r5, [r4, #4]
  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
  tmp = GPIO_Remap & LSB_MASK;

  if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK))
  {
    tmpreg &= DBGAFR_SWJCFG_MASK;
 8001348:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
    AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
 800134c:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8001350:	6065      	str	r5, [r4, #4]
 8001352:	e00e      	b.n	8001372 <GPIO_PinRemapConfig+0x3e>
  }
  else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
 8001354:	02c4      	lsls	r4, r0, #11
    tmpreg &= ~tmp1;
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
  }
  else
  {
    tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
 8001356:	bf55      	itete	pl
 8001358:	0d44      	lsrpl	r4, r0, #21
    tmpreg &= DBGAFR_SWJCFG_MASK;
    AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
  }
  else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
  {
    tmp1 = ((u32)0x03) << tmpmask;
 800135a:	2403      	movmi	r4, #3
    tmpreg &= ~tmp1;
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
  }
  else
  {
    tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
 800135c:	0124      	lslpl	r4, r4, #4
  assert_param(IS_GPIO_REMAP(GPIO_Remap));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  tmpreg = AFIO->MAPR;

  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
 800135e:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
    tmpreg &= DBGAFR_SWJCFG_MASK;
    AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
  }
  else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
  {
    tmp1 = ((u32)0x03) << tmpmask;
 8001362:	bf4c      	ite	mi
 8001364:	40ac      	lslmi	r4, r5
    tmpreg &= ~tmp1;
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
  }
  else
  {
    tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
 8001366:	fa02 f404 	lslpl.w	r4, r2, r4
 800136a:	ea23 0304 	bic.w	r3, r3, r4
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
 800136e:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
  }

  if (NewState != DISABLE)
 8001372:	b119      	cbz	r1, 800137c <GPIO_PinRemapConfig+0x48>
  {
    tmpreg |= (tmp << ((GPIO_Remap >> 0x15)*0x10));
 8001374:	0d40      	lsrs	r0, r0, #21
 8001376:	0100      	lsls	r0, r0, #4
 8001378:	4082      	lsls	r2, r0
 800137a:	4313      	orrs	r3, r2
  }

  AFIO->MAPR = tmpreg;
 800137c:	4a01      	ldr	r2, [pc, #4]	; (8001384 <GPIO_PinRemapConfig+0x50>)
 800137e:	6053      	str	r3, [r2, #4]
 8001380:	bd30      	pop	{r4, r5, pc}
 8001382:	bf00      	nop
 8001384:	40010000 	andmi	r0, r1, r0

08001388 <NVIC_PriorityGroupConfig>:
{
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
  SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
 8001388:	f040 60bf 	orr.w	r0, r0, #100139008	; 0x5f80000
 800138c:	4b02      	ldr	r3, [pc, #8]	; (8001398 <NVIC_PriorityGroupConfig+0x10>)
 800138e:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8001392:	60d8      	str	r0, [r3, #12]
 8001394:	4770      	bx	lr
 8001396:	bf00      	nop
 8001398:	e000ed00 	and	lr, r0, r0, lsl #26

0800139c <NVIC_Init>:
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_InitStruct->NVIC_IRQChannel));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
 800139c:	78c2      	ldrb	r2, [r0, #3]
*                    specified NVIC peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
{
 800139e:	b530      	push	{r4, r5, lr}
 80013a0:	7803      	ldrb	r3, [r0, #0]
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_InitStruct->NVIC_IRQChannel));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
 80013a2:	b372      	cbz	r2, 8001402 <NVIC_Init+0x66>
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
 80013a4:	4a1c      	ldr	r2, [pc, #112]	; (8001418 <NVIC_Init+0x7c>)
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;

    tmppriority = tmppriority << 0x04;
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 80013a6:	f003 0503 	and.w	r5, r3, #3
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
 80013aa:	68d4      	ldr	r4, [r2, #12]
    tmppre = (0x4 - tmppriority);
    tmpsub = tmpsub >> tmppriority;
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 80013ac:	7842      	ldrb	r2, [r0, #1]
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
 80013ae:	43e4      	mvns	r4, r4
 80013b0:	f3c4 2402 	ubfx	r4, r4, #8, #3
    tmppre = (0x4 - tmppriority);
 80013b4:	f1c4 0104 	rsb	r1, r4, #4
    tmpsub = tmpsub >> tmppriority;
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 80013b8:	fa02 f101 	lsl.w	r1, r2, r1
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
    tmppre = (0x4 - tmppriority);
    tmpsub = tmpsub >> tmppriority;
 80013bc:	220f      	movs	r2, #15
 80013be:	40e2      	lsrs	r2, r4
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
 80013c0:	7884      	ldrb	r4, [r0, #2]
 80013c2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80013c6:	4022      	ands	r2, r4
 80013c8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80013cc:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 80013d0:	430a      	orrs	r2, r1

    tmppriority = tmppriority << 0x04;
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
    
    tmpreg = NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)];
 80013d2:	f8d3 4300 	ldr.w	r4, [r3, #768]	; 0x300
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;

    tmppriority = tmppriority << 0x04;
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 80013d6:	00ed      	lsls	r5, r5, #3
    tmpsub = tmpsub >> tmppriority;
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;

    tmppriority = tmppriority << 0x04;
 80013d8:	0112      	lsls	r2, r2, #4
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
    
    tmpreg = NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)];
    tmpmask = (u32)0xFF << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 80013da:	21ff      	movs	r1, #255	; 0xff
 80013dc:	40a9      	lsls	r1, r5
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;

    tmppriority = tmppriority << 0x04;
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 80013de:	40aa      	lsls	r2, r5
    
    tmpreg = NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)];
    tmpmask = (u32)0xFF << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
    tmpreg &= ~tmpmask;
 80013e0:	ea24 0401 	bic.w	r4, r4, r1
    tmppriority &= tmpmask;  
 80013e4:	400a      	ands	r2, r1
    tmpreg |= tmppriority;
 80013e6:	4322      	orrs	r2, r4

    NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)] = tmpreg;
 80013e8:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
 80013ec:	7803      	ldrb	r3, [r0, #0]
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
 80013ee:	2201      	movs	r2, #1
    tmpreg |= tmppriority;

    NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)] = tmpreg;
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
 80013f0:	0959      	lsrs	r1, r3, #5
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
 80013f2:	f003 031f 	and.w	r3, r3, #31
 80013f6:	fa02 f303 	lsl.w	r3, r2, r3
    tmpreg |= tmppriority;

    NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)] = tmpreg;
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
 80013fa:	4a08      	ldr	r2, [pc, #32]	; (800141c <NVIC_Init+0x80>)
 80013fc:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8001400:	bd30      	pop	{r4, r5, pc}
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  }
  else
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
 8001402:	095a      	lsrs	r2, r3, #5
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
 8001404:	2101      	movs	r1, #1
 8001406:	f003 031f 	and.w	r3, r3, #31
 800140a:	4099      	lsls	r1, r3
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  }
  else
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
 800140c:	f102 0320 	add.w	r3, r2, #32
 8001410:	4a02      	ldr	r2, [pc, #8]	; (800141c <NVIC_Init+0x80>)
 8001412:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8001416:	bd30      	pop	{r4, r5, pc}
 8001418:	e000ed00 	and	lr, r0, r0, lsl #26
 800141c:	e000e100 	and	lr, r0, r0, lsl #2

08001420 <NVIC_SetVectorTable>:
{ 
  /* Check the parameters */
  assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
  assert_param(IS_NVIC_OFFSET(Offset));  
   
  SCB->VTOR = NVIC_VectTab | (Offset & (u32)0x1FFFFF80);
 8001420:	f021 4160 	bic.w	r1, r1, #3758096384	; 0xe0000000
 8001424:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8001428:	4b01      	ldr	r3, [pc, #4]	; (8001430 <NVIC_SetVectorTable+0x10>)
 800142a:	4308      	orrs	r0, r1
 800142c:	6098      	str	r0, [r3, #8]
 800142e:	4770      	bx	lr
 8001430:	e000ed00 	and	lr, r0, r0, lsl #26

08001434 <NVIC_GenerateSystemReset>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_GenerateSystemReset(void)
{
 8001434:	b508      	push	{r3, lr}
  SCB->AIRCR = AIRCR_VECTKEY_MASK | (u32)0x04;
 8001436:	4a03      	ldr	r2, [pc, #12]	; (8001444 <NVIC_GenerateSystemReset+0x10>)
 8001438:	4b03      	ldr	r3, [pc, #12]	; (8001448 <NVIC_GenerateSystemReset+0x14>)
 800143a:	60da      	str	r2, [r3, #12]
  __DSB();                                                                             /* Ensure completion of memory access */
 800143c:	f7fe fe83 	bl	8000146 <__DSB>
    while(1);
 8001440:	e7fe      	b.n	8001440 <NVIC_GenerateSystemReset+0xc>
 8001442:	bf00      	nop
 8001444:	05fa0004 	ldrbeq	r0, [sl, #4]!
 8001448:	e000ed00 	and	lr, r0, r0, lsl #26

0800144c <RCC_DeInit>:
* Return         : None
*******************************************************************************/
void RCC_DeInit(void)
{
  /* Set HSION bit */
  RCC->CR |= (u32)0x00000001;
 800144c:	4b0c      	ldr	r3, [pc, #48]	; (8001480 <RCC_DeInit+0x34>)
 800144e:	681a      	ldr	r2, [r3, #0]
 8001450:	f042 0201 	orr.w	r2, r2, #1
 8001454:	601a      	str	r2, [r3, #0]

  /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], ADCPRE[1:0] and MCO[2:0] bits */
  RCC->CFGR &= (u32)0xF8FF0000;
 8001456:	6859      	ldr	r1, [r3, #4]
 8001458:	4a0a      	ldr	r2, [pc, #40]	; (8001484 <RCC_DeInit+0x38>)
 800145a:	400a      	ands	r2, r1
 800145c:	605a      	str	r2, [r3, #4]
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (u32)0xFEF6FFFF;
 800145e:	681a      	ldr	r2, [r3, #0]
 8001460:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8001464:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001468:	601a      	str	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (u32)0xFFFBFFFF;
 800146a:	681a      	ldr	r2, [r3, #0]
 800146c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001470:	601a      	str	r2, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL[3:0] and USBPRE bits */
  RCC->CFGR &= (u32)0xFF80FFFF;
 8001472:	685a      	ldr	r2, [r3, #4]
 8001474:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 8001478:	605a      	str	r2, [r3, #4]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 800147a:	2200      	movs	r2, #0
 800147c:	609a      	str	r2, [r3, #8]
 800147e:	4770      	bx	lr
 8001480:	40021000 	andmi	r1, r2, r0
 8001484:	f8ff0000 			; <UNDEFINED> instruction: 0xf8ff0000

08001488 <RCC_HSEConfig>:
  /* Check the parameters */
  assert_param(IS_RCC_HSE(RCC_HSE));

  /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
  /* Reset HSEON bit */
  RCC->CR &= CR_HSEON_Reset;
 8001488:	4b0c      	ldr	r3, [pc, #48]	; (80014bc <RCC_HSEConfig+0x34>)

  /* Reset HSEBYP bit */
  RCC->CR &= CR_HSEBYP_Reset;

  /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
  switch(RCC_HSE)
 800148a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
  /* Check the parameters */
  assert_param(IS_RCC_HSE(RCC_HSE));

  /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
  /* Reset HSEON bit */
  RCC->CR &= CR_HSEON_Reset;
 800148e:	681a      	ldr	r2, [r3, #0]
 8001490:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001494:	601a      	str	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= CR_HSEBYP_Reset;
 8001496:	681a      	ldr	r2, [r3, #0]
 8001498:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800149c:	601a      	str	r2, [r3, #0]

  /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
  switch(RCC_HSE)
 800149e:	d003      	beq.n	80014a8 <RCC_HSEConfig+0x20>
 80014a0:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
 80014a4:	d004      	beq.n	80014b0 <RCC_HSEConfig+0x28>
 80014a6:	4770      	bx	lr
  {
    case RCC_HSE_ON:
      /* Set HSEON bit */
      RCC->CR |= CR_HSEON_Set;
 80014a8:	681a      	ldr	r2, [r3, #0]
 80014aa:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80014ae:	e002      	b.n	80014b6 <RCC_HSEConfig+0x2e>
      break;
      
    case RCC_HSE_Bypass:
      /* Set HSEBYP and HSEON bits */
      RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 80014b0:	681a      	ldr	r2, [r3, #0]
 80014b2:	f442 22a0 	orr.w	r2, r2, #327680	; 0x50000
 80014b6:	601a      	str	r2, [r3, #0]
 80014b8:	4770      	bx	lr
 80014ba:	bf00      	nop
 80014bc:	40021000 	andmi	r1, r2, r0

080014c0 <RCC_PLLConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
  assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));

  tmpreg = RCC->CFGR;
 80014c0:	4a03      	ldr	r2, [pc, #12]	; (80014d0 <RCC_PLLConfig+0x10>)
 80014c2:	6853      	ldr	r3, [r2, #4]

  /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  tmpreg &= CFGR_PLL_Mask;
 80014c4:	f423 137c 	bic.w	r3, r3, #4128768	; 0x3f0000
 80014c8:	4319      	orrs	r1, r3

  /* Set the PLL configuration bits */
  tmpreg |= RCC_PLLSource | RCC_PLLMul;
 80014ca:	4308      	orrs	r0, r1

  /* Store the new value */
  RCC->CFGR = tmpreg;
 80014cc:	6050      	str	r0, [r2, #4]
 80014ce:	4770      	bx	lr
 80014d0:	40021000 	andmi	r1, r2, r0

080014d4 <RCC_PLLCmd>:
void RCC_PLLCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  *(vu32 *) CR_PLLON_BB = (u32)NewState;
 80014d4:	4b01      	ldr	r3, [pc, #4]	; (80014dc <RCC_PLLCmd+0x8>)
 80014d6:	6018      	str	r0, [r3, #0]
 80014d8:	4770      	bx	lr
 80014da:	bf00      	nop
 80014dc:	42420060 	submi	r0, r2, #96	; 0x60

080014e0 <RCC_SYSCLKConfig>:
  u32 tmpreg = 0;

  /* Check the parameters */
  assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));

  tmpreg = RCC->CFGR;
 80014e0:	4a03      	ldr	r2, [pc, #12]	; (80014f0 <RCC_SYSCLKConfig+0x10>)
 80014e2:	6853      	ldr	r3, [r2, #4]

  /* Clear SW[1:0] bits */
  tmpreg &= CFGR_SW_Mask;
 80014e4:	f023 0303 	bic.w	r3, r3, #3

  /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
  tmpreg |= RCC_SYSCLKSource;
 80014e8:	4318      	orrs	r0, r3

  /* Store the new value */
  RCC->CFGR = tmpreg;
 80014ea:	6050      	str	r0, [r2, #4]
 80014ec:	4770      	bx	lr
 80014ee:	bf00      	nop
 80014f0:	40021000 	andmi	r1, r2, r0

080014f4 <RCC_GetSYSCLKSource>:
*                       - 0x04: HSE used as system clock
*                       - 0x08: PLL used as system clock
*******************************************************************************/
u8 RCC_GetSYSCLKSource(void)
{
  return ((u8)(RCC->CFGR & CFGR_SWS_Mask));
 80014f4:	4b02      	ldr	r3, [pc, #8]	; (8001500 <RCC_GetSYSCLKSource+0xc>)
 80014f6:	6858      	ldr	r0, [r3, #4]
}
 80014f8:	f000 000c 	and.w	r0, r0, #12
 80014fc:	4770      	bx	lr
 80014fe:	bf00      	nop
 8001500:	40021000 	andmi	r1, r2, r0

08001504 <RCC_HCLKConfig>:
  u32 tmpreg = 0;

  /* Check the parameters */
  assert_param(IS_RCC_HCLK(RCC_SYSCLK));

  tmpreg = RCC->CFGR;
 8001504:	4a03      	ldr	r2, [pc, #12]	; (8001514 <RCC_HCLKConfig+0x10>)
 8001506:	6853      	ldr	r3, [r2, #4]

  /* Clear HPRE[3:0] bits */
  tmpreg &= CFGR_HPRE_Reset_Mask;
 8001508:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0

  /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
  tmpreg |= RCC_SYSCLK;
 800150c:	4318      	orrs	r0, r3

  /* Store the new value */
  RCC->CFGR = tmpreg;
 800150e:	6050      	str	r0, [r2, #4]
 8001510:	4770      	bx	lr
 8001512:	bf00      	nop
 8001514:	40021000 	andmi	r1, r2, r0

08001518 <RCC_PCLK1Config>:
  u32 tmpreg = 0;

  /* Check the parameters */
  assert_param(IS_RCC_PCLK(RCC_HCLK));

  tmpreg = RCC->CFGR;
 8001518:	4a03      	ldr	r2, [pc, #12]	; (8001528 <RCC_PCLK1Config+0x10>)
 800151a:	6853      	ldr	r3, [r2, #4]

  /* Clear PPRE1[2:0] bits */
  tmpreg &= CFGR_PPRE1_Reset_Mask;
 800151c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700

  /* Set PPRE1[2:0] bits according to RCC_HCLK value */
  tmpreg |= RCC_HCLK;
 8001520:	4318      	orrs	r0, r3

  /* Store the new value */
  RCC->CFGR = tmpreg;
 8001522:	6050      	str	r0, [r2, #4]
 8001524:	4770      	bx	lr
 8001526:	bf00      	nop
 8001528:	40021000 	andmi	r1, r2, r0

0800152c <RCC_PCLK2Config>:
  u32 tmpreg = 0;

  /* Check the parameters */
  assert_param(IS_RCC_PCLK(RCC_HCLK));

  tmpreg = RCC->CFGR;
 800152c:	4a03      	ldr	r2, [pc, #12]	; (800153c <RCC_PCLK2Config+0x10>)
 800152e:	6853      	ldr	r3, [r2, #4]

  /* Clear PPRE2[2:0] bits */
  tmpreg &= CFGR_PPRE2_Reset_Mask;
 8001530:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800

  /* Set PPRE2[2:0] bits according to RCC_HCLK value */
  tmpreg |= RCC_HCLK << 3;
 8001534:	ea43 00c0 	orr.w	r0, r3, r0, lsl #3

  /* Store the new value */
  RCC->CFGR = tmpreg;
 8001538:	6050      	str	r0, [r2, #4]
 800153a:	4770      	bx	lr
 800153c:	40021000 	andmi	r1, r2, r0

08001540 <RCC_USBCLKConfig>:
void RCC_USBCLKConfig(u32 RCC_USBCLKSource)
{
  /* Check the parameters */
  assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));

  *(vu32 *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 8001540:	4b01      	ldr	r3, [pc, #4]	; (8001548 <RCC_USBCLKConfig+0x8>)
 8001542:	6018      	str	r0, [r3, #0]
 8001544:	4770      	bx	lr
 8001546:	bf00      	nop
 8001548:	424200d8 	submi	r0, r2, #216	; 0xd8

0800154c <RCC_GetClocksFreq>:
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
  u32 tmp = 0, pllmull = 0, pllsource = 0, presc = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & CFGR_SWS_Mask;
 800154c:	4a1c      	ldr	r2, [pc, #112]	; (80015c0 <RCC_GetClocksFreq+0x74>)
*                    will hold the clocks frequencies.
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
 800154e:	b510      	push	{r4, lr}
  u32 tmp = 0, pllmull = 0, pllsource = 0, presc = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & CFGR_SWS_Mask;
 8001550:	6853      	ldr	r3, [r2, #4]
 8001552:	f003 030c 	and.w	r3, r3, #12

  switch (tmp)
 8001556:	2b04      	cmp	r3, #4
 8001558:	d001      	beq.n	800155e <RCC_GetClocksFreq+0x12>
 800155a:	2b08      	cmp	r3, #8
 800155c:	d001      	beq.n	8001562 <RCC_GetClocksFreq+0x16>
    case 0x00:  /* HSI used as system clock */
      RCC_Clocks->SYSCLK_Frequency = HSI_Value;
      break;

    case 0x04:  /* HSE used as system clock */
      RCC_Clocks->SYSCLK_Frequency = HSE_Value;
 800155e:	4b19      	ldr	r3, [pc, #100]	; (80015c4 <RCC_GetClocksFreq+0x78>)
 8001560:	e00e      	b.n	8001580 <RCC_GetClocksFreq+0x34>
      break;

    case 0x08:  /* PLL used as system clock */
      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 8001562:	6853      	ldr	r3, [r2, #4]
      pllmull = ( pllmull >> 18) + 2;

      pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 8001564:	6851      	ldr	r1, [r2, #4]
      break;

    case 0x08:  /* PLL used as system clock */
      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
      pllmull = ( pllmull >> 18) + 2;
 8001566:	f3c3 4383 	ubfx	r3, r3, #18, #4

      pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;

      if (pllsource == 0x00)
 800156a:	03cc      	lsls	r4, r1, #15
      break;

    case 0x08:  /* PLL used as system clock */
      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
      pllmull = ( pllmull >> 18) + 2;
 800156c:	f103 0302 	add.w	r3, r3, #2

      pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;

      if (pllsource == 0x00)
 8001570:	d502      	bpl.n	8001578 <RCC_GetClocksFreq+0x2c>
        RCC_Clocks->SYSCLK_Frequency = (HSI_Value >> 1) * pllmull;
      }
      else
      {/* HSE selected as PLL clock entry */

        if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (u32)RESET)
 8001572:	6851      	ldr	r1, [r2, #4]
 8001574:	0389      	lsls	r1, r1, #14
 8001576:	d501      	bpl.n	800157c <RCC_GetClocksFreq+0x30>
        {/* HSE oscillator clock divided by 2 */

          RCC_Clocks->SYSCLK_Frequency = (HSE_Value >> 1) * pllmull;
 8001578:	4913      	ldr	r1, [pc, #76]	; (80015c8 <RCC_GetClocksFreq+0x7c>)
 800157a:	e000      	b.n	800157e <RCC_GetClocksFreq+0x32>
        }
        else
        {
          RCC_Clocks->SYSCLK_Frequency = HSE_Value * pllmull;
 800157c:	4911      	ldr	r1, [pc, #68]	; (80015c4 <RCC_GetClocksFreq+0x78>)
 800157e:	434b      	muls	r3, r1
 8001580:	6003      	str	r3, [r0, #0]
      break;
  }

  /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
  /* Get HCLK prescaler */
  tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 8001582:	6853      	ldr	r3, [r2, #4]
  tmp = tmp >> 4;
  presc = APBAHBPrescTable[tmp];
 8001584:	4911      	ldr	r1, [pc, #68]	; (80015cc <RCC_GetClocksFreq+0x80>)
  }

  /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
  /* Get HCLK prescaler */
  tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
  tmp = tmp >> 4;
 8001586:	f3c3 1303 	ubfx	r3, r3, #4, #4
  presc = APBAHBPrescTable[tmp];

  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 800158a:	5ccc      	ldrb	r4, [r1, r3]
 800158c:	6803      	ldr	r3, [r0, #0]
 800158e:	40e3      	lsrs	r3, r4
 8001590:	6043      	str	r3, [r0, #4]

  /* Get PCLK1 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 8001592:	6854      	ldr	r4, [r2, #4]
  tmp = tmp >> 8;
 8001594:	f3c4 2402 	ubfx	r4, r4, #8, #3
  presc = APBAHBPrescTable[tmp];

  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 8001598:	5d0c      	ldrb	r4, [r1, r4]
 800159a:	fa23 f404 	lsr.w	r4, r3, r4
 800159e:	6084      	str	r4, [r0, #8]

  /* Get PCLK2 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 80015a0:	6854      	ldr	r4, [r2, #4]
  tmp = tmp >> 11;
 80015a2:	f3c4 24c2 	ubfx	r4, r4, #11, #3
  presc = APBAHBPrescTable[tmp];

  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 80015a6:	5d0c      	ldrb	r4, [r1, r4]
 80015a8:	40e3      	lsrs	r3, r4
 80015aa:	60c3      	str	r3, [r0, #12]

  /* Get ADCCLK prescaler */
  tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 80015ac:	6852      	ldr	r2, [r2, #4]
  tmp = tmp >> 14;
 80015ae:	f3c2 3281 	ubfx	r2, r2, #14, #2
  presc = ADCPrescTable[tmp];
 80015b2:	440a      	add	r2, r1
 80015b4:	7c12      	ldrb	r2, [r2, #16]

  /* ADCCLK clock frequency */
  RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 80015b6:	fbb3 f3f2 	udiv	r3, r3, r2
 80015ba:	6103      	str	r3, [r0, #16]
 80015bc:	bd10      	pop	{r4, pc}
 80015be:	bf00      	nop
 80015c0:	40021000 	andmi	r1, r2, r0
 80015c4:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 80015c8:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80015cc:	0800270d 	stmdaeq	r0, {r0, r2, r3, r8, r9, sl, sp}

080015d0 <RCC_APB2PeriphClockCmd>:
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_APB2PeriphClockCmd(u32 RCC_APB2Periph, FunctionalState NewState)
{
 80015d0:	4b04      	ldr	r3, [pc, #16]	; (80015e4 <RCC_APB2PeriphClockCmd+0x14>)
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
  {
    RCC->APB2ENR |= RCC_APB2Periph;
 80015d2:	699a      	ldr	r2, [r3, #24]
{
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
 80015d4:	b109      	cbz	r1, 80015da <RCC_APB2PeriphClockCmd+0xa>
  {
    RCC->APB2ENR |= RCC_APB2Periph;
 80015d6:	4310      	orrs	r0, r2
 80015d8:	e001      	b.n	80015de <RCC_APB2PeriphClockCmd+0xe>
  }
  else
  {
    RCC->APB2ENR &= ~RCC_APB2Periph;
 80015da:	ea22 0000 	bic.w	r0, r2, r0
 80015de:	6198      	str	r0, [r3, #24]
 80015e0:	4770      	bx	lr
 80015e2:	bf00      	nop
 80015e4:	40021000 	andmi	r1, r2, r0

080015e8 <RCC_APB1PeriphClockCmd>:
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_APB1PeriphClockCmd(u32 RCC_APB1Periph, FunctionalState NewState)
{
 80015e8:	4b04      	ldr	r3, [pc, #16]	; (80015fc <RCC_APB1PeriphClockCmd+0x14>)
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
  {
    RCC->APB1ENR |= RCC_APB1Periph;
 80015ea:	69da      	ldr	r2, [r3, #28]
{
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
 80015ec:	b109      	cbz	r1, 80015f2 <RCC_APB1PeriphClockCmd+0xa>
  {
    RCC->APB1ENR |= RCC_APB1Periph;
 80015ee:	4310      	orrs	r0, r2
 80015f0:	e001      	b.n	80015f6 <RCC_APB1PeriphClockCmd+0xe>
  }
  else
  {
    RCC->APB1ENR &= ~RCC_APB1Periph;
 80015f2:	ea22 0000 	bic.w	r0, r2, r0
 80015f6:	61d8      	str	r0, [r3, #28]
 80015f8:	4770      	bx	lr
 80015fa:	bf00      	nop
 80015fc:	40021000 	andmi	r1, r2, r0

08001600 <RCC_APB2PeriphResetCmd>:
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_APB2PeriphResetCmd(u32 RCC_APB2Periph, FunctionalState NewState)
{
 8001600:	4b04      	ldr	r3, [pc, #16]	; (8001614 <RCC_APB2PeriphResetCmd+0x14>)
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
  {
    RCC->APB2RSTR |= RCC_APB2Periph;
 8001602:	68da      	ldr	r2, [r3, #12]
{
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
 8001604:	b109      	cbz	r1, 800160a <RCC_APB2PeriphResetCmd+0xa>
  {
    RCC->APB2RSTR |= RCC_APB2Periph;
 8001606:	4310      	orrs	r0, r2
 8001608:	e001      	b.n	800160e <RCC_APB2PeriphResetCmd+0xe>
  }
  else
  {
    RCC->APB2RSTR &= ~RCC_APB2Periph;
 800160a:	ea22 0000 	bic.w	r0, r2, r0
 800160e:	60d8      	str	r0, [r3, #12]
 8001610:	4770      	bx	lr
 8001612:	bf00      	nop
 8001614:	40021000 	andmi	r1, r2, r0

08001618 <RCC_APB1PeriphResetCmd>:
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_APB1PeriphResetCmd(u32 RCC_APB1Periph, FunctionalState NewState)
{
 8001618:	4b04      	ldr	r3, [pc, #16]	; (800162c <RCC_APB1PeriphResetCmd+0x14>)
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
  {
    RCC->APB1RSTR |= RCC_APB1Periph;
 800161a:	691a      	ldr	r2, [r3, #16]
{
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
 800161c:	b109      	cbz	r1, 8001622 <RCC_APB1PeriphResetCmd+0xa>
  {
    RCC->APB1RSTR |= RCC_APB1Periph;
 800161e:	4310      	orrs	r0, r2
 8001620:	e001      	b.n	8001626 <RCC_APB1PeriphResetCmd+0xe>
  }
  else
  {
    RCC->APB1RSTR &= ~RCC_APB1Periph;
 8001622:	ea22 0000 	bic.w	r0, r2, r0
 8001626:	6118      	str	r0, [r3, #16]
 8001628:	4770      	bx	lr
 800162a:	bf00      	nop
 800162c:	40021000 	andmi	r1, r2, r0

08001630 <RCC_GetFlagStatus>:

  /* Check the parameters */
  assert_param(IS_RCC_FLAG(RCC_FLAG));

  /* Get the RCC register index */
  tmp = RCC_FLAG >> 5;
 8001630:	0942      	lsrs	r2, r0, #5

  if (tmp == 1)               /* The flag to check is in CR register */
 8001632:	2a01      	cmp	r2, #1
 8001634:	4b07      	ldr	r3, [pc, #28]	; (8001654 <RCC_GetFlagStatus+0x24>)
 8001636:	d101      	bne.n	800163c <RCC_GetFlagStatus+0xc>
  {
    statusreg = RCC->CR;
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	e003      	b.n	8001644 <RCC_GetFlagStatus+0x14>
  }
  else if (tmp == 2)          /* The flag to check is in BDCR register */
 800163c:	2a02      	cmp	r2, #2
  {
    statusreg = RCC->BDCR;
 800163e:	bf0c      	ite	eq
 8001640:	6a1b      	ldreq	r3, [r3, #32]
  }
  else                       /* The flag to check is in CSR register */
  {
    statusreg = RCC->CSR;
 8001642:	6a5b      	ldrne	r3, [r3, #36]	; 0x24
  }

  /* Get the flag position */
  tmp = RCC_FLAG & FLAG_Mask;

  if ((statusreg & ((u32)1 << tmp)) != (u32)RESET)
 8001644:	f000 001f 	and.w	r0, r0, #31
 8001648:	fa23 f000 	lsr.w	r0, r3, r0
    bitstatus = RESET;
  }

  /* Return the flag status */
  return bitstatus;
}
 800164c:	f000 0001 	and.w	r0, r0, #1
 8001650:	4770      	bx	lr
 8001652:	bf00      	nop
 8001654:	40021000 	andmi	r1, r2, r0

08001658 <RCC_WaitForHSEStartUp>:
* Return         : An ErrorStatus enumuration value:
*                         - SUCCESS: HSE oscillator is stable and ready to use
*                         - ERROR: HSE oscillator not yet ready
*******************************************************************************/
ErrorStatus RCC_WaitForHSEStartUp(void)
{
 8001658:	b507      	push	{r0, r1, r2, lr}
  vu32 StartUpCounter = 0;
 800165a:	2300      	movs	r3, #0
 800165c:	9301      	str	r3, [sp, #4]
  FlagStatus HSEStatus = RESET;
  
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 800165e:	2031      	movs	r0, #49	; 0x31
 8001660:	f7ff ffe6 	bl	8001630 <RCC_GetFlagStatus>
    StartUpCounter++;  
 8001664:	9b01      	ldr	r3, [sp, #4]
 8001666:	3301      	adds	r3, #1
 8001668:	9301      	str	r3, [sp, #4]
  } while((HSEStatus == RESET) && (StartUpCounter != HSEStartUp_TimeOut));
 800166a:	b918      	cbnz	r0, 8001674 <RCC_WaitForHSEStartUp+0x1c>
 800166c:	9b01      	ldr	r3, [sp, #4]
 800166e:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8001672:	d1f4      	bne.n	800165e <RCC_WaitForHSEStartUp+0x6>


  if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 8001674:	2031      	movs	r0, #49	; 0x31
 8001676:	f7ff ffdb 	bl	8001630 <RCC_GetFlagStatus>
  {
    status = ERROR;
  }  

  return (status);
}
 800167a:	3000      	adds	r0, #0
 800167c:	bf18      	it	ne
 800167e:	2001      	movne	r0, #1
 8001680:	b003      	add	sp, #12
 8001682:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08001688 <RCC_ClearFlag>:
* Return         : None
*******************************************************************************/
void RCC_ClearFlag(void)
{
  /* Set RMVF bit to clear the reset flags */
  RCC->CSR |= CSR_RMVF_Set;
 8001688:	4a02      	ldr	r2, [pc, #8]	; (8001694 <RCC_ClearFlag+0xc>)
 800168a:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800168c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001690:	6253      	str	r3, [r2, #36]	; 0x24
 8001692:	4770      	bx	lr
 8001694:	40021000 	andmi	r1, r2, r0

08001698 <TIM_TimeBaseInit>:
  assert_param(IS_TIM_123458_PERIPH(TIMx)); 
  assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
  assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));

  /* Select the Counter Mode and set the clock division */
  TIMx->CR1 &= CR1_CKD_Mask & CR1_CounterMode_Mask;
 8001698:	8803      	ldrh	r3, [r0, #0]
 800169a:	88ca      	ldrh	r2, [r1, #6]
 800169c:	f003 038f 	and.w	r3, r3, #143	; 0x8f
 80016a0:	8003      	strh	r3, [r0, #0]
  TIMx->CR1 |= (u32)TIM_TimeBaseInitStruct->TIM_ClockDivision |
 80016a2:	8803      	ldrh	r3, [r0, #0]
 80016a4:	b29b      	uxth	r3, r3
 80016a6:	4313      	orrs	r3, r2
 80016a8:	884a      	ldrh	r2, [r1, #2]
 80016aa:	4313      	orrs	r3, r2
 80016ac:	b29b      	uxth	r3, r3
 80016ae:	8003      	strh	r3, [r0, #0]
                TIM_TimeBaseInitStruct->TIM_CounterMode;
  /* Set the Autoreload value */
  TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 80016b0:	888b      	ldrh	r3, [r1, #4]
 80016b2:	8583      	strh	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 80016b4:	880b      	ldrh	r3, [r1, #0]
 80016b6:	8503      	strh	r3, [r0, #40]	; 0x28

  /* Generate an update event to reload the Prescaler value immediatly */
  TIMx->EGR = TIM_PSCReloadMode_Immediate;
 80016b8:	2301      	movs	r3, #1
 80016ba:	8283      	strh	r3, [r0, #20]
    
  if (((*(u32*)&TIMx) == TIM1_BASE) || ((*(u32*)&TIMx) == TIM8_BASE))  
 80016bc:	4b04      	ldr	r3, [pc, #16]	; (80016d0 <TIM_TimeBaseInit+0x38>)
 80016be:	4298      	cmp	r0, r3
 80016c0:	d003      	beq.n	80016ca <TIM_TimeBaseInit+0x32>
 80016c2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80016c6:	4298      	cmp	r0, r3
 80016c8:	d101      	bne.n	80016ce <TIM_TimeBaseInit+0x36>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 80016ca:	7a0b      	ldrb	r3, [r1, #8]
 80016cc:	8603      	strh	r3, [r0, #48]	; 0x30
 80016ce:	4770      	bx	lr
 80016d0:	40012c00 	andmi	r2, r1, r0, lsl #24

080016d4 <TIM_Cmd>:
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
  {
    /* Enable the TIM Counter */
    TIMx->CR1 |= CR1_CEN_Set;
 80016d4:	8803      	ldrh	r3, [r0, #0]
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
 80016d6:	b119      	cbz	r1, 80016e0 <TIM_Cmd+0xc>
  {
    /* Enable the TIM Counter */
    TIMx->CR1 |= CR1_CEN_Set;
 80016d8:	b29b      	uxth	r3, r3
 80016da:	f043 0301 	orr.w	r3, r3, #1
 80016de:	e003      	b.n	80016e8 <TIM_Cmd+0x14>
  }
  else
  {
    /* Disable the TIM Counter */
    TIMx->CR1 &= CR1_CEN_Reset;
 80016e0:	f023 0301 	bic.w	r3, r3, #1
 80016e4:	059b      	lsls	r3, r3, #22
 80016e6:	0d9b      	lsrs	r3, r3, #22
 80016e8:	8003      	strh	r3, [r0, #0]
 80016ea:	4770      	bx	lr

080016ec <TIM_ITConfig>:
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
  {
    /* Enable the Interrupt sources */
    TIMx->DIER |= TIM_IT;
 80016ec:	8983      	ldrh	r3, [r0, #12]
 80016ee:	b29b      	uxth	r3, r3
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_IT(TIM_IT));
  assert_param(IS_TIM_PERIPH_IT((TIMx), (TIM_IT)));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
 80016f0:	b10a      	cbz	r2, 80016f6 <TIM_ITConfig+0xa>
  {
    /* Enable the Interrupt sources */
    TIMx->DIER |= TIM_IT;
 80016f2:	4319      	orrs	r1, r3
 80016f4:	e001      	b.n	80016fa <TIM_ITConfig+0xe>
  }
  else
  {
    /* Disable the Interrupt sources */
    TIMx->DIER &= (u16)~TIM_IT;
 80016f6:	ea23 0101 	bic.w	r1, r3, r1
 80016fa:	8181      	strh	r1, [r0, #12]
 80016fc:	4770      	bx	lr

080016fe <TIM_PrescalerConfig>:
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));

  /* Set the Prescaler value */
  TIMx->PSC = Prescaler;
 80016fe:	8501      	strh	r1, [r0, #40]	; 0x28

  /* Set or reset the UG Bit */
  TIMx->EGR = TIM_PSCReloadMode;
 8001700:	8282      	strh	r2, [r0, #20]
 8001702:	4770      	bx	lr

08001704 <TIM_ClearFlag>:
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_CLEAR_FLAG(TIMx, TIM_FLAG));
   
  /* Clear the flags */
  TIMx->SR = (u16)~TIM_FLAG;
 8001704:	43c9      	mvns	r1, r1
 8001706:	b289      	uxth	r1, r1
 8001708:	8201      	strh	r1, [r0, #16]
 800170a:	4770      	bx	lr

0800170c <TIM_ClearITPendingBit>:
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_PERIPH_IT(TIMx, TIM_IT));

  /* Clear the IT pending Bit */
  TIMx->SR = (u16)~TIM_IT;
 800170c:	43c9      	mvns	r1, r1
 800170e:	b289      	uxth	r1, r1
 8001710:	8201      	strh	r1, [r0, #16]
 8001712:	4770      	bx	lr

08001714 <SysTick_SetReload>:
void SysTick_SetReload(u32 Reload)
{
  /* Check the parameters */
  assert_param(IS_SYSTICK_RELOAD(Reload));

  SysTick->LOAD = Reload;
 8001714:	4b01      	ldr	r3, [pc, #4]	; (800171c <SysTick_SetReload+0x8>)
 8001716:	6058      	str	r0, [r3, #4]
 8001718:	4770      	bx	lr
 800171a:	bf00      	nop
 800171c:	e000e010 	and	lr, r0, r0, lsl r0

08001720 <SysTick_CounterCmd>:
void SysTick_CounterCmd(u32 SysTick_Counter)
{
  /* Check the parameters */
  assert_param(IS_SYSTICK_COUNTER(SysTick_Counter));

  if (SysTick_Counter == SysTick_Counter_Enable)
 8001720:	2801      	cmp	r0, #1
 8001722:	4b08      	ldr	r3, [pc, #32]	; (8001744 <SysTick_CounterCmd+0x24>)
 8001724:	d103      	bne.n	800172e <SysTick_CounterCmd+0xe>
  {
    SysTick->CTRL |= SysTick_Counter_Enable;
 8001726:	681a      	ldr	r2, [r3, #0]
 8001728:	f042 0201 	orr.w	r2, r2, #1
 800172c:	e004      	b.n	8001738 <SysTick_CounterCmd+0x18>
  }
  else if (SysTick_Counter == SysTick_Counter_Disable) 
 800172e:	3002      	adds	r0, #2
 8001730:	d104      	bne.n	800173c <SysTick_CounterCmd+0x1c>
  {
    SysTick->CTRL &= SysTick_Counter_Disable;
 8001732:	681a      	ldr	r2, [r3, #0]
 8001734:	f022 0201 	bic.w	r2, r2, #1
 8001738:	601a      	str	r2, [r3, #0]
 800173a:	4770      	bx	lr
  }
  else /* SysTick_Counter == SysTick_Counter_Clear */
  {
    SysTick->VAL = SysTick_Counter_Clear;
 800173c:	2200      	movs	r2, #0
 800173e:	609a      	str	r2, [r3, #8]
 8001740:	4770      	bx	lr
 8001742:	bf00      	nop
 8001744:	e000e010 	and	lr, r0, r0, lsl r0

08001748 <SysTick_ITConfig>:
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void SysTick_ITConfig(FunctionalState NewState)
{
 8001748:	4b04      	ldr	r3, [pc, #16]	; (800175c <SysTick_ITConfig+0x14>)
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
  {
    SysTick->CTRL |= CTRL_TICKINT_Set;
 800174a:	681a      	ldr	r2, [r3, #0]
void SysTick_ITConfig(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
 800174c:	b110      	cbz	r0, 8001754 <SysTick_ITConfig+0xc>
  {
    SysTick->CTRL |= CTRL_TICKINT_Set;
 800174e:	f042 0202 	orr.w	r2, r2, #2
 8001752:	e001      	b.n	8001758 <SysTick_ITConfig+0x10>
  }
  else
  {
    SysTick->CTRL &= CTRL_TICKINT_Reset;
 8001754:	f022 0202 	bic.w	r2, r2, #2
 8001758:	601a      	str	r2, [r3, #0]
 800175a:	4770      	bx	lr
 800175c:	e000e010 	and	lr, r0, r0, lsl r0

08001760 <USART_DeInit>:
*                     - USART1, USART2, USART3, UART4 or UART5.
* Output         : None
* Return         : None
*******************************************************************************/
void USART_DeInit(USART_TypeDef* USARTx)
{
 8001760:	b508      	push	{r3, lr}
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));

  switch (*(u32*)&USARTx)
 8001762:	4b22      	ldr	r3, [pc, #136]	; (80017ec <USART_DeInit+0x8c>)
 8001764:	4298      	cmp	r0, r3
 8001766:	d02c      	beq.n	80017c2 <USART_DeInit+0x62>
 8001768:	d808      	bhi.n	800177c <USART_DeInit+0x1c>
 800176a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800176e:	4298      	cmp	r0, r3
 8001770:	d017      	beq.n	80017a2 <USART_DeInit+0x42>
 8001772:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001776:	4298      	cmp	r0, r3
 8001778:	d01b      	beq.n	80017b2 <USART_DeInit+0x52>
 800177a:	bd08      	pop	{r3, pc}
 800177c:	4b1c      	ldr	r3, [pc, #112]	; (80017f0 <USART_DeInit+0x90>)
 800177e:	4298      	cmp	r0, r3
 8001780:	d027      	beq.n	80017d2 <USART_DeInit+0x72>
 8001782:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001786:	4298      	cmp	r0, r3
 8001788:	d12f      	bne.n	80017ea <USART_DeInit+0x8a>
  {
    case USART1_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
 800178a:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 800178e:	2101      	movs	r1, #1
 8001790:	f7ff ff36 	bl	8001600 <RCC_APB2PeriphResetCmd>
      break;            

    default:
      break;
  }
}
 8001794:	e8bd 4008 	ldmia.w	sp!, {r3, lr}

  switch (*(u32*)&USARTx)
  {
    case USART1_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
 8001798:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 800179c:	2100      	movs	r1, #0
 800179e:	f7ff bf2f 	b.w	8001600 <RCC_APB2PeriphResetCmd>
      break;

    case USART2_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, ENABLE);
 80017a2:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 80017a6:	2101      	movs	r1, #1
 80017a8:	f7ff ff36 	bl	8001618 <RCC_APB1PeriphResetCmd>
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
 80017ac:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 80017b0:	e016      	b.n	80017e0 <USART_DeInit+0x80>
      break;

    case USART3_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
 80017b2:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80017b6:	2101      	movs	r1, #1
 80017b8:	f7ff ff2e 	bl	8001618 <RCC_APB1PeriphResetCmd>
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 80017bc:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80017c0:	e00e      	b.n	80017e0 <USART_DeInit+0x80>
      break;
    
    case UART4_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
 80017c2:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 80017c6:	2101      	movs	r1, #1
 80017c8:	f7ff ff26 	bl	8001618 <RCC_APB1PeriphResetCmd>
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 80017cc:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 80017d0:	e006      	b.n	80017e0 <USART_DeInit+0x80>
      break;
    
    case UART5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
 80017d2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80017d6:	2101      	movs	r1, #1
 80017d8:	f7ff ff1e 	bl	8001618 <RCC_APB1PeriphResetCmd>
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 80017dc:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80017e0:	2100      	movs	r1, #0
      break;            

    default:
      break;
  }
}
 80017e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
      break;
    
    case UART5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 80017e6:	f7ff bf17 	b.w	8001618 <RCC_APB1PeriphResetCmd>
 80017ea:	bd08      	pop	{r3, pc}
 80017ec:	40004c00 	andmi	r4, r0, r0, lsl #24
 80017f0:	40005000 	andmi	r5, r0, r0

080017f4 <USART_Init>:
*                    specified USART peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
 80017f4:	b530      	push	{r4, r5, lr}
 80017f6:	460d      	mov	r5, r1
 80017f8:	4604      	mov	r4, r0
  assert_param(IS_USART_PERIPH_HFC(USARTx, USART_InitStruct->USART_HardwareFlowControl));
  
  usartxbase = (*(u32*)&USARTx);

/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
 80017fa:	8a03      	ldrh	r3, [r0, #16]
  /* Clear STOP[13:12] bits */
  tmpreg &= CR2_STOP_CLEAR_Mask;

  /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
  /* Set STOP[13:12] bits according to USART_StopBits value */
  tmpreg |= (u32)USART_InitStruct->USART_StopBits;
 80017fc:	88ca      	ldrh	r2, [r1, #6]
  assert_param(IS_USART_PERIPH_HFC(USARTx, USART_InitStruct->USART_HardwareFlowControl));
  
  usartxbase = (*(u32*)&USARTx);

/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
 80017fe:	b29b      	uxth	r3, r3
  /* Clear STOP[13:12] bits */
  tmpreg &= CR2_STOP_CLEAR_Mask;
 8001800:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000

  /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
  /* Set STOP[13:12] bits according to USART_StopBits value */
  tmpreg |= (u32)USART_InitStruct->USART_StopBits;
 8001804:	4313      	orrs	r3, r2
  
  /* Write to USART CR2 */
  USARTx->CR2 = (u16)tmpreg;
 8001806:	8203      	strh	r3, [r0, #16]

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
 8001808:	8982      	ldrh	r2, [r0, #12]

  /* Configure the USART Word Length, Parity and mode ----------------------- */
  /* Set the M bits according to USART_WordLength value */
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (u32)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 800180a:	8909      	ldrh	r1, [r1, #8]
 800180c:	88ab      	ldrh	r3, [r5, #4]
  
  /* Write to USART CR2 */
  USARTx->CR2 = (u16)tmpreg;

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
 800180e:	b292      	uxth	r2, r2

  /* Configure the USART Word Length, Parity and mode ----------------------- */
  /* Set the M bits according to USART_WordLength value */
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (u32)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 8001810:	430b      	orrs	r3, r1
 8001812:	8969      	ldrh	r1, [r5, #10]
  USARTx->CR2 = (u16)tmpreg;

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= CR1_CLEAR_Mask;
 8001814:	f422 52b0 	bic.w	r2, r2, #5632	; 0x1600

  /* Configure the USART Word Length, Parity and mode ----------------------- */
  /* Set the M bits according to USART_WordLength value */
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (u32)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 8001818:	430b      	orrs	r3, r1
  USARTx->CR2 = (u16)tmpreg;

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= CR1_CLEAR_Mask;
 800181a:	f022 020c 	bic.w	r2, r2, #12

  /* Configure the USART Word Length, Parity and mode ----------------------- */
  /* Set the M bits according to USART_WordLength value */
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (u32)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 800181e:	4313      	orrs	r3, r2
 8001820:	b29b      	uxth	r3, r3
            USART_InitStruct->USART_Mode;

  /* Write to USART CR1 */
  USARTx->CR1 = (u16)tmpreg;
 8001822:	8183      	strh	r3, [r0, #12]

/*---------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = USARTx->CR3;
 8001824:	8a83      	ldrh	r3, [r0, #20]
  /* Clear CTSE and RTSE bits */
  tmpreg &= CR3_CLEAR_Mask;

  /* Configure the USART HFC -------------------------------------------------*/
  /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 8001826:	89aa      	ldrh	r2, [r5, #12]

  /* Write to USART CR1 */
  USARTx->CR1 = (u16)tmpreg;

/*---------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = USARTx->CR3;
 8001828:	b29b      	uxth	r3, r3
  /* Clear CTSE and RTSE bits */
  tmpreg &= CR3_CLEAR_Mask;
 800182a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
*                    specified USART peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
 800182e:	b087      	sub	sp, #28
  /* Clear CTSE and RTSE bits */
  tmpreg &= CR3_CLEAR_Mask;

  /* Configure the USART HFC -------------------------------------------------*/
  /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 8001830:	4313      	orrs	r3, r2

  /* Write to USART CR3 */
  USARTx->CR3 = (u16)tmpreg;
 8001832:	8283      	strh	r3, [r0, #20]

/*---------------------------- USART BRR Configuration -----------------------*/
  /* Configure the USART Baud Rate -------------------------------------------*/
  RCC_GetClocksFreq(&RCC_ClocksStatus);
 8001834:	a801      	add	r0, sp, #4
 8001836:	f7ff fe89 	bl	800154c <RCC_GetClocksFreq>
  {
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
  }
  else
  {
    apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 800183a:	9b03      	ldr	r3, [sp, #12]
/*---------------------------- USART BRR Configuration -----------------------*/
  /* Configure the USART Baud Rate -------------------------------------------*/
  RCC_GetClocksFreq(&RCC_ClocksStatus);
  if (usartxbase == USART1_BASE)
  {
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 800183c:	9a04      	ldr	r2, [sp, #16]
  }
  else
  {
    apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 800183e:	490e      	ldr	r1, [pc, #56]	; (8001878 <USART_Init+0x84>)
 8001840:	428c      	cmp	r4, r1
 8001842:	bf18      	it	ne
 8001844:	461a      	movne	r2, r3
  }

  /* Determine the integer part */
  integerdivider = ((0x19 * apbclock) / (0x04 * (USART_InitStruct->USART_BaudRate)));
 8001846:	2319      	movs	r3, #25
 8001848:	4353      	muls	r3, r2
 800184a:	682a      	ldr	r2, [r5, #0]
 800184c:	0092      	lsls	r2, r2, #2
 800184e:	fbb3 f2f2 	udiv	r2, r3, r2
  tmpreg = (integerdivider / 0x64) << 0x04;
 8001852:	2364      	movs	r3, #100	; 0x64
 8001854:	fbb2 f0f3 	udiv	r0, r2, r3
 8001858:	0100      	lsls	r0, r0, #4

  /* Determine the fractional part */
  fractionaldivider = integerdivider - (0x64 * (tmpreg >> 0x04));
 800185a:	0901      	lsrs	r1, r0, #4
 800185c:	fb03 2211 	mls	r2, r3, r1, r2
  tmpreg |= ((((fractionaldivider * 0x10) + 0x32) / 0x64)) & ((u8)0x0F);
 8001860:	0112      	lsls	r2, r2, #4
 8001862:	3232      	adds	r2, #50	; 0x32
 8001864:	fbb2 f3f3 	udiv	r3, r2, r3
 8001868:	f003 030f 	and.w	r3, r3, #15
 800186c:	4303      	orrs	r3, r0

  /* Write to USART BRR */
  USARTx->BRR = (u16)tmpreg;
 800186e:	b29b      	uxth	r3, r3
 8001870:	8123      	strh	r3, [r4, #8]
}
 8001872:	b007      	add	sp, #28
 8001874:	bd30      	pop	{r4, r5, pc}
 8001876:	bf00      	nop
 8001878:	40013800 	andmi	r3, r1, r0, lsl #16

0800187c <USART_StructInit>:
* Return         : None
*******************************************************************************/
void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
{
  /* USART_InitStruct members default value */
  USART_InitStruct->USART_BaudRate = 9600;
 800187c:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8001880:	6003      	str	r3, [r0, #0]
  USART_InitStruct->USART_WordLength = USART_WordLength_8b;
  USART_InitStruct->USART_StopBits = USART_StopBits_1;
  USART_InitStruct->USART_Parity = USART_Parity_No ;
  USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 8001882:	220c      	movs	r2, #12
*******************************************************************************/
void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
{
  /* USART_InitStruct members default value */
  USART_InitStruct->USART_BaudRate = 9600;
  USART_InitStruct->USART_WordLength = USART_WordLength_8b;
 8001884:	2300      	movs	r3, #0
 8001886:	8083      	strh	r3, [r0, #4]
  USART_InitStruct->USART_StopBits = USART_StopBits_1;
 8001888:	80c3      	strh	r3, [r0, #6]
  USART_InitStruct->USART_Parity = USART_Parity_No ;
 800188a:	8103      	strh	r3, [r0, #8]
  USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 800188c:	8142      	strh	r2, [r0, #10]
  USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;  
 800188e:	8183      	strh	r3, [r0, #12]
 8001890:	4770      	bx	lr

08001892 <USART_Cmd>:
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
  {
    /* Enable the selected USART by setting the UE bit in the CR1 register */
    USARTx->CR1 |= CR1_UE_Set;
 8001892:	8983      	ldrh	r3, [r0, #12]
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
 8001894:	b119      	cbz	r1, 800189e <USART_Cmd+0xc>
  {
    /* Enable the selected USART by setting the UE bit in the CR1 register */
    USARTx->CR1 |= CR1_UE_Set;
 8001896:	b29b      	uxth	r3, r3
 8001898:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800189c:	e003      	b.n	80018a6 <USART_Cmd+0x14>
  }
  else
  {
    /* Disable the selected USART by clearing the UE bit in the CR1 register */
    USARTx->CR1 &= CR1_UE_Reset;
 800189e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80018a2:	041b      	lsls	r3, r3, #16
 80018a4:	0c1b      	lsrs	r3, r3, #16
 80018a6:	8183      	strh	r3, [r0, #12]
 80018a8:	4770      	bx	lr

080018aa <USART_ITConfig>:
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void USART_ITConfig(USART_TypeDef* USARTx, u16 USART_IT, FunctionalState NewState)
{
 80018aa:	b510      	push	{r4, lr}
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  usartxbase = (*(u32*)&(USARTx));

  /* Get the USART register index */
  usartreg = (((u8)USART_IT) >> 0x05);
 80018ac:	f3c1 1442 	ubfx	r4, r1, #5, #3

  /* Get the interrupt position */
  itpos = USART_IT & IT_Mask;

  itmask = (((u32)0x01) << itpos);
 80018b0:	2301      	movs	r3, #1
 80018b2:	f001 011f 	and.w	r1, r1, #31
    
  if (usartreg == 0x01) /* The IT is in CR1 register */
 80018b6:	2c01      	cmp	r4, #1
  usartreg = (((u8)USART_IT) >> 0x05);

  /* Get the interrupt position */
  itpos = USART_IT & IT_Mask;

  itmask = (((u32)0x01) << itpos);
 80018b8:	fa03 f301 	lsl.w	r3, r3, r1
    
  if (usartreg == 0x01) /* The IT is in CR1 register */
 80018bc:	d101      	bne.n	80018c2 <USART_ITConfig+0x18>
  {
    usartxbase += 0x0C;
 80018be:	300c      	adds	r0, #12
 80018c0:	e003      	b.n	80018ca <USART_ITConfig+0x20>
  }
  else if (usartreg == 0x02) /* The IT is in CR2 register */
 80018c2:	2c02      	cmp	r4, #2
  {
    usartxbase += 0x10;
 80018c4:	bf0c      	ite	eq
 80018c6:	3010      	addeq	r0, #16
  }
  else /* The IT is in CR3 register */
  {
    usartxbase += 0x14; 
 80018c8:	3014      	addne	r0, #20
  }
  if (NewState != DISABLE)
 80018ca:	b112      	cbz	r2, 80018d2 <USART_ITConfig+0x28>
  {
    *(vu32*)usartxbase  |= itmask;
 80018cc:	6802      	ldr	r2, [r0, #0]
 80018ce:	4313      	orrs	r3, r2
 80018d0:	e002      	b.n	80018d8 <USART_ITConfig+0x2e>
  }
  else
  {
    *(vu32*)usartxbase &= ~itmask;
 80018d2:	6802      	ldr	r2, [r0, #0]
 80018d4:	ea22 0303 	bic.w	r3, r2, r3
 80018d8:	6003      	str	r3, [r0, #0]
 80018da:	bd10      	pop	{r4, pc}

080018dc <USART_SendData>:
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_USART_DATA(Data)); 
    
  /* Transmit Data */
  USARTx->DR = (Data & (u16)0x01FF);
 80018dc:	f3c1 0108 	ubfx	r1, r1, #0, #9
 80018e0:	8081      	strh	r1, [r0, #4]
 80018e2:	4770      	bx	lr

080018e4 <USART_ReceiveData>:
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  
  /* Receive Data */
  return (u16)(USARTx->DR & (u16)0x01FF);
 80018e4:	8880      	ldrh	r0, [r0, #4]
}
 80018e6:	f3c0 0008 	ubfx	r0, r0, #0, #9
 80018ea:	4770      	bx	lr

080018ec <USART_GetFlagStatus>:
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_USART_FLAG(USART_FLAG));
  assert_param(IS_USART_PERIPH_FLAG(USARTx, USART_FLAG)); /* The CTS flag is not available for UART4 and UART5 */   

  if ((USARTx->SR & USART_FLAG) != (u16)RESET)
 80018ec:	8803      	ldrh	r3, [r0, #0]
 80018ee:	4219      	tst	r1, r3
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
 80018f0:	bf14      	ite	ne
 80018f2:	2001      	movne	r0, #1
 80018f4:	2000      	moveq	r0, #0
 80018f6:	4770      	bx	lr

080018f8 <USART_ClearFlag>:
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_USART_CLEAR_FLAG(USART_FLAG));
  assert_param(IS_USART_PERIPH_FLAG(USARTx, USART_FLAG)); /* The CTS flag is not available for UART4 and UART5 */   
   
  USARTx->SR = (u16)~USART_FLAG;
 80018f8:	43c9      	mvns	r1, r1
 80018fa:	b289      	uxth	r1, r1
 80018fc:	8001      	strh	r1, [r0, #0]
 80018fe:	4770      	bx	lr

08001900 <USART_GetITStatus>:
  usartreg = (((u8)USART_IT) >> 0x05);

  /* Get the interrupt position */
  itmask = USART_IT & IT_Mask;

  itmask = (u32)0x01 << itmask;
 8001900:	2301      	movs	r3, #1
*                       - USART_IT_PE:   Parity Error interrupt
* Output         : None
* Return         : The new state of USART_IT (SET or RESET).
*******************************************************************************/
ITStatus USART_GetITStatus(USART_TypeDef* USARTx, u16 USART_IT)
{
 8001902:	b510      	push	{r4, lr}
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_USART_GET_IT(USART_IT));
  assert_param(IS_USART_PERIPH_IT(USARTx, USART_IT)); /* The CTS interrupt is not available for UART4 and UART5 */  
  
  /* Get the USART register index */
  usartreg = (((u8)USART_IT) >> 0x05);
 8001904:	f3c1 1442 	ubfx	r4, r1, #5, #3

  /* Get the interrupt position */
  itmask = USART_IT & IT_Mask;

  itmask = (u32)0x01 << itmask;
 8001908:	f001 021f 	and.w	r2, r1, #31
  
  if (usartreg == 0x01) /* The IT  is in CR1 register */
 800190c:	429c      	cmp	r4, r3
  usartreg = (((u8)USART_IT) >> 0x05);

  /* Get the interrupt position */
  itmask = USART_IT & IT_Mask;

  itmask = (u32)0x01 << itmask;
 800190e:	fa03 f202 	lsl.w	r2, r3, r2
  
  if (usartreg == 0x01) /* The IT  is in CR1 register */
 8001912:	d101      	bne.n	8001918 <USART_GetITStatus+0x18>
  {
    itmask &= USARTx->CR1;
 8001914:	8983      	ldrh	r3, [r0, #12]
 8001916:	e003      	b.n	8001920 <USART_GetITStatus+0x20>
  }
  else if (usartreg == 0x02) /* The IT  is in CR2 register */
 8001918:	2c02      	cmp	r4, #2
  {
    itmask &= USARTx->CR2;
 800191a:	bf0c      	ite	eq
 800191c:	8a03      	ldrheq	r3, [r0, #16]
  }
  else /* The IT  is in CR3 register */
  {
    itmask &= USARTx->CR3;
 800191e:	8a83      	ldrhne	r3, [r0, #20]
 8001920:	b29b      	uxth	r3, r3
 8001922:	4013      	ands	r3, r2
  }
  
  bitpos = USART_IT >> 0x08;

  bitpos = (u32)0x01 << bitpos;
  bitpos &= USARTx->SR;
 8001924:	8802      	ldrh	r2, [r0, #0]
 8001926:	b292      	uxth	r2, r2

  if ((itmask != (u16)RESET)&&(bitpos != (u16)RESET))
 8001928:	b13b      	cbz	r3, 800193a <USART_GetITStatus+0x3a>
    itmask &= USARTx->CR3;
  }
  
  bitpos = USART_IT >> 0x08;

  bitpos = (u32)0x01 << bitpos;
 800192a:	0a09      	lsrs	r1, r1, #8
 800192c:	2301      	movs	r3, #1
 800192e:	408b      	lsls	r3, r1
  bitpos &= USARTx->SR;

  if ((itmask != (u16)RESET)&&(bitpos != (u16)RESET))
 8001930:	4213      	tst	r3, r2
  {
    bitstatus = SET;
 8001932:	bf14      	ite	ne
 8001934:	2001      	movne	r0, #1
 8001936:	2000      	moveq	r0, #0
 8001938:	bd10      	pop	{r4, pc}
  }
  else
  {
    bitstatus = RESET;
 800193a:	4618      	mov	r0, r3
  }
  
  return bitstatus;  
}
 800193c:	bd10      	pop	{r4, pc}
	...

08001940 <Reset_Handler>:
* Input          :
* Output         :
* Return         :
*******************************************************************************/
void Reset_Handler(void)
{
 8001940:	4668      	mov	r0, sp
 8001942:	f020 0107 	bic.w	r1, r0, #7
 8001946:	468d      	mov	sp, r1
 8001948:	b501      	push	{r0, lr}
 800194a:	4a0c      	ldr	r2, [pc, #48]	; (800197c <Reset_Handler+0x3c>)
 800194c:	4b0c      	ldr	r3, [pc, #48]	; (8001980 <Reset_Handler+0x40>)

    //
    // Copy the data segment initializers from flash to SRAM.
    //
    pulSrc = &_sidata;
    for(pulDest = &_sdata; pulDest < &_edata; )
 800194e:	490d      	ldr	r1, [pc, #52]	; (8001984 <Reset_Handler+0x44>)
 8001950:	428b      	cmp	r3, r1
 8001952:	d204      	bcs.n	800195e <Reset_Handler+0x1e>
    {
        *(pulDest++) = *(pulSrc++);
 8001954:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8001958:	f843 1b04 	str.w	r1, [r3], #4
 800195c:	e7f7      	b.n	800194e <Reset_Handler+0xe>
 800195e:	4b0a      	ldr	r3, [pc, #40]	; (8001988 <Reset_Handler+0x48>)
    }

    //
    // Zero fill the bss segment.
    //
    for(pulDest = &_sbss; pulDest < &_ebss; )
 8001960:	4a0a      	ldr	r2, [pc, #40]	; (800198c <Reset_Handler+0x4c>)
 8001962:	4293      	cmp	r3, r2
 8001964:	d203      	bcs.n	800196e <Reset_Handler+0x2e>
    {
        *(pulDest++) = 0;
 8001966:	2200      	movs	r2, #0
 8001968:	f843 2b04 	str.w	r2, [r3], #4
 800196c:	e7f8      	b.n	8001960 <Reset_Handler+0x20>
    }

    //
    // Call the application's entry point.
    //
    main();
 800196e:	f7ff f85b 	bl	8000a28 <main>
}
 8001972:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
 8001976:	4685      	mov	sp, r0
 8001978:	4770      	bx	lr
 800197a:	bf00      	nop
 800197c:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
 8001980:	20000000 	andcs	r0, r0, r0
 8001984:	200000e4 	andcs	r0, r0, r4, ror #1
 8001988:	200000e4 	andcs	r0, r0, r4, ror #1
 800198c:	20000720 	andcs	r0, r0, r0, lsr #14

08001990 <USB_Init>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void USB_Init(void)
{
  pInformation = &Device_Info;
 8001990:	4b06      	ldr	r3, [pc, #24]	; (80019ac <USB_Init+0x1c>)
 8001992:	4a07      	ldr	r2, [pc, #28]	; (80019b0 <USB_Init+0x20>)
  pInformation->ControlState = 2;
  pProperty = &Device_Property;
  pUser_Standard_Requests = &User_Standard_Requests;
 8001994:	4907      	ldr	r1, [pc, #28]	; (80019b4 <USB_Init+0x24>)
* Output         : None.
* Return         : None.
*******************************************************************************/
void USB_Init(void)
{
  pInformation = &Device_Info;
 8001996:	6013      	str	r3, [r2, #0]
  pInformation->ControlState = 2;
 8001998:	2202      	movs	r2, #2
 800199a:	721a      	strb	r2, [r3, #8]
  pProperty = &Device_Property;
 800199c:	4b06      	ldr	r3, [pc, #24]	; (80019b8 <USB_Init+0x28>)
 800199e:	4a07      	ldr	r2, [pc, #28]	; (80019bc <USB_Init+0x2c>)
 80019a0:	6013      	str	r3, [r2, #0]
  pUser_Standard_Requests = &User_Standard_Requests;
 80019a2:	4a07      	ldr	r2, [pc, #28]	; (80019c0 <USB_Init+0x30>)
  /* Initialize devices one by one */
  pProperty->Init();
 80019a4:	681b      	ldr	r3, [r3, #0]
void USB_Init(void)
{
  pInformation = &Device_Info;
  pInformation->ControlState = 2;
  pProperty = &Device_Property;
  pUser_Standard_Requests = &User_Standard_Requests;
 80019a6:	6011      	str	r1, [r2, #0]
  /* Initialize devices one by one */
  pProperty->Init();
 80019a8:	4718      	bx	r3
 80019aa:	bf00      	nop
 80019ac:	200006f4 	strdcs	r0, [r0], -r4
 80019b0:	20000714 	andcs	r0, r0, r4, lsl r7
 80019b4:	200000bc 	strhcs	r0, [r0], -ip
 80019b8:	2000005c 	andcs	r0, r0, ip, asr r0
 80019bc:	200006ec 	andcs	r0, r0, ip, ror #13
 80019c0:	20000710 	andcs	r0, r0, r0, lsl r7

080019c4 <Standard_GetConfiguration>:
* Output         : None.
* Return         : Return 1 , if the request is invalid when "Length" is 0.
*                  Return "Buffer" if the "Length" is not 0.
*******************************************************************************/
u8 *Standard_GetConfiguration(u16 Length)
{
 80019c4:	b510      	push	{r4, lr}
 80019c6:	4c06      	ldr	r4, [pc, #24]	; (80019e0 <Standard_GetConfiguration+0x1c>)
  if (Length == 0)
 80019c8:	b918      	cbnz	r0, 80019d2 <Standard_GetConfiguration+0xe>
  {
    pInformation->Ctrl_Info.Usb_wLength =
 80019ca:	6823      	ldr	r3, [r4, #0]
 80019cc:	2201      	movs	r2, #1
 80019ce:	821a      	strh	r2, [r3, #16]
      sizeof(pInformation->Current_Configuration);
    return 0;
 80019d0:	bd10      	pop	{r4, pc}
  }
  pUser_Standard_Requests->User_GetConfiguration();
 80019d2:	4b04      	ldr	r3, [pc, #16]	; (80019e4 <Standard_GetConfiguration+0x20>)
 80019d4:	681b      	ldr	r3, [r3, #0]
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	4798      	blx	r3
  return (u8 *)&pInformation->Current_Configuration;
 80019da:	6820      	ldr	r0, [r4, #0]
 80019dc:	300a      	adds	r0, #10
}
 80019de:	bd10      	pop	{r4, pc}
 80019e0:	20000714 	andcs	r0, r0, r4, lsl r7
 80019e4:	20000710 	andcs	r0, r0, r0, lsl r7

080019e8 <Standard_GetInterface>:
* Output         : None.
* Return         : Return 0, if the request is invalid when "Length" is 0.
*                  Return "Buffer" if the "Length" is not 0.
*******************************************************************************/
u8 *Standard_GetInterface(u16 Length)
{
 80019e8:	b510      	push	{r4, lr}
 80019ea:	4c06      	ldr	r4, [pc, #24]	; (8001a04 <Standard_GetInterface+0x1c>)
  if (Length == 0)
 80019ec:	b918      	cbnz	r0, 80019f6 <Standard_GetInterface+0xe>
  {
    pInformation->Ctrl_Info.Usb_wLength =
 80019ee:	6823      	ldr	r3, [r4, #0]
 80019f0:	2201      	movs	r2, #1
 80019f2:	821a      	strh	r2, [r3, #16]
      sizeof(pInformation->Current_AlternateSetting);
    return 0;
 80019f4:	bd10      	pop	{r4, pc}
  }
  pUser_Standard_Requests->User_GetInterface();
 80019f6:	4b04      	ldr	r3, [pc, #16]	; (8001a08 <Standard_GetInterface+0x20>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	689b      	ldr	r3, [r3, #8]
 80019fc:	4798      	blx	r3
  return (u8 *)&pInformation->Current_AlternateSetting;
 80019fe:	6820      	ldr	r0, [r4, #0]
 8001a00:	300c      	adds	r0, #12
}
 8001a02:	bd10      	pop	{r4, pc}
 8001a04:	20000714 	andcs	r0, r0, r4, lsl r7
 8001a08:	20000710 	andcs	r0, r0, r0, lsl r7

08001a0c <Standard_GetStatus>:
* Output         : None.
* Return         : Return 0, if the request is at end of data block,
*                  or is invalid when "Length" is 0.
*******************************************************************************/
u8 *Standard_GetStatus(u16 Length)
{
 8001a0c:	b510      	push	{r4, lr}
 8001a0e:	4a20      	ldr	r2, [pc, #128]	; (8001a90 <Standard_GetStatus+0x84>)
  if (Length == 0)
 8001a10:	b918      	cbnz	r0, 8001a1a <Standard_GetStatus+0xe>
  {
    pInformation->Ctrl_Info.Usb_wLength = 2;
 8001a12:	6813      	ldr	r3, [r2, #0]
 8001a14:	2202      	movs	r2, #2
 8001a16:	821a      	strh	r2, [r3, #16]
    return 0;
 8001a18:	bd10      	pop	{r4, pc}
  }

  /* Reset Status Information */
  StatusInfo.w = 0;
 8001a1a:	481e      	ldr	r0, [pc, #120]	; (8001a94 <Standard_GetStatus+0x88>)

  if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001a1c:	6814      	ldr	r4, [r2, #0]
    pInformation->Ctrl_Info.Usb_wLength = 2;
    return 0;
  }

  /* Reset Status Information */
  StatusInfo.w = 0;
 8001a1e:	2300      	movs	r3, #0
 8001a20:	8003      	strh	r3, [r0, #0]

  if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001a22:	7821      	ldrb	r1, [r4, #0]
 8001a24:	4602      	mov	r2, r0
 8001a26:	f011 017f 	ands.w	r1, r1, #127	; 0x7f
 8001a2a:	d10d      	bne.n	8001a48 <Standard_GetStatus+0x3c>
  {
    /*Get Device Status */
    u8 Feature = pInformation->Current_Feature;
 8001a2c:	7a63      	ldrb	r3, [r4, #9]

    /* Remote Wakeup enabled */
    if (ValBit(Feature, 5))
 8001a2e:	0699      	lsls	r1, r3, #26
    {
      SetBit(StatusInfo0, 1);
 8001a30:	bf44      	itt	mi
 8001a32:	2102      	movmi	r1, #2
 8001a34:	7001      	strbmi	r1, [r0, #0]
    {
      ClrBit(StatusInfo0, 1);
    }      

    /* Bus-powered */
    if (ValBit(Feature, 6))
 8001a36:	f013 0f40 	tst.w	r3, #64	; 0x40
    {
      SetBit(StatusInfo0, 0);
 8001a3a:	7803      	ldrb	r3, [r0, #0]
 8001a3c:	bf14      	ite	ne
 8001a3e:	f043 0301 	orrne.w	r3, r3, #1
    }
    else /* Self-powered */
    {
      ClrBit(StatusInfo0, 0);
 8001a42:	f023 0301 	biceq.w	r3, r3, #1
 8001a46:	e014      	b.n	8001a72 <Standard_GetStatus+0x66>
    }
  }
  /*Interface Status*/
  else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 8001a48:	2901      	cmp	r1, #1
 8001a4a:	d020      	beq.n	8001a8e <Standard_GetStatus+0x82>
  {
    return (u8 *)&StatusInfo;
  }
  /*Get EndPoint Status*/
  else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 8001a4c:	2902      	cmp	r1, #2
 8001a4e:	d11d      	bne.n	8001a8c <Standard_GetStatus+0x80>
  {
    u8 Related_Endpoint;
    u8 wIndex0 = pInformation->USBwIndex0;
 8001a50:	7961      	ldrb	r1, [r4, #5]

    Related_Endpoint = (wIndex0 & 0x0f);
 8001a52:	f001 030f 	and.w	r3, r1, #15
 8001a56:	009b      	lsls	r3, r3, #2
    if (ValBit(wIndex0, 7))
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint))
 8001a58:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8001a5c:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
  {
    u8 Related_Endpoint;
    u8 wIndex0 = pInformation->USBwIndex0;

    Related_Endpoint = (wIndex0 & 0x0f);
    if (ValBit(wIndex0, 7))
 8001a60:	f011 0f80 	tst.w	r1, #128	; 0x80
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint))
 8001a64:	681b      	ldr	r3, [r3, #0]
  {
    u8 Related_Endpoint;
    u8 wIndex0 = pInformation->USBwIndex0;

    Related_Endpoint = (wIndex0 & 0x0f);
    if (ValBit(wIndex0, 7))
 8001a66:	d006      	beq.n	8001a76 <Standard_GetStatus+0x6a>
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint))
 8001a68:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8001a6c:	2b10      	cmp	r3, #16
 8001a6e:	d107      	bne.n	8001a80 <Standard_GetStatus+0x74>
      {
        SetBit(StatusInfo0, 0); /* IN Endpoint stalled */
 8001a70:	2301      	movs	r3, #1
 8001a72:	7013      	strb	r3, [r2, #0]
 8001a74:	e004      	b.n	8001a80 <Standard_GetStatus+0x74>
      }
    }
    else
    {
      /* OUT endpoint */
      if (_GetRxStallStatus(Related_Endpoint))
 8001a76:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8001a7a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001a7e:	e7f6      	b.n	8001a6e <Standard_GetStatus+0x62>
  }
  else
  {
    return NULL;
  }
  pUser_Standard_Requests->User_GetStatus();
 8001a80:	4b05      	ldr	r3, [pc, #20]	; (8001a98 <Standard_GetStatus+0x8c>)
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	691b      	ldr	r3, [r3, #16]
 8001a86:	4798      	blx	r3
  return (u8 *)&StatusInfo;
 8001a88:	4802      	ldr	r0, [pc, #8]	; (8001a94 <Standard_GetStatus+0x88>)
 8001a8a:	bd10      	pop	{r4, pc}
    }

  }
  else
  {
    return NULL;
 8001a8c:	4618      	mov	r0, r3
  }
  pUser_Standard_Requests->User_GetStatus();
  return (u8 *)&StatusInfo;
}
 8001a8e:	bd10      	pop	{r4, pc}
 8001a90:	20000714 	andcs	r0, r0, r4, lsl r7
 8001a94:	2000071a 	andcs	r0, r0, sl, lsl r7
 8001a98:	20000710 	andcs	r0, r0, r0, lsl r7

08001a9c <DataStageIn>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void DataStageIn(void)
{
 8001a9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  ENDPOINT_INFO *pEPinfo = &pInformation->Ctrl_Info;
 8001aa0:	4f23      	ldr	r7, [pc, #140]	; (8001b30 <DataStageIn+0x94>)
 8001aa2:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8001b44 <DataStageIn+0xa8>
 8001aa6:	683d      	ldr	r5, [r7, #0]
  u32 save_wLength = pEPinfo->Usb_wLength;
 8001aa8:	8a2b      	ldrh	r3, [r5, #16]
  u32 ControlState = pInformation->ControlState;
 8001aaa:	7a2e      	ldrb	r6, [r5, #8]

  u8 *DataBuffer;
  u32 Length;

  if ((save_wLength == 0) && (ControlState == LAST_IN_DATA))
 8001aac:	b9bb      	cbnz	r3, 8001ade <DataStageIn+0x42>
 8001aae:	2e04      	cmp	r6, #4
 8001ab0:	d115      	bne.n	8001ade <DataStageIn+0x42>
  {
    if(Data_Mul_MaxPacketSize == TRUE)
 8001ab2:	4820      	ldr	r0, [pc, #128]	; (8001b34 <DataStageIn+0x98>)
 8001ab4:	7802      	ldrb	r2, [r0, #0]
 8001ab6:	2a01      	cmp	r2, #1
 8001ab8:	d10c      	bne.n	8001ad4 <DataStageIn+0x38>
    {
      /* No more data to send and empty packet */
      Send0LengthData();
 8001aba:	4a1f      	ldr	r2, [pc, #124]	; (8001b38 <DataStageIn+0x9c>)
 8001abc:	6811      	ldr	r1, [r2, #0]
 8001abe:	4a1f      	ldr	r2, [pc, #124]	; (8001b3c <DataStageIn+0xa0>)
 8001ac0:	b289      	uxth	r1, r1
 8001ac2:	440a      	add	r2, r1
 8001ac4:	0052      	lsls	r2, r2, #1
 8001ac6:	8013      	strh	r3, [r2, #0]
 8001ac8:	8053      	strh	r3, [r2, #2]
 8001aca:	2230      	movs	r2, #48	; 0x30
 8001acc:	f8a8 2000 	strh.w	r2, [r8]
      ControlState = LAST_IN_DATA;
      Data_Mul_MaxPacketSize = FALSE;
 8001ad0:	7003      	strb	r3, [r0, #0]
 8001ad2:	e029      	b.n	8001b28 <DataStageIn+0x8c>
    #ifdef STM32F10X_CL      
      PCD_EP_Read (ENDP0, 0, 0);
    #endif  /* STM32F10X_CL */ 
    
    #ifndef STM32F10X_CL 
      vSetEPTxStatus(EP_TX_STALL);
 8001ad4:	2310      	movs	r3, #16
 8001ad6:	f8a8 3000 	strh.w	r3, [r8]
      Data_Mul_MaxPacketSize = FALSE;
    }
    else 
    {
      /* No more data to send so STALL the TX Status*/
      ControlState = WAIT_STATUS_OUT;
 8001ada:	2607      	movs	r6, #7
 8001adc:	e024      	b.n	8001b28 <DataStageIn+0x8c>
    }
    
    goto Expect_Status_Out;
  }

  Length = pEPinfo->PacketSize;
 8001ade:	8aac      	ldrh	r4, [r5, #20]
  ControlState = (save_wLength <= Length) ? LAST_IN_DATA : IN_DATA;
 8001ae0:	42a3      	cmp	r3, r4
 8001ae2:	bf94      	ite	ls
 8001ae4:	2604      	movls	r6, #4
 8001ae6:	2602      	movhi	r6, #2
  if (Length > save_wLength)
  {
    Length = save_wLength;
  }

  DataBuffer = (*pEPinfo->CopyData)(Length);
 8001ae8:	429c      	cmp	r4, r3
 8001aea:	bf28      	it	cs
 8001aec:	461c      	movcs	r4, r3
 8001aee:	69ab      	ldr	r3, [r5, #24]
 8001af0:	4620      	mov	r0, r4
 8001af2:	4798      	blx	r3
 8001af4:	4681      	mov	r9, r0

#ifdef STM32F10X_CL
  PCD_EP_Write (ENDP0, DataBuffer, Length);
#else   
  UserToPMABufferCopy(DataBuffer, GetEPTxAddr(ENDP0), Length);
 8001af6:	2000      	movs	r0, #0
 8001af8:	f000 fc6c 	bl	80023d4 <GetEPTxAddr>
 8001afc:	4622      	mov	r2, r4
 8001afe:	4601      	mov	r1, r0
 8001b00:	4648      	mov	r0, r9
 8001b02:	f000 fb78 	bl	80021f6 <UserToPMABufferCopy>
#endif /* STM32F10X_CL */ 

  SetEPTxCount(ENDP0, Length);
 8001b06:	2000      	movs	r0, #0
 8001b08:	4621      	mov	r1, r4
 8001b0a:	f000 fc83 	bl	8002414 <SetEPTxCount>

  pEPinfo->Usb_wLength -= Length;
 8001b0e:	8a2b      	ldrh	r3, [r5, #16]
  pEPinfo->Usb_wOffset += Length;
  vSetEPTxStatus(EP_TX_VALID);

  USB_StatusOut();/* Expect the host to abort the data IN stage */
 8001b10:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  UserToPMABufferCopy(DataBuffer, GetEPTxAddr(ENDP0), Length);
#endif /* STM32F10X_CL */ 

  SetEPTxCount(ENDP0, Length);

  pEPinfo->Usb_wLength -= Length;
 8001b14:	1b1b      	subs	r3, r3, r4
 8001b16:	822b      	strh	r3, [r5, #16]
  pEPinfo->Usb_wOffset += Length;
 8001b18:	8a6b      	ldrh	r3, [r5, #18]
 8001b1a:	4423      	add	r3, r4
 8001b1c:	826b      	strh	r3, [r5, #18]
  vSetEPTxStatus(EP_TX_VALID);
 8001b1e:	2330      	movs	r3, #48	; 0x30
 8001b20:	f8a8 3000 	strh.w	r3, [r8]

  USB_StatusOut();/* Expect the host to abort the data IN stage */
 8001b24:	4b06      	ldr	r3, [pc, #24]	; (8001b40 <DataStageIn+0xa4>)
 8001b26:	801a      	strh	r2, [r3, #0]

Expect_Status_Out:
  pInformation->ControlState = ControlState;
 8001b28:	683b      	ldr	r3, [r7, #0]
 8001b2a:	721e      	strb	r6, [r3, #8]
 8001b2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001b30:	20000714 	andcs	r0, r0, r4, lsl r7
 8001b34:	20000130 	andcs	r0, r0, r0, lsr r1
 8001b38:	40005c50 	andmi	r5, r0, r0, asr ip
 8001b3c:	20003002 	andcs	r3, r0, r2
 8001b40:	2000071c 	andcs	r0, r0, ip, lsl r7
 8001b44:	2000071e 	andcs	r0, r0, lr, lsl r7

08001b48 <Standard_SetConfiguration>:
* Output         : None.
* Return         : Return USB_SUCCESS, if the request is performed.
*                  Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetConfiguration(void)
{
 8001b48:	b510      	push	{r4, lr}

  if ((pInformation->USBwValue0 <=
 8001b4a:	4b0a      	ldr	r3, [pc, #40]	; (8001b74 <Standard_SetConfiguration+0x2c>)
      Device_Table.Total_Configuration) && (pInformation->USBwValue1 == 0)
 8001b4c:	490a      	ldr	r1, [pc, #40]	; (8001b78 <Standard_SetConfiguration+0x30>)
*                  Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetConfiguration(void)
{

  if ((pInformation->USBwValue0 <=
 8001b4e:	681b      	ldr	r3, [r3, #0]
 8001b50:	7849      	ldrb	r1, [r1, #1]
 8001b52:	78da      	ldrb	r2, [r3, #3]
 8001b54:	4291      	cmp	r1, r2
 8001b56:	d30a      	bcc.n	8001b6e <Standard_SetConfiguration+0x26>
      Device_Table.Total_Configuration) && (pInformation->USBwValue1 == 0)
 8001b58:	7899      	ldrb	r1, [r3, #2]
 8001b5a:	b941      	cbnz	r1, 8001b6e <Standard_SetConfiguration+0x26>
      && (pInformation->USBwIndex == 0)) /*call Back usb spec 2.0*/
 8001b5c:	889c      	ldrh	r4, [r3, #4]
 8001b5e:	b934      	cbnz	r4, 8001b6e <Standard_SetConfiguration+0x26>
  {
    pInformation->Current_Configuration = pInformation->USBwValue0;
 8001b60:	729a      	strb	r2, [r3, #10]
    pUser_Standard_Requests->User_SetConfiguration();
 8001b62:	4b06      	ldr	r3, [pc, #24]	; (8001b7c <Standard_SetConfiguration+0x34>)
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	685b      	ldr	r3, [r3, #4]
 8001b68:	4798      	blx	r3
    return USB_SUCCESS;
 8001b6a:	4620      	mov	r0, r4
 8001b6c:	bd10      	pop	{r4, pc}
  }
  else
  {
    return USB_UNSUPPORT;
 8001b6e:	2002      	movs	r0, #2
  }
}
 8001b70:	bd10      	pop	{r4, pc}
 8001b72:	bf00      	nop
 8001b74:	20000714 	andcs	r0, r0, r4, lsl r7
 8001b78:	200000e0 	andcs	r0, r0, r0, ror #1
 8001b7c:	20000710 	andcs	r0, r0, r0, lsl r7

08001b80 <Standard_SetInterface>:
* Output         : None.
* Return         : - Return USB_SUCCESS, if the request is performed.
*                  - Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetInterface(void)
{
 8001b80:	b538      	push	{r3, r4, r5, lr}
  RESULT Re;
  /*Test if the specified Interface and Alternate Setting are supported by
    the application Firmware*/
  Re = (*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, pInformation->USBwValue0);
 8001b82:	4a0e      	ldr	r2, [pc, #56]	; (8001bbc <Standard_SetInterface+0x3c>)
 8001b84:	4d0e      	ldr	r5, [pc, #56]	; (8001bc0 <Standard_SetInterface+0x40>)
 8001b86:	6812      	ldr	r2, [r2, #0]
 8001b88:	682b      	ldr	r3, [r5, #0]
 8001b8a:	6992      	ldr	r2, [r2, #24]
 8001b8c:	7958      	ldrb	r0, [r3, #5]
 8001b8e:	78d9      	ldrb	r1, [r3, #3]
 8001b90:	4790      	blx	r2

  if (pInformation->Current_Configuration != 0)
 8001b92:	682b      	ldr	r3, [r5, #0]
 8001b94:	7a9a      	ldrb	r2, [r3, #10]
 8001b96:	b17a      	cbz	r2, 8001bb8 <Standard_SetInterface+0x38>
  {
    if ((Re != USB_SUCCESS) || (pInformation->USBwIndex1 != 0)
 8001b98:	b970      	cbnz	r0, 8001bb8 <Standard_SetInterface+0x38>
 8001b9a:	791a      	ldrb	r2, [r3, #4]
 8001b9c:	b962      	cbnz	r2, 8001bb8 <Standard_SetInterface+0x38>
        || (pInformation->USBwValue1 != 0))
 8001b9e:	789c      	ldrb	r4, [r3, #2]
 8001ba0:	b954      	cbnz	r4, 8001bb8 <Standard_SetInterface+0x38>
    {
      return  USB_UNSUPPORT;
    }
    else if (Re == USB_SUCCESS)
    {
      pUser_Standard_Requests->User_SetInterface();
 8001ba2:	4b08      	ldr	r3, [pc, #32]	; (8001bc4 <Standard_SetInterface+0x44>)
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	68db      	ldr	r3, [r3, #12]
 8001ba8:	4798      	blx	r3
      pInformation->Current_Interface = pInformation->USBwIndex0;
 8001baa:	682b      	ldr	r3, [r5, #0]
      pInformation->Current_AlternateSetting = pInformation->USBwValue0;
 8001bac:	4620      	mov	r0, r4
      return  USB_UNSUPPORT;
    }
    else if (Re == USB_SUCCESS)
    {
      pUser_Standard_Requests->User_SetInterface();
      pInformation->Current_Interface = pInformation->USBwIndex0;
 8001bae:	795a      	ldrb	r2, [r3, #5]
 8001bb0:	72da      	strb	r2, [r3, #11]
      pInformation->Current_AlternateSetting = pInformation->USBwValue0;
 8001bb2:	78da      	ldrb	r2, [r3, #3]
 8001bb4:	731a      	strb	r2, [r3, #12]
 8001bb6:	bd38      	pop	{r3, r4, r5, pc}
      return USB_SUCCESS;
    }

  }

  return USB_UNSUPPORT;
 8001bb8:	2002      	movs	r0, #2
}
 8001bba:	bd38      	pop	{r3, r4, r5, pc}
 8001bbc:	200006ec 	andcs	r0, r0, ip, ror #13
 8001bc0:	20000714 	andcs	r0, r0, r4, lsl r7
 8001bc4:	20000710 	andcs	r0, r0, r0, lsl r7

08001bc8 <Standard_ClearFeature>:
* Output         : None.
* Return         : - Return USB_SUCCESS, if the request is performed.
*                  - Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_ClearFeature(void)
{
 8001bc8:	b538      	push	{r3, r4, r5, lr}
  u32     Type_Rec = Type_Recipient;
 8001bca:	4b31      	ldr	r3, [pc, #196]	; (8001c90 <Standard_ClearFeature+0xc8>)
 8001bcc:	681b      	ldr	r3, [r3, #0]
 8001bce:	7818      	ldrb	r0, [r3, #0]
  u32     Status;


  if (Type_Rec == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001bd0:	f010 007f 	ands.w	r0, r0, #127	; 0x7f
 8001bd4:	d104      	bne.n	8001be0 <Standard_ClearFeature+0x18>
  {/*Device Clear Feature*/
    ClrBit(pInformation->Current_Feature, 5);
 8001bd6:	7a5a      	ldrb	r2, [r3, #9]
 8001bd8:	f022 0220 	bic.w	r2, r2, #32
 8001bdc:	725a      	strb	r2, [r3, #9]
    return USB_SUCCESS;
 8001bde:	bd38      	pop	{r3, r4, r5, pc}
  }
  else if (Type_Rec == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 8001be0:	2802      	cmp	r0, #2
 8001be2:	d153      	bne.n	8001c8c <Standard_ClearFeature+0xc4>
    DEVICE* pDev;
    u32 Related_Endpoint;
    u32 wIndex0;
    u32 rEP;

    if ((pInformation->USBwValue != ENDPOINT_STALL)
 8001be4:	885a      	ldrh	r2, [r3, #2]
 8001be6:	2a00      	cmp	r2, #0
 8001be8:	d151      	bne.n	8001c8e <Standard_ClearFeature+0xc6>
        || (pInformation->USBwIndex1 != 0))
 8001bea:	791a      	ldrb	r2, [r3, #4]
 8001bec:	2a00      	cmp	r2, #0
 8001bee:	d14e      	bne.n	8001c8e <Standard_ClearFeature+0xc6>
    {
      return USB_UNSUPPORT;
    }

    pDev = &Device_Table;
    wIndex0 = pInformation->USBwIndex0;
 8001bf0:	7959      	ldrb	r1, [r3, #5]
    else
    {
      Status = _GetEPRxStatus(Related_Endpoint);
    }

    if ((rEP >= pDev->Total_Endpoint) || (Status == 0)
 8001bf2:	4d28      	ldr	r5, [pc, #160]	; (8001c94 <Standard_ClearFeature+0xcc>)
      return USB_UNSUPPORT;
    }

    pDev = &Device_Table;
    wIndex0 = pInformation->USBwIndex0;
    rEP = wIndex0 & ~0x80;
 8001bf4:	f021 0080 	bic.w	r0, r1, #128	; 0x80
 8001bf8:	0084      	lsls	r4, r0, #2

    if (ValBit(pInformation->USBwIndex0, 7))
    {
      /*Get Status of endpoint & stall the request if the related_ENdpoint
      is Disabled*/
      Status = _GetEPTxStatus(Related_Endpoint);
 8001bfa:	f104 4280 	add.w	r2, r4, #1073741824	; 0x40000000
 8001bfe:	f502 42b8 	add.w	r2, r2, #23552	; 0x5c00
 8001c02:	6812      	ldr	r2, [r2, #0]
    else
    {
      Status = _GetEPRxStatus(Related_Endpoint);
    }

    if ((rEP >= pDev->Total_Endpoint) || (Status == 0)
 8001c04:	782d      	ldrb	r5, [r5, #0]
    pDev = &Device_Table;
    wIndex0 = pInformation->USBwIndex0;
    rEP = wIndex0 & ~0x80;
    Related_Endpoint = ENDP0 + rEP;

    if (ValBit(pInformation->USBwIndex0, 7))
 8001c06:	f011 0f80 	tst.w	r1, #128	; 0x80
    {
      /*Get Status of endpoint & stall the request if the related_ENdpoint
      is Disabled*/
      Status = _GetEPTxStatus(Related_Endpoint);
 8001c0a:	bf14      	ite	ne
 8001c0c:	f002 0230 	andne.w	r2, r2, #48	; 0x30
    }
    else
    {
      Status = _GetEPRxStatus(Related_Endpoint);
 8001c10:	f402 5240 	andeq.w	r2, r2, #12288	; 0x3000
    }

    if ((rEP >= pDev->Total_Endpoint) || (Status == 0)
 8001c14:	42a8      	cmp	r0, r5
 8001c16:	d239      	bcs.n	8001c8c <Standard_ClearFeature+0xc4>
 8001c18:	2a00      	cmp	r2, #0
 8001c1a:	d037      	beq.n	8001c8c <Standard_ClearFeature+0xc4>
        || (pInformation->Current_Configuration == 0))
 8001c1c:	7a9b      	ldrb	r3, [r3, #10]
 8001c1e:	2b00      	cmp	r3, #0
 8001c20:	d034      	beq.n	8001c8c <Standard_ClearFeature+0xc4>


    if (wIndex0 & 0x80)
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint ))
 8001c22:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8001c26:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
    {
      return USB_UNSUPPORT;
    }


    if (wIndex0 & 0x80)
 8001c2a:	060a      	lsls	r2, r1, #24
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint ))
 8001c2c:	6823      	ldr	r3, [r4, #0]
    {
      return USB_UNSUPPORT;
    }


    if (wIndex0 & 0x80)
 8001c2e:	d50c      	bpl.n	8001c4a <Standard_ClearFeature+0x82>
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint ))
 8001c30:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8001c34:	2b10      	cmp	r3, #16
 8001c36:	d123      	bne.n	8001c80 <Standard_ClearFeature+0xb8>
      {
      #ifndef STM32F10X_CL
        ClearDTOG_TX(Related_Endpoint);
 8001c38:	b2c4      	uxtb	r4, r0
 8001c3a:	4620      	mov	r0, r4
 8001c3c:	f000 fb97 	bl	800236e <ClearDTOG_TX>
      #endif /* STM32F10X_CL */
        SetEPTxStatus(Related_Endpoint, EP_TX_VALID);
 8001c40:	4620      	mov	r0, r4
 8001c42:	2130      	movs	r1, #48	; 0x30
 8001c44:	f000 fb18 	bl	8002278 <SetEPTxStatus>
 8001c48:	e01a      	b.n	8001c80 <Standard_ClearFeature+0xb8>
      }
    }
    else
    {
      /* OUT endpoint */
      if (_GetRxStallStatus(Related_Endpoint))
 8001c4a:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8001c4e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001c52:	d115      	bne.n	8001c80 <Standard_ClearFeature+0xb8>
      {
        if (Related_Endpoint == ENDP0)
 8001c54:	b928      	cbnz	r0, 8001c62 <Standard_ClearFeature+0x9a>
        {
          /* After clear the STALL, enable the default endpoint receiver */
          SetEPRxCount(Related_Endpoint, Device_Property.MaxPacketSize);
 8001c56:	4b10      	ldr	r3, [pc, #64]	; (8001c98 <Standard_ClearFeature+0xd0>)
 8001c58:	f893 102c 	ldrb.w	r1, [r3, #44]	; 0x2c
 8001c5c:	f000 fbe8 	bl	8002430 <SetEPRxCount>
 8001c60:	e001      	b.n	8001c66 <Standard_ClearFeature+0x9e>
          _SetEPRxStatus(Related_Endpoint, EP_RX_VALID);
        }
        else
        {
        #ifndef STM32F10X_CL
          ClearDTOG_RX(Related_Endpoint);
 8001c62:	f000 fb71 	bl	8002348 <ClearDTOG_RX>
        #endif /* STM32F10X_CL */
          _SetEPRxStatus(Related_Endpoint, EP_RX_VALID);
 8001c66:	6823      	ldr	r3, [r4, #0]
 8001c68:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8001c6c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001c70:	b29b      	uxth	r3, r3
 8001c72:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8001c76:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001c7a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001c7e:	6023      	str	r3, [r4, #0]
        }
      }
    }
    pUser_Standard_Requests->User_ClearFeature();
 8001c80:	4b06      	ldr	r3, [pc, #24]	; (8001c9c <Standard_ClearFeature+0xd4>)
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	695b      	ldr	r3, [r3, #20]
 8001c86:	4798      	blx	r3
    return USB_SUCCESS;
 8001c88:	2000      	movs	r0, #0
 8001c8a:	bd38      	pop	{r3, r4, r5, pc}
  }

  return USB_UNSUPPORT;
 8001c8c:	2002      	movs	r0, #2
}
 8001c8e:	bd38      	pop	{r3, r4, r5, pc}
 8001c90:	20000714 	andcs	r0, r0, r4, lsl r7
 8001c94:	200000e0 	andcs	r0, r0, r0, ror #1
 8001c98:	2000005c 	andcs	r0, r0, ip, asr r0
 8001c9c:	20000710 	andcs	r0, r0, r0, lsl r7

08001ca0 <Standard_SetEndPointFeature>:
* Output         : None.
* Return         : - Return USB_SUCCESS, if the request is performed.
*                  - Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetEndPointFeature(void)
{
 8001ca0:	b538      	push	{r3, r4, r5, lr}
  u32    wIndex0;
  u32    Related_Endpoint;
  u32    rEP;
  u32    Status;

  wIndex0 = pInformation->USBwIndex0;
 8001ca2:	4b1f      	ldr	r3, [pc, #124]	; (8001d20 <Standard_SetEndPointFeature+0x80>)
  else
  {
    Status = _GetEPRxStatus(Related_Endpoint);
  }

  if (Related_Endpoint >= Device_Table.Total_Endpoint
 8001ca4:	4d1f      	ldr	r5, [pc, #124]	; (8001d24 <Standard_SetEndPointFeature+0x84>)
  u32    wIndex0;
  u32    Related_Endpoint;
  u32    rEP;
  u32    Status;

  wIndex0 = pInformation->USBwIndex0;
 8001ca6:	6818      	ldr	r0, [r3, #0]
  else
  {
    Status = _GetEPRxStatus(Related_Endpoint);
  }

  if (Related_Endpoint >= Device_Table.Total_Endpoint
 8001ca8:	782d      	ldrb	r5, [r5, #0]
  u32    wIndex0;
  u32    Related_Endpoint;
  u32    rEP;
  u32    Status;

  wIndex0 = pInformation->USBwIndex0;
 8001caa:	7941      	ldrb	r1, [r0, #5]
  rEP = wIndex0 & ~0x80;
 8001cac:	f021 0480 	bic.w	r4, r1, #128	; 0x80
 8001cb0:	00a3      	lsls	r3, r4, #2

  if (ValBit(pInformation->USBwIndex0, 7))
  {
    /* get Status of endpoint & stall the request if the related_ENdpoint
    is Disabled*/
    Status = _GetEPTxStatus(Related_Endpoint);
 8001cb2:	f103 4280 	add.w	r2, r3, #1073741824	; 0x40000000
 8001cb6:	f502 42b8 	add.w	r2, r2, #23552	; 0x5c00
 8001cba:	6812      	ldr	r2, [r2, #0]

  wIndex0 = pInformation->USBwIndex0;
  rEP = wIndex0 & ~0x80;
  Related_Endpoint = ENDP0 + rEP;

  if (ValBit(pInformation->USBwIndex0, 7))
 8001cbc:	f011 0f80 	tst.w	r1, #128	; 0x80
  {
    /* get Status of endpoint & stall the request if the related_ENdpoint
    is Disabled*/
    Status = _GetEPTxStatus(Related_Endpoint);
 8001cc0:	bf14      	ite	ne
 8001cc2:	f002 0230 	andne.w	r2, r2, #48	; 0x30
  }
  else
  {
    Status = _GetEPRxStatus(Related_Endpoint);
 8001cc6:	f402 5240 	andeq.w	r2, r2, #12288	; 0x3000
  }

  if (Related_Endpoint >= Device_Table.Total_Endpoint
 8001cca:	42ac      	cmp	r4, r5
 8001ccc:	d225      	bcs.n	8001d1a <Standard_SetEndPointFeature+0x7a>
      || pInformation->USBwValue != 0 || Status == 0
 8001cce:	8844      	ldrh	r4, [r0, #2]
 8001cd0:	bb1c      	cbnz	r4, 8001d1a <Standard_SetEndPointFeature+0x7a>
 8001cd2:	b312      	cbz	r2, 8001d1a <Standard_SetEndPointFeature+0x7a>
      || pInformation->Current_Configuration == 0)
 8001cd4:	7a82      	ldrb	r2, [r0, #10]
 8001cd6:	b302      	cbz	r2, 8001d1a <Standard_SetEndPointFeature+0x7a>
  else
  {
    if (wIndex0 & 0x80)
    {
      /* IN endpoint */
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8001cd8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8001cdc:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8001ce0:	681a      	ldr	r2, [r3, #0]
  {
    return USB_UNSUPPORT;
  }
  else
  {
    if (wIndex0 & 0x80)
 8001ce2:	0609      	lsls	r1, r1, #24
    {
      /* IN endpoint */
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8001ce4:	bf4b      	itete	mi
 8001ce6:	f422 42e0 	bicmi.w	r2, r2, #28672	; 0x7000
    }

    else
    {
      /* OUT endpoint */
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
 8001cea:	f422 4280 	bicpl.w	r2, r2, #16384	; 0x4000
  else
  {
    if (wIndex0 & 0x80)
    {
      /* IN endpoint */
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8001cee:	f022 0240 	bicmi.w	r2, r2, #64	; 0x40
    }

    else
    {
      /* OUT endpoint */
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
 8001cf2:	f022 0270 	bicpl.w	r2, r2, #112	; 0x70
  else
  {
    if (wIndex0 & 0x80)
    {
      /* IN endpoint */
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8001cf6:	bf4b      	itete	mi
 8001cf8:	b292      	uxthmi	r2, r2
    }

    else
    {
      /* OUT endpoint */
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
 8001cfa:	b292      	uxthpl	r2, r2
  else
  {
    if (wIndex0 & 0x80)
    {
      /* IN endpoint */
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8001cfc:	f082 0210 	eormi.w	r2, r2, #16
    }

    else
    {
      /* OUT endpoint */
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
 8001d00:	f482 5280 	eorpl.w	r2, r2, #4096	; 0x1000
 8001d04:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001d08:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001d0c:	601a      	str	r2, [r3, #0]
    }
  }
  pUser_Standard_Requests->User_SetEndPointFeature();
 8001d0e:	4b06      	ldr	r3, [pc, #24]	; (8001d28 <Standard_SetEndPointFeature+0x88>)
 8001d10:	681b      	ldr	r3, [r3, #0]
 8001d12:	699b      	ldr	r3, [r3, #24]
 8001d14:	4798      	blx	r3
  return USB_SUCCESS;
 8001d16:	2000      	movs	r0, #0
 8001d18:	bd38      	pop	{r3, r4, r5, pc}

  if (Related_Endpoint >= Device_Table.Total_Endpoint
      || pInformation->USBwValue != 0 || Status == 0
      || pInformation->Current_Configuration == 0)
  {
    return USB_UNSUPPORT;
 8001d1a:	2002      	movs	r0, #2
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
    }
  }
  pUser_Standard_Requests->User_SetEndPointFeature();
  return USB_SUCCESS;
}
 8001d1c:	bd38      	pop	{r3, r4, r5, pc}
 8001d1e:	bf00      	nop
 8001d20:	20000714 	andcs	r0, r0, r4, lsl r7
 8001d24:	200000e0 	andcs	r0, r0, r0, ror #1
 8001d28:	20000710 	andcs	r0, r0, r0, lsl r7

08001d2c <Standard_SetDeviceFeature>:
* Output         : None.
* Return         : - Return USB_SUCCESS, if the request is performed.
*                  - Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetDeviceFeature(void)
{
 8001d2c:	b508      	push	{r3, lr}
  SetBit(pInformation->Current_Feature, 5);
 8001d2e:	4b06      	ldr	r3, [pc, #24]	; (8001d48 <Standard_SetDeviceFeature+0x1c>)
 8001d30:	681a      	ldr	r2, [r3, #0]
 8001d32:	7a53      	ldrb	r3, [r2, #9]
 8001d34:	f043 0320 	orr.w	r3, r3, #32
 8001d38:	7253      	strb	r3, [r2, #9]
  pUser_Standard_Requests->User_SetDeviceFeature();
 8001d3a:	4b04      	ldr	r3, [pc, #16]	; (8001d4c <Standard_SetDeviceFeature+0x20>)
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	69db      	ldr	r3, [r3, #28]
 8001d40:	4798      	blx	r3
  return USB_SUCCESS;
}
 8001d42:	2000      	movs	r0, #0
 8001d44:	bd08      	pop	{r3, pc}
 8001d46:	bf00      	nop
 8001d48:	20000714 	andcs	r0, r0, r4, lsl r7
 8001d4c:	20000710 	andcs	r0, r0, r0, lsl r7

08001d50 <Standard_GetDescriptorData>:
*******************************************************************************/
u8 *Standard_GetDescriptorData(u16 Length, ONE_DESCRIPTOR *pDesc)
{
  u32  wOffset;

  wOffset = pInformation->Ctrl_Info.Usb_wOffset;
 8001d50:	4b05      	ldr	r3, [pc, #20]	; (8001d68 <Standard_GetDescriptorData+0x18>)
* Return         : Address of a part of the descriptor pointed by the Usb_
*                  wOffset The buffer pointed by this address contains at least
*                  Length bytes.
*******************************************************************************/
u8 *Standard_GetDescriptorData(u16 Length, ONE_DESCRIPTOR *pDesc)
{
 8001d52:	b510      	push	{r4, lr}
  u32  wOffset;

  wOffset = pInformation->Ctrl_Info.Usb_wOffset;
 8001d54:	681c      	ldr	r4, [r3, #0]
 8001d56:	8a62      	ldrh	r2, [r4, #18]
  if (Length == 0)
 8001d58:	b918      	cbnz	r0, 8001d62 <Standard_GetDescriptorData+0x12>
  {
    pInformation->Ctrl_Info.Usb_wLength = pDesc->Descriptor_Size - wOffset;
 8001d5a:	888b      	ldrh	r3, [r1, #4]
 8001d5c:	1a9b      	subs	r3, r3, r2
 8001d5e:	8223      	strh	r3, [r4, #16]
    return 0;
 8001d60:	bd10      	pop	{r4, pc}
  }

  return pDesc->Descriptor + wOffset;
 8001d62:	6808      	ldr	r0, [r1, #0]
 8001d64:	4410      	add	r0, r2
}
 8001d66:	bd10      	pop	{r4, pc}
 8001d68:	20000714 	andcs	r0, r0, r4, lsl r7

08001d6c <Post0_Process>:
* Output         : None.
* Return         : - 0 if the control State is in PAUSE
*                  - 1 if not.
*******************************************************************************/
u8 Post0_Process(void)
{
 8001d6c:	b508      	push	{r3, lr}
#ifdef STM32F10X_CL  
  USB_OTG_EP *ep;
#endif /* STM32F10X_CL */
      
  SetEPRxCount(ENDP0, Device_Property.MaxPacketSize);
 8001d6e:	4b0c      	ldr	r3, [pc, #48]	; (8001da0 <Post0_Process+0x34>)
 8001d70:	2000      	movs	r0, #0
 8001d72:	f893 102c 	ldrb.w	r1, [r3, #44]	; 0x2c
 8001d76:	f000 fb5b 	bl	8002430 <SetEPRxCount>

  if (pInformation->ControlState == STALLED)
 8001d7a:	4b0a      	ldr	r3, [pc, #40]	; (8001da4 <Post0_Process+0x38>)
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	7a18      	ldrb	r0, [r3, #8]
 8001d80:	2808      	cmp	r0, #8
  {
    vSetEPRxStatus(EP_RX_STALL);
 8001d82:	bf01      	itttt	eq
 8001d84:	4b08      	ldreq	r3, [pc, #32]	; (8001da8 <Post0_Process+0x3c>)
 8001d86:	f44f 5280 	moveq.w	r2, #4096	; 0x1000
 8001d8a:	801a      	strheq	r2, [r3, #0]
    vSetEPTxStatus(EP_TX_STALL);
 8001d8c:	4b07      	ldreq	r3, [pc, #28]	; (8001dac <Post0_Process+0x40>)
 8001d8e:	bf04      	itt	eq
 8001d90:	2210      	moveq	r2, #16
 8001d92:	801a      	strheq	r2, [r3, #0]
    OTGD_FS_EP0StartXfer(ep);    
  }  
#endif /* STM32F10X_CL */

  return (pInformation->ControlState == PAUSE);
}
 8001d94:	f1a0 0309 	sub.w	r3, r0, #9
 8001d98:	4258      	negs	r0, r3
 8001d9a:	4158      	adcs	r0, r3
 8001d9c:	bd08      	pop	{r3, pc}
 8001d9e:	bf00      	nop
 8001da0:	2000005c 	andcs	r0, r0, ip, asr r0
 8001da4:	20000714 	andcs	r0, r0, r4, lsl r7
 8001da8:	2000071c 	andcs	r0, r0, ip, lsl r7
 8001dac:	2000071e 	andcs	r0, r0, lr, lsl r7

08001db0 <Setup0_Process>:
* Input          : None.
* Output         : None.
* Return         : Post0_Process.
*******************************************************************************/
u8 Setup0_Process(void)
{
 8001db0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  ep = PCD_GetOutEP(ENDP0);
  pBuf.b = ep->xfer_buff;
#else  
  u16 offset = 1;
  
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8001db2:	4e96      	ldr	r6, [pc, #600]	; (800200c <Setup0_Process+0x25c>)
 8001db4:	4b96      	ldr	r3, [pc, #600]	; (8002010 <Setup0_Process+0x260>)
 8001db6:	6832      	ldr	r2, [r6, #0]
#endif /* STM32F10X_CL */

  if (pInformation->ControlState != PAUSE)
 8001db8:	4d96      	ldr	r5, [pc, #600]	; (8002014 <Setup0_Process+0x264>)
 8001dba:	b292      	uxth	r2, r2
  ep = PCD_GetOutEP(ENDP0);
  pBuf.b = ep->xfer_buff;
#else  
  u16 offset = 1;
  
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8001dbc:	4413      	add	r3, r2
#endif /* STM32F10X_CL */

  if (pInformation->ControlState != PAUSE)
 8001dbe:	682f      	ldr	r7, [r5, #0]
  ep = PCD_GetOutEP(ENDP0);
  pBuf.b = ep->xfer_buff;
#else  
  u16 offset = 1;
  
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8001dc0:	005b      	lsls	r3, r3, #1
 8001dc2:	681c      	ldr	r4, [r3, #0]
#endif /* STM32F10X_CL */

  if (pInformation->ControlState != PAUSE)
 8001dc4:	7a3b      	ldrb	r3, [r7, #8]
 8001dc6:	2b09      	cmp	r3, #9
 8001dc8:	d015      	beq.n	8001df6 <Setup0_Process+0x46>
 8001dca:	b2a4      	uxth	r4, r4
  ep = PCD_GetOutEP(ENDP0);
  pBuf.b = ep->xfer_buff;
#else  
  u16 offset = 1;
  
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8001dcc:	0064      	lsls	r4, r4, #1
 8001dce:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8001dd2:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
#endif /* STM32F10X_CL */

  if (pInformation->ControlState != PAUSE)
  {
    pInformation->USBbmRequestType = *pBuf.b++; /* bmRequestType */
 8001dd6:	7823      	ldrb	r3, [r4, #0]
 8001dd8:	703b      	strb	r3, [r7, #0]
    pInformation->USBbRequest = *pBuf.b++; /* bRequest */
 8001dda:	7863      	ldrb	r3, [r4, #1]
 8001ddc:	707b      	strb	r3, [r7, #1]
    pBuf.w += offset;  /* word not accessed because of 32 bits addressing */
    pInformation->USBwValue = ByteSwap(*pBuf.w++); /* wValue */
 8001dde:	88a0      	ldrh	r0, [r4, #4]
 8001de0:	f000 fb56 	bl	8002490 <ByteSwap>
 8001de4:	8078      	strh	r0, [r7, #2]
    pBuf.w += offset;  /* word not accessed because of 32 bits addressing */
    pInformation->USBwIndex  = ByteSwap(*pBuf.w++); /* wIndex */
 8001de6:	8920      	ldrh	r0, [r4, #8]
 8001de8:	682f      	ldr	r7, [r5, #0]
 8001dea:	f000 fb51 	bl	8002490 <ByteSwap>
 8001dee:	80b8      	strh	r0, [r7, #4]
    pBuf.w += offset;  /* word not accessed because of 32 bits addressing */
    pInformation->USBwLength = *pBuf.w; /* wLength */
 8001df0:	89a2      	ldrh	r2, [r4, #12]
 8001df2:	682b      	ldr	r3, [r5, #0]
 8001df4:	80da      	strh	r2, [r3, #6]
  }

  pInformation->ControlState = SETTING_UP;
 8001df6:	682b      	ldr	r3, [r5, #0]
 8001df8:	2201      	movs	r2, #1
 8001dfa:	721a      	strb	r2, [r3, #8]
  if (pInformation->USBwLength == 0)
 8001dfc:	88da      	ldrh	r2, [r3, #6]
 8001dfe:	785c      	ldrb	r4, [r3, #1]
 8001e00:	2a00      	cmp	r2, #0
 8001e02:	d162      	bne.n	8001eca <Setup0_Process+0x11a>
{
  RESULT Result = USB_UNSUPPORT;
  u32 RequestNo = pInformation->USBbRequest;
  u32 ControlState;

  if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001e04:	781a      	ldrb	r2, [r3, #0]
 8001e06:	f012 027f 	ands.w	r2, r2, #127	; 0x7f
 8001e0a:	d13a      	bne.n	8001e82 <Setup0_Process+0xd2>
  {
    /* Device Request*/
    /* SET_CONFIGURATION*/
    if (RequestNo == SET_CONFIGURATION)
 8001e0c:	2c09      	cmp	r4, #9
 8001e0e:	d102      	bne.n	8001e16 <Setup0_Process+0x66>
    {
      Result = Standard_SetConfiguration();
 8001e10:	f7ff fe9a 	bl	8001b48 <Standard_SetConfiguration>
 8001e14:	e044      	b.n	8001ea0 <Setup0_Process+0xf0>
    }

    /*SET ADDRESS*/
    else if (RequestNo == SET_ADDRESS)
 8001e16:	2c05      	cmp	r4, #5
 8001e18:	d10f      	bne.n	8001e3a <Setup0_Process+0x8a>
    {
      if ((pInformation->USBwValue0 > 127) || (pInformation->USBwValue1 != 0)
 8001e1a:	f993 2003 	ldrsb.w	r2, [r3, #3]
 8001e1e:	2a00      	cmp	r2, #0
 8001e20:	da01      	bge.n	8001e26 <Setup0_Process+0x76>
          || (pInformation->USBwIndex != 0)
          || (pInformation->Current_Configuration != 0))
        /* Device Address should be 127 or less*/
      {
        ControlState = STALLED;
 8001e22:	2308      	movs	r3, #8
 8001e24:	e04e      	b.n	8001ec4 <Setup0_Process+0x114>
    }

    /*SET ADDRESS*/
    else if (RequestNo == SET_ADDRESS)
    {
      if ((pInformation->USBwValue0 > 127) || (pInformation->USBwValue1 != 0)
 8001e26:	789a      	ldrb	r2, [r3, #2]
 8001e28:	2a00      	cmp	r2, #0
 8001e2a:	d1fa      	bne.n	8001e22 <Setup0_Process+0x72>
          || (pInformation->USBwIndex != 0)
 8001e2c:	889a      	ldrh	r2, [r3, #4]
 8001e2e:	2a00      	cmp	r2, #0
 8001e30:	d1f7      	bne.n	8001e22 <Setup0_Process+0x72>
          || (pInformation->Current_Configuration != 0))
 8001e32:	7a9b      	ldrb	r3, [r3, #10]
 8001e34:	2b00      	cmp	r3, #0
 8001e36:	d037      	beq.n	8001ea8 <Setup0_Process+0xf8>
 8001e38:	e7f3      	b.n	8001e22 <Setup0_Process+0x72>
         SetDeviceAddress(pInformation->USBwValue0);
      #endif  /* STM32F10X_CL */
      }
    }
    /*SET FEATURE for Device*/
    else if (RequestNo == SET_FEATURE)
 8001e3a:	2c03      	cmp	r4, #3
 8001e3c:	d113      	bne.n	8001e66 <Setup0_Process+0xb6>
    {
      if ((pInformation->USBwValue0 == DEVICE_REMOTE_WAKEUP)
 8001e3e:	78da      	ldrb	r2, [r3, #3]
 8001e40:	2a01      	cmp	r2, #1
 8001e42:	d007      	beq.n	8001e54 <Setup0_Process+0xa4>
  }


  if (Result != USB_SUCCESS)
  {
    Result = (*pProperty->Class_NoData_Setup)(RequestNo);
 8001e44:	4b74      	ldr	r3, [pc, #464]	; (8002018 <Setup0_Process+0x268>)
 8001e46:	4620      	mov	r0, r4
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	695b      	ldr	r3, [r3, #20]
 8001e4c:	4798      	blx	r3
    if (Result == USB_NOT_READY)
 8001e4e:	2803      	cmp	r0, #3
 8001e50:	d128      	bne.n	8001ea4 <Setup0_Process+0xf4>
 8001e52:	e036      	b.n	8001ec2 <Setup0_Process+0x112>
    }
    /*SET FEATURE for Device*/
    else if (RequestNo == SET_FEATURE)
    {
      if ((pInformation->USBwValue0 == DEVICE_REMOTE_WAKEUP)
          && (pInformation->USBwIndex == 0)
 8001e54:	889a      	ldrh	r2, [r3, #4]
 8001e56:	2a00      	cmp	r2, #0
 8001e58:	d1f4      	bne.n	8001e44 <Setup0_Process+0x94>
          && (ValBit(pInformation->Current_Feature, 5)))
 8001e5a:	7a5b      	ldrb	r3, [r3, #9]
 8001e5c:	0698      	lsls	r0, r3, #26
 8001e5e:	d5f1      	bpl.n	8001e44 <Setup0_Process+0x94>
      {
        Result = Standard_SetDeviceFeature();
 8001e60:	f7ff ff64 	bl	8001d2c <Standard_SetDeviceFeature>
 8001e64:	e01c      	b.n	8001ea0 <Setup0_Process+0xf0>
      {
        Result = USB_UNSUPPORT;
      }
    }
    /*Clear FEATURE for Device */
    else if (RequestNo == CLEAR_FEATURE)
 8001e66:	2c01      	cmp	r4, #1
 8001e68:	d1ec      	bne.n	8001e44 <Setup0_Process+0x94>
    {
      if (pInformation->USBwValue0 == DEVICE_REMOTE_WAKEUP
 8001e6a:	78da      	ldrb	r2, [r3, #3]
 8001e6c:	2a01      	cmp	r2, #1
 8001e6e:	d1e9      	bne.n	8001e44 <Setup0_Process+0x94>
          && pInformation->USBwIndex == 0
 8001e70:	889a      	ldrh	r2, [r3, #4]
 8001e72:	2a00      	cmp	r2, #0
 8001e74:	d1e6      	bne.n	8001e44 <Setup0_Process+0x94>
          && ValBit(pInformation->Current_Feature, 5))
 8001e76:	7a5b      	ldrb	r3, [r3, #9]
 8001e78:	0699      	lsls	r1, r3, #26
 8001e7a:	d5e3      	bpl.n	8001e44 <Setup0_Process+0x94>
      {
        Result = Standard_ClearFeature();
 8001e7c:	f7ff fea4 	bl	8001bc8 <Standard_ClearFeature>
 8001e80:	e00e      	b.n	8001ea0 <Setup0_Process+0xf0>
    }

  }

  /* Interface Request*/
  else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 8001e82:	2a01      	cmp	r2, #1
 8001e84:	d104      	bne.n	8001e90 <Setup0_Process+0xe0>
  {
    /*SET INTERFACE*/
    if (RequestNo == SET_INTERFACE)
 8001e86:	2c0b      	cmp	r4, #11
 8001e88:	d1dc      	bne.n	8001e44 <Setup0_Process+0x94>
    {
      Result = Standard_SetInterface();
 8001e8a:	f7ff fe79 	bl	8001b80 <Standard_SetInterface>
 8001e8e:	e007      	b.n	8001ea0 <Setup0_Process+0xf0>
    }
  }

  /* EndPoint Request*/
  else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 8001e90:	2a02      	cmp	r2, #2
 8001e92:	d1d7      	bne.n	8001e44 <Setup0_Process+0x94>
  {
    /*CLEAR FEATURE for EndPoint*/
    if (RequestNo == CLEAR_FEATURE)
 8001e94:	2c01      	cmp	r4, #1
 8001e96:	d0f1      	beq.n	8001e7c <Setup0_Process+0xcc>
    {
      Result = Standard_ClearFeature();
    }
    /* SET FEATURE for EndPoint*/
    else if (RequestNo == SET_FEATURE)
 8001e98:	2c03      	cmp	r4, #3
 8001e9a:	d1d3      	bne.n	8001e44 <Setup0_Process+0x94>
    {
      Result = Standard_SetEndPointFeature();
 8001e9c:	f7ff ff00 	bl	8001ca0 <Standard_SetEndPointFeature>
  {
    Result = USB_UNSUPPORT;
  }


  if (Result != USB_SUCCESS)
 8001ea0:	b110      	cbz	r0, 8001ea8 <Setup0_Process+0xf8>
 8001ea2:	e7cf      	b.n	8001e44 <Setup0_Process+0x94>
      ControlState = PAUSE;
      goto exit_NoData_Setup0;
    }
  }

  if (Result != USB_SUCCESS)
 8001ea4:	2800      	cmp	r0, #0
 8001ea6:	d1bc      	bne.n	8001e22 <Setup0_Process+0x72>
    goto exit_NoData_Setup0;
  }

  ControlState = WAIT_STATUS_IN;/* After no data stage SETUP */

  USB_StatusIn();
 8001ea8:	6832      	ldr	r2, [r6, #0]
 8001eaa:	4b5c      	ldr	r3, [pc, #368]	; (800201c <Setup0_Process+0x26c>)
 8001eac:	b292      	uxth	r2, r2
 8001eae:	4413      	add	r3, r2
 8001eb0:	005b      	lsls	r3, r3, #1
 8001eb2:	2200      	movs	r2, #0
 8001eb4:	801a      	strh	r2, [r3, #0]
 8001eb6:	805a      	strh	r2, [r3, #2]
 8001eb8:	4b59      	ldr	r3, [pc, #356]	; (8002020 <Setup0_Process+0x270>)
 8001eba:	2230      	movs	r2, #48	; 0x30
 8001ebc:	801a      	strh	r2, [r3, #0]
  {
    ControlState = STALLED;
    goto exit_NoData_Setup0;
  }

  ControlState = WAIT_STATUS_IN;/* After no data stage SETUP */
 8001ebe:	2306      	movs	r3, #6
 8001ec0:	e000      	b.n	8001ec4 <Setup0_Process+0x114>
  if (Result != USB_SUCCESS)
  {
    Result = (*pProperty->Class_NoData_Setup)(RequestNo);
    if (Result == USB_NOT_READY)
    {
      ControlState = PAUSE;
 8001ec2:	2309      	movs	r3, #9
  ControlState = WAIT_STATUS_IN;/* After no data stage SETUP */

  USB_StatusIn();

exit_NoData_Setup0:
  pInformation->ControlState = ControlState;
 8001ec4:	682a      	ldr	r2, [r5, #0]
 8001ec6:	7213      	strb	r3, [r2, #8]
 8001ec8:	e0cc      	b.n	8002064 <Setup0_Process+0x2b4>

  CopyRoutine = NULL;
  wOffset = 0;

  /*GET DESCRIPTOR*/
  if (Request_No == GET_DESCRIPTOR)
 8001eca:	2c06      	cmp	r4, #6
 8001ecc:	d113      	bne.n	8001ef6 <Setup0_Process+0x146>
  {
    if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001ece:	781a      	ldrb	r2, [r3, #0]
 8001ed0:	0652      	lsls	r2, r2, #25
 8001ed2:	d175      	bne.n	8001fc0 <Setup0_Process+0x210>
    {
      u8 wValue1 = pInformation->USBwValue1;
 8001ed4:	789a      	ldrb	r2, [r3, #2]
 8001ed6:	4b50      	ldr	r3, [pc, #320]	; (8002018 <Setup0_Process+0x268>)
      if (wValue1 == DEVICE_DESCRIPTOR)
 8001ed8:	2a01      	cmp	r2, #1
 8001eda:	d102      	bne.n	8001ee2 <Setup0_Process+0x132>
      {
        CopyRoutine = pProperty->GetDeviceDescriptor;
 8001edc:	681b      	ldr	r3, [r3, #0]
 8001ede:	69db      	ldr	r3, [r3, #28]
 8001ee0:	e065      	b.n	8001fae <Setup0_Process+0x1fe>
      }
      else if (wValue1 == CONFIG_DESCRIPTOR)
 8001ee2:	2a02      	cmp	r2, #2
 8001ee4:	d102      	bne.n	8001eec <Setup0_Process+0x13c>
      {
        CopyRoutine = pProperty->GetConfigDescriptor;
 8001ee6:	681b      	ldr	r3, [r3, #0]
 8001ee8:	6a1b      	ldr	r3, [r3, #32]
 8001eea:	e060      	b.n	8001fae <Setup0_Process+0x1fe>
      }
      else if (wValue1 == STRING_DESCRIPTOR)
 8001eec:	2a03      	cmp	r2, #3
 8001eee:	d167      	bne.n	8001fc0 <Setup0_Process+0x210>
      {
        CopyRoutine = pProperty->GetStringDescriptor;
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ef4:	e05b      	b.n	8001fae <Setup0_Process+0x1fe>
      }  /* End of GET_DESCRIPTOR */
    }
  }

  /*GET STATUS*/
  else if ((Request_No == GET_STATUS) && (pInformation->USBwValue == 0)
 8001ef6:	2c00      	cmp	r4, #0
 8001ef8:	d13a      	bne.n	8001f70 <Setup0_Process+0x1c0>
 8001efa:	8859      	ldrh	r1, [r3, #2]
 8001efc:	2900      	cmp	r1, #0
 8001efe:	d15f      	bne.n	8001fc0 <Setup0_Process+0x210>
           && (pInformation->USBwLength == 0x0002)
           && (pInformation->USBwIndex1 == 0))
 8001f00:	685a      	ldr	r2, [r3, #4]
 8001f02:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8001f06:	f5b2 3f00 	cmp.w	r2, #131072	; 0x20000
 8001f0a:	d159      	bne.n	8001fc0 <Setup0_Process+0x210>
  {
    /* GET STATUS for Device*/
    if ((Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001f0c:	781a      	ldrb	r2, [r3, #0]
 8001f0e:	f012 027f 	ands.w	r2, r2, #127	; 0x7f
 8001f12:	d104      	bne.n	8001f1e <Setup0_Process+0x16e>
        && (pInformation->USBwIndex == 0))
 8001f14:	889b      	ldrh	r3, [r3, #4]
 8001f16:	2b00      	cmp	r3, #0
 8001f18:	f000 80a8 	beq.w	800206c <Setup0_Process+0x2bc>
 8001f1c:	e050      	b.n	8001fc0 <Setup0_Process+0x210>
    {
      CopyRoutine = Standard_GetStatus;
    }

    /* GET STATUS for Interface*/
    else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 8001f1e:	2a01      	cmp	r2, #1
 8001f20:	d10a      	bne.n	8001f38 <Setup0_Process+0x188>
    {
      if (((*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, 0) == USB_SUCCESS)
 8001f22:	4a3d      	ldr	r2, [pc, #244]	; (8002018 <Setup0_Process+0x268>)
 8001f24:	7958      	ldrb	r0, [r3, #5]
 8001f26:	6812      	ldr	r2, [r2, #0]
 8001f28:	6992      	ldr	r2, [r2, #24]
 8001f2a:	4790      	blx	r2
 8001f2c:	2800      	cmp	r0, #0
 8001f2e:	d147      	bne.n	8001fc0 <Setup0_Process+0x210>
          && (pInformation->Current_Configuration != 0))
 8001f30:	4b38      	ldr	r3, [pc, #224]	; (8002014 <Setup0_Process+0x264>)
 8001f32:	681b      	ldr	r3, [r3, #0]
 8001f34:	7a9b      	ldrb	r3, [r3, #10]
 8001f36:	e018      	b.n	8001f6a <Setup0_Process+0x1ba>
        CopyRoutine = Standard_GetStatus;
      }
    }

    /* GET STATUS for EndPoint*/
    else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 8001f38:	2a02      	cmp	r2, #2
 8001f3a:	d141      	bne.n	8001fc0 <Setup0_Process+0x210>
    {
      Related_Endpoint = (pInformation->USBwIndex0 & 0x0f);
 8001f3c:	795a      	ldrb	r2, [r3, #5]
      else
      {
        Status = _GetEPRxStatus(Related_Endpoint);
      }

      if ((Related_Endpoint < Device_Table.Total_Endpoint) && (Reserved == 0)
 8001f3e:	4839      	ldr	r0, [pc, #228]	; (8002024 <Setup0_Process+0x274>)
    }

    /* GET STATUS for EndPoint*/
    else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
    {
      Related_Endpoint = (pInformation->USBwIndex0 & 0x0f);
 8001f40:	f002 010f 	and.w	r1, r2, #15
 8001f44:	008b      	lsls	r3, r1, #2

      if (ValBit(pInformation->USBwIndex0, 7))
      {
        /*Get Status of endpoint & stall the request if the related_ENdpoint
        is Disabled*/
        Status = _GetEPTxStatus(Related_Endpoint);
 8001f46:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8001f4a:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8001f4e:	681b      	ldr	r3, [r3, #0]
      else
      {
        Status = _GetEPRxStatus(Related_Endpoint);
      }

      if ((Related_Endpoint < Device_Table.Total_Endpoint) && (Reserved == 0)
 8001f50:	7800      	ldrb	r0, [r0, #0]
    else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
    {
      Related_Endpoint = (pInformation->USBwIndex0 & 0x0f);
      Reserved = pInformation->USBwIndex0 & 0x70;

      if (ValBit(pInformation->USBwIndex0, 7))
 8001f52:	f012 0f80 	tst.w	r2, #128	; 0x80
      {
        /*Get Status of endpoint & stall the request if the related_ENdpoint
        is Disabled*/
        Status = _GetEPTxStatus(Related_Endpoint);
 8001f56:	bf14      	ite	ne
 8001f58:	f003 0330 	andne.w	r3, r3, #48	; 0x30
      }
      else
      {
        Status = _GetEPRxStatus(Related_Endpoint);
 8001f5c:	f403 5340 	andeq.w	r3, r3, #12288	; 0x3000
      }

      if ((Related_Endpoint < Device_Table.Total_Endpoint) && (Reserved == 0)
 8001f60:	4281      	cmp	r1, r0
 8001f62:	d22d      	bcs.n	8001fc0 <Setup0_Process+0x210>
 8001f64:	f012 0f70 	tst.w	r2, #112	; 0x70
 8001f68:	d12a      	bne.n	8001fc0 <Setup0_Process+0x210>
          && (Status != 0))
 8001f6a:	2b00      	cmp	r3, #0
 8001f6c:	d17e      	bne.n	800206c <Setup0_Process+0x2bc>
 8001f6e:	e027      	b.n	8001fc0 <Setup0_Process+0x210>
    }

  }

  /*GET CONFIGURATION*/
  else if (Request_No == GET_CONFIGURATION)
 8001f70:	2c08      	cmp	r4, #8
 8001f72:	d103      	bne.n	8001f7c <Setup0_Process+0x1cc>
  {
    if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001f74:	781b      	ldrb	r3, [r3, #0]
 8001f76:	065b      	lsls	r3, r3, #25
 8001f78:	d07a      	beq.n	8002070 <Setup0_Process+0x2c0>
 8001f7a:	e021      	b.n	8001fc0 <Setup0_Process+0x210>
    {
      CopyRoutine = Standard_GetConfiguration;
    }
  }
  /*GET INTERFACE*/
  else if (Request_No == GET_INTERFACE)
 8001f7c:	2c0a      	cmp	r4, #10
 8001f7e:	d11f      	bne.n	8001fc0 <Setup0_Process+0x210>
  {
    if ((Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 8001f80:	781a      	ldrb	r2, [r3, #0]
 8001f82:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8001f86:	2a01      	cmp	r2, #1
 8001f88:	d11a      	bne.n	8001fc0 <Setup0_Process+0x210>
        && (pInformation->Current_Configuration != 0) && (pInformation->USBwValue == 0)
 8001f8a:	7a9a      	ldrb	r2, [r3, #10]
 8001f8c:	b1c2      	cbz	r2, 8001fc0 <Setup0_Process+0x210>
 8001f8e:	8859      	ldrh	r1, [r3, #2]
 8001f90:	b9b1      	cbnz	r1, 8001fc0 <Setup0_Process+0x210>
        && (pInformation->USBwIndex1 == 0) && (pInformation->USBwLength == 0x0001)
 8001f92:	685a      	ldr	r2, [r3, #4]
 8001f94:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8001f98:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8001f9c:	d110      	bne.n	8001fc0 <Setup0_Process+0x210>
        && ((*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, 0) == USB_SUCCESS))
 8001f9e:	4a1e      	ldr	r2, [pc, #120]	; (8002018 <Setup0_Process+0x268>)
 8001fa0:	7958      	ldrb	r0, [r3, #5]
 8001fa2:	6812      	ldr	r2, [r2, #0]
 8001fa4:	6992      	ldr	r2, [r2, #24]
 8001fa6:	4790      	blx	r2
 8001fa8:	2800      	cmp	r0, #0
 8001faa:	d063      	beq.n	8002074 <Setup0_Process+0x2c4>
 8001fac:	e008      	b.n	8001fc0 <Setup0_Process+0x210>
      CopyRoutine = Standard_GetInterface;
    }

  }
  
  if (CopyRoutine)
 8001fae:	b13b      	cbz	r3, 8001fc0 <Setup0_Process+0x210>
  {
    pInformation->Ctrl_Info.Usb_wOffset = wOffset;
 8001fb0:	682a      	ldr	r2, [r5, #0]
 8001fb2:	2400      	movs	r4, #0
 8001fb4:	8254      	strh	r4, [r2, #18]
    pInformation->Ctrl_Info.CopyData = CopyRoutine;
 8001fb6:	6193      	str	r3, [r2, #24]
    /* sb in the original the cast to word was directly */
    /* now the cast is made step by step */
    (*CopyRoutine)(0);
 8001fb8:	4620      	mov	r0, r4
 8001fba:	4798      	blx	r3
    Result = USB_SUCCESS;
 8001fbc:	4620      	mov	r0, r4
 8001fbe:	e00a      	b.n	8001fd6 <Setup0_Process+0x226>
  }
  else
  {
    Result = (*pProperty->Class_Data_Setup)(pInformation->USBbRequest);
 8001fc0:	4b15      	ldr	r3, [pc, #84]	; (8002018 <Setup0_Process+0x268>)
 8001fc2:	682a      	ldr	r2, [r5, #0]
 8001fc4:	681b      	ldr	r3, [r3, #0]
 8001fc6:	7850      	ldrb	r0, [r2, #1]
 8001fc8:	691b      	ldr	r3, [r3, #16]
 8001fca:	4798      	blx	r3
    if (Result == USB_NOT_READY)
 8001fcc:	2803      	cmp	r0, #3
 8001fce:	d102      	bne.n	8001fd6 <Setup0_Process+0x226>
    {
      pInformation->ControlState = PAUSE;
 8001fd0:	4b10      	ldr	r3, [pc, #64]	; (8002014 <Setup0_Process+0x264>)
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	e005      	b.n	8001fe2 <Setup0_Process+0x232>
      return;
    }
  }

  if (pInformation->Ctrl_Info.Usb_wLength == 0xFFFF)
 8001fd6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001fda:	682b      	ldr	r3, [r5, #0]
 8001fdc:	8a1a      	ldrh	r2, [r3, #16]
 8001fde:	428a      	cmp	r2, r1
 8001fe0:	d101      	bne.n	8001fe6 <Setup0_Process+0x236>
  {
    /* Data is not ready, wait it */
    pInformation->ControlState = PAUSE;
 8001fe2:	2209      	movs	r2, #9
 8001fe4:	e003      	b.n	8001fee <Setup0_Process+0x23e>
    return;
  }
  if ((Result == USB_UNSUPPORT) || (pInformation->Ctrl_Info.Usb_wLength == 0))
 8001fe6:	2802      	cmp	r0, #2
 8001fe8:	d000      	beq.n	8001fec <Setup0_Process+0x23c>
 8001fea:	b912      	cbnz	r2, 8001ff2 <Setup0_Process+0x242>
  {
    /* Unsupported request */
    pInformation->ControlState = STALLED;
 8001fec:	2208      	movs	r2, #8
 8001fee:	721a      	strb	r2, [r3, #8]
 8001ff0:	e038      	b.n	8002064 <Setup0_Process+0x2b4>
    return;
  }


  if (ValBit(pInformation->USBbmRequestType, 7))
 8001ff2:	f993 1000 	ldrsb.w	r1, [r3]
 8001ff6:	2900      	cmp	r1, #0
 8001ff8:	da2e      	bge.n	8002058 <Setup0_Process+0x2a8>
  {
    /* Device ==> Host */
    __IO u32 wLength = pInformation->USBwLength;
 8001ffa:	88d9      	ldrh	r1, [r3, #6]
 8001ffc:	4c06      	ldr	r4, [pc, #24]	; (8002018 <Setup0_Process+0x268>)
 8001ffe:	9101      	str	r1, [sp, #4]
     
    /* Restrict the data length to be the one host asks for */
    if (pInformation->Ctrl_Info.Usb_wLength > wLength)
 8002000:	9801      	ldr	r0, [sp, #4]
 8002002:	4282      	cmp	r2, r0
 8002004:	d910      	bls.n	8002028 <Setup0_Process+0x278>
    {
      pInformation->Ctrl_Info.Usb_wLength = wLength;
 8002006:	9a01      	ldr	r2, [sp, #4]
 8002008:	821a      	strh	r2, [r3, #16]
 800200a:	e01e      	b.n	800204a <Setup0_Process+0x29a>
 800200c:	40005c50 	andmi	r5, r0, r0, asr ip
 8002010:	20003004 	andcs	r3, r0, r4
 8002014:	20000714 	andcs	r0, r0, r4, lsl r7
 8002018:	200006ec 	andcs	r0, r0, ip, ror #13
 800201c:	20003002 	andcs	r3, r0, r2
 8002020:	2000071e 	andcs	r0, r0, lr, lsl r7
 8002024:	200000e0 	andcs	r0, r0, r0, ror #1
    }
    
    else if (pInformation->Ctrl_Info.Usb_wLength < pInformation->USBwLength)
 8002028:	428a      	cmp	r2, r1
 800202a:	d20e      	bcs.n	800204a <Setup0_Process+0x29a>
    {
      if (pInformation->Ctrl_Info.Usb_wLength < pProperty->MaxPacketSize)
 800202c:	6821      	ldr	r1, [r4, #0]
 800202e:	f891 002c 	ldrb.w	r0, [r1, #44]	; 0x2c
 8002032:	4282      	cmp	r2, r0
 8002034:	d201      	bcs.n	800203a <Setup0_Process+0x28a>
      {
        Data_Mul_MaxPacketSize = FALSE;
 8002036:	2100      	movs	r1, #0
 8002038:	e005      	b.n	8002046 <Setup0_Process+0x296>
      }
      else if ((pInformation->Ctrl_Info.Usb_wLength % pProperty->MaxPacketSize) == 0)
 800203a:	fb92 f1f0 	sdiv	r1, r2, r0
 800203e:	fb00 2211 	mls	r2, r0, r1, r2
 8002042:	b912      	cbnz	r2, 800204a <Setup0_Process+0x29a>
      {
        Data_Mul_MaxPacketSize = TRUE;
 8002044:	2101      	movs	r1, #1
 8002046:	4a0c      	ldr	r2, [pc, #48]	; (8002078 <Setup0_Process+0x2c8>)
 8002048:	7011      	strb	r1, [r2, #0]
      }
    }   

    pInformation->Ctrl_Info.PacketSize = pProperty->MaxPacketSize;
 800204a:	6822      	ldr	r2, [r4, #0]
 800204c:	f892 202c 	ldrb.w	r2, [r2, #44]	; 0x2c
 8002050:	829a      	strh	r2, [r3, #20]
    DataStageIn();
 8002052:	f7ff fd23 	bl	8001a9c <DataStageIn>
 8002056:	e005      	b.n	8002064 <Setup0_Process+0x2b4>
  }
  else
  {
    pInformation->ControlState = OUT_DATA;
 8002058:	2203      	movs	r2, #3
 800205a:	721a      	strb	r2, [r3, #8]
    vSetEPRxStatus(EP_RX_VALID); /* enable for next data reception */
 800205c:	4b07      	ldr	r3, [pc, #28]	; (800207c <Setup0_Process+0x2cc>)
 800205e:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 8002062:	801a      	strh	r2, [r3, #0]
  else
  {
    /* Setup with data stage */
    Data_Setup0();
  }
  return Post0_Process();
 8002064:	f7ff fe82 	bl	8001d6c <Post0_Process>
}
 8002068:	b003      	add	sp, #12
 800206a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  {
    /* GET STATUS for Device*/
    if ((Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
        && (pInformation->USBwIndex == 0))
    {
      CopyRoutine = Standard_GetStatus;
 800206c:	4b04      	ldr	r3, [pc, #16]	; (8002080 <Setup0_Process+0x2d0>)
 800206e:	e79f      	b.n	8001fb0 <Setup0_Process+0x200>
  /*GET CONFIGURATION*/
  else if (Request_No == GET_CONFIGURATION)
  {
    if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
    {
      CopyRoutine = Standard_GetConfiguration;
 8002070:	4b04      	ldr	r3, [pc, #16]	; (8002084 <Setup0_Process+0x2d4>)
 8002072:	e79d      	b.n	8001fb0 <Setup0_Process+0x200>
    if ((Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
        && (pInformation->Current_Configuration != 0) && (pInformation->USBwValue == 0)
        && (pInformation->USBwIndex1 == 0) && (pInformation->USBwLength == 0x0001)
        && ((*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, 0) == USB_SUCCESS))
    {
      CopyRoutine = Standard_GetInterface;
 8002074:	4b04      	ldr	r3, [pc, #16]	; (8002088 <Setup0_Process+0x2d8>)
 8002076:	e79b      	b.n	8001fb0 <Setup0_Process+0x200>
 8002078:	20000130 	andcs	r0, r0, r0, lsr r1
 800207c:	2000071c 	andcs	r0, r0, ip, lsl r7
 8002080:	08001a0d 	stmdaeq	r0, {r0, r2, r3, r9, fp, ip}
 8002084:	080019c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, fp, ip}
 8002088:	080019e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, fp, ip}

0800208c <Out0_Process>:
* Input          : None.
* Output         : None.
* Return         : Post0_Process.
*******************************************************************************/
u8 Out0_Process(void)
{
 800208c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  u32 ControlState = pInformation->ControlState;
 800208e:	4d2c      	ldr	r5, [pc, #176]	; (8002140 <Out0_Process+0xb4>)
 8002090:	682c      	ldr	r4, [r5, #0]
 8002092:	7a23      	ldrb	r3, [r4, #8]

  if ((ControlState == IN_DATA) || (ControlState == LAST_IN_DATA))
 8002094:	2b02      	cmp	r3, #2
 8002096:	d04c      	beq.n	8002132 <Out0_Process+0xa6>
 8002098:	2b04      	cmp	r3, #4
 800209a:	d04a      	beq.n	8002132 <Out0_Process+0xa6>
  {
    /* host aborts the transfer before finish */
    ControlState = STALLED;
  }
  else if ((ControlState == OUT_DATA) || (ControlState == LAST_OUT_DATA))
 800209c:	2b03      	cmp	r3, #3
 800209e:	d001      	beq.n	80020a4 <Out0_Process+0x18>
 80020a0:	2b05      	cmp	r3, #5
 80020a2:	d140      	bne.n	8002126 <Out0_Process+0x9a>
  ENDPOINT_INFO *pEPinfo = &pInformation->Ctrl_Info;
  u32 save_rLength;

  save_rLength = pEPinfo->Usb_rLength;

  if (pEPinfo->CopyData && save_rLength)
 80020a4:	69a1      	ldr	r1, [r4, #24]
void DataStageOut(void)
{
  ENDPOINT_INFO *pEPinfo = &pInformation->Ctrl_Info;
  u32 save_rLength;

  save_rLength = pEPinfo->Usb_rLength;
 80020a6:	8a23      	ldrh	r3, [r4, #16]

  if (pEPinfo->CopyData && save_rLength)
 80020a8:	b1a9      	cbz	r1, 80020d6 <Out0_Process+0x4a>
 80020aa:	b1a3      	cbz	r3, 80020d6 <Out0_Process+0x4a>
  {
    u8 *Buffer;
    u32 Length;

    Length = pEPinfo->PacketSize;
 80020ac:	8aa6      	ldrh	r6, [r4, #20]
    if (Length > save_rLength)
    {
      Length = save_rLength;
    }

    Buffer = (*pEPinfo->CopyData)(Length);
 80020ae:	429e      	cmp	r6, r3
 80020b0:	bf28      	it	cs
 80020b2:	461e      	movcs	r6, r3
 80020b4:	4630      	mov	r0, r6
 80020b6:	4788      	blx	r1
    pEPinfo->Usb_rLength -= Length;
 80020b8:	8a23      	ldrh	r3, [r4, #16]
    if (Length > save_rLength)
    {
      Length = save_rLength;
    }

    Buffer = (*pEPinfo->CopyData)(Length);
 80020ba:	4607      	mov	r7, r0
    pEPinfo->Usb_rLength -= Length;
 80020bc:	1b9b      	subs	r3, r3, r6
 80020be:	8223      	strh	r3, [r4, #16]
    pEPinfo->Usb_rOffset += Length;
 80020c0:	8a63      	ldrh	r3, [r4, #18]

  #ifdef STM32F10X_CL  
    PCD_EP_Read(ENDP0, Buffer, Length); 
  #else  
    PMAToUserBufferCopy(Buffer, GetEPRxAddr(ENDP0), Length);
 80020c2:	2000      	movs	r0, #0
      Length = save_rLength;
    }

    Buffer = (*pEPinfo->CopyData)(Length);
    pEPinfo->Usb_rLength -= Length;
    pEPinfo->Usb_rOffset += Length;
 80020c4:	4433      	add	r3, r6
 80020c6:	8263      	strh	r3, [r4, #18]

  #ifdef STM32F10X_CL  
    PCD_EP_Read(ENDP0, Buffer, Length); 
  #else  
    PMAToUserBufferCopy(Buffer, GetEPRxAddr(ENDP0), Length);
 80020c8:	f000 f994 	bl	80023f4 <GetEPRxAddr>
 80020cc:	4632      	mov	r2, r6
 80020ce:	4601      	mov	r1, r0
 80020d0:	4638      	mov	r0, r7
 80020d2:	f000 f8a8 	bl	8002226 <PMAToUserBufferCopy>
  #endif  /* STM32F10X_CL */
  }

  if (pEPinfo->Usb_rLength != 0)
 80020d6:	8a23      	ldrh	r3, [r4, #16]
 80020d8:	b153      	cbz	r3, 80020f0 <Out0_Process+0x64>
  {
    vSetEPRxStatus(EP_RX_VALID);/* re-enable for next data reception */
 80020da:	4b1a      	ldr	r3, [pc, #104]	; (8002144 <Out0_Process+0xb8>)
    SetEPTxCount(ENDP0, 0);
 80020dc:	2000      	movs	r0, #0
  #endif  /* STM32F10X_CL */
  }

  if (pEPinfo->Usb_rLength != 0)
  {
    vSetEPRxStatus(EP_RX_VALID);/* re-enable for next data reception */
 80020de:	f44f 5240 	mov.w	r2, #12288	; 0x3000
    SetEPTxCount(ENDP0, 0);
 80020e2:	4601      	mov	r1, r0
  #endif  /* STM32F10X_CL */
  }

  if (pEPinfo->Usb_rLength != 0)
  {
    vSetEPRxStatus(EP_RX_VALID);/* re-enable for next data reception */
 80020e4:	801a      	strh	r2, [r3, #0]
    SetEPTxCount(ENDP0, 0);
 80020e6:	f000 f995 	bl	8002414 <SetEPTxCount>
    vSetEPTxStatus(EP_TX_VALID);/* Expect the host to abort the data OUT stage */
 80020ea:	4b17      	ldr	r3, [pc, #92]	; (8002148 <Out0_Process+0xbc>)
 80020ec:	2230      	movs	r2, #48	; 0x30
 80020ee:	801a      	strh	r2, [r3, #0]
  }
  /* Set the next State*/
  if (pEPinfo->Usb_rLength >= pEPinfo->PacketSize)
 80020f0:	8aa3      	ldrh	r3, [r4, #20]
 80020f2:	8a22      	ldrh	r2, [r4, #16]
 80020f4:	4293      	cmp	r3, r2
  {
    pInformation->ControlState = OUT_DATA;
 80020f6:	682b      	ldr	r3, [r5, #0]
    vSetEPRxStatus(EP_RX_VALID);/* re-enable for next data reception */
    SetEPTxCount(ENDP0, 0);
    vSetEPTxStatus(EP_TX_VALID);/* Expect the host to abort the data OUT stage */
  }
  /* Set the next State*/
  if (pEPinfo->Usb_rLength >= pEPinfo->PacketSize)
 80020f8:	d801      	bhi.n	80020fe <Out0_Process+0x72>
  {
    pInformation->ControlState = OUT_DATA;
 80020fa:	2203      	movs	r2, #3
 80020fc:	e001      	b.n	8002102 <Out0_Process+0x76>
  }
  else
  {
    if (pEPinfo->Usb_rLength > 0)
 80020fe:	b112      	cbz	r2, 8002106 <Out0_Process+0x7a>
    {
      pInformation->ControlState = LAST_OUT_DATA;
 8002100:	2205      	movs	r2, #5
 8002102:	721a      	strb	r2, [r3, #8]
 8002104:	e00c      	b.n	8002120 <Out0_Process+0x94>
    }
    else if (pEPinfo->Usb_rLength == 0)
    {
      pInformation->ControlState = WAIT_STATUS_IN;
 8002106:	2106      	movs	r1, #6
 8002108:	7219      	strb	r1, [r3, #8]
      USB_StatusIn();
 800210a:	4b10      	ldr	r3, [pc, #64]	; (800214c <Out0_Process+0xc0>)
 800210c:	6819      	ldr	r1, [r3, #0]
 800210e:	4b10      	ldr	r3, [pc, #64]	; (8002150 <Out0_Process+0xc4>)
 8002110:	b289      	uxth	r1, r1
 8002112:	440b      	add	r3, r1
 8002114:	005b      	lsls	r3, r3, #1
 8002116:	801a      	strh	r2, [r3, #0]
 8002118:	805a      	strh	r2, [r3, #2]
 800211a:	4b0b      	ldr	r3, [pc, #44]	; (8002148 <Out0_Process+0xbc>)
 800211c:	2230      	movs	r2, #48	; 0x30
 800211e:	801a      	strh	r2, [r3, #0]
    ControlState = STALLED;
  }
  else if ((ControlState == OUT_DATA) || (ControlState == LAST_OUT_DATA))
  {
    DataStageOut();
    ControlState = pInformation->ControlState; /* may be changed outside the function */
 8002120:	682b      	ldr	r3, [r5, #0]
 8002122:	7a1b      	ldrb	r3, [r3, #8]
 8002124:	e006      	b.n	8002134 <Out0_Process+0xa8>
  }

  else if (ControlState == WAIT_STATUS_OUT)
 8002126:	2b07      	cmp	r3, #7
 8002128:	d103      	bne.n	8002132 <Out0_Process+0xa6>
  {
    (*pProperty->Process_Status_OUT)();
 800212a:	4b0a      	ldr	r3, [pc, #40]	; (8002154 <Out0_Process+0xc8>)
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	68db      	ldr	r3, [r3, #12]
 8002130:	4798      	blx	r3
  u32 ControlState = pInformation->ControlState;

  if ((ControlState == IN_DATA) || (ControlState == LAST_IN_DATA))
  {
    /* host aborts the transfer before finish */
    ControlState = STALLED;
 8002132:	2308      	movs	r3, #8
  else
  {
    ControlState = STALLED;
  }

  pInformation->ControlState = ControlState;
 8002134:	682a      	ldr	r2, [r5, #0]
 8002136:	7213      	strb	r3, [r2, #8]

  return Post0_Process();
}
 8002138:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    ControlState = STALLED;
  }

  pInformation->ControlState = ControlState;

  return Post0_Process();
 800213c:	f7ff be16 	b.w	8001d6c <Post0_Process>
 8002140:	20000714 	andcs	r0, r0, r4, lsl r7
 8002144:	2000071c 	andcs	r0, r0, ip, lsl r7
 8002148:	2000071e 	andcs	r0, r0, lr, lsl r7
 800214c:	40005c50 	andmi	r5, r0, r0, asr ip
 8002150:	20003002 	andcs	r3, r0, r2
 8002154:	200006ec 	andcs	r0, r0, ip, ror #13

08002158 <SetDeviceAddress>:
* Input          : - Val: device adress.
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetDeviceAddress(u8 Val)
{
 8002158:	b570      	push	{r4, r5, r6, lr}
#ifdef STM32F10X_CL 
  PCD_EP_SetAddress ((u8)Val);
#else 
  u32 i;
  u32 nEP = Device_Table.Total_Endpoint;
 800215a:	4b0d      	ldr	r3, [pc, #52]	; (8002190 <SetDeviceAddress+0x38>)

  /* set address in every used endpoint */
  for (i = 0; i < nEP; i++)
 800215c:	2200      	movs	r2, #0
{
#ifdef STM32F10X_CL 
  PCD_EP_SetAddress ((u8)Val);
#else 
  u32 i;
  u32 nEP = Device_Table.Total_Endpoint;
 800215e:	781d      	ldrb	r5, [r3, #0]

  /* set address in every used endpoint */
  for (i = 0; i < nEP; i++)
 8002160:	42aa      	cmp	r2, r5
 8002162:	d210      	bcs.n	8002186 <SetDeviceAddress+0x2e>
  {
    _SetEPAddress((u8)i, (u8)i);
 8002164:	f640 710f 	movw	r1, #3855	; 0xf0f
 8002168:	f102 5380 	add.w	r3, r2, #268435456	; 0x10000000
 800216c:	f503 53b8 	add.w	r3, r3, #5888	; 0x1700
 8002170:	009b      	lsls	r3, r3, #2
 8002172:	681e      	ldr	r6, [r3, #0]
 8002174:	f442 4400 	orr.w	r4, r2, #32768	; 0x8000
 8002178:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 800217c:	4031      	ands	r1, r6
 800217e:	4321      	orrs	r1, r4
 8002180:	6019      	str	r1, [r3, #0]
#else 
  u32 i;
  u32 nEP = Device_Table.Total_Endpoint;

  /* set address in every used endpoint */
  for (i = 0; i < nEP; i++)
 8002182:	3201      	adds	r2, #1
 8002184:	e7ec      	b.n	8002160 <SetDeviceAddress+0x8>
  {
    _SetEPAddress((u8)i, (u8)i);
  } /* for */
  _SetDADDR(Val | DADDR_EF); /* set device address and enable function */
 8002186:	4b03      	ldr	r3, [pc, #12]	; (8002194 <SetDeviceAddress+0x3c>)
 8002188:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 800218c:	6018      	str	r0, [r3, #0]
 800218e:	bd70      	pop	{r4, r5, r6, pc}
 8002190:	200000e0 	andcs	r0, r0, r0, ror #1
 8002194:	40005c4c 	andmi	r5, r0, ip, asr #24

08002198 <In0_Process>:
* Input          : None.
* Output         : None.
* Return         : Post0_Process.
*******************************************************************************/
u8 In0_Process(void)
{
 8002198:	b510      	push	{r4, lr}
  u32 ControlState = pInformation->ControlState;
 800219a:	4c13      	ldr	r4, [pc, #76]	; (80021e8 <In0_Process+0x50>)
 800219c:	6823      	ldr	r3, [r4, #0]
 800219e:	7a1a      	ldrb	r2, [r3, #8]

  if ((ControlState == IN_DATA) || (ControlState == LAST_IN_DATA))
 80021a0:	2a02      	cmp	r2, #2
 80021a2:	d001      	beq.n	80021a8 <In0_Process+0x10>
 80021a4:	2a04      	cmp	r2, #4
 80021a6:	d104      	bne.n	80021b2 <In0_Process+0x1a>
  {
    DataStageIn();
 80021a8:	f7ff fc78 	bl	8001a9c <DataStageIn>
    /* ControlState may be changed outside the function */
    ControlState = pInformation->ControlState;
 80021ac:	6823      	ldr	r3, [r4, #0]
 80021ae:	7a1b      	ldrb	r3, [r3, #8]
 80021b0:	e013      	b.n	80021da <In0_Process+0x42>
  }

  else if (ControlState == WAIT_STATUS_IN)
 80021b2:	2a06      	cmp	r2, #6
 80021b4:	d110      	bne.n	80021d8 <In0_Process+0x40>
  {
    if ((pInformation->USBbRequest == SET_ADDRESS) &&
 80021b6:	785a      	ldrb	r2, [r3, #1]
 80021b8:	2a05      	cmp	r2, #5
 80021ba:	d109      	bne.n	80021d0 <In0_Process+0x38>
        (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT)))
 80021bc:	781a      	ldrb	r2, [r3, #0]
    ControlState = pInformation->ControlState;
  }

  else if (ControlState == WAIT_STATUS_IN)
  {
    if ((pInformation->USBbRequest == SET_ADDRESS) &&
 80021be:	0652      	lsls	r2, r2, #25
 80021c0:	d106      	bne.n	80021d0 <In0_Process+0x38>
        (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT)))
    {
      SetDeviceAddress(pInformation->USBwValue0);
 80021c2:	78d8      	ldrb	r0, [r3, #3]
 80021c4:	f7ff ffc8 	bl	8002158 <SetDeviceAddress>
      pUser_Standard_Requests->User_SetDeviceAddress();
 80021c8:	4b08      	ldr	r3, [pc, #32]	; (80021ec <In0_Process+0x54>)
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	6a1b      	ldr	r3, [r3, #32]
 80021ce:	4798      	blx	r3
    }
    (*pProperty->Process_Status_IN)();
 80021d0:	4b07      	ldr	r3, [pc, #28]	; (80021f0 <In0_Process+0x58>)
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	689b      	ldr	r3, [r3, #8]
 80021d6:	4798      	blx	r3
    ControlState = STALLED;
  }

  else
  {
    ControlState = STALLED;
 80021d8:	2308      	movs	r3, #8
  }

  pInformation->ControlState = ControlState;
 80021da:	6822      	ldr	r2, [r4, #0]
 80021dc:	7213      	strb	r3, [r2, #8]

  return Post0_Process();
}
 80021de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ControlState = STALLED;
  }

  pInformation->ControlState = ControlState;

  return Post0_Process();
 80021e2:	f7ff bdc3 	b.w	8001d6c <Post0_Process>
 80021e6:	bf00      	nop
 80021e8:	20000714 	andcs	r0, r0, r4, lsl r7
 80021ec:	20000710 	andcs	r0, r0, r0, lsl r7
 80021f0:	200006ec 	andcs	r0, r0, ip, ror #13

080021f4 <NOP_Process>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void NOP_Process(void)
{
 80021f4:	4770      	bx	lr

080021f6 <UserToPMABufferCopy>:
*                  - wNBytes: no. of bytes to be copied.
* Output         : None.
* Return         : None	.
*******************************************************************************/
void UserToPMABufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
 80021f6:	b530      	push	{r4, r5, lr}
  u32 n = (wNBytes + 1) >> 1;   /* n = (wNBytes + 1) / 2 */
  u32 i, temp1, temp2;
  u16 *pdwVal;
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
 80021f8:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
* Output         : None.
* Return         : None	.
*******************************************************************************/
void UserToPMABufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;   /* n = (wNBytes + 1) / 2 */
 80021fc:	3201      	adds	r2, #1
  u32 i, temp1, temp2;
  u16 *pdwVal;
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
 80021fe:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
* Output         : None.
* Return         : None	.
*******************************************************************************/
void UserToPMABufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;   /* n = (wNBytes + 1) / 2 */
 8002202:	1052      	asrs	r2, r2, #1
  u32 i, temp1, temp2;
  u16 *pdwVal;
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
 8002204:	0049      	lsls	r1, r1, #1
  for (i = n; i != 0; i--)
 8002206:	2300      	movs	r3, #0
 8002208:	4293      	cmp	r3, r2
 800220a:	f100 0002 	add.w	r0, r0, #2
 800220e:	d009      	beq.n	8002224 <UserToPMABufferCopy+0x2e>
  {
    temp1 = (u16) * pbUsrBuf;
    pbUsrBuf++;
    temp2 = temp1 | (u16) * pbUsrBuf << 8;
 8002210:	f810 5c01 	ldrb.w	r5, [r0, #-1]
  u32 i, temp1, temp2;
  u16 *pdwVal;
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
  for (i = n; i != 0; i--)
  {
    temp1 = (u16) * pbUsrBuf;
 8002214:	f810 4c02 	ldrb.w	r4, [r0, #-2]
    pbUsrBuf++;
    temp2 = temp1 | (u16) * pbUsrBuf << 8;
 8002218:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
    *pdwVal++ = temp2;
 800221c:	f821 4023 	strh.w	r4, [r1, r3, lsl #2]
 8002220:	3301      	adds	r3, #1
 8002222:	e7f1      	b.n	8002208 <UserToPMABufferCopy+0x12>
    pdwVal++;
    pbUsrBuf++;
  }
}
 8002224:	bd30      	pop	{r4, r5, pc}

08002226 <PMAToUserBufferCopy>:
*                  - wNBytes     = no. of bytes to be copied.
* Output         : None.
* Return         : None.
*******************************************************************************/
void PMAToUserBufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
 8002226:	b510      	push	{r4, lr}
  u32 n = (wNBytes + 1) >> 1;/* /2*/
  u32 i;
  u32 *pdwVal;
  pdwVal = (u32 *)(wPMABufAddr * 2 + PMAAddr);
 8002228:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
* Output         : None.
* Return         : None.
*******************************************************************************/
void PMAToUserBufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;/* /2*/
 800222c:	3201      	adds	r2, #1
  u32 i;
  u32 *pdwVal;
  pdwVal = (u32 *)(wPMABufAddr * 2 + PMAAddr);
 800222e:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
* Output         : None.
* Return         : None.
*******************************************************************************/
void PMAToUserBufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;/* /2*/
 8002232:	1052      	asrs	r2, r2, #1
  u32 i;
  u32 *pdwVal;
  pdwVal = (u32 *)(wPMABufAddr * 2 + PMAAddr);
 8002234:	0049      	lsls	r1, r1, #1
  for (i = n; i != 0; i--)
 8002236:	2300      	movs	r3, #0
 8002238:	4293      	cmp	r3, r2
 800223a:	d005      	beq.n	8002248 <PMAToUserBufferCopy+0x22>
  {
    *(u16*)pbUsrBuf++ = *pdwVal++;
 800223c:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
 8002240:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8002244:	3301      	adds	r3, #1
 8002246:	e7f7      	b.n	8002238 <PMAToUserBufferCopy+0x12>
    pbUsrBuf++;
  }
}
 8002248:	bd10      	pop	{r4, pc}
	...

0800224c <SetBTABLE>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetBTABLE(u16 wRegValue)
{
  _SetBTABLE(wRegValue);
 800224c:	f64f 73f8 	movw	r3, #65528	; 0xfff8
 8002250:	4a01      	ldr	r2, [pc, #4]	; (8002258 <SetBTABLE+0xc>)
 8002252:	4003      	ands	r3, r0
 8002254:	6013      	str	r3, [r2, #0]
 8002256:	4770      	bx	lr
 8002258:	40005c50 	andmi	r5, r0, r0, asr ip

0800225c <SetEPType>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPType(u8 bEpNum, u16 wType)
{
  _SetEPType(bEpNum, wType);
 800225c:	0080      	lsls	r0, r0, #2
 800225e:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8002262:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8002266:	6803      	ldr	r3, [r0, #0]
 8002268:	f423 43ec 	bic.w	r3, r3, #30208	; 0x7600
 800226c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002270:	4319      	orrs	r1, r3
 8002272:	b289      	uxth	r1, r1
 8002274:	6001      	str	r1, [r0, #0]
 8002276:	4770      	bx	lr

08002278 <SetEPTxStatus>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxStatus(u8 bEpNum, u16 wState)
{
  _SetEPTxStatus(bEpNum, wState);
 8002278:	0080      	lsls	r0, r0, #2
 800227a:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 800227e:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8002282:	6803      	ldr	r3, [r0, #0]
 8002284:	06ca      	lsls	r2, r1, #27
 8002286:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800228a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800228e:	b29b      	uxth	r3, r3
 8002290:	bf48      	it	mi
 8002292:	f083 0310 	eormi.w	r3, r3, #16
 8002296:	068a      	lsls	r2, r1, #26
 8002298:	bf48      	it	mi
 800229a:	f083 0320 	eormi.w	r3, r3, #32
 800229e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80022a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80022a6:	6003      	str	r3, [r0, #0]
 80022a8:	4770      	bx	lr

080022aa <SetEPRxStatus>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxStatus(u8 bEpNum, u16 wState)
{
  _SetEPRxStatus(bEpNum, wState);
 80022aa:	0080      	lsls	r0, r0, #2
 80022ac:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 80022b0:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 80022b4:	6803      	ldr	r3, [r0, #0]
 80022b6:	04ca      	lsls	r2, r1, #19
 80022b8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80022bc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80022c0:	b29b      	uxth	r3, r3
 80022c2:	bf48      	it	mi
 80022c4:	f483 5380 	eormi.w	r3, r3, #4096	; 0x1000
 80022c8:	048a      	lsls	r2, r1, #18
 80022ca:	bf48      	it	mi
 80022cc:	f483 5300 	eormi.w	r3, r3, #8192	; 0x2000
 80022d0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80022d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80022d8:	6003      	str	r3, [r0, #0]
 80022da:	4770      	bx	lr

080022dc <SetEPTxValid>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxValid(u8 bEpNum)
{
  _SetEPTxStatus(bEpNum, EP_TX_VALID);
 80022dc:	0080      	lsls	r0, r0, #2
 80022de:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 80022e2:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 80022e6:	6803      	ldr	r3, [r0, #0]
 80022e8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80022ec:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80022f0:	b29b      	uxth	r3, r3
 80022f2:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 80022f6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80022fa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80022fe:	6003      	str	r3, [r0, #0]
 8002300:	4770      	bx	lr

08002302 <SetEPRxValid>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxValid(u8 bEpNum)
{
  _SetEPRxStatus(bEpNum, EP_RX_VALID);
 8002302:	0080      	lsls	r0, r0, #2
 8002304:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8002308:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 800230c:	6803      	ldr	r3, [r0, #0]
 800230e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8002312:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002316:	b29b      	uxth	r3, r3
 8002318:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 800231c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002320:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002324:	6003      	str	r3, [r0, #0]
 8002326:	4770      	bx	lr

08002328 <Clear_Status_Out>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void Clear_Status_Out(u8 bEpNum)
{
  _ClearEP_KIND(bEpNum);
 8002328:	0080      	lsls	r0, r0, #2
 800232a:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 800232e:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8002332:	6803      	ldr	r3, [r0, #0]
 8002334:	f423 73f8 	bic.w	r3, r3, #496	; 0x1f0
 8002338:	051b      	lsls	r3, r3, #20
 800233a:	0d1b      	lsrs	r3, r3, #20
 800233c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002340:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002344:	6003      	str	r3, [r0, #0]
 8002346:	4770      	bx	lr

08002348 <ClearDTOG_RX>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void ClearDTOG_RX(u8 bEpNum)
{
  _ClearDTOG_RX(bEpNum);
 8002348:	0080      	lsls	r0, r0, #2
 800234a:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 800234e:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8002352:	6803      	ldr	r3, [r0, #0]
 8002354:	045b      	lsls	r3, r3, #17
 8002356:	bf41      	itttt	mi
 8002358:	f640 730f 	movwmi	r3, #3855	; 0xf0f
 800235c:	6802      	ldrmi	r2, [r0, #0]
 800235e:	4013      	andmi	r3, r2
 8002360:	f443 4340 	orrmi.w	r3, r3, #49152	; 0xc000
 8002364:	bf44      	itt	mi
 8002366:	f043 0380 	orrmi.w	r3, r3, #128	; 0x80
 800236a:	6003      	strmi	r3, [r0, #0]
 800236c:	4770      	bx	lr

0800236e <ClearDTOG_TX>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void ClearDTOG_TX(u8 bEpNum)
{
  _ClearDTOG_TX(bEpNum);
 800236e:	0080      	lsls	r0, r0, #2
 8002370:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8002374:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8002378:	6803      	ldr	r3, [r0, #0]
 800237a:	065b      	lsls	r3, r3, #25
 800237c:	bf41      	itttt	mi
 800237e:	f640 730f 	movwmi	r3, #3855	; 0xf0f
 8002382:	6802      	ldrmi	r2, [r0, #0]
 8002384:	4013      	andmi	r3, r2
 8002386:	f443 4300 	orrmi.w	r3, r3, #32768	; 0x8000
 800238a:	bf44      	itt	mi
 800238c:	f043 03c0 	orrmi.w	r3, r3, #192	; 0xc0
 8002390:	6003      	strmi	r3, [r0, #0]
 8002392:	4770      	bx	lr

08002394 <SetEPTxAddr>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxAddr(u8 bEpNum, u16 wAddr)
{
  _SetEPTxAddr(bEpNum, wAddr);
 8002394:	4b06      	ldr	r3, [pc, #24]	; (80023b0 <SetEPTxAddr+0x1c>)
 8002396:	0849      	lsrs	r1, r1, #1
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	0049      	lsls	r1, r1, #1
 800239c:	b29b      	uxth	r3, r3
 800239e:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80023a2:	f100 5000 	add.w	r0, r0, #536870912	; 0x20000000
 80023a6:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 80023aa:	0040      	lsls	r0, r0, #1
 80023ac:	6001      	str	r1, [r0, #0]
 80023ae:	4770      	bx	lr
 80023b0:	40005c50 	andmi	r5, r0, r0, asr ip

080023b4 <SetEPRxAddr>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxAddr(u8 bEpNum, u16 wAddr)
{
  _SetEPRxAddr(bEpNum, wAddr);
 80023b4:	4b05      	ldr	r3, [pc, #20]	; (80023cc <SetEPRxAddr+0x18>)
 80023b6:	0849      	lsrs	r1, r1, #1
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	0049      	lsls	r1, r1, #1
 80023bc:	b29b      	uxth	r3, r3
 80023be:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80023c2:	4b03      	ldr	r3, [pc, #12]	; (80023d0 <SetEPRxAddr+0x1c>)
 80023c4:	4403      	add	r3, r0
 80023c6:	005b      	lsls	r3, r3, #1
 80023c8:	6019      	str	r1, [r3, #0]
 80023ca:	4770      	bx	lr
 80023cc:	40005c50 	andmi	r5, r0, r0, asr ip
 80023d0:	20003004 	andcs	r3, r0, r4

080023d4 <GetEPTxAddr>:
* Output         : None.
* Return         : Rx buffer address. 
*******************************************************************************/
u16 GetEPTxAddr(u8 bEpNum)
{
  return(_GetEPTxAddr(bEpNum));
 80023d4:	4b06      	ldr	r3, [pc, #24]	; (80023f0 <GetEPTxAddr+0x1c>)
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	b29b      	uxth	r3, r3
 80023da:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80023de:	f100 5000 	add.w	r0, r0, #536870912	; 0x20000000
 80023e2:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 80023e6:	0040      	lsls	r0, r0, #1
 80023e8:	6800      	ldr	r0, [r0, #0]
}
 80023ea:	b280      	uxth	r0, r0
 80023ec:	4770      	bx	lr
 80023ee:	bf00      	nop
 80023f0:	40005c50 	andmi	r5, r0, r0, asr ip

080023f4 <GetEPRxAddr>:
* Output         : None.
* Return         : Rx buffer address.
*******************************************************************************/
u16 GetEPRxAddr(u8 bEpNum)
{
  return(_GetEPRxAddr(bEpNum));
 80023f4:	4b05      	ldr	r3, [pc, #20]	; (800240c <GetEPRxAddr+0x18>)
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	b29b      	uxth	r3, r3
 80023fa:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80023fe:	4b04      	ldr	r3, [pc, #16]	; (8002410 <GetEPRxAddr+0x1c>)
 8002400:	4403      	add	r3, r0
 8002402:	005b      	lsls	r3, r3, #1
 8002404:	6818      	ldr	r0, [r3, #0]
}
 8002406:	b280      	uxth	r0, r0
 8002408:	4770      	bx	lr
 800240a:	bf00      	nop
 800240c:	40005c50 	andmi	r5, r0, r0, asr ip
 8002410:	20003004 	andcs	r3, r0, r4

08002414 <SetEPTxCount>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxCount(u8 bEpNum, u16 wCount)
{
  _SetEPTxCount(bEpNum, wCount);
 8002414:	4b04      	ldr	r3, [pc, #16]	; (8002428 <SetEPTxCount+0x14>)
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	b29b      	uxth	r3, r3
 800241a:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800241e:	4b03      	ldr	r3, [pc, #12]	; (800242c <SetEPTxCount+0x18>)
 8002420:	4403      	add	r3, r0
 8002422:	005b      	lsls	r3, r3, #1
 8002424:	6019      	str	r1, [r3, #0]
 8002426:	4770      	bx	lr
 8002428:	40005c50 	andmi	r5, r0, r0, asr ip
 800242c:	20003002 	andcs	r3, r0, r2

08002430 <SetEPRxCount>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxCount(u8 bEpNum, u16 wCount)
{
  _SetEPRxCount(bEpNum, wCount);
 8002430:	4b0d      	ldr	r3, [pc, #52]	; (8002468 <SetEPRxCount+0x38>)
 8002432:	293e      	cmp	r1, #62	; 0x3e
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	b29b      	uxth	r3, r3
 8002438:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800243c:	4b0b      	ldr	r3, [pc, #44]	; (800246c <SetEPRxCount+0x3c>)
 800243e:	4403      	add	r3, r0
 8002440:	ea4f 0243 	mov.w	r2, r3, lsl #1
 8002444:	d909      	bls.n	800245a <SetEPRxCount+0x2a>
 8002446:	094b      	lsrs	r3, r1, #5
 8002448:	06c8      	lsls	r0, r1, #27
 800244a:	bf04      	itt	eq
 800244c:	f103 33ff 	addeq.w	r3, r3, #4294967295	; 0xffffffff
 8002450:	b29b      	uxtheq	r3, r3
 8002452:	029b      	lsls	r3, r3, #10
 8002454:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002458:	e004      	b.n	8002464 <SetEPRxCount+0x34>
 800245a:	084b      	lsrs	r3, r1, #1
 800245c:	07c9      	lsls	r1, r1, #31
 800245e:	bf48      	it	mi
 8002460:	3301      	addmi	r3, #1
 8002462:	029b      	lsls	r3, r3, #10
 8002464:	6013      	str	r3, [r2, #0]
 8002466:	4770      	bx	lr
 8002468:	40005c50 	andmi	r5, r0, r0, asr ip
 800246c:	20003006 	andcs	r3, r0, r6

08002470 <GetEPRxCount>:
* Output         : None.
* Return         : Rx count value.
*******************************************************************************/
u16 GetEPRxCount(u8 bEpNum)
{
  return(_GetEPRxCount(bEpNum));
 8002470:	4b05      	ldr	r3, [pc, #20]	; (8002488 <GetEPRxCount+0x18>)
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	b29b      	uxth	r3, r3
 8002476:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800247a:	4b04      	ldr	r3, [pc, #16]	; (800248c <GetEPRxCount+0x1c>)
 800247c:	4403      	add	r3, r0
 800247e:	005b      	lsls	r3, r3, #1
 8002480:	6818      	ldr	r0, [r3, #0]
}
 8002482:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8002486:	4770      	bx	lr
 8002488:	40005c50 	andmi	r5, r0, r0, asr ip
 800248c:	20003006 	andcs	r3, r0, r6

08002490 <ByteSwap>:
u16 ByteSwap(u16 wSwW)
{
  u8 bTemp;
  u16 wRet;
  bTemp = (u8)(wSwW & 0xff);
  wRet =  (wSwW >> 8) | ((u16)bTemp << 8);
 8002490:	b2c3      	uxtb	r3, r0
 8002492:	0a00      	lsrs	r0, r0, #8
  return(wRet);
}
 8002494:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 8002498:	4770      	bx	lr
	...

0800249c <USB_SIL_Init>:
{
#ifndef STM32F10X_CL
  
  /* USB interrupts initialization */
  /* clear pending interrupts */
  _SetISTR(0);
 800249c:	4b04      	ldr	r3, [pc, #16]	; (80024b0 <USB_SIL_Init+0x14>)
 800249e:	2000      	movs	r0, #0
  wInterrupt_Mask = IMR_MSK;
 80024a0:	4a04      	ldr	r2, [pc, #16]	; (80024b4 <USB_SIL_Init+0x18>)
{
#ifndef STM32F10X_CL
  
  /* USB interrupts initialization */
  /* clear pending interrupts */
  _SetISTR(0);
 80024a2:	6018      	str	r0, [r3, #0]
  wInterrupt_Mask = IMR_MSK;
 80024a4:	f44f 4306 	mov.w	r3, #34304	; 0x8600
 80024a8:	8013      	strh	r3, [r2, #0]
  /* set interrupts mask */
  _SetCNTR(wInterrupt_Mask);
 80024aa:	4a03      	ldr	r2, [pc, #12]	; (80024b8 <USB_SIL_Init+0x1c>)
 80024ac:	6013      	str	r3, [r2, #0]
  OTG_DEV_Init();
  
#endif /* STM32F10X_CL */

  return 0;
}
 80024ae:	4770      	bx	lr
 80024b0:	40005c44 	andmi	r5, r0, r4, asr #24
 80024b4:	20000718 	andcs	r0, r0, r8, lsl r7
 80024b8:	40005c40 	andmi	r5, r0, r0, asr #24

080024bc <USB_SIL_Read>:
*                     received data buffer.
* Output         : None.
* Return         : Number of received data (in Bytes).
*******************************************************************************/
u32 USB_SIL_Read(u8 bEpAddr, u8* pBufferPointer)
{
 80024bc:	b570      	push	{r4, r5, r6, lr}
  u32 DataLength = 0;

#ifndef STM32F10X_CL

  /* Get the number of received data on the selected Endpoint */
  DataLength = GetEPRxCount(bEpAddr & 0x7F);
 80024be:	f000 057f 	and.w	r5, r0, #127	; 0x7f
 80024c2:	4628      	mov	r0, r5
*                     received data buffer.
* Output         : None.
* Return         : Number of received data (in Bytes).
*******************************************************************************/
u32 USB_SIL_Read(u8 bEpAddr, u8* pBufferPointer)
{
 80024c4:	460e      	mov	r6, r1
  u32 DataLength = 0;

#ifndef STM32F10X_CL

  /* Get the number of received data on the selected Endpoint */
  DataLength = GetEPRxCount(bEpAddr & 0x7F);
 80024c6:	f7ff ffd3 	bl	8002470 <GetEPRxCount>
 80024ca:	4604      	mov	r4, r0

  /* Use the memory interface function to write to the selected endpoint */
  PMAToUserBufferCopy(pBufferPointer, GetEPRxAddr(bEpAddr & 0x7F), DataLength);
 80024cc:	4628      	mov	r0, r5
 80024ce:	f7ff ff91 	bl	80023f4 <GetEPRxAddr>
 80024d2:	4622      	mov	r2, r4
 80024d4:	4601      	mov	r1, r0
 80024d6:	4630      	mov	r0, r6
 80024d8:	f7ff fea5 	bl	8002226 <PMAToUserBufferCopy>
  
#endif /* STM32F10X_CL */

  /* Return the number of received data */
  return DataLength;
}
 80024dc:	4620      	mov	r0, r4
 80024de:	bd70      	pop	{r4, r5, r6, pc}

080024e0 <CTR_LP>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_LP(void)
{
 80024e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO u16 wEPVal = 0;
 80024e2:	2300      	movs	r3, #0
 80024e4:	f8ad 3006 	strh.w	r3, [sp, #6]
  /* stay in loop while pending ints */
  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 80024e8:	4b50      	ldr	r3, [pc, #320]	; (800262c <CTR_LP+0x14c>)
 80024ea:	4a51      	ldr	r2, [pc, #324]	; (8002630 <CTR_LP+0x150>)
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	b299      	uxth	r1, r3
 80024f0:	041b      	lsls	r3, r3, #16
 80024f2:	8011      	strh	r1, [r2, #0]
 80024f4:	f140 8097 	bpl.w	8002626 <CTR_LP+0x146>
  {
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
 80024f8:	8813      	ldrh	r3, [r2, #0]
 80024fa:	4c4e      	ldr	r4, [pc, #312]	; (8002634 <CTR_LP+0x154>)
 80024fc:	f003 030f 	and.w	r3, r3, #15
 8002500:	7023      	strb	r3, [r4, #0]
    if (EPindex == 0)
 8002502:	2b00      	cmp	r3, #0
 8002504:	d161      	bne.n	80025ca <CTR_LP+0xea>

      /* save RX & TX status */
      /* and set both to NAK */


	    SaveRState = _GetENDPOINT(ENDP0);
 8002506:	4c4c      	ldr	r4, [pc, #304]	; (8002638 <CTR_LP+0x158>)
 8002508:	4d4c      	ldr	r5, [pc, #304]	; (800263c <CTR_LP+0x15c>)
 800250a:	6823      	ldr	r3, [r4, #0]
	    SaveTState = SaveRState & EPTX_STAT;
 800250c:	4e4c      	ldr	r6, [pc, #304]	; (8002640 <CTR_LP+0x160>)

      /* save RX & TX status */
      /* and set both to NAK */


	    SaveRState = _GetENDPOINT(ENDP0);
 800250e:	b29b      	uxth	r3, r3
 8002510:	802b      	strh	r3, [r5, #0]
	    SaveTState = SaveRState & EPTX_STAT;
 8002512:	882b      	ldrh	r3, [r5, #0]
 8002514:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002518:	8033      	strh	r3, [r6, #0]
	    SaveRState &=  EPRX_STAT;	
 800251a:	882b      	ldrh	r3, [r5, #0]
 800251c:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8002520:	802b      	strh	r3, [r5, #0]

	    _SetEPRxTxStatus(ENDP0,EP_RX_NAK,EP_TX_NAK);
 8002522:	f64b 73bf 	movw	r3, #49087	; 0xbfbf
 8002526:	6821      	ldr	r1, [r4, #0]
 8002528:	400b      	ands	r3, r1
 800252a:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 800252e:	f083 0320 	eor.w	r3, r3, #32
 8002532:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002536:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800253a:	6023      	str	r3, [r4, #0]

      /* DIR bit = origin of the interrupt */

      if ((wIstr & ISTR_DIR) == 0)
 800253c:	8813      	ldrh	r3, [r2, #0]
 800253e:	06d8      	lsls	r0, r3, #27
 8002540:	d407      	bmi.n	8002552 <CTR_LP+0x72>

        /* DIR = 0      => IN  int */
        /* DIR = 0 implies that (EP_CTR_TX = 1) always  */


        _ClearEP_CTR_TX(ENDP0);
 8002542:	f648 730f 	movw	r3, #36623	; 0x8f0f
 8002546:	6822      	ldr	r2, [r4, #0]
 8002548:	4013      	ands	r3, r2
 800254a:	6023      	str	r3, [r4, #0]
        In0_Process();
 800254c:	f7ff fe24 	bl	8002198 <In0_Process>
 8002550:	e01b      	b.n	800258a <CTR_LP+0xaa>
        /* DIR = 1 */

        /* DIR = 1 & CTR_RX       => SETUP or OUT int */
        /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */

        wEPVal = _GetENDPOINT(ENDP0);
 8002552:	6823      	ldr	r3, [r4, #0]
 8002554:	b29b      	uxth	r3, r3
 8002556:	f8ad 3006 	strh.w	r3, [sp, #6]
        
        if ((wEPVal &EP_SETUP) != 0)
 800255a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800255e:	0519      	lsls	r1, r3, #20
 8002560:	d507      	bpl.n	8002572 <CTR_LP+0x92>
        {
          _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
 8002562:	f640 738f 	movw	r3, #3983	; 0xf8f
 8002566:	6822      	ldr	r2, [r4, #0]
 8002568:	4013      	ands	r3, r2
 800256a:	6023      	str	r3, [r4, #0]
          Setup0_Process();
 800256c:	f7ff fc20 	bl	8001db0 <Setup0_Process>
 8002570:	e00b      	b.n	800258a <CTR_LP+0xaa>

		      _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
          return;
        }

        else if ((wEPVal & EP_CTR_RX) != 0)
 8002572:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002576:	b21b      	sxth	r3, r3
 8002578:	2b00      	cmp	r3, #0
 800257a:	dab5      	bge.n	80024e8 <CTR_LP+0x8>
        {
          _ClearEP_CTR_RX(ENDP0);
 800257c:	f640 738f 	movw	r3, #3983	; 0xf8f
 8002580:	6822      	ldr	r2, [r4, #0]
 8002582:	4013      	ands	r3, r2
 8002584:	6023      	str	r3, [r4, #0]
          Out0_Process();
 8002586:	f7ff fd81 	bl	800208c <Out0_Process>
          /* before terminate set Tx & Rx status */
     
		     _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
 800258a:	f64b 73bf 	movw	r3, #49087	; 0xbfbf
 800258e:	6822      	ldr	r2, [r4, #0]
 8002590:	4013      	ands	r3, r2
 8002592:	882a      	ldrh	r2, [r5, #0]
 8002594:	04d2      	lsls	r2, r2, #19
 8002596:	882a      	ldrh	r2, [r5, #0]
 8002598:	bf48      	it	mi
 800259a:	f483 5380 	eormi.w	r3, r3, #4096	; 0x1000
 800259e:	0494      	lsls	r4, r2, #18
 80025a0:	8832      	ldrh	r2, [r6, #0]
 80025a2:	bf48      	it	mi
 80025a4:	f483 5300 	eormi.w	r3, r3, #8192	; 0x2000
 80025a8:	06d0      	lsls	r0, r2, #27
 80025aa:	8832      	ldrh	r2, [r6, #0]
 80025ac:	bf48      	it	mi
 80025ae:	f083 0310 	eormi.w	r3, r3, #16
 80025b2:	0691      	lsls	r1, r2, #26
 80025b4:	bf48      	it	mi
 80025b6:	f083 0320 	eormi.w	r3, r3, #32
 80025ba:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80025be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80025c2:	4a1d      	ldr	r2, [pc, #116]	; (8002638 <CTR_LP+0x158>)
 80025c4:	b29b      	uxth	r3, r3
 80025c6:	6013      	str	r3, [r2, #0]
          return;
 80025c8:	e02d      	b.n	8002626 <CTR_LP+0x146>
    else
    {
      /* Decode and service non control endpoints interrupt  */

      /* process related endpoint register */
      wEPVal = _GetENDPOINT(EPindex);
 80025ca:	009a      	lsls	r2, r3, #2
 80025cc:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80025d0:	f502 42b8 	add.w	r2, r2, #23552	; 0x5c00
 80025d4:	6811      	ldr	r1, [r2, #0]
 80025d6:	b289      	uxth	r1, r1
 80025d8:	f8ad 1006 	strh.w	r1, [sp, #6]
      if ((wEPVal & EP_CTR_RX) != 0)
 80025dc:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 80025e0:	b209      	sxth	r1, r1
 80025e2:	2900      	cmp	r1, #0
 80025e4:	da09      	bge.n	80025fa <CTR_LP+0x11a>
      {
        /* clear int flag */
        _ClearEP_CTR_RX(EPindex);
 80025e6:	f640 718f 	movw	r1, #3983	; 0xf8f
 80025ea:	6810      	ldr	r0, [r2, #0]

        /* call OUT service function */
        (*pEpInt_OUT[EPindex-1])();
 80025ec:	3b01      	subs	r3, #1
      /* process related endpoint register */
      wEPVal = _GetENDPOINT(EPindex);
      if ((wEPVal & EP_CTR_RX) != 0)
      {
        /* clear int flag */
        _ClearEP_CTR_RX(EPindex);
 80025ee:	4001      	ands	r1, r0
 80025f0:	6011      	str	r1, [r2, #0]

        /* call OUT service function */
        (*pEpInt_OUT[EPindex-1])();
 80025f2:	4a14      	ldr	r2, [pc, #80]	; (8002644 <CTR_LP+0x164>)
 80025f4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80025f8:	4798      	blx	r3

      } /* if((wEPVal & EP_CTR_RX) */

      if ((wEPVal & EP_CTR_TX) != 0)
 80025fa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80025fe:	061a      	lsls	r2, r3, #24
 8002600:	f57f af72 	bpl.w	80024e8 <CTR_LP+0x8>
      {
        /* clear int flag */
        _ClearEP_CTR_TX(EPindex);
 8002604:	f648 710f 	movw	r1, #36623	; 0x8f0f
 8002608:	7822      	ldrb	r2, [r4, #0]
 800260a:	0093      	lsls	r3, r2, #2
 800260c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8002610:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8002614:	6818      	ldr	r0, [r3, #0]

        /* call IN service function */
        (*pEpInt_IN[EPindex-1])();
 8002616:	3a01      	subs	r2, #1
      } /* if((wEPVal & EP_CTR_RX) */

      if ((wEPVal & EP_CTR_TX) != 0)
      {
        /* clear int flag */
        _ClearEP_CTR_TX(EPindex);
 8002618:	4001      	ands	r1, r0
 800261a:	6019      	str	r1, [r3, #0]

        /* call IN service function */
        (*pEpInt_IN[EPindex-1])();
 800261c:	4b0a      	ldr	r3, [pc, #40]	; (8002648 <CTR_LP+0x168>)
 800261e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002622:	4798      	blx	r3
 8002624:	e760      	b.n	80024e8 <CTR_LP+0x8>
      } /* if((wEPVal & EP_CTR_TX) != 0) */

    }/* if(EPindex == 0) else */

  }/* while(...) */
}
 8002626:	b002      	add	sp, #8
 8002628:	bd70      	pop	{r4, r5, r6, pc}
 800262a:	bf00      	nop
 800262c:	40005c44 	andmi	r5, r0, r4, asr #24
 8002630:	200006e6 	andcs	r0, r0, r6, ror #13
 8002634:	200006f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8002638:	40005c00 	andmi	r5, r0, r0, lsl #24
 800263c:	2000071c 	andcs	r0, r0, ip, lsl r7
 8002640:	2000071e 	andcs	r0, r0, lr, lsl r7
 8002644:	2000001c 	andcs	r0, r0, ip, lsl r0
 8002648:	20000038 	andcs	r0, r0, r8, lsr r0

0800264c <CSWTCH.61>:
 800264c:	00000960 	andeq	r0, r0, r0, ror #18
 8002650:	0000e100 	andeq	lr, r0, r0, lsl #2
 8002654:	0001c200 	andeq	ip, r1, r0, lsl #4
 8002658:	000f4240 	andeq	r4, pc, r0, asr #4
 800265c:	001e8480 	andseq	r8, lr, r0, lsl #9
 8002660:	002dc6c0 	eoreq	ip, sp, r0, asr #13
 8002664:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8002668:	0044aa20 	subeq	sl, r4, r0, lsr #20
 800266c:	00a037a0 	adceq	r3, r0, r0, lsr #15

08002670 <Virtual_Com_Port_StringProduct>:
 8002670:	00520332 	subseq	r0, r2, r2, lsr r3
 8002674:	0042004f 	subeq	r0, r2, pc, asr #32
 8002678:	0054004f 	subseq	r0, r4, pc, asr #32
 800267c:	00530049 	subseq	r0, r3, r9, asr #32
 8002680:	00560020 	subseq	r0, r6, r0, lsr #32
 8002684:	00720069 	rsbseq	r0, r2, r9, rrx
 8002688:	00750074 	rsbseq	r0, r5, r4, ror r0
 800268c:	006c0061 	rsbeq	r0, ip, r1, rrx
 8002690:	00430020 	subeq	r0, r3, r0, lsr #32
 8002694:	004d004f 	subeq	r0, sp, pc, asr #32
 8002698:	00500020 	subseq	r0, r0, r0, lsr #32
 800269c:	0072006f 	rsbseq	r0, r2, pc, rrx
 80026a0:	03120074 	tsteq	r2, #116	; 0x74

080026a2 <Virtual_Com_Port_StringVendor>:
 80026a2:	00430312 	subeq	r0, r3, r2, lsl r3
 80026a6:	002d004d 	eoreq	r0, sp, sp, asr #32
 80026aa:	00300039 	eorseq	r0, r0, r9, lsr r0
 80026ae:	00200030 	eoreq	r0, r0, r0, lsr r0
 80026b2:	03040020 	movweq	r0, #16416	; 0x4020

080026b4 <Virtual_Com_Port_StringLangID>:
 80026b4:	04090304 	streq	r0, [r9], #-772	; 0x304

080026b8 <Virtual_Com_Port_ConfigDescriptor>:
 80026b8:	00430209 	subeq	r0, r3, r9, lsl #4
 80026bc:	80000102 	andhi	r0, r0, r2, lsl #2
 80026c0:	00040900 	andeq	r0, r4, r0, lsl #18
 80026c4:	02020100 	andeq	r0, r2, #0, 2
 80026c8:	24050001 	strcs	r0, [r5], #-1
 80026cc:	05011000 	streq	r1, [r1, #-0]
 80026d0:	01000124 	tsteq	r0, r4, lsr #2
 80026d4:	02022404 	andeq	r2, r2, #4, 8	; 0x4000000
 80026d8:	00062405 	andeq	r2, r6, r5, lsl #8
 80026dc:	82050701 	andhi	r0, r5, #262144	; 0x40000
 80026e0:	ff000803 			; <UNDEFINED> instruction: 0xff000803
 80026e4:	00010409 	andeq	r0, r1, r9, lsl #8
 80026e8:	00000a02 	andeq	r0, r0, r2, lsl #20
 80026ec:	03050700 	movweq	r0, #22272	; 0x5700
 80026f0:	00004002 	andeq	r4, r0, r2
 80026f4:	02810507 	addeq	r0, r1, #29360128	; 0x1c00000
 80026f8:	12000040 	andne	r0, r0, #64	; 0x40

080026fb <Virtual_Com_Port_DeviceDescriptor>:
 80026fb:	02000112 	andeq	r0, r0, #-2147483644	; 0x80000004
 80026ff:	40000002 	andmi	r0, r0, r2
 8002703:	ff48fff1 			; <UNDEFINED> instruction: 0xff48fff1
 8002707:	02010200 	andeq	r0, r1, #0, 4
 800270b:	00000100 	andeq	r0, r0, r0, lsl #2

0800270d <APBAHBPrescTable>:
 800270d:	00000000 	andeq	r0, r0, r0
 8002711:	04030201 	streq	r0, [r3], #-513	; 0x201
 8002715:	04030201 	streq	r0, [r3], #-513	; 0x201
 8002719:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}

0800271d <ADCPrescTable>:
 800271d:	08060402 	stmdaeq	r6, {r1, sl}
 8002721:	4c265441 	cfstrsmi	mvf5, [r6], #-260	; 0xfffffefc
 8002725:	65520044 	ldrbvs	r0, [r2, #-68]	; 0x44
 8002729:	2e796461 	cdpcs	4, 7, cr6, cr9, cr1, {3}
 800272d:	53000a2e 	movwpl	r0, #2606	; 0xa2e
 8002731:	65636375 	strbvs	r6, [r3, #-885]!	; 0x375
 8002735:	2e2e7373 	mcrcs	3, 1, r7, cr14, cr3, {3}
 8002739:	6146000a 	cmpvs	r6, sl
 800273d:	2e2e6c69 	cdpcs	12, 2, cr6, cr14, cr9, {3}
 8002741:	5441000a 	strbpl	r0, [r1], #-10
 8002745:	004f4726 	subeq	r4, pc, r6, lsr #14
 8002749:	52265441 	eorpl	r5, r6, #1090519040	; 0x41000000
 800274d:	41005453 	tstmi	r0, r3, asr r4
 8002751:	4f542654 	svcmi	0x00542654
 8002755:	54005353 	strpl	r5, [r0], #-851	; 0x353
 8002759:	2053534f 	subscs	r5, r3, pc, asr #6
 800275d:	45444f4d 	strbmi	r4, [r4, #-3917]	; 0xf4d
 8002761:	0d4b4f20 	stcleq	15, cr4, [fp, #-128]	; 0xffffff80
 8002765:	4100200a 	tstmi	r0, sl
 8002769:	414e2654 	cmpmi	lr, r4, asr r6
 800276d:	4300454d 	movwmi	r4, #1357	; 0x54d
 8002771:	30392d4d 	eorscc	r2, r9, sp, asr #26
 8002775:	4e000a34 	mcrmi	10, 0, r0, cr0, cr4, {1}
 8002779:	4449206f 	strbmi	r2, [r9], #-111	; 0x6f
 800277d:	6f432045 	svcvs	0x00432045
 8002781:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
 8002785:	0a0d2164 	beq	834ad1d <_etext+0x34853d>
 8002789:	0a4b4f00 	beq	92d6391 <_etext+0x12d3bb1>
 800278d:	74654400 	strbtvc	r4, [r5], #-1024	; 0x400
 8002791:	20746365 	rsbscs	r6, r4, r5, ror #6
 8002795:	216e6950 	cmncs	lr, r0, asr r9
 8002799:	0d000a0d 	vstreq	s0, [r0, #-52]	; 0xffffffcc
 800279d:	6f44200a 	svcvs	0x0044200a
 80027a1:	6f6c6e77 	svcvs	0x006c6e77
 80027a5:	46206461 	strtmi	r6, [r0], -r1, ror #8
 80027a9:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0x961
 80027ad:	0d002164 	stfeqs	f2, [r0, #-400]	; 0xfffffe70
 80027b1:	6f44200a 	svcvs	0x0044200a
 80027b5:	6f6c6e77 	svcvs	0x006c6e77
 80027b9:	4f206461 	svcmi	0x00206461
 80027bd:	66726576 			; <UNDEFINED> instruction: 0x66726576
 80027c1:	21776f6c 	cmncs	r7, ip, ror #30
 80027c5:	200a0d00 	andcs	r0, sl, r0, lsl #26
 80027c9:	73616c66 	cmnvc	r1, #26112	; 0x6600
 80027cd:	72772068 	rsbsvc	r2, r7, #104	; 0x68
 80027d1:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
 80027d5:	72652067 	rsbvc	r2, r5, #103	; 0x67
 80027d9:	21726f72 	cmncs	r2, r2, ror pc
 80027dd:	Address 0x00000000080027dd is out of bounds.


Disassembly of section .data:

20000000 <_sdata>:
20000000:	53031a01 	movwpl	r1, #14849	; 0x3a01

20000001 <Virtual_Com_Port_StringSerial>:
20000001:	0053031a 	subseq	r0, r3, sl, lsl r3
20000005:	004d0054 	subeq	r0, sp, r4, asr r0
20000009:	00320033 	eorseq	r0, r2, r3, lsr r0
2000000d:	00300031 	eorseq	r0, r0, r1, lsr r0
	...

2000001c <pEpInt_OUT>:
2000001c:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
20000020:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
20000024:	08000cfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp}
20000028:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
2000002c:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
20000030:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
20000034:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}

20000038 <pEpInt_IN>:
20000038:	08000bed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, fp}
2000003c:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
20000040:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
20000044:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
20000048:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
2000004c:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
20000050:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}

20000054 <linecoding>:
20000054:	0001c200 	andeq	ip, r1, r0, lsl #4
20000058:	00080000 	andeq	r0, r8, r0

2000005c <Device_Property>:
2000005c:	08000ed5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, sl, fp}
20000060:	08000ef9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, sl, fp}
20000064:	08000de9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, fp}
20000068:	08000dfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp}
2000006c:	08000e01 	stmdaeq	r0, {r0, r9, sl, fp}
20000070:	08000e5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, sl, fp}
20000074:	08000e81 	stmdaeq	r0, {r0, r7, r9, sl, fp}
20000078:	08000fd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl, fp}
2000007c:	08000fe5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, fp}
20000080:	08000ff1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, fp}
20000084:	00000000 	andeq	r0, r0, r0
20000088:	00000040 	andeq	r0, r0, r0, asr #32

2000008c <Device_Descriptor>:
2000008c:	080026fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r9, sl, sp}
20000090:	00000012 	andeq	r0, r0, r2, lsl r0

20000094 <Config_Descriptor>:
20000094:	080026b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, sp}
20000098:	00000043 	andeq	r0, r0, r3, asr #32

2000009c <String_Descriptor>:
2000009c:	080026b4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl, sp}
200000a0:	00000004 	andeq	r0, r0, r4
200000a4:	080026a2 	stmdaeq	r0, {r1, r5, r7, r9, sl, sp}
200000a8:	00000012 	andeq	r0, r0, r2, lsl r0
200000ac:	08002670 	stmdaeq	r0, {r4, r5, r6, r9, sl, sp}
200000b0:	00000032 	andeq	r0, r0, r2, lsr r0
200000b4:	20000001 	andcs	r0, r0, r1
200000b8:	0000001a 	andeq	r0, r0, sl, lsl r0

200000bc <User_Standard_Requests>:
200000bc:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
200000c0:	08000dc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, fp}
200000c4:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
200000c8:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
200000cc:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
200000d0:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
200000d4:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
200000d8:	080021f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sp}
200000dc:	08000ddd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, fp}

200000e0 <Device_Table>:
200000e0:	00000104 	andeq	r0, r0, r4, lsl #2

Disassembly of section .bss:

200000e4 <_sbss>:
200000e4:	00000000 	andeq	r0, r0, r0

200000e8 <gu32TimingCounter1ms_Txd>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <gbCount>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <gwAddressPointer>:
200000f0:	00000000 	andeq	r0, r0, r0

200000f4 <gwEndAddressPointer>:
200000f4:	00000000 	andeq	r0, r0, r0

200000f8 <gwCalculatedCheckSum>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <gwRxTotalCount>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <gbFlashDownloadStart>:
20000100:	00000000 	andeq	r0, r0, r0

20000104 <gwReceivedCheckSumFromHost>:
20000104:	00000000 	andeq	r0, r0, r0

20000108 <gwWriteProtectedPages>:
20000108:	00000000 	andeq	r0, r0, r0

2000010c <sr.5719>:
2000010c:	00000000 	andeq	r0, r0, r0

20000110 <FinishToSend>:
	...

20000112 <USB_Rx_Cnt>:
	...

20000114 <FrameCount.5906>:
20000114:	00000000 	andeq	r0, r0, r0

20000118 <bIntPackSOF>:
20000118:	00000000 	andeq	r0, r0, r0

2000011c <Request>:
2000011c:	00000000 	andeq	r0, r0, r0

20000120 <comstatetemp>:
20000120:	00000000 	andeq	r0, r0, r0

20000124 <bDeviceState>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <USB_Tx_State>:
20000128:	00000000 	andeq	r0, r0, r0

2000012c <USART_Rx_length>:
2000012c:	00000000 	andeq	r0, r0, r0

20000130 <Data_Mul_MaxPacketSize>:
20000130:	00000000 	andeq	r0, r0, r0

20000134 <HSEStartUpStatus>:
	...

20000135 <gbDXLReadPointer>:
20000135:	00000000 	andeq	r0, r0, r0

20000138 <TimingDelay>:
20000138:	00000000 	andeq	r0, r0, r0

2000013c <gwUSARTWritePtr>:
	...

2000013e <gbpRxBuffer>:
	...

20000190 <gwUSARTReadPtr>:
20000190:	00000000 	andeq	r0, r0, r0

20000194 <USART_InitStructure>:
	...

200001a4 <gwpUSARTBuffer>:
	...

200005a4 <gbpDXLDataBuffer>:
	...

200006a4 <gbDXLWritePointer>:
	...

200006a5 <USB_Rx_Buffer>:
	...

200006e6 <wIstr>:
	...

200006e8 <SaveState>:
200006e8:	00000000 	andeq	r0, r0, r0

200006ec <pProperty>:
200006ec:	00000000 	andeq	r0, r0, r0

200006f0 <EPindex>:
200006f0:	00000000 	andeq	r0, r0, r0

200006f4 <Device_Info>:
	...

20000710 <pUser_Standard_Requests>:
20000710:	00000000 	andeq	r0, r0, r0

20000714 <pInformation>:
20000714:	00000000 	andeq	r0, r0, r0

20000718 <wInterrupt_Mask>:
	...

2000071a <StatusInfo>:
	...

2000071c <SaveRState>:
	...

2000071e <SaveTState>:
	...

Disassembly of section ._usrstack:

20000720 <_susrstack>:
	...

Disassembly of section .comment:

00000000 <.comment>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_HP(void)
{
   0:	3a434347 	bcc	10d0d24 <__Stack_Size+0x10d0924>
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xd45
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0x464
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2973726f 	ldmdbcs	r3!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    if ((wEPVal & EP_CTR_RX) != 0)
  2c:	392e3420 	stmdbcc	lr!, {r5, sl, ip, sp}
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
  30:	3220332e 	eorcc	r3, r0, #-1207959552	; 0xb8000000
  34:	30353130 	eorscc	r3, r5, r0, lsr r1
  38:	20333033 	eorscs	r3, r3, r3, lsr r0

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
  3c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
  40:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0x165
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
  44:	415b2029 	cmpmi	fp, r9, lsr #32
  48:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff2fe <SCS_BASE+0x1fff12fe>
  4c:	6465626d 	strbtvs	r6, [r5], #-621	; 0x26d

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
  50:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  54:	2d395f34 	ldccs	15, cr5, [r9, #-208]!	; 0xffffff30
  58:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}


    } /* if((wEPVal & EP_CTR_TX) != 0) */

  }/* while(...) */
}
  5c:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  60:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  64:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  68:	32313232 	eorscc	r3, r1, #536870915	; 0x20000003
  6c:	005d3032 	subseq	r3, sp, r2, lsr r0

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_HP(void)
{
   0:	00003041 	andeq	r3, r0, r1, asr #32
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000026 	andeq	r0, r0, r6, lsr #32
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	084d070a 	stmdaeq	sp, {r1, r3, r8, r9, sl}^
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
  20:	12020901 	andne	r0, r2, #16384	; 0x4000
  24:	15011404 	strne	r1, [r1, #-1028]	; 0x404
  28:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
    if ((wEPVal & EP_CTR_RX) != 0)
  2c:	22011a01 	andcs	r1, r1, #4096	; 0x1000
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
  30:	Address 0x0000000000000030 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_HP(void)
{
   0:	000000ec 	andeq	r0, r0, ip, ror #1
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
  10:	080001a4 	stmdaeq	r0, {r2, r5, r7, r8}
  14:	0000000c 	andeq	r0, r0, ip
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
  18:	080001b0 	stmdaeq	r0, {r4, r5, r7, r8}
  1c:	00000014 	andeq	r0, r0, r4, lsl r0
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
  20:	080001c4 	stmdaeq	r0, {r2, r6, r7, r8}
  24:	00000014 	andeq	r0, r0, r4, lsl r0
  28:	080001d8 	stmdaeq	r0, {r3, r4, r6, r7, r8}
    if ((wEPVal & EP_CTR_RX) != 0)
  2c:	0000004e 	andeq	r0, r0, lr, asr #32
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
  30:	00000000 	andeq	r0, r0, r0
  34:	00000014 	andeq	r0, r0, r4, lsl r0
  38:	00000000 	andeq	r0, r0, r0

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
  3c:	00000030 	andeq	r0, r0, r0, lsr r0

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
  40:	08000228 	stmdaeq	r0, {r3, r5, r9}
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
  44:	00000028 	andeq	r0, r0, r8, lsr #32
  48:	00000000 	andeq	r0, r0, r0
  4c:	0000004a 	andeq	r0, r0, sl, asr #32

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
  50:	08000250 	stmdaeq	r0, {r4, r6, r9}
  54:	00000012 	andeq	r0, r0, r2, lsl r0
  58:	08000262 	stmdaeq	r0, {r1, r5, r6, r9}


    } /* if((wEPVal & EP_CTR_TX) != 0) */

  }/* while(...) */
}
  5c:	00000034 	andeq	r0, r0, r4, lsr r0
  60:	08000296 	stmdaeq	r0, {r1, r2, r4, r7, r9}
  64:	00000014 	andeq	r0, r0, r4, lsl r0
  68:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
  6c:	00000014 	andeq	r0, r0, r4, lsl r0
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPDblBuffCount(u8 bEpNum, u8 bDir, u16 wCount)
{
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
  70:	00000000 	andeq	r0, r0, r0
  74:	0000004a 	andeq	r0, r0, sl, asr #32
  78:	080002be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9}
  7c:	00000012 	andeq	r0, r0, r2, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	00000034 	andeq	r0, r0, r4, lsr r0
  88:	00000000 	andeq	r0, r0, r0
  8c:	00000014 	andeq	r0, r0, r4, lsl r0
  90:	00000000 	andeq	r0, r0, r0
  94:	00000014 	andeq	r0, r0, r4, lsl r0
  98:	00000000 	andeq	r0, r0, r0
  9c:	00000020 	andeq	r0, r0, r0, lsr #32
  a0:	080002d0 	stmdaeq	r0, {r4, r6, r7, r9}
  a4:	0000002c 	andeq	r0, r0, ip, lsr #32
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
  a8:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
  ac:	0000002e 	andeq	r0, r0, lr, lsr #32
  b0:	0800032a 	stmdaeq	r0, {r1, r3, r5, r8, r9}
      break; 
      
    default:
      break;
  }
}
  b4:	00000024 	andeq	r0, r0, r4, lsr #32
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
  b8:	08000350 	stmdaeq	r0, {r4, r6, r8, r9}
  bc:	000000b8 	strheq	r0, [r0], -r8
  c0:	08000408 	stmdaeq	r0, {r3, sl}
  c4:	000003f4 	strdeq	r0, [r0], -r4
  c8:	080007fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl}
  cc:	0000008c 	andeq	r0, r0, ip, lsl #1
  d0:	08000888 	stmdaeq	r0, {r3, r7, fp}
  d4:	00000124 	andeq	r0, r0, r4, lsr #2
  d8:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
  dc:	0000007c 	andeq	r0, r0, ip, ror r0
  e0:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
  e4:	000000b4 	strheq	r0, [r0], -r4
	...
  f0:	0000023c 	andeq	r0, r0, ip, lsr r2
  f4:	1cf40002 	ldclne	0, cr0, [r4], #8
  f8:	00040000 	andeq	r0, r4, r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	08000adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp}
 104:	00000002 	andeq	r0, r0, r2
 108:	08000ade 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, fp}
 10c:	00000002 	andeq	r0, r0, r2
 110:	08000ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp}
 114:	00000002 	andeq	r0, r0, r2
 118:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
 11c:	00000002 	andeq	r0, r0, r2
 120:	08000ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp}
 124:	00000002 	andeq	r0, r0, r2
 128:	08000ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp}
 12c:	00000002 	andeq	r0, r0, r2
 130:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 134:	00000002 	andeq	r0, r0, r2
 138:	08000aea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, fp}
 13c:	00000002 	andeq	r0, r0, r2
 140:	08000aec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, fp}
 144:	00000014 	andeq	r0, r0, r4, lsl r0
 148:	08000b00 	stmdaeq	r0, {r8, r9, fp}
 14c:	00000002 	andeq	r0, r0, r2
 150:	08000b02 	stmdaeq	r0, {r1, r8, r9, fp}
 154:	00000002 	andeq	r0, r0, r2
 158:	08000b04 	stmdaeq	r0, {r2, r8, r9, fp}
 15c:	00000002 	andeq	r0, r0, r2
 160:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
 164:	00000002 	andeq	r0, r0, r2
 168:	08000b08 	stmdaeq	r0, {r3, r8, r9, fp}
 16c:	00000002 	andeq	r0, r0, r2
 170:	08000b0a 	stmdaeq	r0, {r1, r3, r8, r9, fp}
 174:	00000002 	andeq	r0, r0, r2
 178:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
 17c:	00000002 	andeq	r0, r0, r2
 180:	08000b0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, fp}
 184:	00000002 	andeq	r0, r0, r2
 188:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
 18c:	00000002 	andeq	r0, r0, r2
 190:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
 194:	00000002 	andeq	r0, r0, r2
 198:	08000b14 	stmdaeq	r0, {r2, r4, r8, r9, fp}
 19c:	00000002 	andeq	r0, r0, r2
 1a0:	00000000 	andeq	r0, r0, r0
 1a4:	00000002 	andeq	r0, r0, r2
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	00000002 	andeq	r0, r0, r2
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	00000002 	andeq	r0, r0, r2
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	00000002 	andeq	r0, r0, r2
 1c0:	00000000 	andeq	r0, r0, r0
 1c4:	00000002 	andeq	r0, r0, r2
 1c8:	00000000 	andeq	r0, r0, r0
 1cc:	00000002 	andeq	r0, r0, r2
 1d0:	00000000 	andeq	r0, r0, r0
 1d4:	00000002 	andeq	r0, r0, r2
 1d8:	08000b16 	stmdaeq	r0, {r1, r2, r4, r8, r9, fp}
 1dc:	00000002 	andeq	r0, r0, r2
 1e0:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
 1e4:	00000002 	andeq	r0, r0, r2
 1e8:	08000b1a 	stmdaeq	r0, {r1, r3, r4, r8, r9, fp}
 1ec:	00000004 	andeq	r0, r0, r4
 1f0:	08000b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp}
 1f4:	00000002 	andeq	r0, r0, r2
 1f8:	08000b20 	stmdaeq	r0, {r5, r8, r9, fp}
 1fc:	00000002 	andeq	r0, r0, r2
 200:	08000b22 	stmdaeq	r0, {r1, r5, r8, r9, fp}
 204:	00000002 	andeq	r0, r0, r2
 208:	08000b24 	stmdaeq	r0, {r2, r5, r8, r9, fp}
 20c:	00000002 	andeq	r0, r0, r2
 210:	08000b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp}
 214:	00000002 	andeq	r0, r0, r2
 218:	08000b28 	stmdaeq	r0, {r3, r5, r8, r9, fp}
 21c:	00000002 	andeq	r0, r0, r2
 220:	08000b2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, fp}
 224:	00000002 	andeq	r0, r0, r2
 228:	08000b2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, fp}
 22c:	00000014 	andeq	r0, r0, r4, lsl r0
 230:	08000b40 	stmdaeq	r0, {r6, r8, r9, fp}
 234:	00000002 	andeq	r0, r0, r2
 238:	08000b42 	stmdaeq	r0, {r1, r6, r8, r9, fp}
 23c:	00000002 	andeq	r0, r0, r2
 240:	08000b44 	stmdaeq	r0, {r2, r6, r8, r9, fp}
 244:	00000002 	andeq	r0, r0, r2
 248:	08000b46 	stmdaeq	r0, {r1, r2, r6, r8, r9, fp}
 24c:	00000002 	andeq	r0, r0, r2
 250:	08000b48 	stmdaeq	r0, {r3, r6, r8, r9, fp}
 254:	00000002 	andeq	r0, r0, r2
 258:	08000b4a 	stmdaeq	r0, {r1, r3, r6, r8, r9, fp}
 25c:	00000002 	andeq	r0, r0, r2
 260:	08000b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp}
 264:	00000002 	andeq	r0, r0, r2
 268:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
 26c:	00000002 	andeq	r0, r0, r2
 270:	08000b50 	stmdaeq	r0, {r4, r6, r8, r9, fp}
 274:	00000034 	andeq	r0, r0, r4, lsr r0
 278:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
 27c:	0000003c 	andeq	r0, r0, ip, lsr r0
 280:	08000bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp}
 284:	00000002 	andeq	r0, r0, r2
 288:	08000bc2 	stmdaeq	r0, {r1, r6, r7, r8, r9, fp}
 28c:	00000002 	andeq	r0, r0, r2
 290:	08000bc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, fp}
 294:	00000002 	andeq	r0, r0, r2
 298:	08000bc6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, fp}
 29c:	00000002 	andeq	r0, r0, r2
 2a0:	08000bc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, fp}
 2a4:	00000002 	andeq	r0, r0, r2
 2a8:	08000bca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, fp}
 2ac:	00000002 	andeq	r0, r0, r2
 2b0:	08000bcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, fp}
 2b4:	00000002 	andeq	r0, r0, r2
 2b8:	08000bce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, fp}
 2bc:	00000002 	andeq	r0, r0, r2
 2c0:	08000bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp}
 2c4:	00000002 	andeq	r0, r0, r2
 2c8:	08000bd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, r9, fp}
 2cc:	00000002 	andeq	r0, r0, r2
 2d0:	08000bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp}
 2d4:	00000002 	andeq	r0, r0, r2
 2d8:	08000bd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, fp}
 2dc:	00000002 	andeq	r0, r0, r2
 2e0:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
 2e4:	00000002 	andeq	r0, r0, r2
 2e8:	08000bda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, fp}
 2ec:	00000002 	andeq	r0, r0, r2
 2f0:	08000bdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, fp}
 2f4:	00000002 	andeq	r0, r0, r2
 2f8:	08000bde 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, fp}
 2fc:	00000002 	andeq	r0, r0, r2
 300:	08000be0 	stmdaeq	r0, {r5, r6, r7, r8, r9, fp}
 304:	00000002 	andeq	r0, r0, r2
 308:	08000be2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, fp}
 30c:	00000002 	andeq	r0, r0, r2
 310:	08000be4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, fp}
 314:	00000002 	andeq	r0, r0, r2
 318:	08000be6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, fp}
 31c:	00000002 	andeq	r0, r0, r2
 320:	08000be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp}
 324:	00000002 	andeq	r0, r0, r2
	...
 330:	00000014 	andeq	r0, r0, r4, lsl r0
 334:	26b90002 	ldrtcs	r0, [r9], r2
 338:	00040000 	andeq	r0, r4, r0
	...
 348:	00000034 	andeq	r0, r0, r4, lsr r0
 34c:	27e10002 	strbcs	r0, [r1, r2]!
 350:	00040000 	andeq	r0, r4, r0
 354:	00000000 	andeq	r0, r0, r0
 358:	08000bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp}
 35c:	0000000c 	andeq	r0, r0, ip
 360:	08000bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp}
 364:	00000104 	andeq	r0, r0, r4, lsl #2
 368:	08000cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp}
 36c:	0000005c 	andeq	r0, r0, ip, asr r0
 370:	00000000 	andeq	r0, r0, r0
 374:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 380:	0000001c 	andeq	r0, r0, ip, lsl r0
 384:	2b6b0002 	blcs	1ac0394 <__Stack_Size+0x1abff94>
 388:	00040000 	andeq	r0, r4, r0
 38c:	00000000 	andeq	r0, r0, r0
 390:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
 394:	0000006c 	andeq	r0, r0, ip, rrx
	...
 3a0:	00000084 	andeq	r0, r0, r4, lsl #1
 3a4:	2d910002 	ldccs	0, cr0, [r1, #8]
 3a8:	00040000 	andeq	r0, r4, r0
 3ac:	00000000 	andeq	r0, r0, r0
 3b0:	08000dc4 	stmdaeq	r0, {r2, r6, r7, r8, sl, fp}
 3b4:	00000018 	andeq	r0, r0, r8, lsl r0
 3b8:	08000ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp}
 3bc:	0000000c 	andeq	r0, r0, ip
 3c0:	08000de8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, fp}
 3c4:	00000014 	andeq	r0, r0, r4, lsl r0
 3c8:	08000dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp}
 3cc:	00000002 	andeq	r0, r0, r2
 3d0:	08000e00 	stmdaeq	r0, {r9, sl, fp}
 3d4:	0000005c 	andeq	r0, r0, ip, asr r0
 3d8:	08000e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp}
 3dc:	00000024 	andeq	r0, r0, r4, lsr #32
 3e0:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
 3e4:	00000010 	andeq	r0, r0, r0, lsl r0
 3e8:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
 3ec:	00000018 	andeq	r0, r0, r8, lsl r0
 3f0:	08000ea8 	stmdaeq	r0, {r3, r5, r7, r9, sl, fp}
 3f4:	0000002c 	andeq	r0, r0, ip, lsr #32
 3f8:	08000ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp}
 3fc:	00000024 	andeq	r0, r0, r4, lsr #32
 400:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
 404:	000000e0 	andeq	r0, r0, r0, ror #1
 408:	08000fd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, fp}
 40c:	0000000c 	andeq	r0, r0, ip
 410:	08000fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp}
 414:	0000000c 	andeq	r0, r0, ip
 418:	08000ff0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, fp}
 41c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 428:	00000054 	andeq	r0, r0, r4, asr r0
 42c:	38ea0002 	stmiacc	sl!, {r1}^
 430:	00040000 	andeq	r0, r4, r0
 434:	00000000 	andeq	r0, r0, r0
 438:	08001010 	stmdaeq	r0, {r4, ip}
 43c:	00000028 	andeq	r0, r0, r8, lsr #32
 440:	08001038 	stmdaeq	r0, {r3, r4, r5, ip}
 444:	00000038 	andeq	r0, r0, r8, lsr r0
 448:	00000000 	andeq	r0, r0, r0
 44c:	00000004 	andeq	r0, r0, r4
 450:	08001070 	stmdaeq	r0, {r4, r5, r6, ip}
 454:	0000001c 	andeq	r0, r0, ip, lsl r0
 458:	0800108c 	stmdaeq	r0, {r2, r3, r7, ip}
 45c:	00000024 	andeq	r0, r0, r4, lsr #32
 460:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
 464:	00000004 	andeq	r0, r0, r4
 468:	080010b4 	stmdaeq	r0, {r2, r4, r5, r7, ip}
 46c:	00000034 	andeq	r0, r0, r4, lsr r0
 470:	080010e8 	stmdaeq	r0, {r3, r5, r6, r7, ip}
 474:	0000002a 	andeq	r0, r0, sl, lsr #32
	...
 480:	000000cc 	andeq	r0, r0, ip, asr #1
 484:	3dee0002 	stclcc	0, cr0, [lr, #8]!
 488:	00040000 	andeq	r0, r4, r0
 48c:	00000000 	andeq	r0, r0, r0
 490:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
 494:	00000018 	andeq	r0, r0, r8, lsl r0
 498:	00000000 	andeq	r0, r0, r0
 49c:	00000018 	andeq	r0, r0, r8, lsl r0
 4a0:	0800112c 	stmdaeq	r0, {r2, r3, r5, r8, ip}
 4a4:	00000018 	andeq	r0, r0, r8, lsl r0
 4a8:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
 4ac:	00000018 	andeq	r0, r0, r8, lsl r0
 4b0:	0800115c 	stmdaeq	r0, {r2, r3, r4, r6, r8, ip}
 4b4:	00000010 	andeq	r0, r0, r0, lsl r0
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	0000000c 	andeq	r0, r0, ip
 4c0:	00000000 	andeq	r0, r0, r0
 4c4:	0000000c 	andeq	r0, r0, ip
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	00000010 	andeq	r0, r0, r0, lsl r0
 4d0:	00000000 	andeq	r0, r0, r0
 4d4:	00000010 	andeq	r0, r0, r0, lsl r0
 4d8:	00000000 	andeq	r0, r0, r0
 4dc:	00000018 	andeq	r0, r0, r8, lsl r0
 4e0:	00000000 	andeq	r0, r0, r0
 4e4:	00000020 	andeq	r0, r0, r0, lsr #32
 4e8:	0800116c 	stmdaeq	r0, {r2, r3, r5, r6, r8, ip}
 4ec:	0000000c 	andeq	r0, r0, ip
 4f0:	08001178 	stmdaeq	r0, {r3, r4, r5, r6, r8, ip}
 4f4:	00000028 	andeq	r0, r0, r8, lsr #32
 4f8:	080011a0 	stmdaeq	r0, {r5, r7, r8, ip}
 4fc:	00000036 	andeq	r0, r0, r6, lsr r0
 500:	080011d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, ip}
 504:	00000040 	andeq	r0, r0, r0, asr #32
 508:	00000000 	andeq	r0, r0, r0
 50c:	0000003c 	andeq	r0, r0, ip, lsr r0
 510:	00000000 	andeq	r0, r0, r0
 514:	00000070 	andeq	r0, r0, r0, ror r0
 518:	08001218 	stmdaeq	r0, {r3, r4, r9, ip}
 51c:	00000048 	andeq	r0, r0, r8, asr #32
 520:	00000000 	andeq	r0, r0, r0
 524:	00000038 	andeq	r0, r0, r8, lsr r0
 528:	00000000 	andeq	r0, r0, r0
 52c:	00000048 	andeq	r0, r0, r8, asr #32
 530:	00000000 	andeq	r0, r0, r0
 534:	000000a0 	andeq	r0, r0, r0, lsr #1
 538:	00000000 	andeq	r0, r0, r0
 53c:	0000008c 	andeq	r0, r0, ip, lsl #1
 540:	00000000 	andeq	r0, r0, r0
 544:	00000054 	andeq	r0, r0, r4, asr r0
	...
 550:	00000044 	andeq	r0, r0, r4, asr #32
 554:	46a90002 	strtmi	r0, [r9], r2
 558:	00040000 	andeq	r0, r4, r0
 55c:	00000000 	andeq	r0, r0, r0
 560:	08001260 	stmdaeq	r0, {r5, r6, r9, ip}
 564:	0000000c 	andeq	r0, r0, ip
 568:	0800126c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip}
 56c:	0000000c 	andeq	r0, r0, ip
 570:	08001278 	stmdaeq	r0, {r3, r4, r5, r6, r9, ip}
 574:	0000000c 	andeq	r0, r0, ip
 578:	00000000 	andeq	r0, r0, r0
 57c:	00000010 	andeq	r0, r0, r0, lsl r0
 580:	00000000 	andeq	r0, r0, r0
 584:	00000010 	andeq	r0, r0, r0, lsl r0
 588:	00000000 	andeq	r0, r0, r0
 58c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 598:	0000009c 	muleq	r0, ip, r0
 59c:	48560002 	ldmdami	r6, {r1}^
 5a0:	00040000 	andeq	r0, r4, r0
	...
 5ac:	000000a4 	andeq	r0, r0, r4, lsr #1
 5b0:	00000000 	andeq	r0, r0, r0
 5b4:	00000016 	andeq	r0, r0, r6, lsl r0
 5b8:	08001284 	stmdaeq	r0, {r2, r7, r9, ip}
 5bc:	0000009c 	muleq	r0, ip, r0
 5c0:	00000000 	andeq	r0, r0, r0
 5c4:	00000010 	andeq	r0, r0, r0, lsl r0
 5c8:	08001320 	stmdaeq	r0, {r5, r8, r9, ip}
 5cc:	0000000c 	andeq	r0, r0, ip
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	00000006 	andeq	r0, r0, r6
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	0000000c 	andeq	r0, r0, ip
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	00000006 	andeq	r0, r0, r6
 5e8:	0800132c 	stmdaeq	r0, {r2, r3, r5, r8, r9, ip}
 5ec:	00000004 	andeq	r0, r0, r4
 5f0:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
 5f4:	00000004 	andeq	r0, r0, r4
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	0000000a 	andeq	r0, r0, sl
 600:	00000000 	andeq	r0, r0, r0
 604:	00000004 	andeq	r0, r0, r4
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000010 	andeq	r0, r0, r0, lsl r0
 610:	00000000 	andeq	r0, r0, r0
 614:	0000001c 	andeq	r0, r0, ip, lsl r0
 618:	00000000 	andeq	r0, r0, r0
 61c:	0000000c 	andeq	r0, r0, ip
 620:	08001334 	stmdaeq	r0, {r2, r4, r5, r8, r9, ip}
 624:	00000054 	andeq	r0, r0, r4, asr r0
 628:	00000000 	andeq	r0, r0, r0
 62c:	0000002a 	andeq	r0, r0, sl, lsr #32
	...
 638:	00000104 	andeq	r0, r0, r4, lsl #2
 63c:	4f9d0002 	svcmi	0x009d0002
 640:	00040000 	andeq	r0, r4, r0
	...
 64c:	00000034 	andeq	r0, r0, r4, lsr r0
 650:	00000000 	andeq	r0, r0, r0
 654:	00000030 	andeq	r0, r0, r0, lsr r0
 658:	08001388 	stmdaeq	r0, {r3, r7, r8, r9, ip}
 65c:	00000014 	andeq	r0, r0, r4, lsl r0
 660:	0800139c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, ip}
 664:	00000084 	andeq	r0, r0, r4, lsl #1
 668:	00000000 	andeq	r0, r0, r0
 66c:	0000000c 	andeq	r0, r0, ip
 670:	00000000 	andeq	r0, r0, r0
 674:	00000004 	andeq	r0, r0, r4
 678:	00000000 	andeq	r0, r0, r0
 67c:	00000004 	andeq	r0, r0, r4
 680:	00000000 	andeq	r0, r0, r0
 684:	00000004 	andeq	r0, r0, r4
 688:	00000000 	andeq	r0, r0, r0
 68c:	00000004 	andeq	r0, r0, r4
 690:	00000000 	andeq	r0, r0, r0
 694:	00000006 	andeq	r0, r0, r6
 698:	00000000 	andeq	r0, r0, r0
 69c:	00000004 	andeq	r0, r0, r4
 6a0:	00000000 	andeq	r0, r0, r0
 6a4:	00000010 	andeq	r0, r0, r0, lsl r0
 6a8:	00000000 	andeq	r0, r0, r0
 6ac:	00000020 	andeq	r0, r0, r0, lsr #32
 6b0:	00000000 	andeq	r0, r0, r0
 6b4:	0000000c 	andeq	r0, r0, ip
 6b8:	00000000 	andeq	r0, r0, r0
 6bc:	00000018 	andeq	r0, r0, r8, lsl r0
 6c0:	00000000 	andeq	r0, r0, r0
 6c4:	00000010 	andeq	r0, r0, r0, lsl r0
 6c8:	00000000 	andeq	r0, r0, r0
 6cc:	00000020 	andeq	r0, r0, r0, lsr #32
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	0000000c 	andeq	r0, r0, ip
 6d8:	08001420 	stmdaeq	r0, {r5, sl, ip}
 6dc:	00000014 	andeq	r0, r0, r4, lsl r0
 6e0:	08001434 	stmdaeq	r0, {r2, r4, r5, sl, ip}
 6e4:	00000018 	andeq	r0, r0, r8, lsl r0
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	00000010 	andeq	r0, r0, r0, lsl r0
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	00000018 	andeq	r0, r0, r8, lsl r0
 6f8:	00000000 	andeq	r0, r0, r0
 6fc:	00000020 	andeq	r0, r0, r0, lsr #32
 700:	00000000 	andeq	r0, r0, r0
 704:	0000004c 	andeq	r0, r0, ip, asr #32
 708:	00000000 	andeq	r0, r0, r0
 70c:	0000001c 	andeq	r0, r0, ip, lsl r0
 710:	00000000 	andeq	r0, r0, r0
 714:	00000018 	andeq	r0, r0, r8, lsl r0
 718:	00000000 	andeq	r0, r0, r0
 71c:	00000018 	andeq	r0, r0, r8, lsl r0
 720:	00000000 	andeq	r0, r0, r0
 724:	0000001c 	andeq	r0, r0, ip, lsl r0
 728:	00000000 	andeq	r0, r0, r0
 72c:	00000030 	andeq	r0, r0, r0, lsr r0
 730:	00000000 	andeq	r0, r0, r0
 734:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 740:	00000114 	andeq	r0, r0, r4, lsl r1
 744:	591a0002 	ldmdbpl	sl, {r1}
 748:	00040000 	andeq	r0, r4, r0
 74c:	00000000 	andeq	r0, r0, r0
 750:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
 754:	0000003c 	andeq	r0, r0, ip, lsr r0
 758:	08001488 	stmdaeq	r0, {r3, r7, sl, ip}
 75c:	00000038 	andeq	r0, r0, r8, lsr r0
 760:	00000000 	andeq	r0, r0, r0
 764:	00000014 	andeq	r0, r0, r4, lsl r0
 768:	00000000 	andeq	r0, r0, r0
 76c:	0000000c 	andeq	r0, r0, ip
 770:	080014c0 	stmdaeq	r0, {r6, r7, sl, ip}
 774:	00000014 	andeq	r0, r0, r4, lsl r0
 778:	080014d4 	stmdaeq	r0, {r2, r4, r6, r7, sl, ip}
 77c:	0000000c 	andeq	r0, r0, ip
 780:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
 784:	00000014 	andeq	r0, r0, r4, lsl r0
 788:	080014f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, ip}
 78c:	00000010 	andeq	r0, r0, r0, lsl r0
 790:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
 794:	00000014 	andeq	r0, r0, r4, lsl r0
 798:	08001518 	stmdaeq	r0, {r3, r4, r8, sl, ip}
 79c:	00000014 	andeq	r0, r0, r4, lsl r0
 7a0:	0800152c 	stmdaeq	r0, {r2, r3, r5, r8, sl, ip}
 7a4:	00000014 	andeq	r0, r0, r4, lsl r0
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	00000018 	andeq	r0, r0, r8, lsl r0
 7b0:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
 7b4:	0000000c 	andeq	r0, r0, ip
 7b8:	00000000 	andeq	r0, r0, r0
 7bc:	00000014 	andeq	r0, r0, r4, lsl r0
 7c0:	00000000 	andeq	r0, r0, r0
 7c4:	00000020 	andeq	r0, r0, r0, lsr #32
 7c8:	00000000 	andeq	r0, r0, r0
 7cc:	0000000c 	andeq	r0, r0, ip
 7d0:	00000000 	andeq	r0, r0, r0
 7d4:	00000010 	andeq	r0, r0, r0, lsl r0
 7d8:	00000000 	andeq	r0, r0, r0
 7dc:	0000000c 	andeq	r0, r0, ip
 7e0:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
 7e4:	00000084 	andeq	r0, r0, r4, lsl #1
 7e8:	00000000 	andeq	r0, r0, r0
 7ec:	00000018 	andeq	r0, r0, r8, lsl r0
 7f0:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
 7f4:	00000018 	andeq	r0, r0, r8, lsl r0
 7f8:	080015e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, ip}
 7fc:	00000018 	andeq	r0, r0, r8, lsl r0
 800:	08001600 	stmdaeq	r0, {r9, sl, ip}
 804:	00000018 	andeq	r0, r0, r8, lsl r0
 808:	08001618 	stmdaeq	r0, {r3, r4, r9, sl, ip}
 80c:	00000018 	andeq	r0, r0, r8, lsl r0
 810:	00000000 	andeq	r0, r0, r0
 814:	0000000c 	andeq	r0, r0, ip
 818:	00000000 	andeq	r0, r0, r0
 81c:	0000000c 	andeq	r0, r0, ip
 820:	00000000 	andeq	r0, r0, r0
 824:	0000000c 	andeq	r0, r0, ip
 828:	08001630 	stmdaeq	r0, {r4, r5, r9, sl, ip}
 82c:	00000028 	andeq	r0, r0, r8, lsr #32
 830:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
 834:	0000002e 	andeq	r0, r0, lr, lsr #32
 838:	08001688 	stmdaeq	r0, {r3, r7, r9, sl, ip}
 83c:	00000010 	andeq	r0, r0, r0, lsl r0
 840:	00000000 	andeq	r0, r0, r0
 844:	00000014 	andeq	r0, r0, r4, lsl r0
 848:	00000000 	andeq	r0, r0, r0
 84c:	0000000c 	andeq	r0, r0, ip
	...
 858:	000002dc 	ldrdeq	r0, [r0], -ip
 85c:	618b0002 	orrvs	r0, fp, r2
 860:	00040000 	andeq	r0, r4, r0
	...
 86c:	00000032 	andeq	r0, r0, r2, lsr r0
 870:	00000000 	andeq	r0, r0, r0
 874:	0000003a 	andeq	r0, r0, sl, lsr r0
 878:	00000000 	andeq	r0, r0, r0
 87c:	000000c8 	andeq	r0, r0, r8, asr #1
 880:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
 884:	0000003c 	andeq	r0, r0, ip, lsr r0
 888:	00000000 	andeq	r0, r0, r0
 88c:	00000074 	andeq	r0, r0, r4, ror r0
 890:	00000000 	andeq	r0, r0, r0
 894:	00000088 	andeq	r0, r0, r8, lsl #1
 898:	00000000 	andeq	r0, r0, r0
 89c:	00000084 	andeq	r0, r0, r4, lsl #1
 8a0:	00000000 	andeq	r0, r0, r0
 8a4:	00000068 	andeq	r0, r0, r8, rrx
 8a8:	00000000 	andeq	r0, r0, r0
 8ac:	00000022 	andeq	r0, r0, r2, lsr #32
 8b0:	00000000 	andeq	r0, r0, r0
 8b4:	00000012 	andeq	r0, r0, r2, lsl r0
 8b8:	00000000 	andeq	r0, r0, r0
 8bc:	00000014 	andeq	r0, r0, r4, lsl r0
 8c0:	00000000 	andeq	r0, r0, r0
 8c4:	00000010 	andeq	r0, r0, r0, lsl r0
 8c8:	00000000 	andeq	r0, r0, r0
 8cc:	00000012 	andeq	r0, r0, r2, lsl r0
 8d0:	080016d4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, ip}
 8d4:	00000018 	andeq	r0, r0, r8, lsl r0
 8d8:	00000000 	andeq	r0, r0, r0
 8dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 8e0:	080016ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip}
 8e4:	00000012 	andeq	r0, r0, r2, lsl r0
 8e8:	00000000 	andeq	r0, r0, r0
 8ec:	00000004 	andeq	r0, r0, r4
 8f0:	00000000 	andeq	r0, r0, r0
 8f4:	00000008 	andeq	r0, r0, r8
 8f8:	00000000 	andeq	r0, r0, r0
 8fc:	00000012 	andeq	r0, r0, r2, lsl r0
 900:	00000000 	andeq	r0, r0, r0
 904:	0000000e 	andeq	r0, r0, lr
 908:	00000000 	andeq	r0, r0, r0
 90c:	0000001a 	andeq	r0, r0, sl, lsl r0
 910:	00000000 	andeq	r0, r0, r0
 914:	00000034 	andeq	r0, r0, r4, lsr r0
 918:	00000000 	andeq	r0, r0, r0
 91c:	00000014 	andeq	r0, r0, r4, lsl r0
 920:	00000000 	andeq	r0, r0, r0
 924:	0000001a 	andeq	r0, r0, sl, lsl r0
 928:	00000000 	andeq	r0, r0, r0
 92c:	00000014 	andeq	r0, r0, r4, lsl r0
 930:	080016fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, sl, ip}
 934:	00000006 	andeq	r0, r0, r6
 938:	00000000 	andeq	r0, r0, r0
 93c:	00000010 	andeq	r0, r0, r0, lsl r0
 940:	00000000 	andeq	r0, r0, r0
 944:	00000010 	andeq	r0, r0, r0, lsl r0
 948:	00000000 	andeq	r0, r0, r0
 94c:	0000003c 	andeq	r0, r0, ip, lsr r0
 950:	00000000 	andeq	r0, r0, r0
 954:	00000010 	andeq	r0, r0, r0, lsl r0
 958:	00000000 	andeq	r0, r0, r0
 95c:	00000014 	andeq	r0, r0, r4, lsl r0
 960:	00000000 	andeq	r0, r0, r0
 964:	00000010 	andeq	r0, r0, r0, lsl r0
 968:	00000000 	andeq	r0, r0, r0
 96c:	00000014 	andeq	r0, r0, r4, lsl r0
 970:	00000000 	andeq	r0, r0, r0
 974:	00000018 	andeq	r0, r0, r8, lsl r0
 978:	00000000 	andeq	r0, r0, r0
 97c:	00000018 	andeq	r0, r0, r8, lsl r0
 980:	00000000 	andeq	r0, r0, r0
 984:	00000018 	andeq	r0, r0, r8, lsl r0
 988:	00000000 	andeq	r0, r0, r0
 98c:	00000018 	andeq	r0, r0, r8, lsl r0
 990:	00000000 	andeq	r0, r0, r0
 994:	00000010 	andeq	r0, r0, r0, lsl r0
 998:	00000000 	andeq	r0, r0, r0
 99c:	00000014 	andeq	r0, r0, r4, lsl r0
 9a0:	00000000 	andeq	r0, r0, r0
 9a4:	00000010 	andeq	r0, r0, r0, lsl r0
 9a8:	00000000 	andeq	r0, r0, r0
 9ac:	00000014 	andeq	r0, r0, r4, lsl r0
 9b0:	00000000 	andeq	r0, r0, r0
 9b4:	00000010 	andeq	r0, r0, r0, lsl r0
 9b8:	00000000 	andeq	r0, r0, r0
 9bc:	00000014 	andeq	r0, r0, r4, lsl r0
 9c0:	00000000 	andeq	r0, r0, r0
 9c4:	00000010 	andeq	r0, r0, r0, lsl r0
 9c8:	00000000 	andeq	r0, r0, r0
 9cc:	00000014 	andeq	r0, r0, r4, lsl r0
 9d0:	00000000 	andeq	r0, r0, r0
 9d4:	00000010 	andeq	r0, r0, r0, lsl r0
 9d8:	00000000 	andeq	r0, r0, r0
 9dc:	00000010 	andeq	r0, r0, r0, lsl r0
 9e0:	00000000 	andeq	r0, r0, r0
 9e4:	00000010 	andeq	r0, r0, r0, lsl r0
 9e8:	00000000 	andeq	r0, r0, r0
 9ec:	00000010 	andeq	r0, r0, r0, lsl r0
 9f0:	00000000 	andeq	r0, r0, r0
 9f4:	00000010 	andeq	r0, r0, r0, lsl r0
 9f8:	00000000 	andeq	r0, r0, r0
 9fc:	00000010 	andeq	r0, r0, r0, lsl r0
 a00:	00000000 	andeq	r0, r0, r0
 a04:	00000014 	andeq	r0, r0, r4, lsl r0
 a08:	00000000 	andeq	r0, r0, r0
 a0c:	00000014 	andeq	r0, r0, r4, lsl r0
 a10:	00000000 	andeq	r0, r0, r0
 a14:	00000014 	andeq	r0, r0, r4, lsl r0
 a18:	00000000 	andeq	r0, r0, r0
 a1c:	00000014 	andeq	r0, r0, r4, lsl r0
 a20:	00000000 	andeq	r0, r0, r0
 a24:	00000014 	andeq	r0, r0, r4, lsl r0
 a28:	00000000 	andeq	r0, r0, r0
 a2c:	0000001c 	andeq	r0, r0, ip, lsl r0
 a30:	00000000 	andeq	r0, r0, r0
 a34:	0000001c 	andeq	r0, r0, ip, lsl r0
 a38:	00000000 	andeq	r0, r0, r0
 a3c:	00000044 	andeq	r0, r0, r4, asr #32
 a40:	00000000 	andeq	r0, r0, r0
 a44:	00000018 	andeq	r0, r0, r8, lsl r0
 a48:	00000000 	andeq	r0, r0, r0
 a4c:	00000018 	andeq	r0, r0, r8, lsl r0
 a50:	00000000 	andeq	r0, r0, r0
 a54:	00000018 	andeq	r0, r0, r8, lsl r0
 a58:	00000000 	andeq	r0, r0, r0
 a5c:	00000016 	andeq	r0, r0, r6, lsl r0
 a60:	00000000 	andeq	r0, r0, r0
 a64:	00000016 	andeq	r0, r0, r6, lsl r0
 a68:	00000000 	andeq	r0, r0, r0
 a6c:	00000016 	andeq	r0, r0, r6, lsl r0
 a70:	00000000 	andeq	r0, r0, r0
 a74:	00000016 	andeq	r0, r0, r6, lsl r0
 a78:	00000000 	andeq	r0, r0, r0
 a7c:	00000004 	andeq	r0, r0, r4
 a80:	00000000 	andeq	r0, r0, r0
 a84:	00000004 	andeq	r0, r0, r4
 a88:	00000000 	andeq	r0, r0, r0
 a8c:	00000004 	andeq	r0, r0, r4
 a90:	00000000 	andeq	r0, r0, r0
 a94:	00000004 	andeq	r0, r0, r4
 a98:	00000000 	andeq	r0, r0, r0
 a9c:	00000004 	andeq	r0, r0, r4
 aa0:	00000000 	andeq	r0, r0, r0
 aa4:	00000006 	andeq	r0, r0, r6
 aa8:	00000000 	andeq	r0, r0, r0
 aac:	00000016 	andeq	r0, r0, r6, lsl r0
 ab0:	00000000 	andeq	r0, r0, r0
 ab4:	0000001a 	andeq	r0, r0, sl, lsl r0
 ab8:	00000000 	andeq	r0, r0, r0
 abc:	0000006e 	andeq	r0, r0, lr, rrx
 ac0:	00000000 	andeq	r0, r0, r0
 ac4:	00000016 	andeq	r0, r0, r6, lsl r0
 ac8:	00000000 	andeq	r0, r0, r0
 acc:	0000001a 	andeq	r0, r0, sl, lsl r0
 ad0:	00000000 	andeq	r0, r0, r0
 ad4:	000000b6 	strheq	r0, [r0], -r6
 ad8:	00000000 	andeq	r0, r0, r0
 adc:	00000010 	andeq	r0, r0, r0, lsl r0
 ae0:	00000000 	andeq	r0, r0, r0
 ae4:	00000006 	andeq	r0, r0, r6
 ae8:	00000000 	andeq	r0, r0, r0
 aec:	00000006 	andeq	r0, r0, r6
 af0:	00000000 	andeq	r0, r0, r0
 af4:	00000006 	andeq	r0, r0, r6
 af8:	00000000 	andeq	r0, r0, r0
 afc:	00000008 	andeq	r0, r0, r8
 b00:	00000000 	andeq	r0, r0, r0
 b04:	00000006 	andeq	r0, r0, r6
 b08:	00000000 	andeq	r0, r0, r0
 b0c:	00000006 	andeq	r0, r0, r6
 b10:	00000000 	andeq	r0, r0, r0
 b14:	0000000c 	andeq	r0, r0, ip
 b18:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
 b1c:	00000008 	andeq	r0, r0, r8
 b20:	00000000 	andeq	r0, r0, r0
 b24:	00000016 	andeq	r0, r0, r6, lsl r0
 b28:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 b2c:	00000008 	andeq	r0, r0, r8
	...
 b38:	00000044 	andeq	r0, r0, r4, asr #32
 b3c:	80cd0002 	sbchi	r0, sp, r2
 b40:	00040000 	andeq	r0, r4, r0
	...
 b4c:	00000018 	andeq	r0, r0, r8, lsl r0
 b50:	08001714 	stmdaeq	r0, {r2, r4, r8, r9, sl, ip}
 b54:	0000000c 	andeq	r0, r0, ip
 b58:	08001720 	stmdaeq	r0, {r5, r8, r9, sl, ip}
 b5c:	00000028 	andeq	r0, r0, r8, lsr #32
 b60:	08001748 	stmdaeq	r0, {r3, r6, r8, r9, sl, ip}
 b64:	00000018 	andeq	r0, r0, r8, lsl r0
 b68:	00000000 	andeq	r0, r0, r0
 b6c:	0000000c 	andeq	r0, r0, ip
 b70:	00000000 	andeq	r0, r0, r0
 b74:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
 b80:	000000ec 	andeq	r0, r0, ip, ror #1
 b84:	82d80002 	sbcshi	r0, r8, #2
 b88:	00040000 	andeq	r0, r4, r0
 b8c:	00000000 	andeq	r0, r0, r0
 b90:	08001760 	stmdaeq	r0, {r5, r6, r8, r9, sl, ip}
 b94:	00000094 	muleq	r0, r4, r0
 b98:	080017f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, ip}
 b9c:	00000088 	andeq	r0, r0, r8, lsl #1
 ba0:	0800187c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip}
 ba4:	00000016 	andeq	r0, r0, r6, lsl r0
 ba8:	00000000 	andeq	r0, r0, r0
 bac:	00000020 	andeq	r0, r0, r0, lsr #32
 bb0:	00000000 	andeq	r0, r0, r0
 bb4:	0000000c 	andeq	r0, r0, ip
 bb8:	08001892 	stmdaeq	r0, {r1, r4, r7, fp, ip}
 bbc:	00000018 	andeq	r0, r0, r8, lsl r0
 bc0:	080018aa 	stmdaeq	r0, {r1, r3, r5, r7, fp, ip}
 bc4:	00000032 	andeq	r0, r0, r2, lsr r0
 bc8:	00000000 	andeq	r0, r0, r0
 bcc:	00000012 	andeq	r0, r0, r2, lsl r0
 bd0:	00000000 	andeq	r0, r0, r0
 bd4:	00000016 	andeq	r0, r0, r6, lsl r0
 bd8:	00000000 	andeq	r0, r0, r0
 bdc:	00000016 	andeq	r0, r0, r6, lsl r0
 be0:	00000000 	andeq	r0, r0, r0
 be4:	00000018 	andeq	r0, r0, r8, lsl r0
 be8:	00000000 	andeq	r0, r0, r0
 bec:	00000016 	andeq	r0, r0, r6, lsl r0
 bf0:	00000000 	andeq	r0, r0, r0
 bf4:	00000018 	andeq	r0, r0, r8, lsl r0
 bf8:	080018dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip}
 bfc:	00000008 	andeq	r0, r0, r8
 c00:	080018e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, ip}
 c04:	00000008 	andeq	r0, r0, r8
 c08:	00000000 	andeq	r0, r0, r0
 c0c:	0000000c 	andeq	r0, r0, ip
 c10:	00000000 	andeq	r0, r0, r0
 c14:	00000012 	andeq	r0, r0, r2, lsl r0
 c18:	00000000 	andeq	r0, r0, r0
 c1c:	00000012 	andeq	r0, r0, r2, lsl r0
 c20:	00000000 	andeq	r0, r0, r0
 c24:	00000018 	andeq	r0, r0, r8, lsl r0
 c28:	00000000 	andeq	r0, r0, r0
 c2c:	00000018 	andeq	r0, r0, r8, lsl r0
 c30:	00000000 	andeq	r0, r0, r0
 c34:	00000018 	andeq	r0, r0, r8, lsl r0
 c38:	00000000 	andeq	r0, r0, r0
 c3c:	00000016 	andeq	r0, r0, r6, lsl r0
 c40:	00000000 	andeq	r0, r0, r0
 c44:	00000018 	andeq	r0, r0, r8, lsl r0
 c48:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
 c4c:	0000000c 	andeq	r0, r0, ip
 c50:	080018f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, ip}
 c54:	00000008 	andeq	r0, r0, r8
 c58:	08001900 	stmdaeq	r0, {r8, fp, ip}
 c5c:	0000003e 	andeq	r0, r0, lr, lsr r0
 c60:	00000000 	andeq	r0, r0, r0
 c64:	0000000e 	andeq	r0, r0, lr
	...
 c70:	0000001c 	andeq	r0, r0, ip, lsl r0
 c74:	8d040002 	stchi	0, cr0, [r4, #-8]
 c78:	00040000 	andeq	r0, r4, r0
 c7c:	00000000 	andeq	r0, r0, r0
 c80:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
 c84:	0000006e 	andeq	r0, r0, lr, rrx
	...
 c90:	0000001c 	andeq	r0, r0, ip, lsl r0
 c94:	8d670002 	stclhi	0, cr0, [r7, #-8]!
 c98:	00040000 	andeq	r0, r4, r0
 c9c:	00000000 	andeq	r0, r0, r0
 ca0:	08001940 	stmdaeq	r0, {r6, r8, fp, ip}
 ca4:	00000050 	andeq	r0, r0, r0, asr r0
	...
 cb0:	0000001c 	andeq	r0, r0, ip, lsl r0
 cb4:	8e570002 	cdphi	0, 5, cr0, cr7, cr2, {0}
 cb8:	00040000 	andeq	r0, r4, r0
 cbc:	00000000 	andeq	r0, r0, r0
 cc0:	08001990 	stmdaeq	r0, {r4, r7, r8, fp, ip}
 cc4:	00000034 	andeq	r0, r0, r4, lsr r0
	...
 cd0:	00000094 	muleq	r0, r4, r0
 cd4:	92510002 	subsls	r0, r1, #2
 cd8:	00040000 	andeq	r0, r4, r0
 cdc:	00000000 	andeq	r0, r0, r0
 ce0:	080019c4 	stmdaeq	r0, {r2, r6, r7, r8, fp, ip}
 ce4:	00000024 	andeq	r0, r0, r4, lsr #32
 ce8:	080019e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, ip}
 cec:	00000024 	andeq	r0, r0, r4, lsr #32
 cf0:	08001a0c 	stmdaeq	r0, {r2, r3, r9, fp, ip}
 cf4:	00000090 	muleq	r0, r0, r0
 cf8:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
 cfc:	000000ac 	andeq	r0, r0, ip, lsr #1
 d00:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
 d04:	00000038 	andeq	r0, r0, r8, lsr r0
 d08:	08001b80 	stmdaeq	r0, {r7, r8, r9, fp, ip}
 d0c:	00000048 	andeq	r0, r0, r8, asr #32
 d10:	08001bc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, fp, ip}
 d14:	000000d8 	ldrdeq	r0, [r0], -r8
 d18:	08001ca0 	stmdaeq	r0, {r5, r7, sl, fp, ip}
 d1c:	0000008c 	andeq	r0, r0, ip, lsl #1
 d20:	08001d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp, ip}
 d24:	00000024 	andeq	r0, r0, r4, lsr #32
 d28:	08001d50 	stmdaeq	r0, {r4, r6, r8, sl, fp, ip}
 d2c:	0000001c 	andeq	r0, r0, ip, lsl r0
 d30:	08001d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp, ip}
 d34:	00000044 	andeq	r0, r0, r4, asr #32
 d38:	08001db0 	stmdaeq	r0, {r4, r5, r7, r8, sl, fp, ip}
 d3c:	000002dc 	ldrdeq	r0, [r0], -ip
 d40:	0800208c 	stmdaeq	r0, {r2, r3, r7, sp}
 d44:	000000cc 	andeq	r0, r0, ip, asr #1
 d48:	08002158 	stmdaeq	r0, {r3, r4, r6, r8, sp}
 d4c:	00000040 	andeq	r0, r0, r0, asr #32
 d50:	08002198 	stmdaeq	r0, {r3, r4, r7, r8, sp}
 d54:	0000005c 	andeq	r0, r0, ip, asr r0
 d58:	080021f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sp}
 d5c:	00000002 	andeq	r0, r0, r2
	...
 d68:	00000024 	andeq	r0, r0, r4, lsr #32
 d6c:	a07a0002 	rsbsge	r0, sl, r2
 d70:	00040000 	andeq	r0, r4, r0
 d74:	00000000 	andeq	r0, r0, r0
 d78:	080021f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sp}
 d7c:	00000030 	andeq	r0, r0, r0, lsr r0
 d80:	08002226 	stmdaeq	r0, {r1, r2, r5, r9, sp}
 d84:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 d90:	000001ec 	andeq	r0, r0, ip, ror #3
 d94:	a1f50002 	mvnsge	r0, r2
 d98:	00040000 	andeq	r0, r4, r0
	...
 da4:	0000000c 	andeq	r0, r0, ip
 da8:	00000000 	andeq	r0, r0, r0
 dac:	0000000c 	andeq	r0, r0, ip
 db0:	00000000 	andeq	r0, r0, r0
 db4:	0000000c 	andeq	r0, r0, ip
 db8:	00000000 	andeq	r0, r0, r0
 dbc:	0000000c 	andeq	r0, r0, ip
 dc0:	00000000 	andeq	r0, r0, r0
 dc4:	0000000c 	andeq	r0, r0, ip
 dc8:	00000000 	andeq	r0, r0, r0
 dcc:	0000000c 	andeq	r0, r0, ip
 dd0:	00000000 	andeq	r0, r0, r0
 dd4:	0000000c 	andeq	r0, r0, ip
 dd8:	0800224c 	stmdaeq	r0, {r2, r3, r6, r9, sp}
 ddc:	00000010 	andeq	r0, r0, r0, lsl r0
 de0:	00000000 	andeq	r0, r0, r0
 de4:	0000000c 	andeq	r0, r0, ip
 de8:	00000000 	andeq	r0, r0, r0
 dec:	0000000e 	andeq	r0, r0, lr
 df0:	00000000 	andeq	r0, r0, r0
 df4:	00000010 	andeq	r0, r0, r0, lsl r0
 df8:	0800225c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sp}
 dfc:	0000001c 	andeq	r0, r0, ip, lsl r0
 e00:	00000000 	andeq	r0, r0, r0
 e04:	00000012 	andeq	r0, r0, r2, lsl r0
 e08:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
 e0c:	00000032 	andeq	r0, r0, r2, lsr r0
 e10:	080022aa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sp}
 e14:	00000032 	andeq	r0, r0, r2, lsr r0
 e18:	00000000 	andeq	r0, r0, r0
 e1c:	00000024 	andeq	r0, r0, r4, lsr #32
 e20:	00000000 	andeq	r0, r0, r0
 e24:	00000012 	andeq	r0, r0, r2, lsl r0
 e28:	00000000 	andeq	r0, r0, r0
 e2c:	00000012 	andeq	r0, r0, r2, lsl r0
 e30:	080022dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sp}
 e34:	00000026 	andeq	r0, r0, r6, lsr #32
 e38:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
 e3c:	00000026 	andeq	r0, r0, r6, lsr #32
 e40:	00000000 	andeq	r0, r0, r0
 e44:	00000020 	andeq	r0, r0, r0, lsr #32
 e48:	00000000 	andeq	r0, r0, r0
 e4c:	00000020 	andeq	r0, r0, r0, lsr #32
 e50:	08002328 	stmdaeq	r0, {r3, r5, r8, r9, sp}
 e54:	00000020 	andeq	r0, r0, r0, lsr #32
 e58:	00000000 	andeq	r0, r0, r0
 e5c:	00000020 	andeq	r0, r0, r0, lsr #32
 e60:	00000000 	andeq	r0, r0, r0
 e64:	00000020 	andeq	r0, r0, r0, lsr #32
 e68:	00000000 	andeq	r0, r0, r0
 e6c:	00000020 	andeq	r0, r0, r0, lsr #32
 e70:	00000000 	andeq	r0, r0, r0
 e74:	0000001a 	andeq	r0, r0, sl, lsl r0
 e78:	00000000 	andeq	r0, r0, r0
 e7c:	0000001a 	andeq	r0, r0, sl, lsl r0
 e80:	00000000 	andeq	r0, r0, r0
 e84:	00000018 	andeq	r0, r0, r8, lsl r0
 e88:	00000000 	andeq	r0, r0, r0
 e8c:	0000001c 	andeq	r0, r0, ip, lsl r0
 e90:	00000000 	andeq	r0, r0, r0
 e94:	00000020 	andeq	r0, r0, r0, lsr #32
 e98:	00000000 	andeq	r0, r0, r0
 e9c:	00000020 	andeq	r0, r0, r0, lsr #32
 ea0:	08002348 	stmdaeq	r0, {r3, r6, r8, r9, sp}
 ea4:	00000026 	andeq	r0, r0, r6, lsr #32
 ea8:	0800236e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, sp}
 eac:	00000026 	andeq	r0, r0, r6, lsr #32
 eb0:	00000000 	andeq	r0, r0, r0
 eb4:	00000022 	andeq	r0, r0, r2, lsr #32
 eb8:	00000000 	andeq	r0, r0, r0
 ebc:	00000012 	andeq	r0, r0, r2, lsl r0
 ec0:	08002394 	stmdaeq	r0, {r2, r4, r7, r8, r9, sp}
 ec4:	00000020 	andeq	r0, r0, r0, lsr #32
 ec8:	080023b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sp}
 ecc:	00000020 	andeq	r0, r0, r0, lsr #32
 ed0:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
 ed4:	00000020 	andeq	r0, r0, r0, lsr #32
 ed8:	080023f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sp}
 edc:	00000020 	andeq	r0, r0, r0, lsr #32
 ee0:	08002414 	stmdaeq	r0, {r2, r4, sl, sp}
 ee4:	0000001c 	andeq	r0, r0, ip, lsl r0
 ee8:	00000000 	andeq	r0, r0, r0
 eec:	00000026 	andeq	r0, r0, r6, lsr #32
 ef0:	08002430 	stmdaeq	r0, {r4, r5, sl, sp}
 ef4:	00000040 	andeq	r0, r0, r0, asr #32
 ef8:	00000000 	andeq	r0, r0, r0
 efc:	00000020 	andeq	r0, r0, r0, lsr #32
 f00:	08002470 	stmdaeq	r0, {r4, r5, r6, sl, sp}
 f04:	00000020 	andeq	r0, r0, r0, lsr #32
 f08:	00000000 	andeq	r0, r0, r0
 f0c:	00000038 	andeq	r0, r0, r8, lsr r0
 f10:	00000000 	andeq	r0, r0, r0
 f14:	00000020 	andeq	r0, r0, r0, lsr #32
 f18:	00000000 	andeq	r0, r0, r0
 f1c:	00000020 	andeq	r0, r0, r0, lsr #32
 f20:	00000000 	andeq	r0, r0, r0
 f24:	00000020 	andeq	r0, r0, r0, lsr #32
 f28:	00000000 	andeq	r0, r0, r0
 f2c:	00000020 	andeq	r0, r0, r0, lsr #32
 f30:	00000000 	andeq	r0, r0, r0
 f34:	000000a8 	andeq	r0, r0, r8, lsr #1
 f38:	00000000 	andeq	r0, r0, r0
 f3c:	0000005c 	andeq	r0, r0, ip, asr r0
 f40:	00000000 	andeq	r0, r0, r0
 f44:	0000005c 	andeq	r0, r0, ip, asr r0
 f48:	00000000 	andeq	r0, r0, r0
 f4c:	00000020 	andeq	r0, r0, r0, lsr #32
 f50:	00000000 	andeq	r0, r0, r0
 f54:	00000020 	andeq	r0, r0, r0, lsr #32
 f58:	00000000 	andeq	r0, r0, r0
 f5c:	00000044 	andeq	r0, r0, r4, asr #32
 f60:	00000000 	andeq	r0, r0, r0
 f64:	00000042 	andeq	r0, r0, r2, asr #32
 f68:	00000000 	andeq	r0, r0, r0
 f6c:	00000006 	andeq	r0, r0, r6
 f70:	08002490 	stmdaeq	r0, {r4, r7, sl, sp}
 f74:	0000000a 	andeq	r0, r0, sl
	...
 f80:	00000024 	andeq	r0, r0, r4, lsr #32
 f84:	ae8c0002 	cdpge	0, 8, cr0, cr12, cr2, {0}
 f88:	00040000 	andeq	r0, r4, r0
 f8c:	00000000 	andeq	r0, r0, r0
 f90:	0800249c 	stmdaeq	r0, {r2, r3, r4, r7, sl, sp}
 f94:	00000020 	andeq	r0, r0, r0, lsr #32
 f98:	080024bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, sp}
 f9c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 fa8:	00000024 	andeq	r0, r0, r4, lsr #32
 fac:	aff10002 	svcge	0x00f10002
 fb0:	00040000 	andeq	r0, r4, r0
 fb4:	00000000 	andeq	r0, r0, r0
 fb8:	080024e0 	stmdaeq	r0, {r5, r6, r7, sl, sp}
 fbc:	0000016c 	andeq	r0, r0, ip, ror #2
 fc0:	00000000 	andeq	r0, r0, r0
 fc4:	00000070 	andeq	r0, r0, r0, ror r0
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_HP(void)
{
       0:	00001cf0 	strdeq	r1, [r0], -r0
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	000002f4 	strdeq	r0, [r0], -r4
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
      10:	00005801 	andeq	r5, r0, r1, lsl #16
      14:	0003ec00 	andeq	lr, r3, r0, lsl #24
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
      18:	00001800 	andeq	r1, r0, r0, lsl #16
	...
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
      24:	07040200 	streq	r0, [r4, -r0, lsl #4]
      28:	0000093f 	andeq	r0, r0, pc, lsr r9
    if ((wEPVal & EP_CTR_RX) != 0)
      2c:	2d050402 	cfstrscs	mvf0, [r5, #-8]
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      30:	02000008 	andeq	r0, r0, #8
      34:	07ff0502 	ldrbeq	r0, [pc, r2, lsl #10]!
      38:	01020000 	mrseq	r0, (UNDEF: 2)

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	0009de06 	andeq	sp, r9, r6, lsl #28

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	33750300 	cmncc	r5, #0, 6
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	27020032 	smladxcs	r2, r2, r0, r0
      48:	0000004c 	andeq	r0, r0, ip, asr #32
      4c:	3a070402 	bcc	1c105c <__Stack_Size+0x1c0c5c>

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	03000009 	movweq	r0, #9
      54:	00363175 	eorseq	r3, r6, r5, ror r1
      58:	005e2802 	subseq	r2, lr, r2, lsl #16


    } /* if((wEPVal & EP_CTR_TX) != 0) */

  }/* while(...) */
}
      5c:	02020000 	andeq	r0, r2, #0
      60:	000bd707 	andeq	sp, fp, r7, lsl #14
      64:	38750300 	ldmdacc	r5!, {r8, r9}^
      68:	6f290200 	svcvs	0x00290200
      6c:	02000000 	andeq	r0, r0, #0
      70:	09dc0801 	ldmibeq	ip, {r0, fp}^
      74:	59040000 	stmdbpl	r4, {}	; <UNPREDICTABLE>
      78:	02000004 	andeq	r0, r0, #4
      7c:	0000812f 	andeq	r8, r0, pc, lsr #2
      80:	004c0500 	subeq	r0, ip, r0, lsl #10
      84:	45040000 	strmi	r0, [r4, #-0]
      88:	02000002 	andeq	r0, r0, #2
      8c:	00009130 	andeq	r9, r0, r0, lsr r1
      90:	005e0500 	subseq	r0, lr, r0, lsl #10
      94:	01060000 	mrseq	r0, (UNDEF: 6)
      98:	00ab3a02 	adceq	r3, fp, r2, lsl #20
      9c:	75070000 	strvc	r0, [r7, #-0]
      a0:	00000008 	andeq	r0, r0, r8
      a4:	00021b07 	andeq	r1, r2, r7, lsl #22
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	04000100 	streq	r0, [r0], #-256	; 0x100
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	00000603 	andeq	r0, r0, r3, lsl #12
      b0:	00963a02 	addseq	r3, r6, r2, lsl #20
      break; 
      
    default:
      break;
  }
}
      b4:	01060000 	mrseq	r0, (UNDEF: 6)
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	00cb3c02 	sbceq	r3, fp, r2, lsl #24
      bc:	ca070000 	bgt	1c00c4 <__Stack_Size+0x1bfcc4>
      c0:	0000001e 	andeq	r0, r0, lr, lsl r0
      c4:	54455308 	strbpl	r5, [r5], #-776	; 0x308
      c8:	04000100 	streq	r0, [r0], #-256	; 0x100
      cc:	0000078e 	andeq	r0, r0, lr, lsl #15
      d0:	00b63c02 	adcseq	r3, r6, r2, lsl #24
      d4:	01060000 	mrseq	r0, (UNDEF: 6)
      d8:	00eb3e02 	rsceq	r3, fp, r2, lsl #28
      dc:	3f070000 	svccc	0x00070000
      e0:	00000005 	andeq	r0, r0, r5
      e4:	00091707 	andeq	r1, r9, r7, lsl #14
      e8:	04000100 	streq	r0, [r0], #-256	; 0x100
      ec:	000000b4 	strheq	r0, [r0], -r4
      f0:	00d63e02 	sbcseq	r3, r6, r2, lsl #28
      f4:	01060000 	mrseq	r0, (UNDEF: 6)
      f8:	010b4102 	tsteq	fp, r2, lsl #2
      fc:	a1070000 	mrsge	r0, (UNDEF: 7)
     100:	00000014 	andeq	r0, r0, r4, lsl r0
     104:	00140b07 	andseq	r0, r4, r7, lsl #22
     108:	04000100 	streq	r0, [r0], #-256	; 0x100
     10c:	000000e9 	andeq	r0, r0, r9, ror #1
     110:	00f64102 	rscseq	r4, r6, r2, lsl #2
     114:	04020000 	streq	r0, [r2], #-0
     118:	00093107 	andeq	r3, r9, r7, lsl #2
     11c:	031c0900 	tsteq	ip, #0, 18
     120:	0182014e 	orreq	r0, r2, lr, asr #2
     124:	430a0000 	movwmi	r0, #40960	; 0xa000
     128:	03004c52 	movweq	r4, #3154	; 0xc52
     12c:	00760150 	rsbseq	r0, r6, r0, asr r1
     130:	0a000000 	beq	138 <_Minimum_Stack_Size+0x38>
     134:	00485243 	subeq	r5, r8, r3, asr #4
     138:	76015103 	strvc	r5, [r1], -r3, lsl #2
     13c:	04000000 	streq	r0, [r0], #-0
     140:	5244490a 	subpl	r4, r4, #163840	; 0x28000
     144:	01520300 	cmpeq	r2, r0, lsl #6
     148:	00000076 	andeq	r0, r0, r6, ror r0
     14c:	444f0a08 	strbmi	r0, [pc], #-2568	; 154 <_Minimum_Stack_Size+0x54>
     150:	53030052 	movwpl	r0, #12370	; 0x3052
     154:	00007601 	andeq	r7, r0, r1, lsl #12
     158:	5f0b0c00 	svcpl	0x000b0c00
     15c:	03000000 	movweq	r0, #0
     160:	00760154 	rsbseq	r0, r6, r4, asr r1
     164:	0a100000 	beq	40016c <__Stack_Size+0x3ffd6c>
     168:	00525242 	subseq	r5, r2, r2, asr #4
     16c:	76015503 	strvc	r5, [r1], -r3, lsl #10
     170:	14000000 	strne	r0, [r0], #-0
     174:	000cbd0b 	andeq	fp, ip, fp, lsl #26
     178:	01560300 	cmpeq	r6, r0, lsl #6
     17c:	00000076 	andeq	r0, r0, r6, ror r0
     180:	da0c0018 	ble	3001e8 <__Stack_Size+0x2ffde8>
     184:	03000008 	movweq	r0, #8
     188:	011d0157 	tsteq	sp, r7, asr r1
     18c:	50090000 	andpl	r0, r9, r0
     190:	9f020b03 	svcls	0x00020b03
     194:	0a000003 	beq	1a8 <_Minimum_Stack_Size+0xa8>
     198:	00315243 	eorseq	r5, r1, r3, asr #4
     19c:	86020d03 	strhi	r0, [r2], -r3, lsl #26
     1a0:	00000000 	andeq	r0, r0, r0
     1a4:	0007b90b 	andeq	fp, r7, fp, lsl #18
     1a8:	020e0300 	andeq	r0, lr, #0, 6
     1ac:	00000053 	andeq	r0, r0, r3, asr r0
     1b0:	52430a02 	subpl	r0, r3, #8192	; 0x2000
     1b4:	0f030032 	svceq	0x00030032
     1b8:	00008602 	andeq	r8, r0, r2, lsl #12
     1bc:	c30b0400 	movwgt	r0, #46080	; 0xb400
     1c0:	03000007 	movweq	r0, #7
     1c4:	00530210 	subseq	r0, r3, r0, lsl r2
     1c8:	0b060000 	bleq	1801d0 <__Stack_Size+0x17fdd0>
     1cc:	000005ad 	andeq	r0, r0, sp, lsr #11
     1d0:	86021103 	strhi	r1, [r2], -r3, lsl #2
     1d4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     1d8:	0007cd0b 	andeq	ip, r7, fp, lsl #26
     1dc:	02120300 	andseq	r0, r2, #0, 6
     1e0:	00000053 	andeq	r0, r0, r3, asr r0
     1e4:	04770b0a 	ldrbteq	r0, [r7], #-2826	; 0xb0a
     1e8:	13030000 	movwne	r0, #12288	; 0x3000
     1ec:	00008602 	andeq	r8, r0, r2, lsl #12
     1f0:	d70b0c00 	strle	r0, [fp, -r0, lsl #24]
     1f4:	03000007 	movweq	r0, #7
     1f8:	00530214 	subseq	r0, r3, r4, lsl r2
     1fc:	0a0e0000 	beq	380204 <__Stack_Size+0x37fe04>
     200:	03005253 	movweq	r5, #595	; 0x253
     204:	00860215 	addeq	r0, r6, r5, lsl r2
     208:	0b100000 	bleq	400210 <__Stack_Size+0x3ffe10>
     20c:	000007e1 	andeq	r0, r0, r1, ror #15
     210:	53021603 	movwpl	r1, #9731	; 0x2603
     214:	12000000 	andne	r0, r0, #0
     218:	5247450a 	subpl	r4, r7, #41943040	; 0x2800000
     21c:	02170300 	andseq	r0, r7, #0, 6
     220:	00000086 	andeq	r0, r0, r6, lsl #1
     224:	07eb0b14 			; <UNDEFINED> instruction: 0x07eb0b14
     228:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
     22c:	00005302 	andeq	r5, r0, r2, lsl #6
     230:	790b1600 	stmdbvc	fp, {r9, sl, ip}
     234:	03000002 	movweq	r0, #2
     238:	00860219 	addeq	r0, r6, r9, lsl r2
     23c:	0b180000 	bleq	600244 <__Stack_Size+0x5ffe44>
     240:	000007f5 	strdeq	r0, [r0], -r5
     244:	53021a03 	movwpl	r1, #10755	; 0x2a03
     248:	1a000000 	bne	250 <_Minimum_Stack_Size+0x150>
     24c:	00027f0b 	andeq	r7, r2, fp, lsl #30
     250:	021b0300 	andseq	r0, fp, #0, 6
     254:	00000086 	andeq	r0, r0, r6, lsl #1
     258:	0c4a0b1c 	vmoveq	d12, r0, sl
     25c:	1c030000 	stcne	0, cr0, [r3], {-0}
     260:	00005302 	andeq	r5, r0, r2, lsl #6
     264:	270b1e00 	strcs	r1, [fp, -r0, lsl #28]
     268:	03000005 	movweq	r0, #5
     26c:	0086021d 	addeq	r0, r6, sp, lsl r2
     270:	0b200000 	bleq	800278 <__Stack_Size+0x7ffe78>
     274:	00000809 	andeq	r0, r0, r9, lsl #16
     278:	53021e03 	movwpl	r1, #11779	; 0x2e03
     27c:	22000000 	andcs	r0, r0, #0
     280:	544e430a 	strbpl	r4, [lr], #-778	; 0x30a
     284:	021f0300 	andseq	r0, pc, #0, 6
     288:	00000086 	andeq	r0, r0, r6, lsl #1
     28c:	08130b24 	ldmdaeq	r3, {r2, r5, r8, r9, fp}
     290:	20030000 	andcs	r0, r3, r0
     294:	00005302 	andeq	r5, r0, r2, lsl #6
     298:	500a2600 	andpl	r2, sl, r0, lsl #12
     29c:	03004353 	movweq	r4, #851	; 0x353
     2a0:	00860221 	addeq	r0, r6, r1, lsr #4
     2a4:	0b280000 	bleq	a002ac <__Stack_Size+0x9ffeac>
     2a8:	00000a74 	andeq	r0, r0, r4, ror sl
     2ac:	53022203 	movwpl	r2, #8707	; 0x2203
     2b0:	2a000000 	bcs	2b8 <_Minimum_Stack_Size+0x1b8>
     2b4:	5252410a 	subspl	r4, r2, #-2147483646	; 0x80000002
     2b8:	02230300 	eoreq	r0, r3, #0, 6
     2bc:	00000086 	andeq	r0, r0, r6, lsl #1
     2c0:	0a7f0b2c 	beq	1fc2f78 <__Stack_Size+0x1fc2b78>
     2c4:	24030000 	strcs	r0, [r3], #-0
     2c8:	00005302 	andeq	r5, r0, r2, lsl #6
     2cc:	520a2e00 	andpl	r2, sl, #0, 28
     2d0:	03005243 	movweq	r5, #579	; 0x243
     2d4:	00860225 	addeq	r0, r6, r5, lsr #4
     2d8:	0b300000 	bleq	c002e0 <__Stack_Size+0xbffee0>
     2dc:	00000a8a 	andeq	r0, r0, sl, lsl #21
     2e0:	53022603 	movwpl	r2, #9731	; 0x2603
     2e4:	32000000 	andcc	r0, r0, #0
     2e8:	0002650b 	andeq	r6, r2, fp, lsl #10
     2ec:	02270300 	eoreq	r0, r7, #0, 6
     2f0:	00000086 	andeq	r0, r0, r6, lsl #1
     2f4:	0a950b34 	beq	fe542fcc <SCS_BASE+0x1e534fcc>
     2f8:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
     2fc:	00005302 	andeq	r5, r0, r2, lsl #6
     300:	6a0b3600 	bvs	2cdb08 <__Stack_Size+0x2cd708>
     304:	03000002 	movweq	r0, #2
     308:	00860229 	addeq	r0, r6, r9, lsr #4
     30c:	0b380000 	bleq	e00314 <__Stack_Size+0xdfff14>
     310:	00000aa0 	andeq	r0, r0, r0, lsr #21
     314:	53022a03 	movwpl	r2, #10755	; 0x2a03
     318:	3a000000 	bcc	320 <_Minimum_Stack_Size+0x220>
     31c:	00026f0b 	andeq	r6, r2, fp, lsl #30
     320:	022b0300 	eoreq	r0, fp, #0, 6
     324:	00000086 	andeq	r0, r0, r6, lsl #1
     328:	0aab0b3c 	beq	feac3020 <SCS_BASE+0x1eab5020>
     32c:	2c030000 	stccs	0, cr0, [r3], {-0}
     330:	00005302 	andeq	r5, r0, r2, lsl #6
     334:	740b3e00 	strvc	r3, [fp], #-3584	; 0xe00
     338:	03000002 	movweq	r0, #2
     33c:	0086022d 	addeq	r0, r6, sp, lsr #4
     340:	0b400000 	bleq	1000348 <__Stack_Size+0xffff48>
     344:	00000ab6 			; <UNDEFINED> instruction: 0x00000ab6
     348:	53022e03 	movwpl	r2, #11779	; 0x2e03
     34c:	42000000 	andmi	r0, r0, #0
     350:	0002400b 	andeq	r4, r2, fp
     354:	022f0300 	eoreq	r0, pc, #0, 6
     358:	00000086 	andeq	r0, r0, r6, lsl #1
     35c:	0ac10b44 	beq	ff043074 <SCS_BASE+0x1f035074>
     360:	30030000 	andcc	r0, r3, r0
     364:	00005302 	andeq	r5, r0, r2, lsl #6
     368:	440a4600 	strmi	r4, [sl], #-1536	; 0x600
     36c:	03005243 	movweq	r5, #579	; 0x243
     370:	00860231 	addeq	r0, r6, r1, lsr r2
     374:	0b480000 	bleq	120037c <__Stack_Size+0x11fff7c>
     378:	00000acc 	andeq	r0, r0, ip, asr #21
     37c:	53023203 	movwpl	r3, #8707	; 0x2203
     380:	4a000000 	bmi	388 <_Minimum_Stack_Size+0x288>
     384:	0008360b 	andeq	r3, r8, fp, lsl #12
     388:	02330300 	eorseq	r0, r3, #0, 6
     38c:	00000086 	andeq	r0, r0, r6, lsl #1
     390:	0ad70b4c 	beq	ff5c30c8 <SCS_BASE+0x1f5b50c8>
     394:	34030000 	strcc	r0, [r3], #-0
     398:	00005302 	andeq	r5, r0, r2, lsl #6
     39c:	0c004e00 	stceq	14, cr4, [r0], {-0}
     3a0:	000001e9 	andeq	r0, r0, r9, ror #3
     3a4:	8e023503 	cfsh32hi	mvfx3, mvfx2, #3
     3a8:	09000001 	stmdbeq	r0, {r0}
     3ac:	0238031c 	eorseq	r0, r8, #28, 6	; 0x70000000
     3b0:	00000469 	andeq	r0, r0, r9, ror #8
     3b4:	0052530a 	subseq	r5, r2, sl, lsl #6
     3b8:	86023a03 	strhi	r3, [r2], -r3, lsl #20
     3bc:	00000000 	andeq	r0, r0, r0
     3c0:	0007b90b 	andeq	fp, r7, fp, lsl #18
     3c4:	023b0300 	eorseq	r0, fp, #0, 6
     3c8:	00000053 	andeq	r0, r0, r3, asr r0
     3cc:	52440a02 	subpl	r0, r4, #8192	; 0x2000
     3d0:	023c0300 	eorseq	r0, ip, #0, 6
     3d4:	00000086 	andeq	r0, r0, r6, lsl #1
     3d8:	07c30b04 	strbeq	r0, [r3, r4, lsl #22]
     3dc:	3d030000 	stccc	0, cr0, [r3, #-0]
     3e0:	00005302 	andeq	r5, r0, r2, lsl #6
     3e4:	420a0600 	andmi	r0, sl, #0, 12
     3e8:	03005252 	movweq	r5, #594	; 0x252
     3ec:	0086023e 	addeq	r0, r6, lr, lsr r2
     3f0:	0b080000 	bleq	2003f8 <__Stack_Size+0x1ffff8>
     3f4:	000007cd 	andeq	r0, r0, sp, asr #15
     3f8:	53023f03 	movwpl	r3, #12035	; 0x2f03
     3fc:	0a000000 	beq	404 <__Stack_Size+0x4>
     400:	3152430a 	cmpcc	r2, sl, lsl #6
     404:	02400300 	subeq	r0, r0, #0, 6
     408:	00000086 	andeq	r0, r0, r6, lsl #1
     40c:	07d70b0c 	ldrbeq	r0, [r7, ip, lsl #22]
     410:	41030000 	mrsmi	r0, (UNDEF: 3)
     414:	00005302 	andeq	r5, r0, r2, lsl #6
     418:	430a0e00 	movwmi	r0, #44544	; 0xae00
     41c:	03003252 	movweq	r3, #594	; 0x252
     420:	00860242 	addeq	r0, r6, r2, asr #4
     424:	0b100000 	bleq	40042c <__Stack_Size+0x40002c>
     428:	000007e1 	andeq	r0, r0, r1, ror #15
     42c:	53024303 	movwpl	r4, #8963	; 0x2303
     430:	12000000 	andne	r0, r0, #0
     434:	3352430a 	cmpcc	r2, #671088640	; 0x28000000
     438:	02440300 	subeq	r0, r4, #0, 6
     43c:	00000086 	andeq	r0, r0, r6, lsl #1
     440:	07eb0b14 			; <UNDEFINED> instruction: 0x07eb0b14
     444:	45030000 	strmi	r0, [r3, #-0]
     448:	00005302 	andeq	r5, r0, r2, lsl #6
     44c:	ce0b1600 	cfmadd32gt	mvax0, mvfx1, mvfx11, mvfx0
     450:	03000001 	movweq	r0, #1
     454:	00860246 	addeq	r0, r6, r6, asr #4
     458:	0b180000 	bleq	600460 <__Stack_Size+0x600060>
     45c:	000007f5 	strdeq	r0, [r0], -r5
     460:	53024703 	movwpl	r4, #9987	; 0x2703
     464:	1a000000 	bne	46c <__Stack_Size+0x6c>
     468:	04ab0c00 	strteq	r0, [fp], #3072	; 0xc00
     46c:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
     470:	0003ab02 	andeq	sl, r3, r2, lsl #22
     474:	04010600 	streq	r0, [r1], #-1536	; 0x600
     478:	00049c1c 	andeq	r9, r4, ip, lsl ip
     47c:	046c0700 	strbteq	r0, [ip], #-1792	; 0x700
     480:	07010000 	streq	r0, [r1, -r0]
     484:	0000083b 	andeq	r0, r0, fp, lsr r8
     488:	00c40702 	sbceq	r0, r4, r2, lsl #14
     48c:	07030000 	streq	r0, [r3, -r0]
     490:	000004f6 	strdeq	r0, [r0], -r6
     494:	040e0704 	streq	r0, [lr], #-1796	; 0x704
     498:	00050000 	andeq	r0, r5, r0
     49c:	00075804 	andeq	r5, r7, r4, lsl #16
     4a0:	75220400 	strvc	r0, [r2, #-1024]!	; 0x400
     4a4:	06000004 	streq	r0, [r0], -r4
     4a8:	c2230501 	eorgt	r0, r3, #4194304	; 0x400000
     4ac:	07000004 	streq	r0, [r0, -r4]
     4b0:	00000285 	andeq	r0, r0, r5, lsl #5
     4b4:	01ae0701 			; <UNDEFINED> instruction: 0x01ae0701
     4b8:	07020000 	streq	r0, [r2, -r0]
     4bc:	000009ef 	andeq	r0, r0, pc, ror #19
     4c0:	99040003 	stmdbls	r4, {r0, r1}
     4c4:	05000007 	streq	r0, [r0, #-7]
     4c8:	0004a727 	andeq	sl, r4, r7, lsr #14
     4cc:	05010600 	streq	r0, [r1, #-1536]	; 0x600
     4d0:	0005072e 	andeq	r0, r5, lr, lsr #14
     4d4:	07ab0700 	streq	r0, [fp, r0, lsl #14]!
     4d8:	07000000 	streq	r0, [r0, -r0]
     4dc:	00000c34 	andeq	r0, r0, r4, lsr ip
     4e0:	03ba0704 			; <UNDEFINED> instruction: 0x03ba0704
     4e4:	07280000 	streq	r0, [r8, -r0]!
     4e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     4ec:	290700c8 	stmdbcs	r7, {r3, r6, r7}
     4f0:	14000004 	strne	r0, [r0], #-4
     4f4:	00000007 	andeq	r0, r0, r7
     4f8:	f6071000 			; <UNDEFINED> instruction: 0xf6071000
     4fc:	1c000006 	stcne	0, cr0, [r0], {6}
     500:	00081d07 	andeq	r1, r8, r7, lsl #26
     504:	04001800 	streq	r1, [r0], #-2048	; 0x800
     508:	000008e7 	andeq	r0, r0, r7, ror #17
     50c:	04cd3605 	strbeq	r3, [sp], #1541	; 0x605
     510:	040d0000 	streq	r0, [sp], #-0
     514:	053f3e05 	ldreq	r3, [pc, #-3589]!	; fffff717 <SCS_BASE+0x1fff1717>
     518:	870e0000 	strhi	r0, [lr, -r0]
     51c:	05000000 	streq	r0, [r0, #-0]
     520:	00005340 	andeq	r5, r0, r0, asr #6
     524:	c60e0000 	strgt	r0, [lr], -r0
     528:	0500000b 	streq	r0, [r0, #-11]
     52c:	0004c241 	andeq	ip, r4, r1, asr #4
     530:	640e0200 	strvs	r0, [lr], #-512	; 0x200
     534:	05000000 	streq	r0, [r0, #-0]
     538:	00050742 	andeq	r0, r5, r2, asr #14
     53c:	04000300 	streq	r0, [r0], #-768	; 0x300
     540:	000009cb 	andeq	r0, r0, fp, asr #19
     544:	05124305 	ldreq	r4, [r2, #-773]	; 0x305
     548:	040d0000 	streq	r0, [sp], #-0
     54c:	05831a06 	streq	r1, [r3, #2566]	; 0xa06
     550:	a90e0000 	stmdbge	lr, {}	; <UNPREDICTABLE>
     554:	06000006 	streq	r0, [r0], -r6
     558:	0000651c 	andeq	r6, r0, ip, lsl r5
     55c:	080e0000 	stmdaeq	lr, {}	; <UNPREDICTABLE>
     560:	0600000c 	streq	r0, [r0], -ip
     564:	0000651d 	andeq	r6, r0, sp, lsl r5
     568:	070e0100 	streq	r0, [lr, -r0, lsl #2]
     56c:	0600000b 	streq	r0, [r0], -fp
     570:	0000651e 	andeq	r6, r0, lr, lsl r5
     574:	1e0e0200 	cdpne	2, 0, cr0, cr14, cr0, {0}
     578:	06000009 	streq	r0, [r0], -r9
     57c:	0000eb1f 	andeq	lr, r0, pc, lsl fp
     580:	04000300 	streq	r0, [r0], #-768	; 0x300
     584:	0000024a 	andeq	r0, r0, sl, asr #4
     588:	054a2006 	strbeq	r2, [sl, #-6]
     58c:	0a0d0000 	beq	340594 <__Stack_Size+0x340194>
     590:	05d31b07 	ldrbeq	r1, [r3, #2823]	; 0xb07
     594:	5e0e0000 	cdppl	0, 0, cr0, cr14, cr0, {0}
     598:	07000004 	streq	r0, [r0, -r4]
     59c:	0000531d 	andeq	r5, r0, sp, lsl r3
     5a0:	830e0000 	movwhi	r0, #57344	; 0xe000
     5a4:	07000005 	streq	r0, [r0, -r5]
     5a8:	0000531e 	andeq	r5, r0, lr, lsl r3
     5ac:	b90e0200 	stmdblt	lr, {r9}
     5b0:	07000006 	streq	r0, [r0, -r6]
     5b4:	0000531f 	andeq	r5, r0, pc, lsl r3
     5b8:	200e0400 	andcs	r0, lr, r0, lsl #8
     5bc:	07000002 	streq	r0, [r0, -r2]
     5c0:	00005320 	andeq	r5, r0, r0, lsr #6
     5c4:	c30e0600 	movwgt	r0, #58880	; 0xe600
     5c8:	07000004 	streq	r0, [r0, -r4]
     5cc:	00006521 	andeq	r6, r0, r1, lsr #10
     5d0:	04000800 	streq	r0, [r0], #-2048	; 0x800
     5d4:	00000b80 	andeq	r0, r0, r0, lsl #23
     5d8:	058e2207 	streq	r2, [lr, #519]	; 0x207
     5dc:	100d0000 	andne	r0, sp, r0
     5e0:	062f1a08 	strteq	r1, [pc], -r8, lsl #20
     5e4:	0c0e0000 	stceq	0, cr0, [lr], {-0}
     5e8:	08000002 	stmdaeq	r0, {r1}
     5ec:	0000411c 	andeq	r4, r0, ip, lsl r1
     5f0:	0f0e0000 	svceq	0x000e0000
     5f4:	08000001 	stmdaeq	r0, {r0}
     5f8:	0000531d 	andeq	r5, r0, sp, lsl r3
     5fc:	4e0e0400 	cfcpysmi	mvf0, mvf14
     600:	08000001 	stmdaeq	r0, {r0}
     604:	0000531e 	andeq	r5, r0, lr, lsl r3
     608:	220e0600 	andcs	r0, lr, #0, 12
     60c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     610:	0000531f 	andeq	r5, r0, pc, lsl r3
     614:	a20e0800 	andge	r0, lr, #0, 16
     618:	08000005 	stmdaeq	r0, {r0, r2}
     61c:	00005320 	andeq	r5, r0, r0, lsr #6
     620:	c00e0a00 	andgt	r0, lr, r0, lsl #20
     624:	08000005 	stmdaeq	r0, {r0, r2}
     628:	00005321 	andeq	r5, r0, r1, lsr #6
     62c:	04000c00 	streq	r0, [r0], #-3072	; 0xc00
     630:	00000af5 	strdeq	r0, [r0], -r5
     634:	05de2208 	ldrbeq	r2, [lr, #520]	; 0x208
     638:	100f0000 	andne	r0, pc, r0
     63c:	00063a04 	andeq	r3, r6, r4, lsl #20
     640:	0a261100 	beq	984a48 <__Stack_Size+0x984648>
     644:	0a010000 	beq	4064c <__Stack_Size+0x4024c>
     648:	00067230 	andeq	r7, r6, r0, lsr r2
     64c:	0a680700 	beq	1a02254 <__Stack_Size+0x1a01e54>
     650:	07000000 	streq	r0, [r0, -r0]
     654:	00000bea 	andeq	r0, r0, sl, ror #23
     658:	05f00701 	ldrbeq	r0, [r0, #1793]!	; 0x701
     65c:	07020000 	streq	r0, [r2, -r0]
     660:	00000c2a 	andeq	r0, r0, sl, lsr #24
     664:	04b90703 	ldrteq	r0, [r9], #1795	; 0x703
     668:	07040000 	streq	r0, [r4, -r0]
     66c:	000009c0 	andeq	r0, r0, r0, asr #19
     670:	01060005 	tsteq	r6, r5
     674:	06871b01 	streq	r1, [r7], r1, lsl #22
     678:	ad070000 	stcge	0, cr0, [r7, #-0]
     67c:	00000000 	andeq	r0, r0, r0
     680:	00084a07 	andeq	r4, r8, r7, lsl #20
     684:	04000100 	streq	r0, [r0], #-256	; 0x100
     688:	000001a3 	andeq	r0, r0, r3, lsr #3
     68c:	06721b01 	ldrbteq	r1, [r2], -r1, lsl #22
     690:	76040000 	strvc	r0, [r4], -r0
     694:	0100000b 	tsteq	r0, fp
     698:	00063b1d 	andeq	r3, r6, sp, lsl fp
     69c:	09af1200 	stmibeq	pc!, {r9, ip}	; <UNPREDICTABLE>
     6a0:	2d010000 	stccs	0, cr0, [r1, #-0]
     6a4:	00004101 	andeq	r4, r0, r1, lsl #2
     6a8:	06c70100 	strbeq	r0, [r7], r0, lsl #2
     6ac:	75130000 	ldrvc	r0, [r3, #-0]
     6b0:	01000001 	tsteq	r0, r1
     6b4:	06c7012d 	strbeq	r0, [r7], sp, lsr #2
     6b8:	de130000 	cdple	0, 1, cr0, cr3, cr0, {0}
     6bc:	01000006 	tsteq	r0, r6
     6c0:	0065012d 	rsbeq	r0, r5, sp, lsr #2
     6c4:	14000000 	strne	r0, [r0], #-0
     6c8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     6cc:	34150074 	ldrcc	r0, [r5], #-116	; 0x74
     6d0:	01000007 	tsteq	r0, r7
     6d4:	ce1601f0 	mrcgt	1, 0, r0, cr6, cr0, {7}
     6d8:	a4000006 	strge	r0, [r0], #-6
     6dc:	0c080001 	stceq	0, cr0, [r8], {1}
     6e0:	01000000 	mrseq	r0, (UNDEF: 0)
     6e4:	0859179c 	ldmdaeq	r9, {r2, r3, r4, r7, r8, r9, sl, ip}^
     6e8:	f4010000 	vst4.8	{d0-d3}, [r1], r0
     6ec:	00000065 	andeq	r0, r0, r5, rrx
     6f0:	080001b0 	stmdaeq	r0, {r4, r5, r7, r8}
     6f4:	00000014 	andeq	r0, r0, r4, lsl r0
     6f8:	87189c01 	ldrhi	r9, [r8, -r1, lsl #24]
     6fc:	01000006 	tsteq	r0, r6
     700:	01c40101 	biceq	r0, r4, r1, lsl #2
     704:	00140800 	andseq	r0, r4, r0, lsl #16
     708:	9c010000 	stcls	0, cr0, [r1], {-0}
     70c:	00070619 	andeq	r0, r7, r9, lsl r6
     710:	01070100 	mrseq	r0, (UNDEF: 23)
     714:	080001d8 	stmdaeq	r0, {r3, r4, r6, r7, r8}
     718:	0000004e 	andeq	r0, r0, lr, asr #32
     71c:	07a39c01 	streq	r9, [r3, r1, lsl #24]!
     720:	991a0000 	ldmdbls	sl, {}	; <UNPREDICTABLE>
     724:	01000009 	tsteq	r0, r9
     728:	05d30109 	ldrbeq	r0, [r3, #265]	; 0x109
     72c:	91020000 	mrsls	r0, (UNDEF: 2)
     730:	01fc1b6c 	mvnseq	r1, ip, ror #22
     734:	19100800 	ldmdbne	r0, {fp}
     738:	074c0000 	strbeq	r0, [ip, -r0]
     73c:	011c0000 	tsteq	ip, r0
     740:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
     744:	0350011c 	cmpeq	r0, #28, 2
     748:	00244a40 	eoreq	r4, r4, r0, asr #20
     74c:	00020a1b 	andeq	r0, r2, fp, lsl sl
     750:	00193308 	andseq	r3, r9, r8, lsl #6
     754:	00076d00 	andeq	r6, r7, r0, lsl #26
     758:	52011c00 	andpl	r1, r1, #0, 24
     75c:	011c3101 	tsteq	ip, r1, lsl #2
     760:	830a0351 	movwhi	r0, #41809	; 0xa351
     764:	50011c03 	andpl	r1, r1, r3, lsl #24
     768:	244a4003 	strbcs	r4, [sl], #-3
     76c:	02141b00 	andseq	r1, r4, #0, 22
     770:	194f0800 	stmdbne	pc, {fp}^	; <UNPREDICTABLE>
     774:	07870000 	streq	r0, [r7, r0]
     778:	011c0000 	tsteq	ip, r0
     77c:	1c310151 	ldfnes	f0, [r1], #-324	; 0xfffffebc
     780:	40035001 	andmi	r5, r3, r1
     784:	1d00244a 	cfstrsne	mvf2, [r0, #-296]	; 0xfffffed8
     788:	08000220 	stmdaeq	r0, {r5, r9}
     78c:	00001966 	andeq	r1, r0, r6, ror #18
     790:	0152011c 	cmpeq	r2, ip, lsl r1
     794:	51011c31 	tstpl	r1, r1, lsr ip
     798:	011c3101 	tsteq	ip, r1, lsl #2
     79c:	4a400350 	bmi	10014e4 <__Stack_Size+0x10010e4>
     7a0:	18000024 	stmdane	r0, {r2, r5}
     7a4:	00000078 	andeq	r0, r0, r8, ror r0
     7a8:	00012801 	andeq	r2, r1, r1, lsl #16
     7ac:	14000000 	strne	r0, [r0], #-0
     7b0:	01000000 	mrseq	r0, (UNDEF: 0)
     7b4:	069d1e9c 			; <UNDEFINED> instruction: 0x069d1e9c
     7b8:	00000000 	andeq	r0, r0, r0
     7bc:	00300000 	eorseq	r0, r0, r0
     7c0:	9c010000 	stcls	0, cr0, [r1], {-0}
     7c4:	000007f1 	strdeq	r0, [r0], -r1
     7c8:	0006ae1f 	andeq	sl, r6, pc, lsl lr
     7cc:	00000000 	andeq	r0, r0, r0
     7d0:	06ba2000 	ldrteq	r2, [sl], r0
     7d4:	51010000 	mrspl	r0, (UNDEF: 1)
     7d8:	00000021 	andeq	r0, r0, r1, lsr #32
     7dc:	06ba1f00 	ldrteq	r1, [sl], r0, lsl #30
     7e0:	00600000 	rsbeq	r0, r0, r0
     7e4:	ae1f0000 	cdpge	0, 1, cr0, cr15, cr0, {0}
     7e8:	80000006 	andhi	r0, r0, r6
     7ec:	00000000 	andeq	r0, r0, r0
     7f0:	0b631900 	bleq	18c6bf8 <__Stack_Size+0x18c67f8>
     7f4:	7b010000 	blvc	407fc <__Stack_Size+0x403fc>
     7f8:	00022801 	andeq	r2, r2, r1, lsl #16
     7fc:	00002808 	andeq	r2, r0, r8, lsl #16
     800:	6b9c0100 	blvs	fe700c08 <SCS_BASE+0x1e6f2c08>
     804:	22000008 	andcs	r0, r0, #8
     808:	00746164 	rsbseq	r6, r4, r4, ror #2
     80c:	65017b01 	strvs	r7, [r1, #-2817]	; 0xb01
     810:	ba000000 	blt	818 <__Stack_Size+0x418>
     814:	1b000000 	blne	81c <__Stack_Size+0x41c>
     818:	08000234 	stmdaeq	r0, {r2, r4, r5, r9}
     81c:	00001982 	andeq	r1, r0, r2, lsl #19
     820:	00000834 	andeq	r0, r0, r4, lsr r8
     824:	0251011c 	subseq	r0, r1, #28, 2
     828:	011c4008 	tsteq	ip, r8
     82c:	000c0550 	andeq	r0, ip, r0, asr r5
     830:	00400044 	subeq	r0, r0, r4, asr #32
     834:	00023c1b 	andeq	r3, r2, fp, lsl ip
     838:	00199e08 	andseq	r9, r9, r8, lsl #28
     83c:	00085100 	andeq	r5, r8, r0, lsl #2
     840:	51011c00 	tstpl	r1, r0, lsl #24
     844:	1c007402 	cfstrsne	mvf7, [r0], {2}
     848:	0c055001 	stceq	0, cr5, [r5], {1}
     84c:	40004400 	andmi	r4, r0, r0, lsl #8
     850:	02441d00 	subeq	r1, r4, #0, 26
     854:	19b40800 	ldmibne	r4!, {fp}
     858:	011c0000 	tsteq	ip, r0
     85c:	40080251 	andmi	r0, r8, r1, asr r2
     860:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0x11c
     864:	0044000c 	subeq	r0, r4, ip
     868:	19000040 	stmdbne	r0, {r6}
     86c:	00000094 	muleq	r0, r4, r0
     870:	00018101 	andeq	r8, r1, r1, lsl #2
     874:	4a000000 	bmi	87c <__Stack_Size+0x47c>
     878:	01000000 	mrseq	r0, (UNDEF: 0)
     87c:	0008d39c 	muleq	r8, ip, r3
     880:	06a32300 	strteq	r2, [r3], r0, lsl #6
     884:	81010000 	mrshi	r0, (UNDEF: 1)
     888:	00006501 	andeq	r6, r0, r1, lsl #10
     88c:	0000db00 	andeq	sp, r0, r0, lsl #22
     890:	09ea2400 	stmibeq	sl!, {sl, sp}^
     894:	83010000 	movwhi	r0, #4096	; 0x1000
     898:	00006501 	andeq	r6, r0, r1, lsl #10
     89c:	00012d00 	andeq	r2, r1, r0, lsl #26
     8a0:	00001b00 	andeq	r1, r0, r0, lsl #22
     8a4:	07f10000 	ldrbeq	r0, [r1, r0]!
     8a8:	08b50000 	ldmeq	r5!, {}	; <UNPREDICTABLE>
     8ac:	011c0000 	tsteq	ip, r0
     8b0:	30740250 	rsbscc	r0, r4, r0, asr r2
     8b4:	00001b00 	andeq	r1, r0, r0, lsl #22
     8b8:	07f10000 	ldrbeq	r0, [r1, r0]!
     8bc:	08c90000 	stmiaeq	r9, {}^	; <UNPREDICTABLE>
     8c0:	011c0000 	tsteq	ip, r0
     8c4:	30750250 	rsbscc	r0, r5, r0, asr r2
     8c8:	00002500 	andeq	r2, r0, r0, lsl #10
     8cc:	07f10000 	ldrbeq	r0, [r1, r0]!
     8d0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     8d4:	0000098f 	andeq	r0, r0, pc, lsl #19
     8d8:	50018d01 	andpl	r8, r1, r1, lsl #26
     8dc:	12080002 	andne	r0, r8, #2
     8e0:	01000000 	mrseq	r0, (UNDEF: 0)
     8e4:	0009119c 	muleq	r9, ip, r1
     8e8:	74732200 	ldrbtvc	r2, [r3], #-512	; 0x200
     8ec:	8d010072 	stchi	0, cr0, [r1, #-456]	; 0xfffffe38
     8f0:	00091101 	andeq	r1, r9, r1, lsl #2
     8f4:	00016100 	andeq	r6, r1, r0, lsl #2
     8f8:	00692600 	rsbeq	r2, r9, r0, lsl #12
     8fc:	c7018f01 	strgt	r8, [r1, -r1, lsl #30]
     900:	82000006 	andhi	r0, r0, #6
     904:	27000001 	strcs	r0, [r0, -r1]
     908:	0800025e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r9}
     90c:	000007f1 	strdeq	r0, [r0], -r1
     910:	17041000 	strne	r1, [r4, -r0]
     914:	02000009 	andeq	r0, r0, #9
     918:	09e50801 	stmibeq	r5!, {r0, fp}^
     91c:	80190000 	andshi	r0, r9, r0
     920:	01000004 	tsteq	r0, r4
     924:	02620196 	rsbeq	r0, r2, #-2147483611	; 0x80000025
     928:	00340800 	eorseq	r0, r4, r0, lsl #16
     92c:	9c010000 	stcls	0, cr0, [r1], {-0}
     930:	00000967 	andeq	r0, r0, r7, ror #18
     934:	00025b23 	andeq	r5, r2, r3, lsr #22
     938:	01960100 	orrseq	r0, r6, r0, lsl #2
     93c:	00000053 	andeq	r0, r0, r3, asr r0
     940:	000001de 	ldrdeq	r0, [r0], -lr
     944:	0009ea24 	andeq	lr, r9, r4, lsr #20
     948:	01980100 	orrseq	r0, r8, r0, lsl #2
     94c:	00000053 	andeq	r0, r0, r3, asr r0
     950:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     954:	00028027 	andeq	r8, r2, r7, lsr #32
     958:	0007f108 	andeq	pc, r7, r8, lsl #2
     95c:	02962500 	addseq	r2, r6, #0, 10
     960:	07f10800 	ldrbeq	r0, [r1, r0, lsl #16]!
     964:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     968:	00000203 	andeq	r0, r0, r3, lsl #4
     96c:	9601a301 	strls	sl, [r1], -r1, lsl #6
     970:	14080002 	strne	r0, [r8], #-2
     974:	01000000 	mrseq	r0, (UNDEF: 0)
     978:	0009ad9c 	muleq	r9, ip, sp
     97c:	02de2300 	sbcseq	r2, lr, #0, 6
     980:	a3010000 	movwge	r0, #4096	; 0x1000
     984:	00005301 	andeq	r5, r0, r1, lsl #6
     988:	00021d00 	andeq	r1, r2, r0, lsl #26
     98c:	02a01b00 	adceq	r1, r0, #0, 22
     990:	091e0800 	ldmdbeq	lr, {fp}
     994:	09a30000 	stmibeq	r3!, {}	; <UNPREDICTABLE>
     998:	011c0000 	tsteq	ip, r0
     99c:	00740450 	rsbseq	r0, r4, r0, asr r4
     9a0:	25002538 	strcs	r2, [r0, #-1336]	; 0x538
     9a4:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
     9a8:	0000091e 	andeq	r0, r0, lr, lsl r9
     9ac:	04201900 	strteq	r1, [r0], #-2304	; 0x900
     9b0:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
     9b4:	0002aa01 	andeq	sl, r2, r1, lsl #20
     9b8:	00001408 	andeq	r1, r0, r8, lsl #8
     9bc:	fb9c0100 	blx	fe700dc6 <SCS_BASE+0x1e6f2dc6>
     9c0:	23000009 	movwcs	r0, #9
     9c4:	000000d4 	ldrdeq	r0, [r0], -r4
     9c8:	4101a901 	tstmi	r1, r1, lsl #18
     9cc:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
     9d0:	1b000002 	blne	9e0 <__Stack_Size+0x5e0>
     9d4:	080002b4 	stmdaeq	r0, {r2, r4, r5, r7, r9}
     9d8:	00000967 	andeq	r0, r0, r7, ror #18
     9dc:	000009e9 	andeq	r0, r0, r9, ror #19
     9e0:	0450011c 	ldrbeq	r0, [r0], #-284	; 0x11c
     9e4:	25400074 	strbcs	r0, [r0, #-116]	; 0x74
     9e8:	02be2800 	adcseq	r2, lr, #0, 16
     9ec:	09670800 	stmdbeq	r7!, {fp}^
     9f0:	011c0000 	tsteq	ip, r0
     9f4:	01f30350 	mvnseq	r0, r0, asr r3
     9f8:	19000050 	stmdbne	r0, {r4, r6}
     9fc:	00000090 	muleq	r0, r0, r0
     a00:	0001b001 	andeq	fp, r1, r1
     a04:	4a000000 	bmi	a0c <__Stack_Size+0x60c>
     a08:	01000000 	mrseq	r0, (UNDEF: 0)
     a0c:	000a639c 	muleq	sl, ip, r3
     a10:	06a32300 	strteq	r2, [r3], r0, lsl #6
     a14:	b0010000 	andlt	r0, r1, r0
     a18:	00006501 	andeq	r6, r0, r1, lsl #10
     a1c:	00026a00 	andeq	r6, r2, r0, lsl #20
     a20:	09ea2400 	stmibeq	sl!, {sl, sp}^
     a24:	b2010000 	andlt	r0, r1, #0
     a28:	00006501 	andeq	r6, r0, r1, lsl #10
     a2c:	0002bc00 	andeq	fp, r2, r0, lsl #24
     a30:	00001b00 	andeq	r1, r0, r0, lsl #22
     a34:	19ce0000 	stmibne	lr, {}^	; <UNPREDICTABLE>
     a38:	0a450000 	beq	1140a40 <__Stack_Size+0x1140640>
     a3c:	011c0000 	tsteq	ip, r0
     a40:	30740250 	rsbscc	r0, r4, r0, asr r2
     a44:	00001b00 	andeq	r1, r0, r0, lsl #22
     a48:	19ce0000 	stmibne	lr, {}^	; <UNPREDICTABLE>
     a4c:	0a590000 	beq	1640a54 <__Stack_Size+0x1640654>
     a50:	011c0000 	tsteq	ip, r0
     a54:	30750250 	rsbscc	r0, r5, r0, asr r2
     a58:	00002500 	andeq	r2, r0, r0, lsl #10
     a5c:	19ce0000 	stmibne	lr, {}^	; <UNPREDICTABLE>
     a60:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     a64:	0000098b 	andeq	r0, r0, fp, lsl #19
     a68:	be01bd01 	cdplt	13, 0, cr11, cr1, cr1, {0}
     a6c:	12080002 	andne	r0, r8, #2
     a70:	01000000 	mrseq	r0, (UNDEF: 0)
     a74:	000aa19c 	muleq	sl, ip, r1
     a78:	74732200 	ldrbtvc	r2, [r3], #-512	; 0x200
     a7c:	bd010072 	stclt	0, cr0, [r1, #-456]	; 0xfffffe38
     a80:	00091101 	andeq	r1, r9, r1, lsl #2
     a84:	0002f000 	andeq	pc, r2, r0
     a88:	00692600 	rsbeq	r2, r9, r0, lsl #12
     a8c:	c701bf01 	strgt	fp, [r1, -r1, lsl #30]
     a90:	11000006 	tstne	r0, r6
     a94:	27000003 	strcs	r0, [r0, -r3]
     a98:	080002cc 	stmdaeq	r0, {r2, r3, r6, r7, r9}
     a9c:	000019ce 	andeq	r1, r0, lr, asr #19
     aa0:	047c1900 	ldrbteq	r1, [ip], #-2304	; 0x900
     aa4:	c6010000 	strgt	r0, [r1], -r0
     aa8:	00000001 	andeq	r0, r0, r1
     aac:	00003400 	andeq	r3, r0, r0, lsl #8
     ab0:	ea9c0100 	b	fe700eb8 <SCS_BASE+0x1e6f2eb8>
     ab4:	2300000a 	movwcs	r0, #10
     ab8:	0000025b 	andeq	r0, r0, fp, asr r2
     abc:	5301c601 	movwpl	ip, #5633	; 0x1601
     ac0:	6d000000 	stcvs	0, cr0, [r0, #-0]
     ac4:	24000003 	strcs	r0, [r0], #-3
     ac8:	000009ea 	andeq	r0, r0, sl, ror #19
     acc:	5301c801 	movwpl	ip, #6145	; 0x1801
     ad0:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
     ad4:	27000003 	strcs	r0, [r0, -r3]
     ad8:	00000000 	andeq	r0, r0, r0
     adc:	000019ce 	andeq	r1, r0, lr, asr #19
     ae0:	00000025 	andeq	r0, r0, r5, lsr #32
     ae4:	0019ce00 	andseq	ip, r9, r0, lsl #28
     ae8:	ff190000 			; <UNDEFINED> instruction: 0xff190000
     aec:	01000001 	tsteq	r0, r1
     af0:	000001d3 	ldrdeq	r0, [r0], -r3
     af4:	00140000 	andseq	r0, r4, r0
     af8:	9c010000 	stcls	0, cr0, [r1], {-0}
     afc:	00000b30 	andeq	r0, r0, r0, lsr fp
     b00:	0002de23 	andeq	sp, r2, r3, lsr #28
     b04:	01d30100 	bicseq	r0, r3, r0, lsl #2
     b08:	00000053 	andeq	r0, r0, r3, asr r0
     b0c:	000003ac 	andeq	r0, r0, ip, lsr #7
     b10:	0000001b 	andeq	r0, r0, fp, lsl r0
     b14:	000aa100 	andeq	sl, sl, r0, lsl #2
     b18:	000b2600 	andeq	r2, fp, r0, lsl #12
     b1c:	50011c00 	andpl	r1, r1, r0, lsl #24
     b20:	38007404 	stmdacc	r0, {r2, sl, ip, sp, lr}
     b24:	00250025 	eoreq	r0, r5, r5, lsr #32
     b28:	a1000000 	mrsge	r0, (UNDEF: 0)
     b2c:	0000000a 	andeq	r0, r0, sl
     b30:	00041c19 	andeq	r1, r4, r9, lsl ip
     b34:	01d90100 	bicseq	r0, r9, r0, lsl #2
     b38:	00000000 	andeq	r0, r0, r0
     b3c:	00000014 	andeq	r0, r0, r4, lsl r0
     b40:	0b7e9c01 	bleq	1fa7b4c <__Stack_Size+0x1fa774c>
     b44:	d4230000 	strtle	r0, [r3], #-0
     b48:	01000000 	mrseq	r0, (UNDEF: 0)
     b4c:	004101d9 	ldrdeq	r0, [r1], #-25	; 0xffffffe7
     b50:	03cd0000 	biceq	r0, sp, #0
     b54:	001b0000 	andseq	r0, fp, r0
     b58:	ea000000 	b	b60 <__Stack_Size+0x760>
     b5c:	6c00000a 	stcvs	0, cr0, [r0], {10}
     b60:	1c00000b 	stcne	0, cr0, [r0], {11}
     b64:	74045001 	strvc	r5, [r4], #-1
     b68:	00254000 	eoreq	r4, r5, r0
     b6c:	00000028 	andeq	r0, r0, r8, lsr #32
     b70:	000aea00 	andeq	lr, sl, r0, lsl #20
     b74:	50011c00 	andpl	r1, r1, r0, lsl #24
     b78:	5001f303 	andpl	pc, r1, r3, lsl #6
     b7c:	75290000 	strvc	r0, [r9, #-0]!
     b80:	01000006 	tsteq	r0, r6
     b84:	006501e0 	rsbeq	r0, r5, r0, ror #3
     b88:	00000000 	andeq	r0, r0, r0
     b8c:	00200000 	eoreq	r0, r0, r0
     b90:	9c010000 	stcls	0, cr0, [r1], {-0}
     b94:	00019d19 	andeq	r9, r1, r9, lsl sp
     b98:	01ec0100 	mvneq	r0, r0, lsl #2
     b9c:	080002d0 	stmdaeq	r0, {r4, r6, r7, r9}
     ba0:	0000002c 	andeq	r0, r0, ip, lsr #32
     ba4:	0beb9c01 	bleq	ffae7bb0 <SCS_BASE+0x1fad9bb0>
     ba8:	79230000 	stmdbvc	r3!, {}	; <UNPREDICTABLE>
     bac:	0100000c 	tsteq	r0, ip
     bb0:	004101ec 	subeq	r0, r1, ip, ror #3
     bb4:	03f90000 	mvnseq	r0, #0
     bb8:	da1b0000 	ble	6c0bc0 <__Stack_Size+0x6c07c0>
     bbc:	df080002 	svcle	0x00080002
     bc0:	cd000019 	stcgt	0, cr0, [r0, #-100]	; 0xffffff9c
     bc4:	1c00000b 	stcne	0, cr0, [r0], {11}
     bc8:	31015001 	tstcc	r1, r1
     bcc:	02ec1b00 	rsceq	r1, ip, #0, 22
     bd0:	19df0800 	ldmibne	pc, {fp}^	; <UNPREDICTABLE>
     bd4:	0be10000 	bleq	ff840bdc <SCS_BASE+0x1f832bdc>
     bd8:	011c0000 	tsteq	ip, r0
     bdc:	fe090250 	mcr2	2, 0, r0, cr9, cr0, {2}
     be0:	02f62500 	rscseq	r2, r6, #0, 10
     be4:	19df0800 	ldmibne	pc, {fp}^	; <UNPREDICTABLE>
     be8:	2a000000 	bcs	bf0 <__Stack_Size+0x7f0>
     bec:	00000519 	andeq	r0, r0, r9, lsl r5
     bf0:	5303c301 	movwpl	ip, #13057	; 0x3301
     bf4:	fc000000 	stc2	0, cr0, [r0], {-0}
     bf8:	2e080002 	cdpcs	0, 0, cr0, cr8, cr2, {0}
     bfc:	01000000 	mrseq	r0, (UNDEF: 0)
     c00:	000c449c 	muleq	ip, ip, r4
     c04:	70622200 	rsbvc	r2, r2, r0, lsl #4
     c08:	c3010041 	movwgt	r0, #4161	; 0x1041
     c0c:	00091103 	andeq	r1, r9, r3, lsl #2
     c10:	00043400 	andeq	r3, r4, r0, lsl #8
     c14:	70622200 	rsbvc	r2, r2, r0, lsl #4
     c18:	c3010042 	movwgt	r0, #4162	; 0x1042
     c1c:	00091103 	andeq	r1, r9, r3, lsl #2
     c20:	00045500 	andeq	r5, r4, r0, lsl #10
     c24:	01482b00 	cmpeq	r8, r0, lsl #22
     c28:	c3010000 	movwgt	r0, #4096	; 0x1000
     c2c:	0006c703 	andeq	ip, r6, r3, lsl #14
     c30:	24520100 	ldrbcs	r0, [r2], #-256	; 0x100
     c34:	00000011 	andeq	r0, r0, r1, lsl r0
     c38:	5303c501 	movwpl	ip, #13569	; 0x3501
     c3c:	76000000 	strvc	r0, [r0], -r0
     c40:	00000004 	andeq	r0, r0, r4
     c44:	000ca12a 	andeq	sl, ip, sl, lsr #2
     c48:	03d10100 	bicseq	r0, r1, #0, 2
     c4c:	00000053 	andeq	r0, r0, r3, asr r0
     c50:	0800032a 	stmdaeq	r0, {r1, r3, r5, r8, r9}
     c54:	00000024 	andeq	r0, r0, r4, lsr #32
     c58:	0c8f9c01 	stceq	12, cr9, [pc], {1}
     c5c:	7d230000 	stcvc	0, cr0, [r3, #-0]
     c60:	01000005 	tsteq	r0, r5
     c64:	091103d1 	ldmdbeq	r1, {r0, r4, r6, r7, r8, r9}
     c68:	04af0000 	strteq	r0, [pc], #0	; c70 <__Stack_Size+0x870>
     c6c:	d1230000 	teqle	r3, r0
     c70:	0100000b 	tsteq	r0, fp
     c74:	091103d1 	ldmdbeq	r1, {r0, r4, r6, r7, r8, r9}
     c78:	04cf0000 	strbeq	r0, [pc], #0	; c80 <__Stack_Size+0x880>
     c7c:	52240000 	eorpl	r0, r4, #0
     c80:	01000008 	tsteq	r0, r8
     c84:	005303d3 	ldrsbeq	r0, [r3], #-51	; 0xffffffcd
     c88:	04fd0000 	ldrbteq	r0, [sp], #0
     c8c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     c90:	00000a00 	andeq	r0, r0, r0, lsl #20
     c94:	50041801 	andpl	r1, r4, r1, lsl #16
     c98:	b8080003 	stmdalt	r8, {r0, r1}
     c9c:	01000000 	mrseq	r0, (UNDEF: 0)
     ca0:	000e319c 	muleq	lr, ip, r1
     ca4:	14392300 	ldrtne	r2, [r9], #-768	; 0x300
     ca8:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
     cac:	00006504 	andeq	r6, r0, r4, lsl #10
     cb0:	00052c00 	andeq	r2, r5, r0, lsl #24
     cb4:	09b72300 	ldmibeq	r7!, {r8, r9, sp}
     cb8:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
     cbc:	00004104 	andeq	r4, r0, r4, lsl #2
     cc0:	00054d00 	andeq	r4, r5, r0, lsl #26
     cc4:	05051a00 	streq	r1, [r5, #-2560]	; 0xa00
     cc8:	1a010000 	bne	40cd0 <__Stack_Size+0x408d0>
     ccc:	00062f04 	andeq	r2, r6, r4, lsl #30
     cd0:	60910200 	addsvs	r0, r1, r0, lsl #4
     cd4:	00035e1b 	andeq	r5, r3, fp, lsl lr
     cd8:	0019f008 	andseq	pc, r9, r8
     cdc:	000ce800 	andeq	lr, ip, r0, lsl #16
     ce0:	50011c00 	andpl	r1, r1, r0, lsl #24
     ce4:	00007d02 	andeq	r7, r0, r2, lsl #26
     ce8:	0003841b 	andeq	r8, r3, fp, lsl r4
     cec:	001a0708 	andseq	r0, sl, r8, lsl #14
     cf0:	000cff00 	andeq	pc, ip, r0, lsl #30
     cf4:	50011c00 	andpl	r1, r1, r0, lsl #24
     cf8:	38000c05 	stmdacc	r0, {r0, r2, sl, fp}
     cfc:	1b004001 	blne	10d08 <__Stack_Size+0x10908>
     d00:	0800038a 	stmdaeq	r0, {r1, r3, r7, r8, r9}
     d04:	00000b94 	muleq	r0, r4, fp
     d08:	00000d12 	andeq	r0, r0, r2, lsl sp
     d0c:	0150011c 	cmpeq	r0, ip, lsl r1
     d10:	921b003a 	andsls	r0, fp, #58	; 0x3a
     d14:	18080003 	stmdane	r8, {r0, r1}
     d18:	2f00001a 	svccs	0x0000001a
     d1c:	1c00000d 	stcne	0, cr0, [r0], {13}
     d20:	7d025101 	stfvcs	f5, [r2, #-4]
     d24:	50011c00 	andpl	r1, r1, r0, lsl #24
     d28:	38000c05 	stmdacc	r0, {r0, r2, sl, fp}
     d2c:	1b004001 	blne	10d38 <__Stack_Size+0x10938>
     d30:	0800039e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9}
     d34:	00001a2e 	andeq	r1, r0, lr, lsr #20
     d38:	00000d53 	andeq	r0, r0, r3, asr sp
     d3c:	0252011c 	subseq	r0, r2, #28, 2
     d40:	011c0074 	tsteq	ip, r4, ror r0
     d44:	250a0351 	strcs	r0, [sl, #-849]	; 0x351
     d48:	50011c05 	andpl	r1, r1, r5, lsl #24
     d4c:	38000c05 	stmdacc	r0, {r0, r2, sl, fp}
     d50:	1b004001 	blne	10d5c <__Stack_Size+0x1095c>
     d54:	080003ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9}
     d58:	00001a07 	andeq	r1, r0, r7, lsl #20
     d5c:	00000d6a 	andeq	r0, r0, sl, ror #26
     d60:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0x11c
     d64:	0044000c 	subeq	r0, r4, ip
     d68:	b41b0040 	ldrlt	r0, [fp], #-64	; 0x40
     d6c:	94080003 	strls	r0, [r8], #-3
     d70:	7d00000b 	stcvc	0, cr0, [r0, #-44]	; 0xffffffd4
     d74:	1c00000d 	stcne	0, cr0, [r0], {13}
     d78:	3a015001 	bcc	54d84 <__Stack_Size+0x54984>
     d7c:	03bc1b00 			; <UNDEFINED> instruction: 0x03bc1b00
     d80:	1a180800 	bne	602d88 <__Stack_Size+0x602988>
     d84:	0d9a0000 	ldceq	0, cr0, [sl]
     d88:	011c0000 	tsteq	ip, r0
     d8c:	007d0251 	rsbseq	r0, sp, r1, asr r2
     d90:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0x11c
     d94:	0044000c 	subeq	r0, r4, ip
     d98:	c81b0040 	ldmdagt	fp, {r6}
     d9c:	2e080003 	cdpcs	0, 0, cr0, cr8, cr3, {0}
     da0:	bd00001a 	stclt	0, cr0, [r0, #-104]	; 0xffffff98
     da4:	1c00000d 	stcne	0, cr0, [r0], {13}
     da8:	31015201 	tstcc	r1, r1, lsl #4
     dac:	0351011c 	cmpeq	r1, #28, 2
     db0:	1c05250a 	cfstr32ne	mvfx2, [r5], {10}
     db4:	0c055001 	stceq	0, cr5, [r5], {1}
     db8:	40004400 	andmi	r4, r0, r0, lsl #8
     dbc:	03d61b00 	bicseq	r1, r6, #0, 22
     dc0:	1a070800 	bne	1c2dc8 <__Stack_Size+0x1c29c8>
     dc4:	0dd40000 	ldcleq	0, cr0, [r4]
     dc8:	011c0000 	tsteq	ip, r0
     dcc:	000c0550 	andeq	r0, ip, r0, asr r5
     dd0:	00400048 	subeq	r0, r0, r8, asr #32
     dd4:	0003dc1b 	andeq	sp, r3, fp, lsl ip
     dd8:	000b9408 	andeq	r9, fp, r8, lsl #8
     ddc:	000de700 	andeq	lr, sp, r0, lsl #14
     de0:	50011c00 	andpl	r1, r1, r0, lsl #24
     de4:	1b003a01 	blne	f5f0 <__Stack_Size+0xf1f0>
     de8:	080003e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9}
     dec:	00001a18 	andeq	r1, r0, r8, lsl sl
     df0:	00000e04 	andeq	r0, r0, r4, lsl #28
     df4:	0251011c 	subseq	r0, r1, #28, 2
     df8:	011c007d 	tsteq	ip, sp, ror r0
     dfc:	000c0550 	andeq	r0, ip, r0, asr r5
     e00:	00400048 	subeq	r0, r0, r8, asr #32
     e04:	0003f01b 	andeq	pc, r3, fp, lsl r0	; <UNPREDICTABLE>
     e08:	001a2e08 	andseq	r2, sl, r8, lsl #28
     e0c:	000e2700 	andeq	r2, lr, r0, lsl #14
     e10:	52011c00 	andpl	r1, r1, #0, 24
     e14:	011c3101 	tsteq	ip, r1, lsl #2
     e18:	250a0351 	strcs	r0, [sl, #-849]	; 0x351
     e1c:	50011c05 	andpl	r1, r1, r5, lsl #24
     e20:	48000c05 	stmdami	r0, {r0, r2, sl, fp}
     e24:	27004000 	strcs	r4, [r0, -r0]
     e28:	080003f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9}
     e2c:	00001a49 	andeq	r1, r0, r9, asr #20
     e30:	096b1900 	stmdbeq	fp!, {r8, fp, ip}^
     e34:	ff010000 			; <UNDEFINED> instruction: 0xff010000
     e38:	00040801 	andeq	r0, r4, r1, lsl #16
     e3c:	0003f408 	andeq	pc, r3, r8, lsl #8
     e40:	009c0100 	addseq	r0, ip, r0, lsl #2
     e44:	2c000012 	stccs	0, cr0, [r0], {18}
     e48:	00000b54 	andeq	r0, r0, r4, asr fp
     e4c:	53020101 	movwpl	r0, #8449	; 0x2101
     e50:	00000000 	andeq	r0, r0, r0
     e54:	000cc224 	andeq	ip, ip, r4, lsr #4
     e58:	02020100 	andeq	r0, r2, #0, 2
     e5c:	00000065 	andeq	r0, r0, r5, rrx
     e60:	00000579 	andeq	r0, r0, r9, ror r5
     e64:	00006e1a 	andeq	r6, r0, sl, lsl lr
     e68:	02030100 	andeq	r0, r3, #0, 2
     e6c:	00001200 	andeq	r1, r0, r0, lsl #4
     e70:	26489102 	strbcs	r9, [r8], -r2, lsl #2
     e74:	04010069 	streq	r0, [r1], #-105	; 0x69
     e78:	0006c702 	andeq	ip, r6, r2, lsl #14
     e7c:	0005a300 	andeq	sl, r5, r0, lsl #6
     e80:	04472c00 	strbeq	r2, [r7], #-3072	; 0xc00
     e84:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
     e88:	00006502 	andeq	r6, r0, r2, lsl #10
     e8c:	5e240000 	cdppl	0, 2, cr0, cr4, cr0, {0}
     e90:	01000005 	tsteq	r0, r5
     e94:	00650209 	rsbeq	r0, r5, r9, lsl #4
     e98:	05ef0000 	strbeq	r0, [pc, #0]!	; ea0 <__Stack_Size+0xaa0>
     e9c:	a02d0000 	eorge	r0, sp, r0
     ea0:	20080004 	andcs	r0, r8, r4
     ea4:	cd000001 	stcgt	0, cr0, [r0, #-4]
     ea8:	2400000f 	strcs	r0, [r0], #-15
     eac:	0000043a 	andeq	r0, r0, sl, lsr r4
     eb0:	41024501 	tstmi	r2, r1, lsl #10
     eb4:	0f000000 	svceq	0x00000000
     eb8:	1a000006 	bne	ed8 <__Stack_Size+0xad8>
     ebc:	0000044f 	andeq	r0, r0, pc, asr #8
     ec0:	76024601 	strvc	r4, [r2], -r1, lsl #12
     ec4:	02000000 	andeq	r0, r0, #0
     ec8:	791a4091 	ldmdbvc	sl, {r0, r4, r7, lr}
     ecc:	01000003 	tsteq	r0, r3
     ed0:	12100248 	andsne	r0, r0, #72, 4	; 0x80000004
     ed4:	91030000 	mrsls	r0, (UNDEF: 3)
     ed8:	c81a7fbe 	ldmdagt	sl, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
     edc:	01000003 	tsteq	r0, r3
     ee0:	12150249 	andsne	r0, r5, #-1879048188	; 0x90000004
     ee4:	91030000 	mrsls	r0, (UNDEF: 3)
     ee8:	1a1a7fbf 	bne	6a0dec <__Stack_Size+0x6a09ec>
     eec:	01000007 	tsteq	r0, r7
     ef0:	0076024b 	rsbseq	r0, r6, fp, asr #4
     ef4:	91020000 	mrsls	r0, (UNDEF: 2)
     ef8:	06ce2e44 	strbeq	r2, [lr], r4, asr #28
     efc:	05700000 	ldrbeq	r0, [r0, #-0]!
     f00:	00040800 	andeq	r0, r4, r0, lsl #16
     f04:	9f010000 	svcls	0x00010000
     f08:	04ce2702 	strbeq	r2, [lr], #1794	; 0x702
     f0c:	1a5f0800 	bne	17c2f14 <__Stack_Size+0x17c2b14>
     f10:	e21b0000 	ands	r0, fp, #0
     f14:	66080004 	strvs	r0, [r8], -r4
     f18:	2600001a 			; <UNDEFINED> instruction: 0x2600001a
     f1c:	1c00000f 	stcne	0, cr0, [r0], {15}
     f20:	08025001 	stmdaeq	r2, {r0, ip, lr}
     f24:	0e270035 	mcreq	0, 1, r0, cr7, cr5, {1}
     f28:	77080005 	strvc	r0, [r8, -r5]
     f2c:	2700001a 	smladcs	r0, sl, r0, r0
     f30:	08000522 	stmdaeq	r0, {r1, r5, r8, sl}
     f34:	000009ad 	andeq	r0, r0, sp, lsr #19
     f38:	00053027 	andeq	r3, r5, r7, lsr #32
     f3c:	001a8c08 	andseq	r8, sl, r8, lsl #24
     f40:	05381b00 	ldreq	r1, [r8, #-2816]!	; 0xb00
     f44:	0a630800 	beq	18c2f4c <__Stack_Size+0x18c2b4c>
     f48:	0f580000 	svceq	0x00580000
     f4c:	011c0000 	tsteq	ip, r0
     f50:	27030550 	smlsdcs	r3, r0, r5, r0
     f54:	00080027 	andeq	r0, r8, r7, lsr #32
     f58:	0005441b 	andeq	r4, r5, fp, lsl r4
     f5c:	001a9308 	andseq	r9, sl, r8, lsl #6
     f60:	000f7200 	andeq	r7, pc, r0, lsl #4
     f64:	51011c00 	tstpl	r1, r0, lsl #24
     f68:	011c3101 	tsteq	ip, r1, lsl #2
     f6c:	4a400350 	bmi	1001cb4 <__Stack_Size+0x10018b4>
     f70:	4a1b0024 	bmi	6c1008 <__Stack_Size+0x6c0c08>
     f74:	94080005 	strls	r0, [r8], #-5
     f78:	8600000b 	strhi	r0, [r0], -fp
     f7c:	1c00000f 	stcne	0, cr0, [r0], {15}
     f80:	08025001 	stmdaeq	r2, {r0, ip, lr}
     f84:	5e270064 	cdppl	0, 2, cr0, cr7, cr4, {3}
     f88:	e5080005 	str	r0, [r8, #-5]
     f8c:	1b000006 	blne	fac <__Stack_Size+0xbac>
     f90:	08000578 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl}
     f94:	00001a93 	muleq	r0, r3, sl
     f98:	00000faa 	andeq	r0, r0, sl, lsr #31
     f9c:	0251011c 	subseq	r0, r1, #28, 2
     fa0:	011c007a 	tsteq	ip, sl, ror r0
     fa4:	4a400350 	bmi	1001cec <__Stack_Size+0x10018ec>
     fa8:	98270024 	stmdals	r7!, {r2, r5}
     fac:	8c080005 	stchi	0, cr0, [r8], {5}
     fb0:	2700001a 	smladcs	r0, sl, r0, r0
     fb4:	080005ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, sl}
     fb8:	00000a63 	andeq	r0, r0, r3, ror #20
     fbc:	0005c01d 	andeq	ip, r5, sp, lsl r0
     fc0:	000b9408 	andeq	r9, fp, r8, lsl #8
     fc4:	50011c00 	andpl	r1, r1, r0, lsl #24
     fc8:	00640802 	rsbeq	r0, r4, r2, lsl #16
     fcc:	05ce2d00 	strbeq	r2, [lr, #3328]	; 0xd00
     fd0:	00120800 	andseq	r0, r2, r0, lsl #16
     fd4:	10200000 	eorne	r0, r0, r0
     fd8:	41240000 	teqmi	r4, r0
     fdc:	0100000a 	tsteq	r0, sl
     fe0:	069202c3 	ldreq	r0, [r2], r3, asr #5
     fe4:	06460000 	strbeq	r0, [r6], -r0
     fe8:	f5240000 			; <UNDEFINED> instruction: 0xf5240000
     fec:	01000000 	mrseq	r0, (UNDEF: 0)
     ff0:	004102c4 	subeq	r0, r1, r4, asr #5
     ff4:	06650000 	strbteq	r0, [r5], -r0
     ff8:	d8270000 	stmdale	r7!, {}	; <UNPREDICTABLE>
     ffc:	aa080005 	bge	201018 <__Stack_Size+0x200c18>
    1000:	1b00001a 	blne	1070 <__Stack_Size+0xc70>
    1004:	080005de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, sl}
    1008:	00000b94 	muleq	r0, r4, fp
    100c:	00001017 	andeq	r1, r0, r7, lsl r0
    1010:	0250011c 	subseq	r0, r0, #28, 2
    1014:	2f006408 	svccs	0x00006408
    1018:	080005e0 	stmdaeq	r0, {r5, r6, r7, r8, sl}
    101c:	00007902 	andeq	r7, r0, r2, lsl #18
    1020:	00069d30 	andeq	r9, r6, r0, lsr sp
    1024:	00065c00 	andeq	r5, r6, r0, lsl #24
    1028:	00000408 	andeq	r0, r0, r8, lsl #8
    102c:	03040100 	movweq	r0, #16640	; 0x4100
    1030:	00001047 	andeq	r1, r0, r7, asr #32
    1034:	0006ba1f 	andeq	fp, r6, pc, lsl sl
    1038:	00069300 	andeq	r9, r6, r0, lsl #6
    103c:	06ae1f00 	strteq	r1, [lr], r0, lsl #30
    1040:	06a70000 	strteq	r0, [r7], r0
    1044:	1b000000 	blne	104c <__Stack_Size+0xc4c>
    1048:	0800042a 	stmdaeq	r0, {r1, r3, r5, sl}
    104c:	00001ab1 			; <UNDEFINED> instruction: 0x00001ab1
    1050:	00001063 	andeq	r1, r0, r3, rrx
    1054:	0151011c 	cmpeq	r1, ip, lsl r1
    1058:	50011c34 	andpl	r1, r1, r4, lsr ip
    105c:	0c000c05 	stceq	12, cr0, [r0], {5}
    1060:	1b004001 	blne	1106c <__Stack_Size+0x10c6c>
    1064:	08000434 	stmdaeq	r0, {r2, r4, r5, sl}
    1068:	00001ab1 			; <UNDEFINED> instruction: 0x00001ab1
    106c:	00001081 	andeq	r1, r0, r1, lsl #1
    1070:	0351011c 	cmpeq	r1, #28, 2
    1074:	1c02000a 	stcne	0, cr0, [r2], {10}
    1078:	0c055001 	stceq	0, cr5, [r5], {1}
    107c:	40010c00 	andmi	r0, r1, r0, lsl #24
    1080:	04561b00 	ldrbeq	r1, [r6], #-2816	; 0xb00
    1084:	0c440800 	mcrreq	8, 0, r0, r4, cr0
    1088:	10950000 	addsne	r0, r5, r0
    108c:	011c0000 	tsteq	ip, r0
    1090:	00770250 	rsbseq	r0, r7, r0, asr r2
    1094:	049a1b00 	ldreq	r1, [sl], #2816	; 0xb00
    1098:	0beb0800 	bleq	ffac30a0 <SCS_BASE+0x1fab50a0>
    109c:	10b70000 	adcsne	r0, r7, r0
    10a0:	011c0000 	tsteq	ip, r0
    10a4:	1c350152 	ldfnes	f0, [r5], #-328	; 0xfffffeb8
    10a8:	03055101 	movweq	r5, #20737	; 0x5101
    10ac:	08002721 	stmdaeq	r0, {r0, r5, r8, r9, sl, sp}
    10b0:	0250011c 	subseq	r0, r0, #28, 2
    10b4:	1b000077 	blne	1298 <__Stack_Size+0xe98>
    10b8:	080005cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl}
    10bc:	00000beb 	andeq	r0, r0, fp, ror #23
    10c0:	000010d9 	ldrdeq	r1, [r0], -r9
    10c4:	0152011c 	cmpeq	r2, ip, lsl r1
    10c8:	51011c35 	tstpl	r1, r5, lsr ip
    10cc:	27430305 	strbcs	r0, [r3, -r5, lsl #6]
    10d0:	011c0800 	tsteq	ip, r0, lsl #16
    10d4:	00770250 	rsbseq	r0, r7, r0, asr r2
    10d8:	05ec1b00 	strbeq	r1, [ip, #2816]!	; 0xb00
    10dc:	0beb0800 	bleq	ffac30e4 <SCS_BASE+0x1fab50e4>
    10e0:	10fb0000 	rscsne	r0, fp, r0
    10e4:	011c0000 	tsteq	ip, r0
    10e8:	1c360152 	ldfnes	f0, [r6], #-328	; 0xfffffeb8
    10ec:	03055101 	movweq	r5, #20737	; 0x5101
    10f0:	08002749 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, sp}
    10f4:	0250011c 	subseq	r0, r0, #28, 2
    10f8:	27000077 	smlsdxcs	r0, r7, r0, r0
    10fc:	080005f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, sl}
    1100:	00001acd 	andeq	r1, r0, sp, asr #21
    1104:	0005fe1b 	andeq	pc, r5, fp, lsl lr	; <UNPREDICTABLE>
    1108:	000beb08 	andeq	lr, fp, r8, lsl #22
    110c:	00112600 	andseq	r2, r1, r0, lsl #12
    1110:	52011c00 	andpl	r1, r1, #0, 24
    1114:	011c3701 	tsteq	ip, r1, lsl #14
    1118:	50030551 	andpl	r0, r3, r1, asr r5
    111c:	1c080027 	stcne	0, cr0, [r8], {39}	; 0x27
    1120:	77025001 	strvc	r5, [r2, -r1]
    1124:	0a1b0000 	beq	6c112c <__Stack_Size+0x6c0d2c>
    1128:	63080006 	movwvs	r0, #32774	; 0x8006
    112c:	3d00000a 	stccc	0, cr0, [r0, #-40]	; 0xffffffd8
    1130:	1c000011 	stcne	0, cr0, [r0], {17}
    1134:	03055001 	movweq	r5, #20481	; 0x5001
    1138:	08002758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, sp}
    113c:	06862700 	streq	r2, [r6], r0, lsl #14
    1140:	0c8f0800 	stceq	8, cr0, [pc], {0}
    1144:	d41b0000 	ldrle	r0, [fp], #-0
    1148:	d5080006 	strle	r0, [r8, #-6]
    114c:	6300001a 	movwvs	r0, #26
    1150:	1c000011 	stcne	0, cr0, [r0], {17}
    1154:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    1158:	50011c20 	andpl	r1, r1, r0, lsr #24
    115c:	0c000c05 	stceq	12, cr0, [r0], {5}
    1160:	1b004001 	blne	1116c <__Stack_Size+0x10d6c>
    1164:	080006ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, sl}
    1168:	0000199e 	muleq	r0, lr, r9
    116c:	0000117a 	andeq	r1, r0, sl, ror r1
    1170:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0x11c
    1174:	0138000c 	teqeq	r8, ip
    1178:	f61b0040 			; <UNDEFINED> instruction: 0xf61b0040
    117c:	b4080006 	strlt	r0, [r8], #-6
    1180:	97000019 	smladls	r0, r9, r0, r0
    1184:	1c000011 	stcne	0, cr0, [r0], {17}
    1188:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    118c:	50011c40 	andpl	r1, r1, r0, asr #24
    1190:	38000c05 	stmdacc	r0, {r0, r2, sl, fp}
    1194:	1b004001 	blne	111a0 <__Stack_Size+0x10da0>
    1198:	08000768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl}
    119c:	00001ab1 			; <UNDEFINED> instruction: 0x00001ab1
    11a0:	000011b4 			; <UNDEFINED> instruction: 0x000011b4
    11a4:	0251011c 	subseq	r0, r1, #28, 2
    11a8:	011c2008 	tsteq	ip, r8
    11ac:	000c0550 	andeq	r0, ip, r0, asr r5
    11b0:	0040010c 	subeq	r0, r0, ip, lsl #2
    11b4:	00079427 	andeq	r9, r7, r7, lsr #8
    11b8:	0019ce08 	andseq	ip, r9, r8, lsl #28
    11bc:	07a81b00 	streq	r1, [r8, r0, lsl #22]!
    11c0:	0beb0800 	bleq	ffac31c8 <SCS_BASE+0x1fab51c8>
    11c4:	11df0000 	bicsne	r0, pc, r0
    11c8:	011c0000 	tsteq	ip, r0
    11cc:	1c370152 	ldfnes	f0, [r7], #-328	; 0xfffffeb8
    11d0:	03055101 	movweq	r5, #20737	; 0x5101
    11d4:	08002768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, sp}
    11d8:	0250011c 	subseq	r0, r0, #28, 2
    11dc:	1b000077 	blne	13c0 <__Stack_Size+0xfc0>
    11e0:	080007b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl}
    11e4:	000008d3 	ldrdeq	r0, [r0], -r3
    11e8:	000011f6 	strdeq	r1, [r0], -r6
    11ec:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0x11c
    11f0:	00277803 	eoreq	r7, r7, r3, lsl #16
    11f4:	c8270008 	stmdagt	r7!, {r3}
    11f8:	63080007 	movwvs	r0, #32775	; 0x8007
    11fc:	0000000a 	andeq	r0, r0, sl
    1200:	00091731 	andeq	r1, r9, r1, lsr r7
    1204:	00121000 	andseq	r1, r2, r0
    1208:	01163200 	tsteq	r6, r0, lsl #4
    120c:	000f0000 	andeq	r0, pc, r0
    1210:	00049c05 	andeq	r9, r4, r5, lsl #24
    1214:	06870500 	streq	r0, [r7], r0, lsl #10
    1218:	08190000 	ldmdaeq	r9, {}	; <UNPREDICTABLE>
    121c:	01000006 	tsteq	r0, r6
    1220:	07fc047d 			; <UNDEFINED> instruction: 0x07fc047d
    1224:	008c0800 	addeq	r0, ip, r0, lsl #16
    1228:	9c010000 	stcls	0, cr0, [r1], {-0}
    122c:	00001362 	andeq	r1, r0, r2, ror #6
    1230:	00080227 	andeq	r0, r8, r7, lsr #4
    1234:	001aeb08 	andseq	lr, sl, r8, lsl #22
    1238:	080a1b00 	stmdaeq	sl, {r8, r9, fp, ip}
    123c:	1af20800 	bne	ffc83244 <SCS_BASE+0x1fc75244>
    1240:	124e0000 	subne	r0, lr, #0
    1244:	011c0000 	tsteq	ip, r0
    1248:	3c400350 	mcrrcc	3, 5, r0, r0, cr0
    124c:	0e270024 	cdpeq	0, 2, cr0, cr7, cr4, {1}
    1250:	03080008 	movweq	r0, #32776	; 0x8008
    1254:	1b00001b 	blne	12c8 <__Stack_Size+0xec8>
    1258:	08000822 	stmdaeq	r0, {r1, r5, fp}
    125c:	00001b0e 	andeq	r1, r0, lr, lsl #22
    1260:	00001271 	andeq	r1, r0, r1, ror r2
    1264:	0151011c 	cmpeq	r1, ip, lsl r1
    1268:	50011c31 	andpl	r1, r1, r1, lsr ip
    126c:	401d0a03 	andsmi	r0, sp, r3, lsl #20
    1270:	082e3300 	stmdaeq	lr!, {r8, r9, ip, sp}
    1274:	1b250800 	blne	94327c <__Stack_Size+0x942e7c>
    1278:	128d0000 	addne	r0, sp, #0
    127c:	011c0000 	tsteq	ip, r0
    1280:	1c310151 	ldfnes	f0, [r1], #-324	; 0xfffffebc
    1284:	0c055001 	stceq	0, cr5, [r5], {1}
    1288:	10820001 	addne	r0, r2, r1
    128c:	08341b00 	ldmdaeq	r4!, {r8, r9, fp, ip}
    1290:	1b3c0800 	blne	f03298 <__Stack_Size+0xf02e98>
    1294:	12a00000 	adcne	r0, r0, #0
    1298:	011c0000 	tsteq	ip, r0
    129c:	00400150 	subeq	r0, r0, r0, asr r1
    12a0:	00083a1b 	andeq	r3, r8, fp, lsl sl
    12a4:	001b4d08 	andseq	r4, fp, r8, lsl #26
    12a8:	0012b300 	andseq	fp, r2, r0, lsl #6
    12ac:	50011c00 	andpl	r1, r1, r0, lsl #24
    12b0:	1b003201 	blne	dabc <__Stack_Size+0xd6bc>
    12b4:	08000840 	stmdaeq	r0, {r6, fp}
    12b8:	00001b5e 	andeq	r1, r0, lr, asr fp
    12bc:	000012c6 	andeq	r1, r0, r6, asr #5
    12c0:	0150011c 	cmpeq	r0, ip, lsl r1
    12c4:	461b0030 			; <UNDEFINED> instruction: 0x461b0030
    12c8:	70080008 	andvc	r0, r8, r8
    12cc:	d900001b 	stmdble	r0, {r0, r1, r3, r4}
    12d0:	1c000012 	stcne	0, cr0, [r0], {18}
    12d4:	30015001 	andcc	r5, r1, r1
    12d8:	084e1b00 	stmdaeq	lr, {r8, r9, fp, ip}^
    12dc:	1b820800 	blne	fe0832e4 <SCS_BASE+0x1e0752e4>
    12e0:	12ee0000 	rscne	r0, lr, #0
    12e4:	011c0000 	tsteq	ip, r0
    12e8:	000a0350 	andeq	r0, sl, r0, asr r3
    12ec:	5a1b0004 	bpl	6c1304 <__Stack_Size+0x6c0f04>
    12f0:	94080008 	strls	r0, [r8], #-8
    12f4:	0a00001b 	beq	1368 <__Stack_Size+0xf68>
    12f8:	1c000013 	stcne	0, cr0, [r0], {19}
    12fc:	4c035101 	stfmis	f5, [r3], {1}
    1300:	011c2440 	tsteq	ip, r0, asr #8
    1304:	3c400350 	mcrrcc	3, 5, r0, r0, cr0
    1308:	601b0024 	andsvs	r0, fp, r4, lsr #32
    130c:	ab080008 	blge	201334 <__Stack_Size+0x200f34>
    1310:	1e00001b 	mcrne	0, 0, r0, cr0, cr11, {0}
    1314:	1c000013 	stcne	0, cr0, [r0], {19}
    1318:	74025001 	strvc	r5, [r2], #-1
    131c:	661b0000 	ldrvs	r0, [fp], -r0
    1320:	bd080008 	stclt	0, cr0, [r8, #-32]	; 0xffffffe0
    1324:	3200001b 	andcc	r0, r0, #27
    1328:	1c000013 	stcne	0, cr0, [r0], {19}
    132c:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1330:	701b0039 	andsvc	r0, fp, r9, lsr r0
    1334:	d3080008 	movwle	r0, #32776	; 0x8008
    1338:	4500001b 	strmi	r0, [r0, #-27]
    133c:	1c000013 	stcne	0, cr0, [r0], {19}
    1340:	32015001 	andcc	r5, r1, #1
    1344:	08761b00 	ldmdaeq	r6!, {r8, r9, fp, ip}^
    1348:	1be50800 	blne	ff943350 <SCS_BASE+0x1f935350>
    134c:	13580000 	cmpne	r8, #0
    1350:	011c0000 	tsteq	ip, r0
    1354:	00300150 	eorseq	r0, r0, r0, asr r1
    1358:	00087a27 	andeq	r7, r8, r7, lsr #20
    135c:	001bf708 	andseq	pc, fp, r8, lsl #14
    1360:	e2190000 	ands	r0, r9, #0
    1364:	0100000a 	tsteq	r0, sl
    1368:	088804ce 	stmeq	r8, {r1, r2, r3, r6, r7, sl}
    136c:	01240800 	teqeq	r4, r0, lsl #16
    1370:	9c010000 	stcls	0, cr0, [r1], {-0}
    1374:	00001512 	andeq	r1, r0, r2, lsl r5
    1378:	0006501a 	andeq	r5, r6, sl, lsl r0
    137c:	04d40100 	ldrbeq	r0, [r4], #256	; 0x100
    1380:	0000053f 	andeq	r0, r0, pc, lsr r5
    1384:	1b549102 	blne	1525794 <__Stack_Size+0x1525394>
    1388:	080008aa 	stmdaeq	r0, {r1, r3, r5, r7, fp}
    138c:	00001c03 	andeq	r1, r0, r3, lsl #24
    1390:	000013a1 	andeq	r1, r0, r1, lsr #7
    1394:	0251011c 	subseq	r0, r1, #28, 2
    1398:	011c5491 			; <UNDEFINED> instruction: 0x011c5491
    139c:	00740250 	rsbseq	r0, r4, r0, asr r2
    13a0:	08c41b00 	stmiaeq	r4, {r8, r9, fp, ip}^
    13a4:	1c030800 	stcne	8, cr0, [r3], {-0}
    13a8:	13bb0000 			; <UNDEFINED> instruction: 0x13bb0000
    13ac:	011c0000 	tsteq	ip, r0
    13b0:	54910251 	ldrpl	r0, [r1], #593	; 0x251
    13b4:	0250011c 	subseq	r0, r0, #28, 2
    13b8:	1b000074 	blne	1590 <__Stack_Size+0x1190>
    13bc:	080008de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, fp}
    13c0:	00001c03 	andeq	r1, r0, r3, lsl #24
    13c4:	000013d8 	ldrdeq	r1, [r0], -r8
    13c8:	0251011c 	subseq	r0, r1, #28, 2
    13cc:	011c5491 			; <UNDEFINED> instruction: 0x011c5491
    13d0:	000c0550 	andeq	r0, ip, r0, asr r5
    13d4:	00400108 	subeq	r0, r0, r8, lsl #2
    13d8:	0008f61b 	andeq	pc, r8, fp, lsl r6	; <UNPREDICTABLE>
    13dc:	001c0308 	andseq	r0, ip, r8, lsl #6
    13e0:	0013f200 	andseq	pc, r3, r0, lsl #4
    13e4:	51011c00 	tstpl	r1, r0, lsl #24
    13e8:	1c549102 	ldfnep	f1, [r4], {2}
    13ec:	74025001 	strvc	r5, [r2], #-1
    13f0:	0a1b0000 	beq	6c13f8 <__Stack_Size+0x6c0ff8>
    13f4:	03080009 	movweq	r0, #32777	; 0x8009
    13f8:	0c00001c 	stceq	0, cr0, [r0], {28}
    13fc:	1c000014 	stcne	0, cr0, [r0], {20}
    1400:	91025101 	tstls	r2, r1, lsl #2
    1404:	50011c54 	andpl	r1, r1, r4, asr ip
    1408:	00007402 	andeq	r7, r0, r2, lsl #8
    140c:	0009281b 	andeq	r2, r9, fp, lsl r8
    1410:	001c0308 	andseq	r0, ip, r8, lsl #6
    1414:	00142700 	andseq	r2, r4, r0, lsl #14
    1418:	51011c00 	tstpl	r1, r0, lsl #24
    141c:	1c549102 	ldfnep	f1, [r4], {2}
    1420:	91035001 	tstls	r3, r1
    1424:	1b00064c 	blne	2d5c <__Stack_Size+0x295c>
    1428:	08000932 	stmdaeq	r0, {r1, r4, r5, r8, fp}
    142c:	00001ad5 	ldrdeq	r1, [r0], -r5
    1430:	00001442 	andeq	r1, r0, r2, asr #8
    1434:	0251011c 	subseq	r0, r1, #28, 2
    1438:	011c007a 	tsteq	ip, sl, ror r0
    143c:	4c910350 	ldcmi	3, cr0, [r1], {80}	; 0x50
    1440:	4a1b0006 	bmi	6c1460 <__Stack_Size+0x6c1060>
    1444:	03080009 	movweq	r0, #32777	; 0x8009
    1448:	5c00001c 	stcpl	0, cr0, [r0], {28}
    144c:	1c000014 	stcne	0, cr0, [r0], {20}
    1450:	91025101 	tstls	r2, r1, lsl #2
    1454:	50011c54 	andpl	r1, r1, r4, asr ip
    1458:	00007402 	andeq	r7, r0, r2, lsl #8
    145c:	00095c1b 	andeq	r5, r9, fp, lsl ip
    1460:	001c0308 	andseq	r0, ip, r8, lsl #6
    1464:	00147600 	andseq	r7, r4, r0, lsl #12
    1468:	51011c00 	tstpl	r1, r0, lsl #24
    146c:	1c549102 	ldfnep	f1, [r4], {2}
    1470:	74025001 	strvc	r5, [r2], #-1
    1474:	721b0000 	andsvc	r0, fp, #0
    1478:	03080009 	movweq	r0, #32777	; 0x8009
    147c:	9000001c 	andls	r0, r0, ip, lsl r0
    1480:	1c000014 	stcne	0, cr0, [r0], {20}
    1484:	91025101 	tstls	r2, r1, lsl #2
    1488:	50011c54 	andpl	r1, r1, r4, asr ip
    148c:	00007402 	andeq	r7, r0, r2, lsl #8
    1490:	00097a1b 	andeq	r7, r9, fp, lsl sl
    1494:	001ab108 	andseq	fp, sl, r8, lsl #2
    1498:	0014aa00 	andseq	sl, r4, r0, lsl #20
    149c:	51011c00 	tstpl	r1, r0, lsl #24
    14a0:	1c007a02 	stcne	10, cr7, [r0], {2}
    14a4:	74025001 	strvc	r5, [r2], #-1
    14a8:	821b0000 	andshi	r0, fp, #0
    14ac:	d5080009 	strle	r0, [r8, #-9]
    14b0:	c400001a 	strgt	r0, [r0], #-26
    14b4:	1c000014 	stcne	0, cr0, [r0], {20}
    14b8:	76025101 	strvc	r5, [r2], -r1, lsl #2
    14bc:	50011c00 	andpl	r1, r1, r0, lsl #24
    14c0:	00007402 	andeq	r7, r0, r2, lsl #8
    14c4:	00098a1b 	andeq	r8, r9, fp, lsl sl
    14c8:	001ad508 	andseq	sp, sl, r8, lsl #10
    14cc:	0014de00 	andseq	sp, r4, r0, lsl #28
    14d0:	51011c00 	tstpl	r1, r0, lsl #24
    14d4:	1c007902 	stcne	9, cr7, [r0], {2}
    14d8:	74025001 	strvc	r5, [r2], #-1
    14dc:	921b0000 	andsls	r0, fp, #0
    14e0:	1f080009 	svcne	0x00080009
    14e4:	f800001c 			; <UNDEFINED> instruction: 0xf800001c
    14e8:	1c000014 	stcne	0, cr0, [r0], {20}
    14ec:	75025101 	strvc	r5, [r2, #-257]	; 0x101
    14f0:	50011c00 	andpl	r1, r1, r0, lsl #24
    14f4:	00007602 	andeq	r7, r0, r2, lsl #12
    14f8:	00099a1d 	andeq	r9, r9, sp, lsl sl
    14fc:	001c1f08 	andseq	r1, ip, r8, lsl #30
    1500:	51011c00 	tstpl	r1, r0, lsl #24
    1504:	1c007502 	cfstr32ne	mvfx7, [r0], {2}
    1508:	0c055001 	stceq	0, cr5, [r5], {1}
    150c:	00300100 	eorseq	r0, r0, r0, lsl #2
    1510:	55190000 	ldrpl	r0, [r9, #-0]
    1514:	0100000a 	tsteq	r0, sl
    1518:	09ac0525 	stmibeq	ip!, {r0, r2, r5, r8, sl}
    151c:	007c0800 	rsbseq	r0, ip, r0, lsl #16
    1520:	9c010000 	stcls	0, cr0, [r1], {-0}
    1524:	000015b3 			; <UNDEFINED> instruction: 0x000015b3
    1528:	00052c1a 	andeq	r2, r5, sl, lsl ip
    152c:	05270100 	streq	r0, [r7, #-256]!	; 0x100
    1530:	00000583 	andeq	r0, r0, r3, lsl #11
    1534:	1b6c9102 	blne	1b25944 <__Stack_Size+0x1b25544>
    1538:	080009b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp}
    153c:	00001c35 	andeq	r1, r0, r5, lsr ip
    1540:	00001551 	andeq	r1, r0, r1, asr r5
    1544:	0151011c 	cmpeq	r1, ip, lsl r1
    1548:	50011c30 	andpl	r1, r1, r0, lsr ip
    154c:	24474003 	strbcs	r4, [r7], #-3
    1550:	09c21b00 	stmibeq	r2, {r8, r9, fp, ip}^
    1554:	1c4c0800 	mcrrne	8, 0, r0, ip, cr0
    1558:	15660000 	strbne	r0, [r6, #-0]!
    155c:	011c0000 	tsteq	ip, r0
    1560:	000a0350 	andeq	r0, sl, r0, asr r3
    1564:	dc1b0005 	ldcle	0, cr0, [fp], {5}
    1568:	5d080009 	stcpl	0, cr0, [r8, #-36]	; 0xffffffdc
    156c:	7a00001c 	bvc	15e4 <__Stack_Size+0x11e4>
    1570:	1c000015 	stcne	0, cr0, [r0], {21}
    1574:	91025001 	tstls	r2, r1
    1578:	f41b006c 			; <UNDEFINED> instruction: 0xf41b006c
    157c:	5d080009 	stcpl	0, cr0, [r8, #-36]	; 0xffffffdc
    1580:	8e00001c 	mcrhi	0, 0, r0, cr0, cr12, {0}
    1584:	1c000015 	stcne	0, cr0, [r0], {21}
    1588:	91025001 	tstls	r2, r1
    158c:	0c1b006c 	ldceq	0, cr0, [fp], {108}	; 0x6c
    1590:	5d08000a 	stcpl	0, cr0, [r8, #-40]	; 0xffffffd8
    1594:	a200001c 	andge	r0, r0, #28
    1598:	1c000015 	stcne	0, cr0, [r0], {21}
    159c:	91025001 	tstls	r2, r1
    15a0:	241d006c 	ldrcs	r0, [sp], #-108	; 0x6c
    15a4:	5d08000a 	stcpl	0, cr0, [r8, #-40]	; 0xffffffd8
    15a8:	1c00001c 	stcne	0, cr0, [r0], {28}
    15ac:	91025001 	tstls	r2, r1
    15b0:	3400006c 	strcc	r0, [r0], #-108	; 0x6c
    15b4:	00000bf3 	strdeq	r0, [r0], -r3
    15b8:	06c79b01 	strbeq	r9, [r7], r1, lsl #22
    15bc:	0a280000 	beq	a015c4 <__Stack_Size+0xa011c4>
    15c0:	00b40800 	adcseq	r0, r4, r0, lsl #16
    15c4:	9c010000 	stcls	0, cr0, [r1], {-0}
    15c8:	0000172d 	andeq	r1, r0, sp, lsr #14
    15cc:	0002a735 	andeq	sl, r2, r5, lsr r7
    15d0:	41cd0100 	bicmi	r0, sp, r0, lsl #2
    15d4:	bf000000 	svclt	0x00000000
    15d8:	35000006 	strcc	r0, [r0, #-6]
    15dc:	00000a41 	andeq	r0, r0, r1, asr #20
    15e0:	0692e301 	ldreq	lr, [r2], r1, lsl #6
    15e4:	070b0000 	streq	r0, [fp, -r0]
    15e8:	f5350000 			; <UNDEFINED> instruction: 0xf5350000
    15ec:	01000000 	mrseq	r0, (UNDEF: 0)
    15f0:	000041e4 	andeq	r4, r0, r4, ror #3
    15f4:	00070b00 	andeq	r0, r7, r0, lsl #22
    15f8:	0a2e2700 	beq	b8b200 <__Stack_Size+0xb8ae00>
    15fc:	121a0800 	andsne	r0, sl, #0, 16
    1600:	32270000 	eorcc	r0, r7, #0
    1604:	6208000a 	andvs	r0, r8, #10
    1608:	27000013 	smladcs	r0, r3, r0, r0
    160c:	08000a36 	stmdaeq	r0, {r1, r2, r4, r5, r9, fp}
    1610:	00001512 	andeq	r1, r0, r2, lsl r5
    1614:	000a3a27 	andeq	r3, sl, r7, lsr #20
    1618:	00070c08 	andeq	r0, r7, r8, lsl #24
    161c:	0a421b00 	beq	1088224 <__Stack_Size+0x1087e24>
    1620:	1c750800 	ldclne	8, cr0, [r5], #-0
    1624:	16320000 	ldrtne	r0, [r2], -r0
    1628:	011c0000 	tsteq	ip, r0
    162c:	280a0350 	stmdacs	sl, {r4, r6, r8, r9}
    1630:	481b0023 	ldmdami	fp, {r0, r1, r5}
    1634:	8608000a 	strhi	r0, [r8], -sl
    1638:	4500001c 	strmi	r0, [r0, #-28]
    163c:	1c000016 	stcne	0, cr0, [r0], {22}
    1640:	31015001 	tstcc	r1, r1
    1644:	0a501b00 	beq	140824c <__Stack_Size+0x1407e4c>
    1648:	1c970800 	ldcne	8, cr0, [r7], {0}
    164c:	165a0000 	ldrbne	r0, [sl], -r0
    1650:	011c0000 	tsteq	ip, r0
    1654:	550a0350 	strpl	r0, [sl, #-848]	; 0x350
    1658:	561b0055 			; <UNDEFINED> instruction: 0x561b0055
    165c:	a808000a 	stmdage	r8, {r1, r3}
    1660:	6d00001c 	stcvs	0, cr0, [r0, #-112]	; 0xffffff90
    1664:	1c000016 	stcne	0, cr0, [r0], {22}
    1668:	30015001 	andcc	r5, r1, r1
    166c:	0a5c1b00 	beq	1708274 <__Stack_Size+0x1707e74>
    1670:	1cb90800 	ldcne	8, cr0, [r9]
    1674:	16800000 	strne	r0, [r0], r0
    1678:	011c0000 	tsteq	ip, r0
    167c:	003a0150 	eorseq	r0, sl, r0, asr r1
    1680:	000a661b 	andeq	r6, sl, fp, lsl r6
    1684:	000c8f08 	andeq	r8, ip, r8, lsl #30
    1688:	00169a00 	andseq	r9, r6, r0, lsl #20
    168c:	51011c00 	tstpl	r1, r0, lsl #24
    1690:	e1000a03 	tst	r0, r3, lsl #20
    1694:	0150011c 	cmpeq	r0, ip, lsl r1
    1698:	761b0032 			; <UNDEFINED> instruction: 0x761b0032
    169c:	9408000a 	strls	r0, [r8], #-10
    16a0:	ae00000b 	cdpge	0, 0, cr0, cr0, cr11, {0}
    16a4:	1c000016 	stcne	0, cr0, [r0], {22}
    16a8:	08025001 	stmdaeq	r2, {r0, ip, lr}
    16ac:	7a270046 	bvc	9c17cc <__Stack_Size+0x9c13cc>
    16b0:	ca08000a 	bgt	2016e0 <__Stack_Size+0x2012e0>
    16b4:	1b00001c 	blne	172c <__Stack_Size+0x132c>
    16b8:	08000a82 	stmdaeq	r0, {r1, r7, r9, fp}
    16bc:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    16c0:	000016d3 	ldrdeq	r1, [r0], -r3
    16c4:	0151011c 	cmpeq	r1, ip, lsl r1
    16c8:	50011c31 	andpl	r1, r1, r1, lsr ip
    16cc:	08000c05 	stmdaeq	r0, {r0, r2, sl, fp}
    16d0:	1b004001 	blne	116dc <__Stack_Size+0x112dc>
    16d4:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
    16d8:	000008d3 	ldrdeq	r0, [r0], -r3
    16dc:	000016ea 	andeq	r1, r0, sl, ror #13
    16e0:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0x11c
    16e4:	00278e03 	eoreq	r8, r7, r3, lsl #28
    16e8:	961b0008 	ldrls	r0, [fp], -r8
    16ec:	bd08000a 	stclt	0, cr0, [r8, #-40]	; 0xffffffd8
    16f0:	fe00001b 	mcr2	0, 0, r0, cr0, cr11, {0}
    16f4:	1c000016 	stcne	0, cr0, [r0], {22}
    16f8:	08025001 	stmdaeq	r2, {r0, ip, lr}
    16fc:	9e27007d 	mcrls	0, 1, r0, cr7, cr13, {3}
    1700:	eb08000a 	bl	201730 <__Stack_Size+0x201330>
    1704:	1b00001c 	blne	177c <__Stack_Size+0x137c>
    1708:	08000aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp}
    170c:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    1710:	00001723 	andeq	r1, r0, r3, lsr #14
    1714:	0151011c 	cmpeq	r1, ip, lsl r1
    1718:	50011c31 	andpl	r1, r1, r1, lsr ip
    171c:	08000c05 	stmdaeq	r0, {r0, r2, sl, fp}
    1720:	27004001 	strcs	r4, [r0, -r1]
    1724:	08000ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp}
    1728:	00000e31 	andeq	r0, r0, r1, lsr lr
    172c:	0c903600 	ldceq	6, cr3, [r0], {0}
    1730:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    1734:	0000010b 	andeq	r0, r0, fp, lsl #2
    1738:	01340305 	teqeq	r4, r5, lsl #6
    173c:	05362000 	ldreq	r2, [r6, #-0]!
    1740:	01000005 	tsteq	r0, r5
    1744:	00062f3a 	andeq	r2, r6, sl, lsr pc
    1748:	94030500 	strls	r0, [r3], #-1280	; 0x500
    174c:	31200001 	teqcc	r0, r1
    1750:	00000065 	andeq	r0, r0, r5, rrx
    1754:	00001760 	andeq	r1, r0, r0, ror #14
    1758:	00011637 	andeq	r1, r1, r7, lsr r6
    175c:	0003ff00 	andeq	pc, r3, r0, lsl #30
    1760:	00002936 	andeq	r2, r0, r6, lsr r9
    1764:	713c0100 	teqvc	ip, r0, lsl #2
    1768:	05000017 	streq	r0, [r0, #-23]
    176c:	0001a403 	andeq	sl, r1, r3, lsl #8
    1770:	174f0520 	strbne	r0, [pc, -r0, lsr #10]
    1774:	93360000 	teqls	r6, #0
    1778:	01000005 	tsteq	r0, r5
    177c:	0017873d 	andseq	r8, r7, sp, lsr r7
    1780:	90030500 	andls	r0, r3, r0, lsl #10
    1784:	05200001 	streq	r0, [r0, #-1]!
    1788:	00000053 	andeq	r0, r0, r3, asr r0
    178c:	0003dc36 	andeq	sp, r3, r6, lsr ip
    1790:	873d0100 	ldrhi	r0, [sp, -r0, lsl #2]!
    1794:	05000017 	streq	r0, [r0, #-23]
    1798:	00013c03 	andeq	r3, r1, r3, lsl #24
    179c:	09173120 	ldmdbeq	r7, {r5, r8, ip, sp}
    17a0:	17ad0000 	strne	r0, [sp, r0]!
    17a4:	16320000 	ldrtne	r0, [r2], -r0
    17a8:	50000001 	andpl	r0, r0, r1
    17ac:	02e83600 	rsceq	r3, r8, #0, 12
    17b0:	3f010000 	svccc	0x00010000
    17b4:	0000179d 	muleq	r0, sp, r7
    17b8:	013e0305 	teqeq	lr, r5, lsl #6
    17bc:	97362000 	ldrls	r2, [r6, -r0]!
    17c0:	01000001 	tsteq	r0, r1
    17c4:	00007641 	andeq	r7, r0, r1, asr #12
    17c8:	38030500 	stmdacc	r3, {r8, sl}
    17cc:	36200001 	strtcc	r0, [r0], -r1
    17d0:	000005da 	ldrdeq	r0, [r0], -sl
    17d4:	00414301 	subeq	r4, r1, r1, lsl #6
    17d8:	03050000 	movweq	r0, #20480	; 0x5000
    17dc:	20000108 	andcs	r0, r0, r8, lsl #2
    17e0:	00004336 	andeq	r4, r0, r6, lsr r3
    17e4:	766f0100 	strbtvc	r0, [pc], -r0, lsl #2
    17e8:	05000000 	streq	r0, [r0, #-0]
    17ec:	0000e403 	andeq	lr, r0, r3, lsl #8
    17f0:	061a3620 	ldreq	r3, [sl], -r0, lsr #12
    17f4:	70010000 	andvc	r0, r1, r0
    17f8:	00000076 	andeq	r0, r0, r6, ror r0
    17fc:	00e80305 	rsceq	r0, r8, r5, lsl #6
    1800:	79362000 	ldmdbvc	r6!, {sp}
    1804:	01000009 	tsteq	r0, r9
    1808:	00181376 	andseq	r1, r8, r6, ror r3
    180c:	a4030500 	strge	r0, [r3], #-1280	; 0x500
    1810:	05200006 	streq	r0, [r0, #-6]!
    1814:	00000065 	andeq	r0, r0, r5, rrx
    1818:	000c6836 	andeq	r6, ip, r6, lsr r8
    181c:	13770100 	cmnne	r7, #0, 2
    1820:	05000018 	streq	r0, [r0, #-24]
    1824:	00013503 	andeq	r3, r1, r3, lsl #10
    1828:	00653120 	rsbeq	r3, r5, r0, lsr #2
    182c:	18390000 	ldmdane	r9!, {}	; <UNPREDICTABLE>
    1830:	16320000 	ldrtne	r0, [r2], -r0
    1834:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    1838:	06e53600 	strbteq	r3, [r5], r0, lsl #12
    183c:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    1840:	0000184a 	andeq	r1, r0, sl, asr #16
    1844:	05a40305 	streq	r0, [r4, #773]!	; 0x305
    1848:	29052000 	stmdbcs	r5, {sp}
    184c:	36000018 			; <UNDEFINED> instruction: 0x36000018
    1850:	00000296 	muleq	r0, r6, r2
    1854:	00767c01 	rsbseq	r7, r6, r1, lsl #24
    1858:	03050000 	movweq	r0, #20480	; 0x5000
    185c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
    1860:	00012036 	andeq	r2, r1, r6, lsr r0
    1864:	767c0100 	ldrbtvc	r0, [ip], -r0, lsl #2
    1868:	05000000 	streq	r0, [r0, #-0]
    186c:	0000fc03 	andeq	pc, r0, r3, lsl #24
    1870:	08af3620 	stmiaeq	pc!, {r5, r9, sl, ip, sp}	; <UNPREDICTABLE>
    1874:	7c010000 	stcvc	0, cr0, [r1], {-0}
    1878:	00000076 	andeq	r0, r0, r6, ror r0
    187c:	01040305 	tsteq	r4, r5, lsl #6
    1880:	98362000 	ldmdals	r6!, {sp}
    1884:	0100000b 	tsteq	r0, fp
    1888:	0000767d 	andeq	r7, r0, sp, ror r6
    188c:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    1890:	36200000 	strtcc	r0, [r0], -r0
    1894:	0000087b 	andeq	r0, r0, fp, ror r8
    1898:	00767e01 	rsbseq	r7, r6, r1, lsl #28
    189c:	03050000 	movweq	r0, #20480	; 0x5000
    18a0:	200000f4 	strdcs	r0, [r0], -r4
    18a4:	0004d936 	andeq	sp, r4, r6, lsr r9
    18a8:	ab880100 	blge	fe201cb0 <SCS_BASE+0x1e1f3cb0>
    18ac:	05000000 	streq	r0, [r0, #-0]
    18b0:	00010003 	andeq	r0, r1, r3
    18b4:	06423620 	strbeq	r3, [r2], -r0, lsr #12
    18b8:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    18bc:	000000ab 	andeq	r0, r0, fp, lsr #1
    18c0:	00000305 	andeq	r0, r0, r5, lsl #6
    18c4:	ad382000 	ldcge	0, cr2, [r8, #-0]
    18c8:	01000003 	tsteq	r0, r3
    18cc:	0018d190 	mulseq	r8, r0, r1
    18d0:	00410500 	subeq	r0, r1, r0, lsl #10
    18d4:	51390000 	teqpl	r9, r0
    18d8:	01000008 	tsteq	r0, r8
    18dc:	006501fb 	strdeq	r0, [r5], #-27	; 0xffffffe5	; <UNPREDICTABLE>
    18e0:	03050000 	movweq	r0, #20480	; 0x5000
    18e4:	200000ec 	andcs	r0, r0, ip, ror #1
    18e8:	0008f83a 	andeq	pc, r8, sl, lsr r8	; <UNPREDICTABLE>
    18ec:	01fd0100 	mvnseq	r0, r0, lsl #2
    18f0:	00001787 	andeq	r1, r0, r7, lsl #15
    18f4:	00006531 	andeq	r6, r0, r1, lsr r5
    18f8:	00190400 	andseq	r0, r9, r0, lsl #8
    18fc:	01163200 	tsteq	r6, r0, lsl #4
    1900:	003f0000 	eorseq	r0, pc, r0
    1904:	000b463a 	andeq	r4, fp, sl, lsr r6
    1908:	01fe0100 	mvnseq	r0, r0, lsl #2
    190c:	000018f4 	strdeq	r1, [r0], -r4
    1910:	000c7f3b 	andeq	r7, ip, fp, lsr pc
    1914:	02a40700 	adceq	r0, r4, #0, 14
    1918:	00001927 	andeq	r1, r0, r7, lsr #18
    191c:	0019273c 	andseq	r2, r9, ip, lsr r7
    1920:	192d3c00 	pushne	{sl, fp, ip, sp}
    1924:	10000000 	andne	r0, r0, r0
    1928:	00039f04 	andeq	r9, r3, r4, lsl #30
    192c:	d3041000 	movwle	r1, #16384	; 0x4000
    1930:	3b000005 	blcc	194c <__Stack_Size+0x154c>
    1934:	00000c54 	andeq	r0, r0, r4, asr ip
    1938:	4f02c007 	svcmi	0x0002c007
    193c:	3c000019 	stccc	0, cr0, [r0], {25}
    1940:	00001927 	andeq	r1, r0, r7, lsr #18
    1944:	0000533c 	andeq	r5, r0, ip, lsr r3
    1948:	00533c00 	subseq	r3, r3, r0, lsl #24
    194c:	3b000000 	blcc	1954 <__Stack_Size+0x1554>
    1950:	00000232 	andeq	r0, r0, r2, lsr r2
    1954:	6602fc07 	strvs	pc, [r2], -r7, lsl #24
    1958:	3c000019 	stccc	0, cr0, [r0], {25}
    195c:	00001927 	andeq	r1, r0, r7, lsr #18
    1960:	0000533c 	andeq	r5, r0, ip, lsr r3
    1964:	8f3b0000 	svchi	0x003b0000
    1968:	07000008 	streq	r0, [r0, -r8]
    196c:	198202b2 	stmibne	r2, {r1, r4, r5, r7, r9}
    1970:	273c0000 	ldrcs	r0, [ip, -r0]!
    1974:	3c000019 	stccc	0, cr0, [r0], {25}
    1978:	00000053 	andeq	r0, r0, r3, asr r0
    197c:	0000eb3c 	andeq	lr, r0, ip, lsr fp
    1980:	ca3d0000 	bgt	f41988 <__Stack_Size+0xf41588>
    1984:	08000008 	stmdaeq	r0, {r3}
    1988:	001998f7 			; <UNDEFINED> instruction: 0x001998f7
    198c:	19983c00 	ldmibne	r8, {sl, fp, ip, sp}
    1990:	533c0000 	teqpl	ip, #0
    1994:	00000000 	andeq	r0, r0, r0
    1998:	04690410 	strbteq	r0, [r9], #-1040	; 0x410
    199c:	c23d0000 	eorsgt	r0, sp, #0
    19a0:	08000002 	stmdaeq	r0, {r1}
    19a4:	0019b4ec 	andseq	fp, r9, ip, ror #9
    19a8:	19983c00 	ldmibne	r8, {sl, fp, ip, sp}
    19ac:	533c0000 	teqpl	ip, #0
    19b0:	00000000 	andeq	r0, r0, r0
    19b4:	0003993e 	andeq	r9, r3, lr, lsr r9
    19b8:	cbf60800 	blgt	ffd839c0 <SCS_BASE+0x1fd759c0>
    19bc:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    19c0:	3c000019 	stccc	0, cr0, [r0], {25}
    19c4:	00001998 	muleq	r0, r8, r9
    19c8:	0000533c 	andeq	r5, r0, ip, lsr r3
    19cc:	5f3d0000 	svcpl	0x003d0000
    19d0:	0100000b 	tsteq	r0, fp
    19d4:	0019df65 	andseq	sp, r9, r5, ror #30
    19d8:	00653c00 	rsbeq	r3, r5, r0, lsl #24
    19dc:	3d000000 	stccc	0, cr0, [r0, #-0]
    19e0:	0000089c 	muleq	r0, ip, r8
    19e4:	19f03909 	ldmibne	r0!, {r0, r3, r8, fp, ip, sp}^
    19e8:	413c0000 	teqmi	ip, r0
    19ec:	00000000 	andeq	r0, r0, r0
    19f0:	000cac3d 	andeq	sl, ip, sp, lsr ip
    19f4:	01e10800 	mvneq	r0, r0, lsl #16
    19f8:	3c00001a 	stccc	0, cr0, [r0], {26}
    19fc:	00001a01 	andeq	r1, r0, r1, lsl #20
    1a00:	2f041000 	svccs	0x00041000
    1a04:	3d000006 	stccc	0, cr0, [r0, #-24]	; 0xffffffe8
    1a08:	00000a34 	andeq	r0, r0, r4, lsr sl
    1a0c:	1a18df08 	bne	639634 <__Stack_Size+0x639234>
    1a10:	983c0000 	ldmdals	ip!, {}	; <UNPREDICTABLE>
    1a14:	00000019 	andeq	r0, r0, r9, lsl r0
    1a18:	0000de3d 	andeq	sp, r0, sp, lsr lr
    1a1c:	2ee00800 	cdpcs	8, 14, cr0, cr0, cr0, {0}
    1a20:	3c00001a 	stccc	0, cr0, [r0], {26}
    1a24:	00001998 	muleq	r0, r8, r9
    1a28:	001a013c 	andseq	r0, sl, ip, lsr r1
    1a2c:	663d0000 	ldrtvs	r0, [sp], -r0
    1a30:	08000008 	stmdaeq	r0, {r3}
    1a34:	001a49e5 	andseq	r4, sl, r5, ror #19
    1a38:	19983c00 	ldmibne	r8, {sl, fp, ip, sp}
    1a3c:	533c0000 	teqpl	ip, #0
    1a40:	3c000000 	stccc	0, cr0, [r0], {-0}
    1a44:	000000eb 	andeq	r0, r0, fp, ror #1
    1a48:	01f53d00 	mvnseq	r3, r0, lsl #26
    1a4c:	e4080000 	str	r0, [r8], #-0
    1a50:	00001a5f 	andeq	r1, r0, pc, asr sl
    1a54:	0019983c 	andseq	r9, r9, ip, lsr r8
    1a58:	00eb3c00 	rsceq	r3, fp, r0, lsl #24
    1a5c:	3f000000 	svccc	0x00000000
    1a60:	00000488 	andeq	r0, r0, r8, lsl #9
    1a64:	be3db804 	cdplt	8, 3, cr11, cr13, cr4, {0}
    1a68:	04000001 	streq	r0, [r0], #-1
    1a6c:	001a77c9 	andseq	r7, sl, r9, asr #15
    1a70:	00533c00 	subseq	r3, r3, r0, lsl #24
    1a74:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    1a78:	00000bf8 	strdeq	r0, [r0], -r8
    1a7c:	049cba04 	ldreq	fp, [ip], #2564	; 0xa04
    1a80:	1a8c0000 	bne	fe301a88 <SCS_BASE+0x1e2f3a88>
    1a84:	413c0000 	teqmi	ip, r0
    1a88:	00000000 	andeq	r0, r0, r0
    1a8c:	0005f83f 	andeq	pc, r5, pc, lsr r8	; <UNPREDICTABLE>
    1a90:	3bb90400 	blcc	fee42a98 <SCS_BASE+0x1ee34a98>
    1a94:	000004ee 	andeq	r0, r0, lr, ror #9
    1a98:	aa02b007 	bge	adabc <__Stack_Size+0xad6bc>
    1a9c:	3c00001a 	stccc	0, cr0, [r0], {26}
    1aa0:	00001927 	andeq	r1, r0, r7, lsr #18
    1aa4:	0000eb3c 	andeq	lr, r0, ip, lsr fp
    1aa8:	4c3f0000 	ldcmi	0, cr0, [pc], #-0	; 1ab0 <__Stack_Size+0x16b0>
    1aac:	0a000009 	beq	1ad8 <__Stack_Size+0x16d8>
    1ab0:	07253d48 	streq	r3, [r5, -r8, asr #26]!
    1ab4:	e2050000 	and	r0, r5, #0
    1ab8:	00001ac7 	andeq	r1, r0, r7, asr #21
    1abc:	001ac73c 	andseq	ip, sl, ip, lsr r7
    1ac0:	00533c00 	subseq	r3, r3, r0, lsl #24
    1ac4:	10000000 	andne	r0, r0, r0
    1ac8:	00018204 	andeq	r8, r1, r4, lsl #4
    1acc:	012f4000 	teqeq	pc, r0
    1ad0:	10060000 	andne	r0, r6, r0
    1ad4:	02d13d01 	sbcseq	r3, r1, #1, 26	; 0x40
    1ad8:	e1050000 	mrs	r0, (UNDEF: 5)
    1adc:	00001aeb 	andeq	r1, r0, fp, ror #21
    1ae0:	001ac73c 	andseq	ip, sl, ip, lsr r7
    1ae4:	00533c00 	subseq	r3, r3, r0, lsl #24
    1ae8:	3f000000 	svccc	0x00000000
    1aec:	00000038 	andeq	r0, r0, r8, lsr r0
    1af0:	b23dfd0b 	eorslt	pc, sp, #704	; 0x2c0
    1af4:	0b000005 	bleq	1b10 <__Stack_Size+0x1710>
    1af8:	001b03fe 			; <UNDEFINED> instruction: 0x001b03fe
    1afc:	00413c00 	subeq	r3, r1, r0, lsl #24
    1b00:	41000000 	mrsmi	r0, (UNDEF: 0)
    1b04:	000001d3 	ldrdeq	r0, [r0], -r3
    1b08:	010bff0b 	tsteq	fp, fp, lsl #30
    1b0c:	2f3b0000 	svccs	0x003b0000
    1b10:	0b00000b 	bleq	1b44 <__Stack_Size+0x1744>
    1b14:	1b250112 	blne	941f64 <__Stack_Size+0x941b64>
    1b18:	413c0000 	teqmi	ip, r0
    1b1c:	3c000000 	stccc	0, cr0, [r0], {-0}
    1b20:	000000eb 	andeq	r0, r0, fp, ror #1
    1b24:	05473b00 	strbeq	r3, [r7, #-2816]	; 0xb00
    1b28:	130b0000 	movwne	r0, #45056	; 0xb000
    1b2c:	001b3c01 	andseq	r3, fp, r1, lsl #24
    1b30:	00413c00 	subeq	r3, r1, r0, lsl #24
    1b34:	eb3c0000 	bl	f01b3c <__Stack_Size+0xf0173c>
    1b38:	00000000 	andeq	r0, r0, r0
    1b3c:	00015d3d 	andeq	r5, r1, sp, lsr sp
    1b40:	4db50400 	cfldrsmi	mvf0, [r5]
    1b44:	3c00001b 	stccc	0, cr0, [r0], {27}
    1b48:	00000041 	andeq	r0, r0, r1, asr #32
    1b4c:	07473d00 	strbeq	r3, [r7, -r0, lsl #26]
    1b50:	b3040000 	movwlt	r0, #16384	; 0x4000
    1b54:	00001b5e 	andeq	r1, r0, lr, asr fp
    1b58:	0000413c 	andeq	r4, r0, ip, lsr r1
    1b5c:	943b0000 	ldrtls	r0, [fp], #-0
    1b60:	0b000006 	bleq	1b80 <__Stack_Size+0x1780>
    1b64:	1b700106 	blne	1c01f84 <__Stack_Size+0x1c01b84>
    1b68:	413c0000 	teqmi	ip, r0
    1b6c:	00000000 	andeq	r0, r0, r0
    1b70:	0001873b 	andeq	r8, r1, fp, lsr r7
    1b74:	01080b00 	tsteq	r8, r0, lsl #22
    1b78:	00001b82 	andeq	r1, r0, r2, lsl #23
    1b7c:	0000413c 	andeq	r4, r0, ip, lsr r1
    1b80:	c43b0000 	ldrtgt	r0, [fp], #-0
    1b84:	0b000006 	bleq	1ba4 <__Stack_Size+0x17a4>
    1b88:	1b940107 	blne	fe501fac <SCS_BASE+0x1e4f3fac>
    1b8c:	413c0000 	teqmi	ip, r0
    1b90:	00000000 	andeq	r0, r0, r0
    1b94:	0001013b 	andeq	r0, r1, fp, lsr r1
    1b98:	01020b00 	tsteq	r2, r0, lsl #22
    1b9c:	00001bab 	andeq	r1, r0, fp, lsr #23
    1ba0:	0000413c 	andeq	r4, r0, ip, lsr r1
    1ba4:	00413c00 	subeq	r3, r1, r0, lsl #24
    1ba8:	3b000000 	blcc	1bb0 <__Stack_Size+0x17b0>
    1bac:	00000b6b 	andeq	r0, r0, fp, ror #22
    1bb0:	bd01030b 	stclt	3, cr0, [r1, #-44]	; 0xffffffd4
    1bb4:	3c00001b 	stccc	0, cr0, [r0], {27}
    1bb8:	000000eb 	andeq	r0, r0, fp, ror #1
    1bbc:	07874200 	streq	r4, [r7, r0, lsl #4]
    1bc0:	190b0000 	stmdbne	fp, {}	; <UNPREDICTABLE>
    1bc4:	0000cb01 	andeq	ip, r0, r1, lsl #22
    1bc8:	001bd300 	andseq	sp, fp, r0, lsl #6
    1bcc:	00653c00 	rsbeq	r3, r5, r0, lsl #24
    1bd0:	3b000000 	blcc	1bd8 <__Stack_Size+0x17d8>
    1bd4:	00000018 	andeq	r0, r0, r8, lsl r0
    1bd8:	e501040b 	str	r0, [r1, #-1035]	; 0x40b
    1bdc:	3c00001b 	stccc	0, cr0, [r0], {27}
    1be0:	00000041 	andeq	r0, r0, r1, asr #32
    1be4:	07763b00 	ldrbeq	r3, [r6, -r0, lsl #22]!
    1be8:	0a0b0000 	beq	2c1bf0 <__Stack_Size+0x2c17f0>
    1bec:	001bf701 	andseq	pc, fp, r1, lsl #14
    1bf0:	00413c00 	subeq	r3, r1, r0, lsl #24
    1bf4:	43000000 	movwmi	r0, #0
    1bf8:	00000903 	andeq	r0, r0, r3, lsl #18
    1bfc:	6501050b 	strvs	r0, [r1, #-1291]	; 0x50b
    1c00:	3d000000 	stccc	0, cr0, [r0, #-0]
    1c04:	0000017d 	andeq	r0, r0, sp, ror r1
    1c08:	1c19db05 	ldcne	11, cr13, [r9], {5}
    1c0c:	c73c0000 	ldrgt	r0, [ip, -r0]!
    1c10:	3c00001a 	stccc	0, cr0, [r0], {26}
    1c14:	00001c19 	andeq	r1, r0, r9, lsl ip
    1c18:	3f041000 	svccc	0x00041000
    1c1c:	3d000005 	stccc	0, cr0, [r0, #-20]	; 0xffffffec
    1c20:	00000385 	andeq	r0, r0, r5, lsl #7
    1c24:	1c35e805 	ldcne	8, cr14, [r5], #-20	; 0xffffffec
    1c28:	413c0000 	teqmi	ip, r0
    1c2c:	3c000000 	stccc	0, cr0, [r0], {-0}
    1c30:	000000eb 	andeq	r0, r0, fp, ror #1
    1c34:	05693b00 	strbeq	r3, [r9, #-2816]!	; 0xb00
    1c38:	0f060000 	svceq	0x00060000
    1c3c:	001c4c01 	andseq	r4, ip, r1, lsl #24
    1c40:	00413c00 	subeq	r3, r1, r0, lsl #24
    1c44:	413c0000 	teqmi	ip, r0
    1c48:	00000000 	andeq	r0, r0, r0
    1c4c:	000bad3d 	andeq	sl, fp, sp, lsr sp
    1c50:	5dff0600 	ldclpl	6, cr0, [pc]	; 1c58 <__Stack_Size+0x1858>
    1c54:	3c00001c 	stccc	0, cr0, [r0], {28}
    1c58:	00000041 	andeq	r0, r0, r1, asr #32
    1c5c:	06d43b00 	ldrbeq	r3, [r4], r0, lsl #22
    1c60:	00060000 	andeq	r0, r6, r0
    1c64:	001c6f01 	andseq	r6, ip, r1, lsl #30
    1c68:	1c6f3c00 	stclne	12, cr3, [pc], #-0	; 1c70 <__Stack_Size+0x1870>
    1c6c:	10000000 	andne	r0, r0, r0
    1c70:	00058304 	andeq	r8, r5, r4, lsl #6
    1c74:	0a143d00 	beq	51107c <__Stack_Size+0x510c7c>
    1c78:	38090000 	stmdacc	r9, {}	; <UNPREDICTABLE>
    1c7c:	00001c86 	andeq	r1, r0, r6, lsl #25
    1c80:	0000413c 	andeq	r4, r0, ip, lsr r1
    1c84:	653d0000 	ldrvs	r0, [sp, #-0]!
    1c88:	09000007 	stmdbeq	r0, {r0, r1, r2}
    1c8c:	001c973a 	andseq	r9, ip, sl, lsr r7
    1c90:	00eb3c00 	rsceq	r3, fp, r0, lsl #24
    1c94:	3d000000 	stccc	0, cr0, [r0, #-0]
    1c98:	000002ae 	andeq	r0, r0, lr, lsr #5
    1c9c:	1ca83c0c 	stcne	12, cr3, [r8], #48	; 0x30
    1ca0:	533c0000 	teqpl	ip, #0
    1ca4:	00000000 	andeq	r0, r0, r0
    1ca8:	0006633d 	andeq	r6, r6, sp, lsr r3
    1cac:	b93d0c00 	ldmdblt	sp!, {sl, fp}
    1cb0:	3c00001c 	stccc	0, cr0, [r0], {28}
    1cb4:	00000065 	andeq	r0, r0, r5, rrx
    1cb8:	06333d00 	ldrteq	r3, [r3], -r0, lsl #26
    1cbc:	3e0c0000 	cdpcc	0, 0, cr0, cr12, cr0, {0}
    1cc0:	00001cca 	andeq	r1, r0, sl, asr #25
    1cc4:	0000533c 	andeq	r5, r0, ip, lsr r3
    1cc8:	703f0000 	eorsvc	r0, pc, r0
    1ccc:	0d000003 	stceq	0, cr0, [r0, #-12]
    1cd0:	04953e19 	ldreq	r3, [r5], #3609	; 0xe19
    1cd4:	dd050000 	stcle	0, cr0, [r5, #-0]
    1cd8:	00000065 	andeq	r0, r0, r5, rrx
    1cdc:	00001ceb 	andeq	r1, r0, fp, ror #25
    1ce0:	001ac73c 	andseq	ip, sl, ip, lsr r7
    1ce4:	00533c00 	subseq	r3, r3, r0, lsl #24
    1ce8:	40000000 	andmi	r0, r0, r0
    1cec:	0000095d 	andeq	r0, r0, sp, asr r9
    1cf0:	00011a0b 	andeq	r1, r1, fp, lsl #20
    1cf4:	000009c1 	andeq	r0, r0, r1, asr #19
    1cf8:	03f10004 	mvnseq	r0, #4
    1cfc:	01040000 	mrseq	r0, (UNDEF: 4)
    1d00:	000002f4 	strdeq	r0, [r0], -r4
    1d04:	000cfc01 	andeq	pc, ip, r1, lsl #24
    1d08:	0003ec00 	andeq	lr, r3, r0, lsl #24
    1d0c:	0000f800 	andeq	pc, r0, r0, lsl #16
    1d10:	00000000 	andeq	r0, r0, r0
    1d14:	00059800 	andeq	r9, r5, r0, lsl #16
    1d18:	05040200 	streq	r0, [r4, #-512]	; 0x200
    1d1c:	0000082d 	andeq	r0, r0, sp, lsr #16
    1d20:	ff050202 			; <UNDEFINED> instruction: 0xff050202
    1d24:	02000007 	andeq	r0, r0, #7
    1d28:	09de0601 	ldmibeq	lr, {r0, r9, sl}^
    1d2c:	75030000 	strvc	r0, [r3, #-0]
    1d30:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
    1d34:	00004527 	andeq	r4, r0, r7, lsr #10
    1d38:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1d3c:	0000093a 	andeq	r0, r0, sl, lsr r9
    1d40:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    1d44:	57280200 	strpl	r0, [r8, -r0, lsl #4]!
    1d48:	02000000 	andeq	r0, r0, #0
    1d4c:	0bd70702 	bleq	ff5c395c <SCS_BASE+0x1f5b595c>
    1d50:	75030000 	strvc	r0, [r3, #-0]
    1d54:	29020038 	stmdbcs	r2, {r3, r4, r5}
    1d58:	00000068 	andeq	r0, r0, r8, rrx
    1d5c:	dc080102 	stfles	f0, [r8], {2}
    1d60:	04000009 	streq	r0, [r0], #-9
    1d64:	00000459 	andeq	r0, r0, r9, asr r4
    1d68:	007a2f02 	rsbseq	r2, sl, r2, lsl #30
    1d6c:	45050000 	strmi	r0, [r5, #-0]
    1d70:	04000000 	streq	r0, [r0], #-0
    1d74:	00000245 	andeq	r0, r0, r5, asr #4
    1d78:	008a3002 	addeq	r3, sl, r2
    1d7c:	57050000 	strpl	r0, [r5, -r0]
    1d80:	06000000 	streq	r0, [r0], -r0
    1d84:	a43c0201 	ldrtge	r0, [ip], #-513	; 0x201
    1d88:	07000000 	streq	r0, [r0, -r0]
    1d8c:	00001eca 	andeq	r1, r0, sl, asr #29
    1d90:	45530800 	ldrbmi	r0, [r3, #-2048]	; 0x800
    1d94:	00010054 	andeq	r0, r1, r4, asr r0
    1d98:	00252204 	eoreq	r2, r5, r4, lsl #4
    1d9c:	8f3c0200 	svchi	0x003c0200
    1da0:	02000000 	andeq	r0, r0, #0
    1da4:	09310704 	ldmdbeq	r1!, {r2, r8, r9, sl}
    1da8:	50090000 	andpl	r0, r9, r0
    1dac:	c7020b03 	strgt	r0, [r2, -r3, lsl #22]
    1db0:	0a000002 	beq	1dc0 <__Stack_Size+0x19c0>
    1db4:	00315243 	eorseq	r5, r1, r3, asr #4
    1db8:	7f020d03 	svcvc	0x00020d03
    1dbc:	00000000 	andeq	r0, r0, r0
    1dc0:	0007b90b 	andeq	fp, r7, fp, lsl #18
    1dc4:	020e0300 	andeq	r0, lr, #0, 6
    1dc8:	0000004c 	andeq	r0, r0, ip, asr #32
    1dcc:	52430a02 	subpl	r0, r3, #8192	; 0x2000
    1dd0:	0f030032 	svceq	0x00030032
    1dd4:	00007f02 	andeq	r7, r0, r2, lsl #30
    1dd8:	c30b0400 	movwgt	r0, #46080	; 0xb400
    1ddc:	03000007 	movweq	r0, #7
    1de0:	004c0210 	subeq	r0, ip, r0, lsl r2
    1de4:	0b060000 	bleq	181dec <__Stack_Size+0x1819ec>
    1de8:	000005ad 	andeq	r0, r0, sp, lsr #11
    1dec:	7f021103 	svcvc	0x00021103
    1df0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1df4:	0007cd0b 	andeq	ip, r7, fp, lsl #26
    1df8:	02120300 	andseq	r0, r2, #0, 6
    1dfc:	0000004c 	andeq	r0, r0, ip, asr #32
    1e00:	04770b0a 	ldrbteq	r0, [r7], #-2826	; 0xb0a
    1e04:	13030000 	movwne	r0, #12288	; 0x3000
    1e08:	00007f02 	andeq	r7, r0, r2, lsl #30
    1e0c:	d70b0c00 	strle	r0, [fp, -r0, lsl #24]
    1e10:	03000007 	movweq	r0, #7
    1e14:	004c0214 	subeq	r0, ip, r4, lsl r2
    1e18:	0a0e0000 	beq	381e20 <__Stack_Size+0x381a20>
    1e1c:	03005253 	movweq	r5, #595	; 0x253
    1e20:	007f0215 	rsbseq	r0, pc, r5, lsl r2	; <UNPREDICTABLE>
    1e24:	0b100000 	bleq	401e2c <__Stack_Size+0x401a2c>
    1e28:	000007e1 	andeq	r0, r0, r1, ror #15
    1e2c:	4c021603 	stcmi	6, cr1, [r2], {3}
    1e30:	12000000 	andne	r0, r0, #0
    1e34:	5247450a 	subpl	r4, r7, #41943040	; 0x2800000
    1e38:	02170300 	andseq	r0, r7, #0, 6
    1e3c:	0000007f 	andeq	r0, r0, pc, ror r0
    1e40:	07eb0b14 			; <UNDEFINED> instruction: 0x07eb0b14
    1e44:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    1e48:	00004c02 	andeq	r4, r0, r2, lsl #24
    1e4c:	790b1600 	stmdbvc	fp, {r9, sl, ip}
    1e50:	03000002 	movweq	r0, #2
    1e54:	007f0219 	rsbseq	r0, pc, r9, lsl r2	; <UNPREDICTABLE>
    1e58:	0b180000 	bleq	601e60 <__Stack_Size+0x601a60>
    1e5c:	000007f5 	strdeq	r0, [r0], -r5
    1e60:	4c021a03 	stcmi	10, cr1, [r2], {3}
    1e64:	1a000000 	bne	1e6c <__Stack_Size+0x1a6c>
    1e68:	00027f0b 	andeq	r7, r2, fp, lsl #30
    1e6c:	021b0300 	andseq	r0, fp, #0, 6
    1e70:	0000007f 	andeq	r0, r0, pc, ror r0
    1e74:	0c4a0b1c 	vmoveq	d12, r0, sl
    1e78:	1c030000 	stcne	0, cr0, [r3], {-0}
    1e7c:	00004c02 	andeq	r4, r0, r2, lsl #24
    1e80:	270b1e00 	strcs	r1, [fp, -r0, lsl #28]
    1e84:	03000005 	movweq	r0, #5
    1e88:	007f021d 	rsbseq	r0, pc, sp, lsl r2	; <UNPREDICTABLE>
    1e8c:	0b200000 	bleq	801e94 <__Stack_Size+0x801a94>
    1e90:	00000809 	andeq	r0, r0, r9, lsl #16
    1e94:	4c021e03 	stcmi	14, cr1, [r2], {3}
    1e98:	22000000 	andcs	r0, r0, #0
    1e9c:	544e430a 	strbpl	r4, [lr], #-778	; 0x30a
    1ea0:	021f0300 	andseq	r0, pc, #0, 6
    1ea4:	0000007f 	andeq	r0, r0, pc, ror r0
    1ea8:	08130b24 	ldmdaeq	r3, {r2, r5, r8, r9, fp}
    1eac:	20030000 	andcs	r0, r3, r0
    1eb0:	00004c02 	andeq	r4, r0, r2, lsl #24
    1eb4:	500a2600 	andpl	r2, sl, r0, lsl #12
    1eb8:	03004353 	movweq	r4, #851	; 0x353
    1ebc:	007f0221 	rsbseq	r0, pc, r1, lsr #4
    1ec0:	0b280000 	bleq	a01ec8 <__Stack_Size+0xa01ac8>
    1ec4:	00000a74 	andeq	r0, r0, r4, ror sl
    1ec8:	4c022203 	sfmmi	f2, 4, [r2], {3}
    1ecc:	2a000000 	bcs	1ed4 <__Stack_Size+0x1ad4>
    1ed0:	5252410a 	subspl	r4, r2, #-2147483646	; 0x80000002
    1ed4:	02230300 	eoreq	r0, r3, #0, 6
    1ed8:	0000007f 	andeq	r0, r0, pc, ror r0
    1edc:	0a7f0b2c 	beq	1fc4b94 <__Stack_Size+0x1fc4794>
    1ee0:	24030000 	strcs	r0, [r3], #-0
    1ee4:	00004c02 	andeq	r4, r0, r2, lsl #24
    1ee8:	520a2e00 	andpl	r2, sl, #0, 28
    1eec:	03005243 	movweq	r5, #579	; 0x243
    1ef0:	007f0225 	rsbseq	r0, pc, r5, lsr #4
    1ef4:	0b300000 	bleq	c01efc <__Stack_Size+0xc01afc>
    1ef8:	00000a8a 	andeq	r0, r0, sl, lsl #21
    1efc:	4c022603 	stcmi	6, cr2, [r2], {3}
    1f00:	32000000 	andcc	r0, r0, #0
    1f04:	0002650b 	andeq	r6, r2, fp, lsl #10
    1f08:	02270300 	eoreq	r0, r7, #0, 6
    1f0c:	0000007f 	andeq	r0, r0, pc, ror r0
    1f10:	0a950b34 	beq	fe544be8 <SCS_BASE+0x1e536be8>
    1f14:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    1f18:	00004c02 	andeq	r4, r0, r2, lsl #24
    1f1c:	6a0b3600 	bvs	2cf724 <__Stack_Size+0x2cf324>
    1f20:	03000002 	movweq	r0, #2
    1f24:	007f0229 	rsbseq	r0, pc, r9, lsr #4
    1f28:	0b380000 	bleq	e01f30 <__Stack_Size+0xe01b30>
    1f2c:	00000aa0 	andeq	r0, r0, r0, lsr #21
    1f30:	4c022a03 	stcmi	10, cr2, [r2], {3}
    1f34:	3a000000 	bcc	1f3c <__Stack_Size+0x1b3c>
    1f38:	00026f0b 	andeq	r6, r2, fp, lsl #30
    1f3c:	022b0300 	eoreq	r0, fp, #0, 6
    1f40:	0000007f 	andeq	r0, r0, pc, ror r0
    1f44:	0aab0b3c 	beq	feac4c3c <SCS_BASE+0x1eab6c3c>
    1f48:	2c030000 	stccs	0, cr0, [r3], {-0}
    1f4c:	00004c02 	andeq	r4, r0, r2, lsl #24
    1f50:	740b3e00 	strvc	r3, [fp], #-3584	; 0xe00
    1f54:	03000002 	movweq	r0, #2
    1f58:	007f022d 	rsbseq	r0, pc, sp, lsr #4
    1f5c:	0b400000 	bleq	1001f64 <__Stack_Size+0x1001b64>
    1f60:	00000ab6 			; <UNDEFINED> instruction: 0x00000ab6
    1f64:	4c022e03 	stcmi	14, cr2, [r2], {3}
    1f68:	42000000 	andmi	r0, r0, #0
    1f6c:	0002400b 	andeq	r4, r2, fp
    1f70:	022f0300 	eoreq	r0, pc, #0, 6
    1f74:	0000007f 	andeq	r0, r0, pc, ror r0
    1f78:	0ac10b44 	beq	ff044c90 <SCS_BASE+0x1f036c90>
    1f7c:	30030000 	andcc	r0, r3, r0
    1f80:	00004c02 	andeq	r4, r0, r2, lsl #24
    1f84:	440a4600 	strmi	r4, [sl], #-1536	; 0x600
    1f88:	03005243 	movweq	r5, #579	; 0x243
    1f8c:	007f0231 	rsbseq	r0, pc, r1, lsr r2	; <UNPREDICTABLE>
    1f90:	0b480000 	bleq	1201f98 <__Stack_Size+0x1201b98>
    1f94:	00000acc 	andeq	r0, r0, ip, asr #21
    1f98:	4c023203 	sfmmi	f3, 4, [r2], {3}
    1f9c:	4a000000 	bmi	1fa4 <__Stack_Size+0x1ba4>
    1fa0:	0008360b 	andeq	r3, r8, fp, lsl #12
    1fa4:	02330300 	eorseq	r0, r3, #0, 6
    1fa8:	0000007f 	andeq	r0, r0, pc, ror r0
    1fac:	0ad70b4c 	beq	ff5c4ce4 <SCS_BASE+0x1f5b6ce4>
    1fb0:	34030000 	strcc	r0, [r3], #-0
    1fb4:	00004c02 	andeq	r4, r0, r2, lsl #24
    1fb8:	0c004e00 	stceq	14, cr4, [r0], {-0}
    1fbc:	000001e9 	andeq	r0, r0, r9, ror #3
    1fc0:	b6023503 	strlt	r3, [r2], -r3, lsl #10
    1fc4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1fc8:	0238031c 	eorseq	r0, r8, #28, 6	; 0x70000000
    1fcc:	00000391 	muleq	r0, r1, r3
    1fd0:	0052530a 	subseq	r5, r2, sl, lsl #6
    1fd4:	7f023a03 	svcvc	0x00023a03
    1fd8:	00000000 	andeq	r0, r0, r0
    1fdc:	0007b90b 	andeq	fp, r7, fp, lsl #18
    1fe0:	023b0300 	eorseq	r0, fp, #0, 6
    1fe4:	0000004c 	andeq	r0, r0, ip, asr #32
    1fe8:	52440a02 	subpl	r0, r4, #8192	; 0x2000
    1fec:	023c0300 	eorseq	r0, ip, #0, 6
    1ff0:	0000007f 	andeq	r0, r0, pc, ror r0
    1ff4:	07c30b04 	strbeq	r0, [r3, r4, lsl #22]
    1ff8:	3d030000 	stccc	0, cr0, [r3, #-0]
    1ffc:	00004c02 	andeq	r4, r0, r2, lsl #24
    2000:	420a0600 	andmi	r0, sl, #0, 12
    2004:	03005252 	movweq	r5, #594	; 0x252
    2008:	007f023e 	rsbseq	r0, pc, lr, lsr r2	; <UNPREDICTABLE>
    200c:	0b080000 	bleq	202014 <__Stack_Size+0x201c14>
    2010:	000007cd 	andeq	r0, r0, sp, asr #15
    2014:	4c023f03 	stcmi	15, cr3, [r2], {3}
    2018:	0a000000 	beq	2020 <__Stack_Size+0x1c20>
    201c:	3152430a 	cmpcc	r2, sl, lsl #6
    2020:	02400300 	subeq	r0, r0, #0, 6
    2024:	0000007f 	andeq	r0, r0, pc, ror r0
    2028:	07d70b0c 	ldrbeq	r0, [r7, ip, lsl #22]
    202c:	41030000 	mrsmi	r0, (UNDEF: 3)
    2030:	00004c02 	andeq	r4, r0, r2, lsl #24
    2034:	430a0e00 	movwmi	r0, #44544	; 0xae00
    2038:	03003252 	movweq	r3, #594	; 0x252
    203c:	007f0242 	rsbseq	r0, pc, r2, asr #4
    2040:	0b100000 	bleq	402048 <__Stack_Size+0x401c48>
    2044:	000007e1 	andeq	r0, r0, r1, ror #15
    2048:	4c024303 	stcmi	3, cr4, [r2], {3}
    204c:	12000000 	andne	r0, r0, #0
    2050:	3352430a 	cmpcc	r2, #671088640	; 0x28000000
    2054:	02440300 	subeq	r0, r4, #0, 6
    2058:	0000007f 	andeq	r0, r0, pc, ror r0
    205c:	07eb0b14 			; <UNDEFINED> instruction: 0x07eb0b14
    2060:	45030000 	strmi	r0, [r3, #-0]
    2064:	00004c02 	andeq	r4, r0, r2, lsl #24
    2068:	ce0b1600 	cfmadd32gt	mvax0, mvfx1, mvfx11, mvfx0
    206c:	03000001 	movweq	r0, #1
    2070:	007f0246 	rsbseq	r0, pc, r6, asr #4
    2074:	0b180000 	bleq	60207c <__Stack_Size+0x601c7c>
    2078:	000007f5 	strdeq	r0, [r0], -r5
    207c:	4c024703 	stcmi	7, cr4, [r2], {3}
    2080:	1a000000 	bne	2088 <__Stack_Size+0x1c88>
    2084:	04ab0c00 	strteq	r0, [fp], #3072	; 0xc00
    2088:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    208c:	0002d302 	andeq	sp, r2, r2, lsl #6
    2090:	0f520d00 	svceq	0x00520d00
    2094:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    2098:	08000adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp}
    209c:	00000002 	andeq	r0, r0, r2
    20a0:	1f0d9c01 	svcne	0x000d9c01
    20a4:	0100000f 	tsteq	r0, pc
    20a8:	000ade35 	andeq	sp, sl, r5, lsr lr
    20ac:	00000208 	andeq	r0, r0, r8, lsl #4
    20b0:	0d9c0100 	ldfeqs	f0, [ip]
    20b4:	000011f6 	strdeq	r1, [r0], -r6
    20b8:	0ae04401 	beq	ff8130c4 <SCS_BASE+0x1f8050c4>
    20bc:	00020800 	andeq	r0, r2, r0, lsl #16
    20c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    20c4:	000f780d 	andeq	r7, pc, sp, lsl #16
    20c8:	e2510100 	subs	r0, r1, #0, 2
    20cc:	0208000a 	andeq	r0, r8, #10
    20d0:	01000000 	mrseq	r0, (UNDEF: 0)
    20d4:	0eaf0d9c 	mcreq	13, 5, r0, cr15, cr12, {4}
    20d8:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    20dc:	08000ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp}
    20e0:	00000002 	andeq	r0, r0, r2
    20e4:	7f0d9c01 	svcvc	0x000d9c01
    20e8:	01000010 	tsteq	r0, r0, lsl r0
    20ec:	000ae66b 	andeq	lr, sl, fp, ror #12
    20f0:	00000208 	andeq	r0, r0, r8, lsl #4
    20f4:	0d9c0100 	ldfeqs	f0, [ip]
    20f8:	00001120 	andeq	r1, r0, r0, lsr #2
    20fc:	0ae87601 	beq	ffa1f908 <SCS_BASE+0x1fa11908>
    2100:	00020800 	andeq	r0, r2, r0, lsl #16
    2104:	9c010000 	stcls	0, cr0, [r1], {-0}
    2108:	000cf40d 	andeq	pc, ip, sp, lsl #8
    210c:	ea810100 	b	fe042514 <SCS_BASE+0x1e034514>
    2110:	0208000a 	andeq	r0, r8, #10
    2114:	01000000 	mrseq	r0, (UNDEF: 0)
    2118:	0f100d9c 	svceq	0x00100d9c
    211c:	8c010000 	stchi	0, cr0, [r1], {-0}
    2120:	08000aec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, fp}
    2124:	00000014 	andeq	r0, r0, r4, lsl r0
    2128:	420d9c01 	andmi	r9, sp, #256	; 0x100
    212c:	0100000f 	tsteq	r0, pc
    2130:	000b009f 	muleq	fp, pc, r0	; <UNPREDICTABLE>
    2134:	00000208 	andeq	r0, r0, r8, lsl #4
    2138:	0d9c0100 	ldfeqs	f0, [ip]
    213c:	00001219 	andeq	r1, r0, r9, lsl r2
    2140:	0b02aa01 	bleq	ac94c <__Stack_Size+0xac54c>
    2144:	00020800 	andeq	r0, r2, r0, lsl #16
    2148:	9c010000 	stcls	0, cr0, [r1], {-0}
    214c:	000fea0d 	andeq	lr, pc, sp, lsl #20
    2150:	04b50100 	ldrteq	r0, [r5], #256	; 0x100
    2154:	0208000b 	andeq	r0, r8, #11
    2158:	01000000 	mrseq	r0, (UNDEF: 0)
    215c:	108c0d9c 	umullne	r0, ip, ip, sp
    2160:	c0010000 	andgt	r0, r1, r0
    2164:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
    2168:	00000002 	andeq	r0, r0, r2
    216c:	e90d9c01 	stmdb	sp, {r0, sl, fp, ip, pc}
    2170:	01000010 	tsteq	r0, r0, lsl r0
    2174:	000b08cb 	andeq	r0, fp, fp, asr #17
    2178:	00000208 	andeq	r0, r0, r8, lsl #4
    217c:	0d9c0100 	ldfeqs	f0, [ip]
    2180:	00001171 	andeq	r1, r0, r1, ror r1
    2184:	0b0ad601 	bleq	2b7990 <__Stack_Size+0x2b7590>
    2188:	00020800 	andeq	r0, r2, r0, lsl #16
    218c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2190:	000d870d 	andeq	r8, sp, sp, lsl #14
    2194:	0ce10100 	stfeqe	f0, [r1]
    2198:	0208000b 	andeq	r0, r8, #11
    219c:	01000000 	mrseq	r0, (UNDEF: 0)
    21a0:	10440d9c 	umaalne	r0, r4, ip, sp
    21a4:	ec010000 	stc	0, cr0, [r1], {-0}
    21a8:	08000b0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, fp}
    21ac:	00000002 	andeq	r0, r0, r2
    21b0:	990d9c01 	stmdbls	sp, {r0, sl, fp, ip, pc}
    21b4:	01000011 	tsteq	r0, r1, lsl r0
    21b8:	000b10f7 	strdeq	r1, [fp], -r7
    21bc:	00000208 	andeq	r0, r0, r8, lsl #4
    21c0:	0e9c0100 	fmleqe	f0, f4, f0
    21c4:	00000e3f 	andeq	r0, r0, pc, lsr lr
    21c8:	12010201 	andne	r0, r1, #268435456	; 0x10000000
    21cc:	0208000b 	andeq	r0, r8, #11
    21d0:	01000000 	mrseq	r0, (UNDEF: 0)
    21d4:	10140e9c 	mulsne	r4, ip, lr
    21d8:	0d010000 	stceq	0, cr0, [r1, #-0]
    21dc:	000b1401 	andeq	r1, fp, r1, lsl #8
    21e0:	00000208 	andeq	r0, r0, r8, lsl #4
    21e4:	0e9c0100 	fmleqe	f0, f4, f0
    21e8:	00001180 	andeq	r1, r0, r0, lsl #3
    21ec:	00011801 	andeq	r1, r1, r1, lsl #16
    21f0:	02000000 	andeq	r0, r0, #0
    21f4:	01000000 	mrseq	r0, (UNDEF: 0)
    21f8:	0df20e9c 	ldcleq	14, cr0, [r2, #624]!	; 0x270
    21fc:	23010000 	movwcs	r0, #4096	; 0x1000
    2200:	00000001 	andeq	r0, r0, r1
    2204:	00000200 	andeq	r0, r0, r0, lsl #4
    2208:	0e9c0100 	fmleqe	f0, f4, f0
    220c:	00000fb0 			; <UNDEFINED> instruction: 0x00000fb0
    2210:	00012e01 	andeq	r2, r1, r1, lsl #28
    2214:	02000000 	andeq	r0, r0, #0
    2218:	01000000 	mrseq	r0, (UNDEF: 0)
    221c:	11580e9c 			; <UNDEFINED> instruction: 0x11580e9c
    2220:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    2224:	00000001 	andeq	r0, r0, r1
    2228:	00000200 	andeq	r0, r0, r0, lsl #4
    222c:	0e9c0100 	fmleqe	f0, f4, f0
    2230:	00000dd9 	ldrdeq	r0, [r0], -r9
    2234:	00014401 	andeq	r4, r1, r1, lsl #8
    2238:	02000000 	andeq	r0, r0, #0
    223c:	01000000 	mrseq	r0, (UNDEF: 0)
    2240:	109b0e9c 	umullsne	r0, fp, ip, lr
    2244:	4f010000 	svcmi	0x00010000
    2248:	00000001 	andeq	r0, r0, r1
    224c:	00000200 	andeq	r0, r0, r0, lsl #4
    2250:	0e9c0100 	fmleqe	f0, f4, f0
    2254:	000011cd 	andeq	r1, r0, sp, asr #3
    2258:	00015a01 	andeq	r5, r1, r1, lsl #20
    225c:	02000000 	andeq	r0, r0, #0
    2260:	01000000 	mrseq	r0, (UNDEF: 0)
    2264:	0e0b0e9c 	mcreq	14, 0, r0, cr11, cr12, {4}
    2268:	65010000 	strvs	r0, [r1, #-0]
    226c:	000b1601 	andeq	r1, fp, r1, lsl #12
    2270:	00000208 	andeq	r0, r0, r8, lsl #4
    2274:	0e9c0100 	fmleqe	f0, f4, f0
    2278:	00000e96 	muleq	r0, r6, lr
    227c:	18017101 	stmdane	r1, {r0, r8, ip, sp, lr}
    2280:	0208000b 	andeq	r0, r8, #11
    2284:	01000000 	mrseq	r0, (UNDEF: 0)
    2288:	10650f9c 	mlsne	r5, ip, pc, r0	; <UNPREDICTABLE>
    228c:	7d010000 	stcvc	0, cr0, [r1, #-0]
    2290:	000b1a01 	andeq	r1, fp, r1, lsl #20
    2294:	00000408 	andeq	r0, r0, r8, lsl #8
    2298:	b59c0100 	ldrlt	r0, [ip, #256]	; 0x100
    229c:	10000005 	andne	r0, r0, r5
    22a0:	08000b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp}
    22a4:	00000967 	andeq	r0, r0, r7, ror #18
    22a8:	110d0e00 	tstne	sp, r0, lsl #28
    22ac:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    22b0:	000b1e01 	andeq	r1, fp, r1, lsl #28
    22b4:	00000208 	andeq	r0, r0, r8, lsl #4
    22b8:	0e9c0100 	fmleqe	f0, f4, f0
    22bc:	00000ed5 	ldrdeq	r0, [r0], -r5
    22c0:	20019401 	andcs	r9, r1, r1, lsl #8
    22c4:	0208000b 	andeq	r0, r8, #11
    22c8:	01000000 	mrseq	r0, (UNDEF: 0)
    22cc:	0ce10e9c 	stcleq	14, cr0, [r1], #624	; 0x270
    22d0:	9f010000 	svcls	0x00010000
    22d4:	000b2201 	andeq	r2, fp, r1, lsl #4
    22d8:	00000208 	andeq	r0, r0, r8, lsl #4
    22dc:	0e9c0100 	fmleqe	f0, f4, f0
    22e0:	00000d3b 	andeq	r0, r0, fp, lsr sp
    22e4:	2401aa01 	strcs	sl, [r1], #-2561	; 0xa01
    22e8:	0208000b 	andeq	r0, r8, #11
    22ec:	01000000 	mrseq	r0, (UNDEF: 0)
    22f0:	11ba0e9c 			; <UNDEFINED> instruction: 0x11ba0e9c
    22f4:	b6010000 	strlt	r0, [r1], -r0
    22f8:	000b2601 	andeq	r2, fp, r1, lsl #12
    22fc:	00000208 	andeq	r0, r0, r8, lsl #4
    2300:	0e9c0100 	fmleqe	f0, f4, f0
    2304:	00000ffc 	strdeq	r0, [r0], -ip
    2308:	2801c201 	stmdacs	r1, {r0, r9, lr, pc}
    230c:	0208000b 	andeq	r0, r8, #11
    2310:	01000000 	mrseq	r0, (UNDEF: 0)
    2314:	0f9d0e9c 	svceq	0x009d0e9c
    2318:	cd010000 	stcgt	0, cr0, [r1, #-0]
    231c:	000b2a01 	andeq	r2, fp, r1, lsl #20
    2320:	00000208 	andeq	r0, r0, r8, lsl #4
    2324:	0f9c0100 	svceq	0x009c0100
    2328:	00001209 	andeq	r1, r0, r9, lsl #4
    232c:	2c01dc01 	stccs	12, cr13, [r1], {1}
    2330:	1408000b 	strne	r0, [r8], #-11
    2334:	01000000 	mrseq	r0, (UNDEF: 0)
    2338:	00066d9c 	muleq	r6, ip, sp
    233c:	0b381100 	bleq	e06744 <__Stack_Size+0xe06344>
    2340:	096e0800 	stmdbeq	lr!, {fp}^
    2344:	06630000 	strbteq	r0, [r3], -r0
    2348:	01120000 	tsteq	r2, r0
    234c:	12310151 	eorsne	r0, r1, #1073741844	; 0x40000014
    2350:	40035001 	andmi	r5, r3, r1
    2354:	1000244a 	andne	r2, r0, sl, asr #8
    2358:	08000b40 	stmdaeq	r0, {r6, r8, r9, fp}
    235c:	0000098b 	andeq	r0, r0, fp, lsl #19
    2360:	0e860e00 	cdpeq	14, 8, cr0, cr6, cr0, {0}
    2364:	ef010000 	svc	0x00010000
    2368:	000b4001 	andeq	r4, fp, r1
    236c:	00000208 	andeq	r0, r0, r8, lsl #4
    2370:	0e9c0100 	fmleqe	f0, f4, f0
    2374:	000010b4 	strheq	r1, [r0], -r4
    2378:	4201fa01 	andmi	pc, r1, #4096	; 0x1000
    237c:	0208000b 	andeq	r0, r8, #11
    2380:	01000000 	mrseq	r0, (UNDEF: 0)
    2384:	0db10e9c 	ldceq	14, cr0, [r1, #624]!	; 0x270
    2388:	05010000 	streq	r0, [r1, #-0]
    238c:	000b4402 	andeq	r4, fp, r2, lsl #8
    2390:	00000208 	andeq	r0, r0, r8, lsl #4
    2394:	0e9c0100 	fmleqe	f0, f4, f0
    2398:	000010fa 	strdeq	r1, [r0], -sl
    239c:	46021001 	strmi	r1, [r2], -r1
    23a0:	0208000b 	andeq	r0, r8, #11
    23a4:	01000000 	mrseq	r0, (UNDEF: 0)
    23a8:	0cce0e9c 	stcleq	14, cr0, [lr], {156}	; 0x9c
    23ac:	1b010000 	blne	423b4 <__Stack_Size+0x41fb4>
    23b0:	000b4802 	andeq	r4, fp, r2, lsl #16
    23b4:	00000208 	andeq	r0, r0, r8, lsl #4
    23b8:	0e9c0100 	fmleqe	f0, f4, f0
    23bc:	000010c4 	andeq	r1, r0, r4, asr #1
    23c0:	4a022601 	bmi	8bbcc <__Stack_Size+0x8b7cc>
    23c4:	0208000b 	andeq	r0, r8, #11
    23c8:	01000000 	mrseq	r0, (UNDEF: 0)
    23cc:	10550e9c 			; <UNDEFINED> instruction: 0x10550e9c
    23d0:	31010000 	mrscc	r0, (UNDEF: 1)
    23d4:	000b4c02 	andeq	r4, fp, r2, lsl #24
    23d8:	00000208 	andeq	r0, r0, r8, lsl #4
    23dc:	0e9c0100 	fmleqe	f0, f4, f0
    23e0:	000011aa 	andeq	r1, r0, sl, lsr #3
    23e4:	4e023c01 	cdpmi	12, 0, cr3, cr2, cr1, {0}
    23e8:	0208000b 	andeq	r0, r8, #11
    23ec:	01000000 	mrseq	r0, (UNDEF: 0)
    23f0:	10d70f9c 	smullsne	r0, r7, ip, pc	; <UNPREDICTABLE>
    23f4:	4d010000 	stcmi	0, cr0, [r1, #-0]
    23f8:	000b5002 	andeq	r5, fp, r2
    23fc:	00003408 	andeq	r3, r0, r8, lsl #8
    2400:	459c0100 	ldrmi	r0, [ip, #256]	; 0x100
    2404:	11000007 	tstne	r0, r7
    2408:	08000b5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, fp}
    240c:	00000993 	muleq	r0, r3, r9
    2410:	00000731 	andeq	r0, r0, r1, lsr r7
    2414:	03510112 	cmpeq	r1, #-2147483644	; 0x80000004
    2418:	1205250a 	andne	r2, r5, #41943040	; 0x2800000
    241c:	0c055001 	stceq	0, cr5, [r5], {1}
    2420:	40013800 	andmi	r3, r1, r0, lsl #16
    2424:	0b701300 	bleq	1c0702c <__Stack_Size+0x1c06c2c>
    2428:	09b30800 	ldmibeq	r3!, {fp}
    242c:	01120000 	tsteq	r2, r0
    2430:	000c0550 	andeq	r0, ip, r0, asr r5
    2434:	00400138 	subeq	r0, r0, r8, lsr r1
    2438:	12280f00 	eorne	r0, r8, #0, 30
    243c:	5d010000 	stcpl	0, cr0, [r1, #-0]
    2440:	000b8402 	andeq	r8, fp, r2, lsl #8
    2444:	00003c08 	andeq	r3, r0, r8, lsl #24
    2448:	7d9c0100 	ldfvcs	f0, [ip]
    244c:	14000007 	strne	r0, [r0], #-7
    2450:	01007273 	tsteq	r0, r3, ror r2
    2454:	003a0262 	eorseq	r0, sl, r2, ror #4
    2458:	03050000 	movweq	r0, #20480	; 0x5000
    245c:	2000010c 	andcs	r0, r0, ip, lsl #2
    2460:	000b9e13 	andeq	r9, fp, r3, lsl lr
    2464:	0009b308 	andeq	fp, r9, r8, lsl #6
    2468:	50011200 	andpl	r1, r1, r0, lsl #4
    246c:	00007502 	andeq	r7, r0, r2, lsl #10
    2470:	0ec30e00 	cdpeq	14, 12, cr0, cr3, cr0, {0}
    2474:	73010000 	movwvc	r0, #4096	; 0x1000
    2478:	000bc002 	andeq	ip, fp, r2
    247c:	00000208 	andeq	r0, r0, r8, lsl #4
    2480:	0e9c0100 	fmleqe	f0, f4, f0
    2484:	00000d26 	andeq	r0, r0, r6, lsr #26
    2488:	c2027f01 	andgt	r7, r2, #1, 30
    248c:	0208000b 	andeq	r0, r8, #11
    2490:	01000000 	mrseq	r0, (UNDEF: 0)
    2494:	0d600e9c 	stcleq	14, cr0, [r0, #-624]!	; 0xfffffd90
    2498:	8a010000 	bhi	424a0 <__Stack_Size+0x420a0>
    249c:	000bc402 	andeq	ip, fp, r2, lsl #8
    24a0:	00000208 	andeq	r0, r0, r8, lsl #4
    24a4:	0e9c0100 	fmleqe	f0, f4, f0
    24a8:	00000dc4 	andeq	r0, r0, r4, asr #27
    24ac:	c6029501 	strgt	r9, [r2], -r1, lsl #10
    24b0:	0208000b 	andeq	r0, r8, #11
    24b4:	01000000 	mrseq	r0, (UNDEF: 0)
    24b8:	112b0e9c 			; <UNDEFINED> instruction: 0x112b0e9c
    24bc:	a0010000 	andge	r0, r1, r0
    24c0:	000bc802 	andeq	ip, fp, r2, lsl #16
    24c4:	00000208 	andeq	r0, r0, r8, lsl #4
    24c8:	0e9c0100 	fmleqe	f0, f4, f0
    24cc:	00000f8a 	andeq	r0, r0, sl, lsl #31
    24d0:	ca02ac01 	bgt	ad4dc <__Stack_Size+0xad0dc>
    24d4:	0208000b 	andeq	r0, r8, #11
    24d8:	01000000 	mrseq	r0, (UNDEF: 0)
    24dc:	0ee80e9c 	mcreq	14, 7, r0, cr8, cr12, {4}
    24e0:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    24e4:	000bcc02 	andeq	ip, fp, r2, lsl #24
    24e8:	00000208 	andeq	r0, r0, r8, lsl #4
    24ec:	0e9c0100 	fmleqe	f0, f4, f0
    24f0:	00000d74 	andeq	r0, r0, r4, ror sp
    24f4:	ce02c301 	cdpgt	3, 0, cr12, cr2, cr1, {0}
    24f8:	0208000b 	andeq	r0, r8, #11
    24fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2500:	0f320e9c 	svceq	0x00320e9c
    2504:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    2508:	000bd002 	andeq	sp, fp, r2
    250c:	00000208 	andeq	r0, r0, r8, lsl #4
    2510:	0e9c0100 	fmleqe	f0, f4, f0
    2514:	00000fc9 	andeq	r0, r0, r9, asr #31
    2518:	d202d901 	andle	sp, r2, #16384	; 0x4000
    251c:	0208000b 	andeq	r0, r8, #11
    2520:	01000000 	mrseq	r0, (UNDEF: 0)
    2524:	0e1d0e9c 	mrceq	14, 0, r0, cr13, cr12, {4}
    2528:	e4010000 	str	r0, [r1], #-0
    252c:	000bd402 	andeq	sp, fp, r2, lsl #8
    2530:	00000208 	andeq	r0, r0, r8, lsl #4
    2534:	0e9c0100 	fmleqe	f0, f4, f0
    2538:	000011e6 	andeq	r1, r0, r6, ror #3
    253c:	d602ef01 	strle	lr, [r2], -r1, lsl #30
    2540:	0208000b 	andeq	r0, r8, #11
    2544:	01000000 	mrseq	r0, (UNDEF: 0)
    2548:	0e500e9c 	mrceq	14, 2, r0, cr0, cr12, {4}
    254c:	fa010000 	blx	42554 <__Stack_Size+0x42154>
    2550:	000bd802 	andeq	sp, fp, r2, lsl #16
    2554:	00000208 	andeq	r0, r0, r8, lsl #4
    2558:	0e9c0100 	fmleqe	f0, f4, f0
    255c:	00000d4f 	andeq	r0, r0, pc, asr #26
    2560:	da030501 	ble	c396c <__Stack_Size+0xc356c>
    2564:	0208000b 	andeq	r0, r8, #11
    2568:	01000000 	mrseq	r0, (UNDEF: 0)
    256c:	0fd90e9c 	svceq	0x00d90e9c
    2570:	10010000 	andne	r0, r1, r0
    2574:	000bdc03 	andeq	sp, fp, r3, lsl #24
    2578:	00000208 	andeq	r0, r0, r8, lsl #4
    257c:	0e9c0100 	fmleqe	f0, f4, f0
    2580:	00000f00 	andeq	r0, r0, r0, lsl #30
    2584:	de031b01 	vmlale.f64	d1, d3, d1
    2588:	0208000b 	andeq	r0, r8, #11
    258c:	01000000 	mrseq	r0, (UNDEF: 0)
    2590:	0e760e9c 	mrceq	14, 3, r0, cr6, cr12, {4}
    2594:	26010000 	strcs	r0, [r1], -r0
    2598:	000be003 	andeq	lr, fp, r3
    259c:	00000208 	andeq	r0, r0, r8, lsl #4
    25a0:	0e9c0100 	fmleqe	f0, f4, f0
    25a4:	00000f5f 	andeq	r0, r0, pc, asr pc
    25a8:	e2033101 	and	r3, r3, #1073741824	; 0x40000000
    25ac:	0208000b 	andeq	r0, r8, #11
    25b0:	01000000 	mrseq	r0, (UNDEF: 0)
    25b4:	113f0e9c 			; <UNDEFINED> instruction: 0x113f0e9c
    25b8:	3c010000 	stccc	0, cr0, [r1], {-0}
    25bc:	000be403 	andeq	lr, fp, r3, lsl #8
    25c0:	00000208 	andeq	r0, r0, r8, lsl #4
    25c4:	0e9c0100 	fmleqe	f0, f4, f0
    25c8:	00000d98 	muleq	r0, r8, sp
    25cc:	e6034701 	str	r4, [r3], -r1, lsl #14
    25d0:	0208000b 	andeq	r0, r8, #11
    25d4:	01000000 	mrseq	r0, (UNDEF: 0)
    25d8:	0d0b0e9c 	stceq	14, cr0, [fp, #-624]	; 0xfffffd90
    25dc:	53010000 	movwpl	r0, #4096	; 0x1000
    25e0:	000be803 	andeq	lr, fp, r3, lsl #16
    25e4:	00000208 	andeq	r0, r0, r8, lsl #4
    25e8:	159c0100 	ldrne	r0, [ip, #256]	; 0x100
    25ec:	00000197 	muleq	r0, r7, r1
    25f0:	006f1d01 	rsbeq	r1, pc, r1, lsl #26
    25f4:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    25f8:	13000000 	movwne	r0, #0
    25fc:	17000009 	strne	r0, [r0, -r9]
    2600:	000000af 	andeq	r0, r0, pc, lsr #1
    2604:	180003ff 	stmdane	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9}
    2608:	00000029 	andeq	r0, r0, r9, lsr #32
    260c:	1f024701 	svcne	0x00024701
    2610:	05000009 	streq	r0, [r0, #-9]
    2614:	00000902 	andeq	r0, r0, r2, lsl #18
    2618:	0003dc18 	andeq	sp, r3, r8, lsl ip
    261c:	02480100 	subeq	r0, r8, #0, 2
    2620:	00000930 	andeq	r0, r0, r0, lsr r9
    2624:	00004c05 	andeq	r4, r0, r5, lsl #24
    2628:	09791800 	ldmdbeq	r9!, {fp, ip}^
    262c:	4a010000 	bmi	42634 <__Stack_Size+0x42234>
    2630:	00094102 	andeq	r4, r9, r2, lsl #2
    2634:	005e0500 	subseq	r0, lr, r0, lsl #10
    2638:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    263c:	56000000 	strpl	r0, [r0], -r0
    2640:	19000009 	stmdbne	r0, {r0, r3}
    2644:	000000af 	andeq	r0, r0, pc, lsr #1
    2648:	e51800ff 	ldr	r0, [r8, #-255]	; 0xff
    264c:	01000006 	tsteq	r0, r6
    2650:	0962024b 	stmdbeq	r2!, {r0, r1, r3, r6, r9}^
    2654:	46050000 	strmi	r0, [r5], -r0
    2658:	1a000009 	bne	2684 <__Stack_Size+0x2284>
    265c:	00001037 	andeq	r1, r0, r7, lsr r0
    2660:	601b1501 	andsvs	r1, fp, r1, lsl #10
    2664:	0400000e 	streq	r0, [r0], #-14
    2668:	098502fe 	stmibeq	r5, {r1, r2, r3, r4, r5, r6, r7, r9}
    266c:	851c0000 	ldrhi	r0, [ip, #-0]
    2670:	1c000009 	stcne	0, cr0, [r0], {9}
    2674:	0000004c 	andeq	r0, r0, ip, asr #32
    2678:	c7041d00 	strgt	r1, [r4, -r0, lsl #26]
    267c:	1e000002 	cdpne	0, 0, cr0, cr0, cr2, {0}
    2680:	00000687 	andeq	r0, r0, r7, lsl #13
    2684:	1f01d901 	svcne	0x0001d901
    2688:	00001025 	andeq	r1, r0, r5, lsr #32
    268c:	00a4f805 	adceq	pc, r4, r5, lsl #16
    2690:	09ad0000 	stmibeq	sp!, {}	; <UNPREDICTABLE>
    2694:	ad1c0000 	ldcge	0, cr0, [ip, #-0]
    2698:	1c000009 	stcne	0, cr0, [r0], {9}
    269c:	0000004c 	andeq	r0, r0, ip, asr #32
    26a0:	91041d00 	tstls	r4, r0, lsl #26
    26a4:	20000003 	andcs	r0, r0, r3
    26a8:	00000e2d 	andeq	r0, r0, sp, lsr #28
    26ac:	004ced05 	subeq	lr, ip, r5, lsl #26
    26b0:	ad1c0000 	ldcge	0, cr0, [ip, #-0]
    26b4:	00000009 	andeq	r0, r0, r9
    26b8:	00012400 	andeq	r2, r1, r0, lsl #8
    26bc:	bd000400 	cfstrslt	mvf0, [r0, #-0]
    26c0:	04000005 	streq	r0, [r0], #-5
    26c4:	0002f401 	andeq	pc, r2, r1, lsl #8
    26c8:	123a0100 	eorsne	r0, sl, #0, 2
    26cc:	03ec0000 	mvneq	r0, #0
    26d0:	0a7c0000 	beq	1f026d8 <__Stack_Size+0x1f022d8>
    26d4:	04020000 	streq	r0, [r2], #-0
    26d8:	00082d05 	andeq	r2, r8, r5, lsl #26
    26dc:	05020200 	streq	r0, [r2, #-512]	; 0x200
    26e0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    26e4:	de060102 	adfles	f0, f6, f2
    26e8:	02000009 	andeq	r0, r0, #9
    26ec:	093a0704 	ldmdbeq	sl!, {r2, r8, r9, sl}
    26f0:	02020000 	andeq	r0, r2, #0
    26f4:	000bd707 	andeq	sp, fp, r7, lsl #14
    26f8:	38750300 	ldmdacc	r5!, {r8, r9}^
    26fc:	4a290200 	bmi	a42f04 <__Stack_Size+0xa42b04>
    2700:	02000000 	andeq	r0, r0, #0
    2704:	09dc0801 	ldmibeq	ip, {r0, fp}^
    2708:	04020000 	streq	r0, [r2], #-0
    270c:	00093107 	andeq	r3, r9, r7, lsl #2
    2710:	00400400 	subeq	r0, r0, r0, lsl #8
    2714:	00680000 	rsbeq	r0, r8, r0
    2718:	51050000 	mrspl	r0, (UNDEF: 5)
    271c:	11000000 	mrsne	r0, (UNDEF: 0)
    2720:	12630600 	rsbne	r0, r3, #0, 12
    2724:	16010000 	strne	r0, [r1], -r0
    2728:	00000079 	andeq	r0, r0, r9, ror r0
    272c:	26fb0305 	ldrbtcs	r0, [fp], r5, lsl #6
    2730:	58070800 	stmdapl	r7, {fp}
    2734:	04000000 	streq	r0, [r0], #-0
    2738:	00000040 	andeq	r0, r0, r0, asr #32
    273c:	0000008e 	andeq	r0, r0, lr, lsl #1
    2740:	00005105 	andeq	r5, r0, r5, lsl #2
    2744:	06004200 	streq	r4, [r0], -r0, lsl #4
    2748:	000012c2 	andeq	r1, r0, r2, asr #5
    274c:	009f3001 	addseq	r3, pc, r1
    2750:	03050000 	movweq	r0, #20480	; 0x5000
    2754:	080026b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, sp}
    2758:	00007e07 	andeq	r7, r0, r7, lsl #28
    275c:	00400400 	subeq	r0, r0, r0, lsl #8
    2760:	00b40000 	adcseq	r0, r4, r0
    2764:	51050000 	mrspl	r0, (UNDEF: 5)
    2768:	03000000 	movweq	r0, #0
    276c:	12850600 	addne	r0, r5, #0, 12
    2770:	83010000 	movwhi	r0, #4096	; 0x1000
    2774:	000000c5 	andeq	r0, r0, r5, asr #1
    2778:	26b40305 	ldrtcs	r0, [r4], r5, lsl #6
    277c:	a4070800 	strge	r0, [r7], #-2048	; 0x800
    2780:	06000000 	streq	r0, [r0], -r0
    2784:	00001245 	andeq	r1, r0, r5, asr #4
    2788:	00db8b01 	sbcseq	r8, fp, r1, lsl #22
    278c:	03050000 	movweq	r0, #20480	; 0x5000
    2790:	080026a2 	stmdaeq	r0, {r1, r5, r7, r9, sl, sp}
    2794:	00005807 	andeq	r5, r0, r7, lsl #16
    2798:	00400400 	subeq	r0, r0, r0, lsl #8
    279c:	00f00000 	rscseq	r0, r0, r0
    27a0:	51050000 	mrspl	r0, (UNDEF: 5)
    27a4:	31000000 	mrscc	r0, (UNDEF: 0)
    27a8:	12a30600 	adcne	r0, r3, #0, 12
    27ac:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    27b0:	00000101 	andeq	r0, r0, r1, lsl #2
    27b4:	26700305 	ldrbtcs	r0, [r0], -r5, lsl #6
    27b8:	e0070800 	and	r0, r7, r0, lsl #16
    27bc:	04000000 	streq	r0, [r0], #-0
    27c0:	00000040 	andeq	r0, r0, r0, asr #32
    27c4:	00000116 	andeq	r0, r0, r6, lsl r1
    27c8:	00005105 	andeq	r5, r0, r5, lsl #2
    27cc:	06001900 	streq	r1, [r0], -r0, lsl #18
    27d0:	000012e4 	andeq	r1, r0, r4, ror #5
    27d4:	0106b801 	tsteq	r6, r1, lsl #16
    27d8:	03050000 	movweq	r0, #20480	; 0x5000
    27dc:	20000001 	andcs	r0, r0, r1
    27e0:	00038600 	andeq	r8, r3, r0, lsl #12
    27e4:	0f000400 	svceq	0x00000400
    27e8:	04000006 	streq	r0, [r0], #-6
    27ec:	0002f401 	andeq	pc, r2, r1, lsl #8
    27f0:	13130100 	tstne	r3, #0, 2
    27f4:	03ec0000 	mvneq	r0, #0
    27f8:	03480000 	movteq	r0, #32768	; 0x8000
    27fc:	00000000 	andeq	r0, r0, r0
    2800:	0ac30000 	beq	ff0c2808 <SCS_BASE+0x1f0b4808>
    2804:	04020000 	streq	r0, [r2], #-0
    2808:	00082d05 	andeq	r2, r8, r5, lsl #26
    280c:	05020200 	streq	r0, [r2, #-512]	; 0x200
    2810:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2814:	de060102 	adfles	f0, f6, f2
    2818:	03000009 	movweq	r0, #9
    281c:	00323375 	eorseq	r3, r2, r5, ror r3
    2820:	00452702 	subeq	r2, r5, r2, lsl #14
    2824:	04020000 	streq	r0, [r2], #-0
    2828:	00093a07 	andeq	r3, r9, r7, lsl #20
    282c:	31750300 	cmncc	r5, r0, lsl #6
    2830:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    2834:	00000057 	andeq	r0, r0, r7, asr r0
    2838:	d7070202 	strle	r0, [r7, -r2, lsl #4]
    283c:	0300000b 	movweq	r0, #11
    2840:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    2844:	00006829 	andeq	r6, r0, r9, lsr #16
    2848:	08010200 	stmdaeq	r1, {r9}
    284c:	000009dc 	ldrdeq	r0, [r0], -ip
    2850:	00045904 	andeq	r5, r4, r4, lsl #18
    2854:	7a2f0200 	bvc	bc305c <__Stack_Size+0xbc2c5c>
    2858:	05000000 	streq	r0, [r0, #-0]
    285c:	00000045 	andeq	r0, r0, r5, asr #32
    2860:	3a020106 	bcc	82c80 <__Stack_Size+0x82880>
    2864:	00000094 	muleq	r0, r4, r0
    2868:	00087507 	andeq	r7, r8, r7, lsl #10
    286c:	1b070000 	blne	1c2874 <__Stack_Size+0x1c2474>
    2870:	01000002 	tsteq	r0, r2
    2874:	06030400 	streq	r0, [r3], -r0, lsl #8
    2878:	3a020000 	bcc	82880 <__Stack_Size+0x82480>
    287c:	0000007f 	andeq	r0, r0, pc, ror r0
    2880:	31070402 	tstcc	r7, r2, lsl #8
    2884:	06000009 	streq	r0, [r0], -r9
    2888:	cd1c0301 	ldcgt	3, cr0, [ip, #-4]
    288c:	07000000 	streq	r0, [r0, -r0]
    2890:	0000046c 	andeq	r0, r0, ip, ror #8
    2894:	083b0701 	ldmdaeq	fp!, {r0, r8, r9, sl}
    2898:	07020000 	streq	r0, [r2, -r0]
    289c:	000000c4 	andeq	r0, r0, r4, asr #1
    28a0:	04f60703 	ldrbteq	r0, [r6], #1795	; 0x703
    28a4:	07040000 	streq	r0, [r4, -r0]
    28a8:	0000040e 	andeq	r0, r0, lr, lsl #8
    28ac:	58040005 	stmdapl	r4, {r0, r2}
    28b0:	03000007 	movweq	r0, #7
    28b4:	0000a622 	andeq	sl, r0, r2, lsr #12
    28b8:	5e040800 	cdppl	8, 0, cr0, cr4, cr0, {0}
    28bc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    28c0:	00000a26 	andeq	r0, r0, r6, lsr #20
    28c4:	0f300501 	svceq	0x00300501
    28c8:	07000001 	streq	r0, [r0, -r1]
    28cc:	00000a68 	andeq	r0, r0, r8, ror #20
    28d0:	0bea0700 	bleq	ffa844d8 <SCS_BASE+0x1fa764d8>
    28d4:	07010000 	streq	r0, [r1, -r0]
    28d8:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    28dc:	0c2a0702 	stceq	7, cr0, [sl], #-8
    28e0:	07030000 	streq	r0, [r3, -r0]
    28e4:	000004b9 			; <UNDEFINED> instruction: 0x000004b9
    28e8:	09c00704 	stmibeq	r0, {r2, r8, r9, sl}^
    28ec:	00050000 	andeq	r0, r5, r0
    28f0:	0013630a 	andseq	r6, r3, sl, lsl #6
    28f4:	ec410100 	stfe	f0, [r1], {-0}
    28f8:	0c08000b 	stceq	0, cr0, [r8], {11}
    28fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2900:	133c0b9c 	teqne	ip, #156, 22	; 0x27000
    2904:	76010000 	strvc	r0, [r1], -r0
    2908:	00000094 	muleq	r0, r4, r0
    290c:	08000bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp}
    2910:	00000104 	andeq	r0, r0, r4, lsl #2
    2914:	01b79c01 			; <UNDEFINED> instruction: 0x01b79c01
    2918:	eb0c0000 	bl	302920 <__Stack_Size+0x302520>
    291c:	01000002 	tsteq	r0, r2
    2920:	0000d876 	andeq	sp, r0, r6, ror r8
    2924:	00071f00 	andeq	r1, r7, r0, lsl #30
    2928:	3c760c00 	ldclcc	12, cr0, [r6], #-0
    292c:	76010000 	strvc	r0, [r1], -r0
    2930:	0000004c 	andeq	r0, r0, ip, asr #32
    2934:	0000074b 	andeq	r0, r0, fp, asr #14
    2938:	00131e0d 	andseq	r1, r3, sp, lsl #28
    293c:	4c780100 	ldfmie	f0, [r8], #-0
    2940:	6c000000 	stcvs	0, cr0, [r0], {-0}
    2944:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    2948:	00001398 	muleq	r0, r8, r3
    294c:	005e7901 	subseq	r7, lr, r1, lsl #18
    2950:	07960000 	ldreq	r0, [r6, r0]
    2954:	790e0000 	stmdbvc	lr, {}	; <UNPREDICTABLE>
    2958:	01000003 	tsteq	r0, r3
    295c:	0001b77a 	andeq	fp, r1, sl, ror r7
    2960:	57910200 	ldrpl	r0, [r1, r0, lsl #4]
    2964:	0003280f 	andeq	r2, r3, pc, lsl #16
    2968:	355b0d00 	ldrbcc	r0, [fp, #-3328]	; 0xd00
    296c:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    2970:	0000003a 	andeq	r0, r0, sl, lsr r0
    2974:	000007b5 			; <UNDEFINED> instruction: 0x000007b5
    2978:	000c5210 	andeq	r5, ip, r0, lsl r2
    297c:	00031808 	andeq	r1, r3, r8, lsl #16
    2980:	0001ac00 	andeq	sl, r1, r0, lsl #24
    2984:	51011100 	mrspl	r1, (UNDEF: 17)
    2988:	06007d03 	streq	r7, [r0], -r3, lsl #26
    298c:	0c741200 	lfmeq	f1, 2, [r4], #-0
    2990:	03320800 	teqeq	r2, #0, 16
    2994:	00000000 	andeq	r0, r0, r0
    2998:	0000cd05 	andeq	ip, r0, r5, lsl #26
    299c:	13021300 	movwne	r1, #8960	; 0x2300
    29a0:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    29a4:	08000cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp}
    29a8:	0000005c 	andeq	r0, r0, ip, asr r0
    29ac:	02359c01 	eorseq	r9, r5, #256	; 0x100
    29b0:	16140000 	ldrne	r0, [r4], -r0
    29b4:	0e08000d 	cdpeq	0, 0, cr0, cr8, cr13, {0}
    29b8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    29bc:	15000002 	strne	r0, [r0, #-2]
    29c0:	00000734 	andeq	r0, r0, r4, lsr r7
    29c4:	02356701 	eorseq	r6, r5, #262144	; 0x40000
    29c8:	01ef0000 	mvneq	r0, r0
    29cc:	00160000 	andseq	r0, r6, r0
    29d0:	000d1a12 	andeq	r1, sp, r2, lsl sl
    29d4:	00035008 	andeq	r5, r3, r8
    29d8:	0d241700 	stceq	7, cr1, [r4, #-0]
    29dc:	01200800 	teqeq	r0, r0, lsl #16
    29e0:	01110000 	tsteq	r1, r0
    29e4:	00740250 	rsbseq	r0, r4, r0, asr r2
    29e8:	06100000 	ldreq	r0, [r0], -r0
    29ec:	6108000d 	tstvs	r8, sp
    29f0:	25000003 	strcs	r0, [r0, #-3]
    29f4:	11000002 	tstne	r0, r2
    29f8:	03055101 	movweq	r5, #20737	; 0x5101
    29fc:	200006a5 	andcs	r0, r0, r5, lsr #13
    2a00:	01500111 	cmpeq	r0, r1, lsl r1
    2a04:	44180033 	ldrmi	r0, [r8], #-51	; 0x33
    2a08:	7b08000d 	blvc	202a44 <__Stack_Size+0x202644>
    2a0c:	11000003 	tstne	r0, r3
    2a10:	33015001 	movwcc	r5, #4097	; 0x1001
    2a14:	04190000 	ldreq	r0, [r9], #-0
    2a18:	746e6905 	strbtvc	r6, [lr], #-2309	; 0x905
    2a1c:	13731300 	cmnne	r3, #0, 6
    2a20:	bd010000 	stclt	0, cr0, [r1, #-0]
    2a24:	00000000 	andeq	r0, r0, r0
    2a28:	00000020 	andeq	r0, r0, r0, lsr #32
    2a2c:	02639c01 	rsbeq	r9, r3, #256	; 0x100
    2a30:	800e0000 	andhi	r0, lr, r0
    2a34:	01000013 	tsteq	r0, r3, lsl r0
    2a38:	00003ac0 	andeq	r3, r0, r0, asr #21
    2a3c:	14030500 	strne	r0, [r3], #-1280	; 0x500
    2a40:	00200001 	eoreq	r0, r0, r1
    2a44:	00005e1a 	andeq	r5, r0, sl, lsl lr
    2a48:	00027300 	andeq	r7, r2, r0, lsl #6
    2a4c:	009f1b00 	addseq	r1, pc, r0, lsl #22
    2a50:	003f0000 	eorseq	r0, pc, r0
    2a54:	000b461c 	andeq	r4, fp, ip, lsl r6
    2a58:	63210100 	teqvs	r1, #0, 2
    2a5c:	05000002 	streq	r0, [r0, #-2]
    2a60:	0006a503 	andeq	sl, r6, r3, lsl #10
    2a64:	005e1a20 	subseq	r1, lr, r0, lsr #20
    2a68:	028f0000 	addeq	r0, pc, #0
    2a6c:	001d0000 	andseq	r0, sp, r0
    2a70:	0000291e 	andeq	r2, r0, lr, lsl r9
    2a74:	9a240100 	bls	902e7c <__Stack_Size+0x902a7c>
    2a78:	05000002 	streq	r0, [r0, #-2]
    2a7c:	00000284 	andeq	r0, r0, r4, lsl #5
    2a80:	0003dc1e 	andeq	sp, r3, lr, lsl ip
    2a84:	aa250100 	bge	942e8c <__Stack_Size+0x942a8c>
    2a88:	05000002 	streq	r0, [r0, #-2]
    2a8c:	0000004c 	andeq	r0, r0, ip, asr #32
    2a90:	0002961e 	andeq	r9, r2, lr, lsl r6
    2a94:	6f270100 	svcvs	0x00270100
    2a98:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    2a9c:	00000b98 	muleq	r0, r8, fp
    2aa0:	006f2701 	rsbeq	r2, pc, r1, lsl #14
    2aa4:	201e0000 	andscs	r0, lr, r0
    2aa8:	01000001 	tsteq	r0, r1
    2aac:	00006f27 	andeq	r6, r0, r7, lsr #30
    2ab0:	04d91e00 	ldrbeq	r1, [r9], #3584	; 0xe00
    2ab4:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    2ab8:	0000005e 	andeq	r0, r0, lr, asr r0
    2abc:	0006421e 	andeq	r4, r6, lr, lsl r2
    2ac0:	94290100 	strtls	r0, [r9], #-256	; 0x100
    2ac4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    2ac8:	000003ad 	andeq	r0, r0, sp, lsr #7
    2acc:	02f12a01 	rscseq	r2, r1, #4096	; 0x1000
    2ad0:	3a050000 	bcc	142ad8 <__Stack_Size+0x1426d8>
    2ad4:	1c000000 	stcne	0, cr0, [r0], {-0}
    2ad8:	00001349 	andeq	r1, r0, r9, asr #6
    2adc:	005e3801 	subseq	r3, lr, r1, lsl #16
    2ae0:	03050000 	movweq	r0, #20480	; 0x5000
    2ae4:	20000110 	andcs	r0, r0, r0, lsl r1
    2ae8:	0008f81c 	andeq	pc, r8, ip, lsl r8	; <UNPREDICTABLE>
    2aec:	aa580100 	bge	1602ef4 <__Stack_Size+0x1602af4>
    2af0:	05000002 	streq	r0, [r0, #-2]
    2af4:	00011203 	andeq	r1, r1, r3, lsl #4
    2af8:	132a1f20 	teqne	sl, #32, 30	; 0x80
    2afc:	bd030000 	stclt	0, cr0, [r3, #-0]
    2b00:	000000cd 	andeq	r0, r0, sp, asr #1
    2b04:	00000332 	andeq	r0, r0, r2, lsr r3
    2b08:	00003a20 	andeq	r3, r0, r0, lsr #20
    2b0c:	003a2000 	eorseq	r2, sl, r0
    2b10:	21000000 	mrscs	r0, (UNDEF: 0)
    2b14:	0000098b 	andeq	r0, r0, fp, lsl #19
    2b18:	03433301 	movteq	r3, #13057	; 0x3301
    2b1c:	43200000 	teqmi	r0, #0
    2b20:	00000003 	andeq	r0, r0, r3
    2b24:	03490408 	movteq	r0, #37896	; 0x9408
    2b28:	01020000 	mrseq	r0, (UNDEF: 2)
    2b2c:	0009e508 	andeq	lr, r9, r8, lsl #10
    2b30:	07341500 	ldreq	r1, [r4, -r0, lsl #10]!
    2b34:	67010000 	strvs	r0, [r1, -r0]
    2b38:	00000235 	andeq	r0, r0, r5, lsr r2
    2b3c:	00000361 	andeq	r0, r0, r1, ror #6
    2b40:	561f0016 			; <UNDEFINED> instruction: 0x561f0016
    2b44:	04000013 	streq	r0, [r0], #-19
    2b48:	00003a1e 	andeq	r3, r0, lr, lsl sl
    2b4c:	00037b00 	andeq	r7, r3, r0, lsl #22
    2b50:	005e2000 	subseq	r2, lr, r0
    2b54:	d8200000 	stmdale	r0!, {}	; <UNPREDICTABLE>
    2b58:	00000000 	andeq	r0, r0, r0
    2b5c:	00138b22 	andseq	r8, r3, r2, lsr #22
    2b60:	02720600 	rsbseq	r0, r2, #0, 12
    2b64:	00005e20 	andeq	r5, r0, r0, lsr #28
    2b68:	22000000 	andcs	r0, r0, #0
    2b6c:	04000002 	streq	r0, [r0], #-2
    2b70:	0007e300 	andeq	lr, r7, r0, lsl #6
    2b74:	f4010400 	vst3.8	{d0-d2}, [r1], r0
    2b78:	01000002 	tsteq	r0, r2
    2b7c:	0000143e 	andeq	r1, r0, lr, lsr r4
    2b80:	000003ec 	andeq	r0, r0, ip, ror #7
    2b84:	00000370 	andeq	r0, r0, r0, ror r3
    2b88:	00000000 	andeq	r0, r0, r0
    2b8c:	00000c28 	andeq	r0, r0, r8, lsr #24
    2b90:	2d050402 	cfstrscs	mvf0, [r5, #-8]
    2b94:	02000008 	andeq	r0, r0, #8
    2b98:	07ff0502 	ldrbeq	r0, [pc, r2, lsl #10]!
    2b9c:	01020000 	mrseq	r0, (UNDEF: 2)
    2ba0:	0009de06 	andeq	sp, r9, r6, lsl #28
    2ba4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2ba8:	0000093a 	andeq	r0, r0, sl, lsr r9
    2bac:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    2bb0:	4c280200 	sfmmi	f0, 4, [r8], #-0
    2bb4:	02000000 	andeq	r0, r0, #0
    2bb8:	0bd70702 	bleq	ff5c47c8 <SCS_BASE+0x1f5b67c8>
    2bbc:	75030000 	strvc	r0, [r3, #-0]
    2bc0:	29020038 	stmdbcs	r2, {r3, r4, r5}
    2bc4:	0000005d 	andeq	r0, r0, sp, asr r0
    2bc8:	dc080102 	stfles	f0, [r8], {2}
    2bcc:	02000009 	andeq	r0, r0, #9
    2bd0:	09310704 	ldmdbeq	r1!, {r2, r8, r9, sl}
    2bd4:	04040000 	streq	r0, [r4], #-0
    2bd8:	00000053 	andeq	r0, r0, r3, asr r0
    2bdc:	0013f305 	andseq	pc, r3, r5, lsl #6
    2be0:	30030100 	andcc	r0, r3, r0, lsl #2
    2be4:	00000096 	muleq	r0, r6, r0
    2be8:	00140706 	andseq	r0, r4, r6, lsl #14
    2bec:	9d060000 	stcls	0, cr0, [r6, #-0]
    2bf0:	01000014 	tsteq	r0, r4, lsl r0
    2bf4:	00143006 	andseq	r3, r4, r6
    2bf8:	8f060200 	svchi	0x00060200
    2bfc:	03000014 	movweq	r0, #20
    2c00:	13f40700 	mvnsne	r0, #0, 14
    2c04:	37030000 	strcc	r0, [r3, -r0]
    2c08:	00000071 	andeq	r0, r0, r1, ror r0
    2c0c:	00006b08 	andeq	r6, r0, r8, lsl #22
    2c10:	0000b000 	andeq	fp, r0, r0
    2c14:	00410900 	subeq	r0, r1, r0, lsl #18
    2c18:	04000000 	streq	r0, [r0], #-0
    2c1c:	0000a104 	andeq	sl, r0, r4, lsl #2
    2c20:	13a60a00 			; <UNDEFINED> instruction: 0x13a60a00
    2c24:	03300000 	teqeq	r0, #0
    2c28:	0001537f 	andeq	r5, r1, pc, ror r3
    2c2c:	29820b00 	stmibcs	r2, {r8, r9, fp}
    2c30:	81030000 	mrshi	r0, (UNDEF: 3)
    2c34:	00000154 	andeq	r0, r0, r4, asr r1
    2c38:	16d30b00 	ldrbne	r0, [r3], r0, lsl #22
    2c3c:	82030000 	andhi	r0, r3, #0
    2c40:	00000154 	andeq	r0, r0, r4, asr r1
    2c44:	14760b04 	ldrbtne	r0, [r6], #-2820	; 0xb04
    2c48:	85030000 	strhi	r0, [r3, #-0]
    2c4c:	00000154 	andeq	r0, r0, r4, asr r1
    2c50:	14130b08 	ldrne	r0, [r3], #-2824	; 0xb08
    2c54:	86030000 	strhi	r0, [r3], -r0
    2c58:	00000154 	andeq	r0, r0, r4, asr r1
    2c5c:	14490b0c 	strbne	r0, [r9], #-2828	; 0xb0c
    2c60:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    2c64:	00000169 	andeq	r0, r0, r9, ror #2
    2c68:	13ca0b10 	bicne	r0, sl, #16, 22	; 0x4000
    2c6c:	a3030000 	movwge	r0, #12288	; 0x3000
    2c70:	00000169 	andeq	r0, r0, r9, ror #2
    2c74:	145a0b14 	ldrbne	r0, [sl], #-2836	; 0xb14
    2c78:	ad030000 	stcge	0, cr0, [r3, #-0]
    2c7c:	00000183 	andeq	r0, r0, r3, lsl #3
    2c80:	169f0b18 			; <UNDEFINED> instruction: 0x169f0b18
    2c84:	af030000 	svcge	0x00030000
    2c88:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2c8c:	19e20b1c 	stmibne	r2!, {r2, r3, r4, r8, r9, fp}^
    2c90:	b0030000 	andlt	r0, r3, r0
    2c94:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2c98:	18e00b20 	stmiane	r0!, {r5, r8, r9, fp}^
    2c9c:	b1030000 	mrslt	r0, (UNDEF: 3)
    2ca0:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2ca4:	13b30b24 			; <UNDEFINED> instruction: 0x13b30b24
    2ca8:	b5030000 	strlt	r0, [r3, #-0]
    2cac:	00000189 	andeq	r0, r0, r9, lsl #3
    2cb0:	374a0b28 	strbcc	r0, [sl, -r8, lsr #22]
    2cb4:	b7030000 	strlt	r0, [r3, -r0]
    2cb8:	00000053 	andeq	r0, r0, r3, asr r0
    2cbc:	040c002c 	streq	r0, [ip], #-44	; 0x2c
    2cc0:	00015304 	andeq	r5, r1, r4, lsl #6
    2cc4:	00960800 	addseq	r0, r6, r0, lsl #16
    2cc8:	01690000 	cmneq	r9, r0
    2ccc:	53090000 	movwpl	r0, #36864	; 0x9000
    2cd0:	00000000 	andeq	r0, r0, r0
    2cd4:	015a0404 	cmpeq	sl, r4, lsl #8
    2cd8:	96080000 	strls	r0, [r8], -r0
    2cdc:	83000000 	movwhi	r0, #0
    2ce0:	09000001 	stmdbeq	r0, {r0}
    2ce4:	00000053 	andeq	r0, r0, r3, asr r0
    2ce8:	00005309 	andeq	r5, r0, r9, lsl #6
    2cec:	04040000 	streq	r0, [r4], #-0
    2cf0:	0000016f 	andeq	r0, r0, pc, ror #2
    2cf4:	a707040d 	strge	r0, [r7, -sp, lsl #8]
    2cf8:	03000013 	movweq	r0, #19
    2cfc:	0000b6b9 			; <UNDEFINED> instruction: 0x0000b6b9
    2d00:	10370e00 	eorsne	r0, r7, r0, lsl #28
    2d04:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    2d08:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
    2d0c:	0000006c 	andeq	r0, r0, ip, rrx
    2d10:	01b59c01 			; <UNDEFINED> instruction: 0x01b59c01
    2d14:	860f0000 	strhi	r0, [pc], -r0
    2d18:	1e08000d 	cdpne	0, 0, cr0, cr8, cr13, {0}
    2d1c:	00000002 	andeq	r0, r0, r2
    2d20:	0013ed10 	andseq	lr, r3, r0, lsl sp
    2d24:	c61a0100 	ldrgt	r0, [sl], -r0, lsl #2
    2d28:	05000001 	streq	r0, [r0, #-1]
    2d2c:	0006e603 	andeq	lr, r6, r3, lsl #12
    2d30:	00411120 	subeq	r1, r1, r0, lsr #2
    2d34:	dd120000 	ldcle	0, cr0, [r2, #-0]
    2d38:	03000013 	movweq	r0, #19
    2d3c:	00018bee 	andeq	r8, r1, lr, ror #23
    2d40:	13fb1000 	mvnsne	r1, #0
    2d44:	1b010000 	blne	42d4c <__Stack_Size+0x4294c>
    2d48:	000001e7 	andeq	r0, r0, r7, ror #3
    2d4c:	01180305 	tsteq	r8, r5, lsl #6
    2d50:	53112000 	tstpl	r1, #0
    2d54:	13000000 	movwne	r0, #0
    2d58:	00000154 	andeq	r0, r0, r4, asr r1
    2d5c:	000001fc 	strdeq	r0, [r0], -ip
    2d60:	00006414 	andeq	r6, r0, r4, lsl r4
    2d64:	10000600 	andne	r0, r0, r0, lsl #12
    2d68:	00001426 	andeq	r1, r0, r6, lsr #8
    2d6c:	01ec2501 	mvneq	r2, r1, lsl #10
    2d70:	03050000 	movweq	r0, #20480	; 0x5000
    2d74:	20000038 	andcs	r0, r0, r8, lsr r0
    2d78:	0013bf10 	andseq	fp, r3, r0, lsl pc
    2d7c:	ec300100 	ldfs	f0, [r0], #-0
    2d80:	05000001 	streq	r0, [r0, #-1]
    2d84:	00001c03 	andeq	r1, r0, r3, lsl #24
    2d88:	14881520 	strne	r1, [r8], #1312	; 0x520
    2d8c:	1a040000 	bne	102d94 <__Stack_Size+0x102994>
    2d90:	000b5500 	andeq	r5, fp, r0, lsl #10
    2d94:	ec000400 	cfstrs	mvf0, [r0], {-0}
    2d98:	04000008 	streq	r0, [r0], #-8
    2d9c:	0002f401 	andeq	pc, r2, r1, lsl #8
    2da0:	15450100 	strbne	r0, [r5, #-256]	; 0x100
    2da4:	03ec0000 	mvneq	r0, #0
    2da8:	03800000 	orreq	r0, r0, #0
    2dac:	00000000 	andeq	r0, r0, r0
    2db0:	0cba0000 	ldceq	0, cr0, [sl]
    2db4:	04020000 	streq	r0, [r2], #-0
    2db8:	00082d05 	andeq	r2, r8, r5, lsl #26
    2dbc:	05020200 	streq	r0, [r2, #-512]	; 0x200
    2dc0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2dc4:	de060102 	adfles	f0, f6, f2
    2dc8:	03000009 	movweq	r0, #9
    2dcc:	00323375 	eorseq	r3, r2, r5, ror r3
    2dd0:	00452702 	subeq	r2, r5, r2, lsl #14
    2dd4:	04020000 	streq	r0, [r2], #-0
    2dd8:	00093a07 	andeq	r3, r9, r7, lsl #20
    2ddc:	31750300 	cmncc	r5, r0, lsl #6
    2de0:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    2de4:	00000057 	andeq	r0, r0, r7, asr r0
    2de8:	d7070202 	strle	r0, [r7, -r2, lsl #4]
    2dec:	0300000b 	movweq	r0, #11
    2df0:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    2df4:	00006829 	andeq	r6, r0, r9, lsr #16
    2df8:	08010200 	stmdaeq	r1, {r9}
    2dfc:	000009dc 	ldrdeq	r0, [r0], -ip
    2e00:	31070402 	tstcc	r7, r2, lsl #8
    2e04:	04000009 	streq	r0, [r0], #-9
    2e08:	00001607 	andeq	r1, r0, r7, lsl #12
    2e0c:	9b160401 	blls	583e18 <__Stack_Size+0x583a18>
    2e10:	05000000 	streq	r0, [r0, #-0]
    2e14:	00001785 	andeq	r1, r0, r5, lsl #15
    2e18:	18a00500 	stmiane	r0!, {r8, sl}
    2e1c:	05010000 	streq	r0, [r1, #-0]
    2e20:	00001592 	muleq	r0, r2, r5
    2e24:	19f60502 	ldmibne	r6!, {r1, r8, sl}^
    2e28:	00030000 	andeq	r0, r3, r0
    2e2c:	0014df06 	andseq	sp, r4, r6, lsl #30
    2e30:	27030800 	strcs	r0, [r3, -r0, lsl #16]
    2e34:	000000c0 	andeq	r0, r0, r0, asr #1
    2e38:	00174e07 	andseq	r4, r7, r7, lsl #28
    2e3c:	c0290300 	eorgt	r0, r9, r0, lsl #6
    2e40:	00000000 	andeq	r0, r0, r0
    2e44:	0016d907 	andseq	sp, r6, r7, lsl #18
    2e48:	4c2a0300 	stcmi	3, cr0, [sl], #-0
    2e4c:	04000000 	streq	r0, [r0], #-0
    2e50:	5e040800 	cdppl	8, 0, cr0, cr4, cr0, {0}
    2e54:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2e58:	000017d0 	ldrdeq	r1, [r0], -r0
    2e5c:	009b2c03 	addseq	r2, fp, r3, lsl #24
    2e60:	cf090000 	svcgt	0x00090000
    2e64:	03000017 	movweq	r0, #23
    2e68:	0000dc2c 	andeq	sp, r0, ip, lsr #24
    2e6c:	9b040800 	blls	104e74 <__Stack_Size+0x104a74>
    2e70:	04000000 	streq	r0, [r0], #-0
    2e74:	000013f3 	strdeq	r1, [r0], -r3
    2e78:	07300301 	ldreq	r0, [r0, -r1, lsl #6]!
    2e7c:	05000001 	streq	r0, [r0, #-1]
    2e80:	00001407 	andeq	r1, r0, r7, lsl #8
    2e84:	149d0500 	ldrne	r0, [sp], #1280	; 0x500
    2e88:	05010000 	streq	r0, [r1, #-0]
    2e8c:	00001430 	andeq	r1, r0, r0, lsr r4
    2e90:	148f0502 	strne	r0, [pc], #1282	; 2e98 <__Stack_Size+0x2a98>
    2e94:	00030000 	andeq	r0, r3, r0
    2e98:	0013f409 	andseq	pc, r3, r9, lsl #8
    2e9c:	e2370300 	eors	r0, r7, #0, 6
    2ea0:	06000000 	streq	r0, [r0], -r0
    2ea4:	00001845 	andeq	r1, r0, r5, asr #16
    2ea8:	4f3b030c 	svcmi	0x003b030c
    2eac:	07000001 	streq	r0, [r0, -r1]
    2eb0:	000015bb 			; <UNDEFINED> instruction: 0x000015bb
    2eb4:	004c5303 	subeq	r5, ip, r3, lsl #6
    2eb8:	07000000 	streq	r0, [r0, -r0]
    2ebc:	00001991 	muleq	r0, r1, r9
    2ec0:	004c5403 	subeq	r5, ip, r3, lsl #8
    2ec4:	07020000 	streq	r0, [r2, -r0]
    2ec8:	0000374d 	andeq	r3, r0, sp, asr #14
    2ecc:	004c5503 	subeq	r5, ip, r3, lsl #10
    2ed0:	07040000 	streq	r0, [r4, -r0]
    2ed4:	000018b4 			; <UNDEFINED> instruction: 0x000018b4
    2ed8:	015e5603 	cmpeq	lr, r3, lsl #12
    2edc:	00080000 	andeq	r0, r8, r0
    2ee0:	0000c00a 	andeq	ip, r0, sl
    2ee4:	00015e00 	andeq	r5, r1, r0, lsl #28
    2ee8:	004c0b00 	subeq	r0, ip, r0, lsl #22
    2eec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2ef0:	00014f04 	andeq	r4, r1, r4, lsl #30
    2ef4:	18460900 	stmdane	r6, {r8, fp}^
    2ef8:	57030000 	strpl	r0, [r3, -r0]
    2efc:	00000112 	andeq	r0, r0, r2, lsl r1
    2f00:	00188b06 	andseq	r8, r8, r6, lsl #22
    2f04:	5b030200 	blpl	c370c <__Stack_Size+0xc330c>
    2f08:	00000194 	muleq	r0, r4, r1
    2f0c:	0016b307 	andseq	fp, r6, r7, lsl #6
    2f10:	5e5d0300 	cdppl	3, 5, cr0, cr13, cr0, {0}
    2f14:	00000000 	andeq	r0, r0, r0
    2f18:	0017df07 	andseq	sp, r7, r7, lsl #30
    2f1c:	5e5e0300 	cdppl	3, 5, cr0, cr14, cr0, {0}
    2f20:	01000000 	mrseq	r0, (UNDEF: 0)
    2f24:	188c0900 	stmne	ip, {r8, fp}
    2f28:	60030000 	andvs	r0, r3, r0
    2f2c:	0000016f 	andeq	r0, r0, pc, ror #2
    2f30:	0057420c 	subseq	r4, r7, ip, lsl #4
    2f34:	c3650302 	cmngt	r5, #134217728	; 0x8000000
    2f38:	0d000001 	stceq	0, cr0, [r0, #-4]
    2f3c:	00316262 	eorseq	r6, r1, r2, ror #4
    2f40:	005e6703 	subseq	r6, lr, r3, lsl #14
    2f44:	0d000000 	stceq	0, cr0, [r0, #-0]
    2f48:	00306262 	eorseq	r6, r0, r2, ror #4
    2f4c:	005e6803 	subseq	r6, lr, r3, lsl #16
    2f50:	00010000 	andeq	r0, r1, r0
    2f54:	6203020e 	andvs	r0, r3, #-536870912	; 0xe0000000
    2f58:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2f5c:	0300770f 	movweq	r7, #1807	; 0x70f
    2f60:	00004c64 	andeq	r4, r0, r4, ror #24
    2f64:	77620f00 	strbvc	r0, [r2, -r0, lsl #30]!
    2f68:	9f6a0300 	svcls	0x006a0300
    2f6c:	00000001 	andeq	r0, r0, r1
    2f70:	001a0609 	andseq	r0, sl, r9, lsl #12
    2f74:	c36b0300 	cmngt	fp, #0, 6
    2f78:	06000001 	streq	r0, [r0], -r1
    2f7c:	00001538 	andeq	r1, r0, r8, lsr r5
    2f80:	7b6d031c 	blvc	1b43bf8 <__Stack_Size+0x1b437f8>
    2f84:	07000002 	streq	r0, [r0, -r2]
    2f88:	000018f4 	strdeq	r1, [r0], -r4
    2f8c:	005e6f03 	subseq	r6, lr, r3, lsl #30
    2f90:	07000000 	streq	r0, [r0, -r0]
    2f94:	000014a7 	andeq	r1, r0, r7, lsr #9
    2f98:	005e7003 	subseq	r7, lr, r3
    2f9c:	07010000 	streq	r0, [r1, -r0]
    2fa0:	00001683 	andeq	r1, r0, r3, lsl #13
    2fa4:	01df7103 	bicseq	r7, pc, r3, lsl #2
    2fa8:	07020000 	streq	r0, [r2, -r0]
    2fac:	0000155e 	andeq	r1, r0, lr, asr r5
    2fb0:	01df7203 	bicseq	r7, pc, r3, lsl #4
    2fb4:	07040000 	streq	r0, [r4, -r0]
    2fb8:	00001763 	andeq	r1, r0, r3, ror #14
    2fbc:	01df7303 	bicseq	r7, pc, r3, lsl #6
    2fc0:	07060000 	streq	r0, [r6, -r0]
    2fc4:	00001893 	muleq	r0, r3, r8
    2fc8:	005e7503 	subseq	r7, lr, r3, lsl #10
    2fcc:	07080000 	streq	r0, [r8, -r0]
    2fd0:	00001981 	andeq	r1, r0, r1, lsl #19
    2fd4:	005e7603 	subseq	r7, lr, r3, lsl #12
    2fd8:	07090000 	streq	r0, [r9, -r0]
    2fdc:	0000176f 	andeq	r1, r0, pc, ror #14
    2fe0:	005e7703 	subseq	r7, lr, r3, lsl #14
    2fe4:	070a0000 	streq	r0, [sl, -r0]
    2fe8:	000017bd 			; <UNDEFINED> instruction: 0x000017bd
    2fec:	005e7803 	subseq	r7, lr, r3, lsl #16
    2ff0:	070b0000 	streq	r0, [fp, -r0]
    2ff4:	0000182c 	andeq	r1, r0, ip, lsr #16
    2ff8:	005e7903 	subseq	r7, lr, r3, lsl #18
    2ffc:	070c0000 	streq	r0, [ip, -r0]
    3000:	00001965 	andeq	r1, r0, r5, ror #18
    3004:	01647c03 	cmneq	r4, r3, lsl #24
    3008:	00100000 	andseq	r0, r0, r0
    300c:	00153909 	andseq	r3, r5, r9, lsl #18
    3010:	ea7d0300 	b	1f43c18 <__Stack_Size+0x1f43818>
    3014:	06000001 	streq	r0, [r0], -r1
    3018:	000013a6 	andeq	r1, r0, r6, lsr #7
    301c:	237f0330 	cmncs	pc, #48, 6	; 0xc0000000
    3020:	07000003 	streq	r0, [r0, -r3]
    3024:	00002982 	andeq	r2, r0, r2, lsl #19
    3028:	03248103 	teqeq	r4, #-1073741824	; 0xc0000000
    302c:	07000000 	streq	r0, [r0, -r0]
    3030:	000016d3 	ldrdeq	r1, [r0], -r3
    3034:	03248203 	teqeq	r4, #805306368	; 0x30000000
    3038:	07040000 	streq	r0, [r4, -r0]
    303c:	00001476 	andeq	r1, r0, r6, ror r4
    3040:	03248503 	teqeq	r4, #12582912	; 0xc00000
    3044:	07080000 	streq	r0, [r8, -r0]
    3048:	00001413 	andeq	r1, r0, r3, lsl r4
    304c:	03248603 	teqeq	r4, #3145728	; 0x300000
    3050:	070c0000 	streq	r0, [ip, -r0]
    3054:	00001449 	andeq	r1, r0, r9, asr #8
    3058:	03399803 	teqeq	r9, #196608	; 0x30000
    305c:	07100000 	ldreq	r0, [r0, -r0]
    3060:	000013ca 	andeq	r1, r0, sl, asr #7
    3064:	0339a303 	teqeq	r9, #201326592	; 0xc000000
    3068:	07140000 	ldreq	r0, [r4, -r0]
    306c:	0000145a 	andeq	r1, r0, sl, asr r4
    3070:	0353ad03 	cmpeq	r3, #3, 26	; 0xc0
    3074:	07180000 	ldreq	r0, [r8, -r0]
    3078:	0000169f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    307c:	015eaf03 	cmpeq	lr, r3, lsl #30
    3080:	071c0000 	ldreq	r0, [ip, -r0]
    3084:	000019e2 	andeq	r1, r0, r2, ror #19
    3088:	015eb003 	cmpeq	lr, r3
    308c:	07200000 	streq	r0, [r0, -r0]!
    3090:	000018e0 	andeq	r1, r0, r0, ror #17
    3094:	015eb103 	cmpeq	lr, r3, lsl #2
    3098:	07240000 	streq	r0, [r4, -r0]!
    309c:	000013b3 			; <UNDEFINED> instruction: 0x000013b3
    30a0:	0359b503 	cmpeq	r9, #12582912	; 0xc00000
    30a4:	07280000 	streq	r0, [r8, -r0]!
    30a8:	0000374a 	andeq	r3, r0, sl, asr #14
    30ac:	005eb703 	subseq	fp, lr, r3, lsl #14
    30b0:	002c0000 	eoreq	r0, ip, r0
    30b4:	23040810 	movwcs	r0, #18448	; 0x4810
    30b8:	0a000003 	beq	30cc <__Stack_Size+0x2ccc>
    30bc:	00000107 	andeq	r0, r0, r7, lsl #2
    30c0:	00000339 	andeq	r0, r0, r9, lsr r3
    30c4:	00005e0b 	andeq	r5, r0, fp, lsl #28
    30c8:	04080000 	streq	r0, [r8], #-0
    30cc:	0000032a 	andeq	r0, r0, sl, lsr #6
    30d0:	0001070a 	andeq	r0, r1, sl, lsl #14
    30d4:	00035300 	andeq	r5, r3, r0, lsl #6
    30d8:	005e0b00 	subseq	r0, lr, r0, lsl #22
    30dc:	5e0b0000 	cdppl	0, 0, cr0, cr11, cr0, {0}
    30e0:	00000000 	andeq	r0, r0, r0
    30e4:	033f0408 	teqeq	pc, #8, 8	; 0x8000000
    30e8:	04110000 	ldreq	r0, [r1], #-0
    30ec:	0013a709 	andseq	sl, r3, r9, lsl #14
    30f0:	86b90300 	ldrthi	r0, [r9], r0, lsl #6
    30f4:	06000002 	streq	r0, [r0], -r2
    30f8:	000014f9 	strdeq	r1, [r0], -r9
    30fc:	dfbb0324 	svcle	0x00bb0324
    3100:	07000003 	streq	r0, [r0, -r3]
    3104:	000017fb 	strdeq	r1, [r0], -fp
    3108:	0324bd03 	teqeq	r4, #3, 26	; 0xc0
    310c:	07000000 	streq	r0, [r0, -r0]
    3110:	000016f7 	strdeq	r1, [r0], -r7
    3114:	0324be03 	teqeq	r4, #3, 28	; 0x30
    3118:	07040000 	streq	r0, [r4, -r0]
    311c:	0000165b 	andeq	r1, r0, fp, asr r6
    3120:	0324bf03 	teqeq	r4, #3, 30
    3124:	07080000 	streq	r0, [r8, -r0]
    3128:	0000170d 	andeq	r1, r0, sp, lsl #14
    312c:	0324c003 	teqeq	r4, #3
    3130:	070c0000 	streq	r0, [ip, -r0]
    3134:	00001511 	andeq	r1, r0, r1, lsl r5
    3138:	0324c103 	teqeq	r4, #-1073741824	; 0xc0000000
    313c:	07100000 	ldreq	r0, [r0, -r0]
    3140:	000018bd 			; <UNDEFINED> instruction: 0x000018bd
    3144:	0324c203 	teqeq	r4, #805306368	; 0x30000000
    3148:	07140000 	ldreq	r0, [r4, -r0]
    314c:	0000199d 	muleq	r0, sp, r9
    3150:	0324c303 	teqeq	r4, #201326592	; 0xc000000
    3154:	07180000 	ldreq	r0, [r8, -r0]
    3158:	000015a5 	andeq	r1, r0, r5, lsr #11
    315c:	0324c403 	teqeq	r4, #50331648	; 0x3000000
    3160:	071c0000 	ldreq	r0, [ip, -r0]
    3164:	0000166d 	andeq	r1, r0, sp, ror #12
    3168:	0324c503 	teqeq	r4, #12582912	; 0xc00000
    316c:	00200000 	eoreq	r0, r0, r0
    3170:	0014fa09 	andseq	pc, r4, r9, lsl #20
    3174:	66c70300 	strbvs	r0, [r7], r0, lsl #6
    3178:	12000003 	andne	r0, r0, #3
    317c:	23160508 	tstcs	r6, #8, 10	; 0x2000000
    3180:	07000004 	streq	r0, [r0, -r4]
    3184:	000015e6 	andeq	r1, r0, r6, ror #11
    3188:	003a1805 	eorseq	r1, sl, r5, lsl #16
    318c:	07000000 	streq	r0, [r0, -r0]
    3190:	000014c0 	andeq	r1, r0, r0, asr #9
    3194:	005e1905 	subseq	r1, lr, r5, lsl #18
    3198:	07040000 	streq	r0, [r4, -r0]
    319c:	00001520 	andeq	r1, r0, r0, lsr #10
    31a0:	005e1a05 	subseq	r1, lr, r5, lsl #20
    31a4:	07050000 	streq	r0, [r5, -r0]
    31a8:	00001882 	andeq	r1, r0, r2, lsl #17
    31ac:	005e1b05 	subseq	r1, lr, r5, lsl #22
    31b0:	00060000 	andeq	r0, r6, r0
    31b4:	001a2309 	andseq	r2, sl, r9, lsl #6
    31b8:	ea1c0500 	b	7045c0 <__Stack_Size+0x7041c0>
    31bc:	04000003 	streq	r0, [r0], #-3
    31c0:	00000a26 	andeq	r0, r0, r6, lsr #20
    31c4:	5f300601 	svcpl	0x00300601
    31c8:	05000004 	streq	r0, [r0, #-4]
    31cc:	00000a68 	andeq	r0, r0, r8, ror #20
    31d0:	0bea0500 	bleq	ffa845d8 <SCS_BASE+0x1fa765d8>
    31d4:	05010000 	streq	r0, [r1, #-0]
    31d8:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    31dc:	0c2a0502 	cfstr32eq	mvfx0, [sl], #-8
    31e0:	05030000 	streq	r0, [r3, #-0]
    31e4:	000004b9 			; <UNDEFINED> instruction: 0x000004b9
    31e8:	09c00504 	stmibeq	r0, {r2, r8, sl}^
    31ec:	00050000 	andeq	r0, r5, r0
    31f0:	00185413 	andseq	r5, r8, r3, lsl r4
    31f4:	c4c90100 	strbgt	r0, [r9], #256	; 0x100
    31f8:	1808000d 	stmdane	r8, {r0, r2, r3}
    31fc:	01000000 	mrseq	r0, (UNDEF: 0)
    3200:	0004809c 	muleq	r4, ip, r0
    3204:	171f1400 	ldrne	r1, [pc, -r0, lsl #8]
    3208:	cb010000 	blgt	43210 <__Stack_Size+0x42e10>
    320c:	00000480 	andeq	r0, r0, r0, lsl #9
    3210:	7b040800 	blvc	105218 <__Stack_Size+0x104e18>
    3214:	15000002 	strne	r0, [r0, #-2]
    3218:	00001725 	andeq	r1, r0, r5, lsr #14
    321c:	0ddcdb01 	vldreq	d29, [ip, #4]
    3220:	000c0800 	andeq	r0, ip, r0, lsl #16
    3224:	9c010000 	stcls	0, cr0, [r1], {-0}
    3228:	00181115 	andseq	r1, r8, r5, lsl r1
    322c:	e8e80100 	stmia	r8!, {r8}^
    3230:	1408000d 	strne	r0, [r8], #-13
    3234:	01000000 	mrseq	r0, (UNDEF: 0)
    3238:	1905159c 	stmdbne	r5, {r2, r3, r4, r7, r8, sl, ip}
    323c:	fb010000 	blx	43246 <__Stack_Size+0x42e46>
    3240:	08000dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp}
    3244:	00000002 	andeq	r0, r0, r2
    3248:	b5169c01 	ldrlt	r9, [r6, #-3073]	; 0xc01
    324c:	01000019 	tsteq	r0, r9, lsl r0
    3250:	01070108 	tsteq	r7, r8, lsl #2
    3254:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    3258:	005c0800 	subseq	r0, ip, r0, lsl #16
    325c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3260:	00000500 	andeq	r0, r0, r0, lsl #10
    3264:	00175917 	andseq	r5, r7, r7, lsl r9
    3268:	01080100 	mrseq	r0, (UNDEF: 24)
    326c:	0000005e 	andeq	r0, r0, lr, asr r0
    3270:	000007d4 	ldrdeq	r0, [r0], -r4
    3274:	00187618 	andseq	r7, r8, r8, lsl r6
    3278:	010d0100 	mrseq	r0, (UNDEF: 29)
    327c:	0000015e 	andeq	r0, r0, lr, asr r1
    3280:	0000080e 	andeq	r0, r0, lr, lsl #16
    3284:	000e4619 	andeq	r4, lr, r9, lsl r6
    3288:	50011a08 	andpl	r1, r1, r8, lsl #20
    328c:	00007402 	andeq	r7, r0, r2, lsl #8
    3290:	15741600 	ldrbne	r1, [r4, #-1536]!	; 0x600
    3294:	34010000 	strcc	r0, [r1], #-0
    3298:	00010701 	andeq	r0, r1, r1, lsl #14
    329c:	000e5c00 	andeq	r5, lr, r0, lsl #24
    32a0:	00002408 	andeq	r2, r0, r8, lsl #8
    32a4:	2b9c0100 	blcs	fe7036ac <SCS_BASE+0x1e6f56ac>
    32a8:	17000005 	strne	r0, [r0, -r5]
    32ac:	00001759 	andeq	r1, r0, r9, asr r7
    32b0:	5e013401 	cdppl	4, 0, cr3, cr1, cr1, {0}
    32b4:	50000000 	andpl	r0, r0, r0
    32b8:	00000008 	andeq	r0, r0, r8
    32bc:	00193216 	andseq	r3, r9, r6, lsl r2
    32c0:	018e0100 	orreq	r0, lr, r0, lsl #2
    32c4:	00000107 	andeq	r0, r0, r7, lsl #2
    32c8:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
    32cc:	00000010 	andeq	r0, r0, r0, lsl r0
    32d0:	05649c01 	strbeq	r9, [r4, #-3073]!	; 0xc01
    32d4:	c5170000 	ldrgt	r0, [r7, #-0]
    32d8:	01000017 	tsteq	r0, r7, lsl r0
    32dc:	005e018e 	subseq	r0, lr, lr, lsl #3
    32e0:	088a0000 	stmeq	sl, {}	; <UNPREDICTABLE>
    32e4:	341b0000 	ldrcc	r0, [fp], #-0
    32e8:	01000018 	tsteq	r0, r8, lsl r0
    32ec:	005e018e 	subseq	r0, lr, lr, lsl #3
    32f0:	51010000 	mrspl	r0, (UNDEF: 1)
    32f4:	16321600 	ldrtne	r1, [r2], -r0, lsl #12
    32f8:	a3010000 	movwge	r0, #4096	; 0x1000
    32fc:	0000c001 	andeq	ip, r0, r1
    3300:	000e9000 	andeq	r9, lr, r0
    3304:	00001808 	andeq	r1, r0, r8, lsl #16
    3308:	8f9c0100 	svchi	0x009c0100
    330c:	17000005 	strne	r0, [r0, -r5]
    3310:	00003d39 	andeq	r3, r0, r9, lsr sp
    3314:	4c01a301 	stcmi	3, cr10, [r1], {1}
    3318:	c4000000 	strgt	r0, [r0], #-0
    331c:	00000008 	andeq	r0, r0, r8
    3320:	00179e16 	andseq	r9, r7, r6, lsl lr
    3324:	01c10100 	biceq	r0, r1, r0, lsl #2
    3328:	000000c0 	andeq	r0, r0, r0, asr #1
    332c:	08000ea8 	stmdaeq	r0, {r3, r5, r7, r9, sl, fp}
    3330:	0000002c 	andeq	r0, r0, ip, lsr #32
    3334:	05ba9c01 	ldreq	r9, [sl, #3073]!	; 0xc01
    3338:	39170000 	ldmdbcc	r7, {}	; <UNPREDICTABLE>
    333c:	0100003d 	tsteq	r0, sp, lsr r0
    3340:	004c01c1 	subeq	r0, ip, r1, asr #3
    3344:	08e50000 	stmiaeq	r5!, {}^	; <UNPREDICTABLE>
    3348:	13000000 	movwne	r0, #0
    334c:	00001a0d 	andeq	r1, r0, sp, lsl #20
    3350:	0ed46a01 	vfnmseq.f32	s13, s8, s2
    3354:	00240800 	eoreq	r0, r4, r0, lsl #16
    3358:	9c010000 	stcls	0, cr0, [r1], {-0}
    335c:	000005eb 	andeq	r0, r0, fp, ror #11
    3360:	000eda1c 	andeq	sp, lr, ip, lsl sl
    3364:	000a5408 	andeq	r5, sl, r8, lsl #8
    3368:	0ee61c00 	cdpeq	12, 14, cr1, cr6, cr0, {0}
    336c:	0a5b0800 	beq	16c5374 <__Stack_Size+0x16c4f74>
    3370:	ea1c0000 	b	703378 <__Stack_Size+0x702f78>
    3374:	6608000e 	strvs	r0, [r8], -lr
    3378:	0000000a 	andeq	r0, r0, sl
    337c:	0016c213 	andseq	ip, r6, r3, lsl r2
    3380:	f8840100 			; <UNDEFINED> instruction: 0xf8840100
    3384:	e008000e 	and	r0, r8, lr
    3388:	01000000 	mrseq	r0, (UNDEF: 0)
    338c:	0008129c 	muleq	r8, ip, r2
    3390:	0f101d00 	svceq	0x00101d00
    3394:	0a710800 	beq	1c4539c <__Stack_Size+0x1c44f9c>
    3398:	06140000 	ldreq	r0, [r4], -r0
    339c:	011a0000 	tsteq	sl, r0
    33a0:	00740250 	rsbseq	r0, r4, r0, asr r2
    33a4:	0f1a1d00 	svceq	0x001a1d00
    33a8:	0a830800 	beq	fe0c53b0 <SCS_BASE+0x1e0b73b0>
    33ac:	062f0000 	strteq	r0, [pc], -r0
    33b0:	011a0000 	tsteq	sl, r0
    33b4:	000a0351 	andeq	r0, sl, r1, asr r3
    33b8:	50011a02 	andpl	r1, r1, r2, lsl #20
    33bc:	00007402 	andeq	r7, r0, r2, lsl #8
    33c0:	000f221d 	andeq	r2, pc, sp, lsl r2	; <UNPREDICTABLE>
    33c4:	000a9a08 	andeq	r9, sl, r8, lsl #20
    33c8:	00064800 	andeq	r4, r6, r0, lsl #16
    33cc:	51011a00 	tstpl	r1, r0, lsl #20
    33d0:	011a4001 	tsteq	sl, r1
    33d4:	00740250 	rsbseq	r0, r4, r0, asr r2
    33d8:	0f2a1d00 	svceq	0x002a1d00
    33dc:	0ab10800 	beq	fec453e4 <SCS_BASE+0x1ec373e4>
    33e0:	06620000 	strbteq	r0, [r2], -r0
    33e4:	011a0000 	tsteq	sl, r0
    33e8:	40080251 	andmi	r0, r8, r1, asr r2
    33ec:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    33f0:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    33f4:	08000f32 	stmdaeq	r0, {r1, r4, r5, r8, r9, sl, fp}
    33f8:	00000ac8 	andeq	r0, r0, r8, asr #21
    33fc:	0000067c 	andeq	r0, r0, ip, ror r6
    3400:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    3404:	011a8008 	tsteq	sl, r8
    3408:	00740250 	rsbseq	r0, r4, r0, asr r2
    340c:	0f381d00 	svceq	0x00381d00
    3410:	0adf0800 	beq	ff7c5418 <SCS_BASE+0x1f7b7418>
    3414:	06900000 	ldreq	r0, [r0], r0
    3418:	011a0000 	tsteq	sl, r0
    341c:	00740250 	rsbseq	r0, r4, r0, asr r2
    3420:	0f441d00 	svceq	0x00441d00
    3424:	0af10800 	beq	ffc4542c <SCS_BASE+0x1fc3742c>
    3428:	06a40000 	strteq	r0, [r4], r0
    342c:	011a0000 	tsteq	sl, r0
    3430:	00740250 	rsbseq	r0, r4, r0, asr r2
    3434:	0f4a1d00 	svceq	0x004a1d00
    3438:	0b080800 	bleq	205440 <__Stack_Size+0x205040>
    343c:	06b80000 	ldrteq	r0, [r8], r0
    3440:	011a0000 	tsteq	sl, r0
    3444:	00740250 	rsbseq	r0, r4, r0, asr r2
    3448:	0f521d00 	svceq	0x00521d00
    344c:	0a830800 	beq	fe0c5454 <SCS_BASE+0x1e0b7454>
    3450:	06d10000 	ldrbeq	r0, [r1], r0
    3454:	011a0000 	tsteq	sl, r0
    3458:	00740251 	rsbseq	r0, r4, r1, asr r2
    345c:	0150011a 	cmpeq	r0, sl, lsl r1
    3460:	5a1d0031 	bpl	74352c <__Stack_Size+0x74312c>
    3464:	c808000f 	stmdagt	r8, {r0, r1, r2, r3}
    3468:	ea00000a 	b	3498 <__Stack_Size+0x3098>
    346c:	1a000006 	bne	348c <__Stack_Size+0x308c>
    3470:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    3474:	50011ac0 	andpl	r1, r1, r0, asr #21
    3478:	1d003101 	stfnes	f3, [r0, #-4]
    347c:	08000f62 	stmdaeq	r0, {r1, r5, r6, r8, r9, sl, fp}
    3480:	00000a9a 	muleq	r0, sl, sl
    3484:	00000703 	andeq	r0, r0, r3, lsl #14
    3488:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    348c:	011a2008 	tsteq	sl, r8
    3490:	00310150 	eorseq	r0, r1, r0, asr r1
    3494:	000f6a1d 	andeq	r6, pc, sp, lsl sl	; <UNPREDICTABLE>
    3498:	000b1a08 	andeq	r1, fp, r8, lsl #20
    349c:	00071c00 	andeq	r1, r7, r0, lsl #24
    34a0:	51011a00 	tstpl	r1, r0, lsl #20
    34a4:	1a007402 	bne	204b4 <__Stack_Size+0x200b4>
    34a8:	31015001 	tstcc	r1, r1
    34ac:	0f741d00 	svceq	0x00741d00
    34b0:	0a830800 	beq	fe0c54b8 <SCS_BASE+0x1e0b74b8>
    34b4:	07360000 	ldreq	r0, [r6, -r0]!
    34b8:	011a0000 	tsteq	sl, r0
    34bc:	000a0351 	andeq	r0, sl, r1, asr r3
    34c0:	50011a06 	andpl	r1, r1, r6, lsl #20
    34c4:	1d003201 	sfmne	f3, 4, [r0, #-4]
    34c8:	08000f7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, sl, fp}
    34cc:	00000ac8 	andeq	r0, r0, r8, asr #21
    34d0:	00000750 	andeq	r0, r0, r0, asr r7
    34d4:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    34d8:	1a01000a 	bne	43508 <__Stack_Size+0x43108>
    34dc:	32015001 	andcc	r5, r1, #1
    34e0:	0f861d00 	svceq	0x00861d00
    34e4:	0b1a0800 	bleq	6854ec <__Stack_Size+0x6850ec>
    34e8:	07690000 	strbeq	r0, [r9, -r0]!
    34ec:	011a0000 	tsteq	sl, r0
    34f0:	00740251 	rsbseq	r0, r4, r1, asr r2
    34f4:	0150011a 	cmpeq	r0, sl, lsl r1
    34f8:	8e1d0032 	mrchi	0, 0, r0, cr13, cr2, {1}
    34fc:	9a08000f 	bls	203540 <__Stack_Size+0x203140>
    3500:	8200000a 	andhi	r0, r0, #10
    3504:	1a000007 	bne	3528 <__Stack_Size+0x3128>
    3508:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    350c:	50011a20 	andpl	r1, r1, r0, lsr #20
    3510:	1d003201 	sfmne	f3, 4, [r0, #-4]
    3514:	08000f96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, sl, fp}
    3518:	00000a83 	andeq	r0, r0, r3, lsl #21
    351c:	0000079b 	muleq	r0, fp, r7
    3520:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    3524:	011a0074 	tsteq	sl, r4, ror r0
    3528:	00330150 	eorseq	r0, r3, r0, asr r1
    352c:	000fa01d 	andeq	sl, pc, sp, lsl r0	; <UNPREDICTABLE>
    3530:	000ab108 	andeq	fp, sl, r8, lsl #2
    3534:	0007b500 	andeq	fp, r7, r0, lsl #10
    3538:	51011a00 	tstpl	r1, r0, lsl #20
    353c:	01100a03 	tsteq	r0, r3, lsl #20
    3540:	0150011a 	cmpeq	r0, sl, lsl r1
    3544:	a81d0033 	ldmdage	sp, {r0, r1, r4, r5}
    3548:	f108000f 	cps	#15
    354c:	ce00000a 	cdpgt	0, 0, cr0, cr0, cr10, {0}
    3550:	1a000007 	bne	3574 <__Stack_Size+0x3174>
    3554:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    3558:	50011a40 	andpl	r1, r1, r0, asr #20
    355c:	1d003301 	stcne	3, cr3, [r0, #-4]
    3560:	08000fb2 	stmdaeq	r0, {r1, r4, r5, r7, r8, r9, sl, fp}
    3564:	00000b1a 	andeq	r0, r0, sl, lsl fp
    3568:	000007e8 	andeq	r0, r0, r8, ror #15
    356c:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    3570:	1a30000a 	bne	c035a0 <__Stack_Size+0xc031a0>
    3574:	33015001 	movwcc	r5, #4097	; 0x1001
    3578:	0fba1d00 	svceq	0x00ba1d00
    357c:	0a9a0800 	beq	fe685584 <SCS_BASE+0x1e677584>
    3580:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    3584:	011a0000 	tsteq	sl, r0
    3588:	00740251 	rsbseq	r0, r4, r1, asr r2
    358c:	0150011a 	cmpeq	r0, sl, lsl r1
    3590:	c01e0033 	andsgt	r0, lr, r3, lsr r0
    3594:	3108000f 	tstcc	r8, pc
    3598:	1a00000b 	bne	35cc <__Stack_Size+0x31cc>
    359c:	74025001 	strvc	r5, [r2], #-1
    35a0:	16000000 	strne	r0, [r0], -r0
    35a4:	0000168e 	andeq	r1, r0, lr, lsl #13
    35a8:	c0015d01 	andgt	r5, r1, r1, lsl #26
    35ac:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    35b0:	0c08000f 	stceq	0, cr0, [r8], {15}
    35b4:	01000000 	mrseq	r0, (UNDEF: 0)
    35b8:	0008509c 	muleq	r8, ip, r0
    35bc:	3d391700 	ldccc	7, cr1, [r9, #-0]
    35c0:	5d010000 	stcpl	0, cr0, [r1, #-0]
    35c4:	00004c01 	andeq	r4, r0, r1, lsl #24
    35c8:	00090600 	andeq	r0, r9, r0, lsl #12
    35cc:	0fde1f00 	svceq	0x00de1f00
    35d0:	0b420800 	bleq	10855d8 <__Stack_Size+0x10851d8>
    35d4:	011a0000 	tsteq	sl, r0
    35d8:	8c030551 	cfstr32hi	mvfx0, [r3], {81}	; 0x51
    35dc:	00200000 	eoreq	r0, r0, r0
    35e0:	19d11600 	ldmibne	r1, {r9, sl, ip}^
    35e4:	6a010000 	bvs	435ec <__Stack_Size+0x431ec>
    35e8:	0000c001 	andeq	ip, r0, r1
    35ec:	000fe400 	andeq	lr, pc, r0, lsl #8
    35f0:	00000c08 	andeq	r0, r0, r8, lsl #24
    35f4:	8e9c0100 	fmlhie	f0, f4, f0
    35f8:	17000008 	strne	r0, [r0, -r8]
    35fc:	00003d39 	andeq	r3, r0, r9, lsr sp
    3600:	4c016a01 	stcmi	10, cr6, [r1], {1}
    3604:	27000000 	strcs	r0, [r0, -r0]
    3608:	1f000009 	svcne	0x00000009
    360c:	08000fea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, r9, sl, fp}
    3610:	00000b42 	andeq	r0, r0, r2, asr #22
    3614:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0x11a
    3618:	00009403 	andeq	r9, r0, r3, lsl #8
    361c:	16000020 	strne	r0, [r0], -r0, lsr #32
    3620:	000018cf 	andeq	r1, r0, pc, asr #17
    3624:	c0017701 	andgt	r7, r1, r1, lsl #14
    3628:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    362c:	2008000f 	andcs	r0, r8, pc
    3630:	01000000 	mrseq	r0, (UNDEF: 0)
    3634:	0008d29c 	muleq	r8, ip, r2
    3638:	3d391700 	ldccc	7, cr1, [r9, #-0]
    363c:	77010000 	strvc	r0, [r1, -r0]
    3640:	00004c01 	andeq	r4, r0, r1, lsl #24
    3644:	00094800 	andeq	r4, r9, r0, lsl #16
    3648:	17961800 	ldrne	r1, [r6, r0, lsl #16]
    364c:	7a010000 	bvc	43654 <__Stack_Size+0x43254>
    3650:	00005e01 	andeq	r5, r0, r1, lsl #28
    3654:	00098200 	andeq	r8, r9, r0, lsl #4
    3658:	10042000 	andne	r2, r4, r0
    365c:	0b420800 	bleq	1085664 <__Stack_Size+0x1085264>
    3660:	21000000 	mrscs	r0, (UNDEF: 0)
    3664:	000013dd 	ldrdeq	r1, [r0], -sp
    3668:	035b2e01 	cmpeq	fp, #1, 28
    366c:	03050000 	movweq	r0, #20480	; 0x5000
    3670:	2000005c 	andcs	r0, r0, ip, asr r0
    3674:	00356b21 	eorseq	r6, r5, r1, lsr #22
    3678:	df3e0100 	svcle	0x003e0100
    367c:	05000003 	streq	r0, [r0, #-3]
    3680:	0000bc03 	andeq	fp, r0, r3, lsl #24
    3684:	15ee2120 	strbne	r2, [lr, #288]!	; 0x120
    3688:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    368c:	00000194 	muleq	r0, r4, r1
    3690:	00e00305 	rsceq	r0, r0, r5, lsl #6
    3694:	59222000 	stmdbpl	r2!, {sp}
    3698:	03000019 	movweq	r0, #25
    369c:	00027bf1 	strdeq	r7, [r2], -r1
    36a0:	15c72200 	strbne	r2, [r7, #512]	; 0x200
    36a4:	22070000 	andcs	r0, r7, #0
    36a8:	00000480 	andeq	r0, r0, r0, lsl #9
    36ac:	00005e23 	andeq	r5, r0, r3, lsr #28
    36b0:	00092b00 	andeq	r2, r9, r0, lsl #22
    36b4:	006f2400 	rsbeq	r2, pc, r0, lsl #8
    36b8:	00110000 	andseq	r0, r1, r0
    36bc:	00126322 	andseq	r6, r2, r2, lsr #6
    36c0:	362f0800 	strtcc	r0, [pc], -r0, lsl #16
    36c4:	25000009 	strcs	r0, [r0, #-9]
    36c8:	0000091b 	andeq	r0, r0, fp, lsl r9
    36cc:	00005e23 	andeq	r5, r0, r3, lsr #28
    36d0:	00094b00 	andeq	r4, r9, r0, lsl #22
    36d4:	006f2400 	rsbeq	r2, pc, r0, lsl #8
    36d8:	00420000 	subeq	r0, r2, r0
    36dc:	0012c222 	andseq	ip, r2, r2, lsr #4
    36e0:	56300800 	ldrtpl	r0, [r0], -r0, lsl #16
    36e4:	25000009 	strcs	r0, [r0, #-9]
    36e8:	0000093b 	andeq	r0, r0, fp, lsr r9
    36ec:	00005e23 	andeq	r5, r0, r3, lsr #28
    36f0:	00096b00 	andeq	r6, r9, r0, lsl #22
    36f4:	006f2400 	rsbeq	r2, pc, r0, lsl #8
    36f8:	00030000 	andeq	r0, r3, r0
    36fc:	00128522 	andseq	r8, r2, r2, lsr #10
    3700:	76320800 	ldrtvc	r0, [r2], -r0, lsl #16
    3704:	25000009 	strcs	r0, [r0, #-9]
    3708:	0000095b 	andeq	r0, r0, fp, asr r9
    370c:	00124522 	andseq	r4, r2, r2, lsr #10
    3710:	86330800 	ldrthi	r0, [r3], -r0, lsl #16
    3714:	25000009 	strcs	r0, [r0, #-9]
    3718:	0000091b 	andeq	r0, r0, fp, lsl r9
    371c:	00005e23 	andeq	r5, r0, r3, lsr #28
    3720:	00099b00 	andeq	r9, r9, r0, lsl #22
    3724:	006f2400 	rsbeq	r2, pc, r0, lsl #8
    3728:	00310000 	eorseq	r0, r1, r0
    372c:	0012a322 	andseq	sl, r2, r2, lsr #6
    3730:	a6340800 	ldrtge	r0, [r4], -r0, lsl #16
    3734:	25000009 	strcs	r0, [r0, #-9]
    3738:	0000098b 	andeq	r0, r0, fp, lsl #19
    373c:	00005e23 	andeq	r5, r0, r3, lsr #28
    3740:	0009bb00 	andeq	fp, r9, r0, lsl #22
    3744:	006f2400 	rsbeq	r2, pc, r0, lsl #8
    3748:	00190000 	andseq	r0, r9, r0
    374c:	0012e422 	andseq	lr, r2, r2, lsr #8
    3750:	ab350800 	blge	d45758 <__Stack_Size+0xd45358>
    3754:	21000009 	tstcs	r0, r9
    3758:	000014ab 	andeq	r1, r0, fp, lsr #9
    375c:	005e1801 	subseq	r1, lr, r1, lsl #16
    3760:	03050000 	movweq	r0, #20480	; 0x5000
    3764:	2000011c 	andcs	r0, r0, ip, lsl r1
    3768:	0003ad22 	andeq	sl, r3, r2, lsr #26
    376c:	e21a0100 	ands	r0, sl, #0, 2
    3770:	26000009 	strcs	r0, [r0], -r9
    3774:	0000003a 	andeq	r0, r0, sl, lsr r0
    3778:	00156921 	andseq	r6, r5, r1, lsr #18
    377c:	231c0100 	tstcs	ip, #0, 2
    3780:	05000004 	streq	r0, [r0, #-4]
    3784:	00005403 	andeq	r5, r0, r3, lsl #8
    3788:	17472120 	strbne	r2, [r7, -r0, lsr #2]
    378c:	4b010000 	blmi	43794 <__Stack_Size+0x43394>
    3790:	000000c6 	andeq	r0, r0, r6, asr #1
    3794:	008c0305 	addeq	r0, ip, r5, lsl #6
    3798:	6f212000 	svcvs	0x00212000
    379c:	01000019 	tsteq	r0, r9, lsl r0
    37a0:	0000c651 	andeq	ip, r0, r1, asr r6
    37a4:	94030500 	strls	r0, [r3], #-1280	; 0x500
    37a8:	23200000 	teqcs	r0, #0
    37ac:	000000c6 	andeq	r0, r0, r6, asr #1
    37b0:	00000a2a 	andeq	r0, r0, sl, lsr #20
    37b4:	00006f24 	andeq	r6, r0, r4, lsr #30
    37b8:	21000300 	mrscs	r0, LR_irq
    37bc:	000015d4 	ldrdeq	r1, [r0], -r4
    37c0:	0a1a5701 	beq	6993cc <__Stack_Size+0x698fcc>
    37c4:	03050000 	movweq	r0, #20480	; 0x5000
    37c8:	2000009c 	mulcs	r0, ip, r0
    37cc:	0014b327 	andseq	fp, r4, r7, lsr #6
    37d0:	01070100 	mrseq	r0, (UNDEF: 23)
    37d4:	00000a4d 	andeq	r0, r0, sp, asr #20
    37d8:	01200305 	teqeq	r0, r5, lsl #6
    37dc:	04282000 	strteq	r2, [r8], #-0
    37e0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0x905
    37e4:	15502900 	ldrbne	r2, [r0, #-2304]	; 0x900
    37e8:	54060000 	strpl	r0, [r6], #-0
    37ec:	0017f32a 	andseq	pc, r7, sl, lsr #6
    37f0:	07440600 	strbeq	r0, [r4, -r0, lsl #12]
    37f4:	2a000001 	bcs	3800 <__Stack_Size+0x3400>
    37f8:	0000152b 	andeq	r1, r0, fp, lsr #10
    37fc:	003a1a09 	eorseq	r1, sl, r9, lsl #20
    3800:	512b0000 	teqpl	fp, r0
    3804:	0a000016 	beq	3864 <__Stack_Size+0x3464>
    3808:	0a830262 	beq	fe0c4198 <SCS_BASE+0x1e0b6198>
    380c:	4c0b0000 	stcmi	0, cr0, [fp], {-0}
    3810:	00000000 	andeq	r0, r0, r0
    3814:	0014d52b 	andseq	sp, r4, fp, lsr #10
    3818:	026a0a00 	rsbeq	r0, sl, #0, 20
    381c:	00000a9a 	muleq	r0, sl, sl
    3820:	00005e0b 	andeq	r5, r0, fp, lsl #28
    3824:	004c0b00 	subeq	r0, ip, r0, lsl #22
    3828:	2b000000 	blcs	3830 <__Stack_Size+0x3430>
    382c:	000014c7 	andeq	r1, r0, r7, asr #9
    3830:	b1026c0a 	tstlt	r2, sl, lsl #24
    3834:	0b00000a 	bleq	3864 <__Stack_Size+0x3464>
    3838:	0000005e 	andeq	r0, r0, lr, asr r0
    383c:	00004c0b 	andeq	r4, r0, fp, lsl #24
    3840:	ed2b0000 	stc	0, cr0, [fp, #-0]
    3844:	0a000014 	beq	389c <__Stack_Size+0x349c>
    3848:	0ac80284 	beq	ff204260 <SCS_BASE+0x1f1f6260>
    384c:	5e0b0000 	cdppl	0, 0, cr0, cr11, cr0, {0}
    3850:	0b000000 	bleq	3858 <__Stack_Size+0x3458>
    3854:	0000004c 	andeq	r0, r0, ip, asr #32
    3858:	15fb2b00 	ldrbne	r2, [fp, #2816]!	; 0xb00
    385c:	830a0000 	movwhi	r0, #40960	; 0xa000
    3860:	000adf02 	andeq	sp, sl, r2, lsl #30
    3864:	005e0b00 	subseq	r0, lr, r0, lsl #22
    3868:	4c0b0000 	stcmi	0, cr0, [fp], {-0}
    386c:	00000000 	andeq	r0, r0, r0
    3870:	0019212b 	andseq	r2, r9, fp, lsr #2
    3874:	02780a00 	rsbseq	r0, r8, #0, 20
    3878:	00000af1 	strdeq	r0, [r0], -r1
    387c:	00005e0b 	andeq	r5, r0, fp, lsl #28
    3880:	2f2b0000 	svccs	0x002b0000
    3884:	0a00001a 	beq	38f4 <__Stack_Size+0x34f4>
    3888:	0b080289 	bleq	2042b4 <__Stack_Size+0x203eb4>
    388c:	5e0b0000 	cdppl	0, 0, cr0, cr11, cr0, {0}
    3890:	0b000000 	bleq	3898 <__Stack_Size+0x3498>
    3894:	0000004c 	andeq	r0, r0, ip, asr #32
    3898:	138b2b00 	orrne	r2, fp, #0, 22
    389c:	720a0000 	andvc	r0, sl, #0
    38a0:	000b1a02 	andeq	r1, fp, r2, lsl #20
    38a4:	005e0b00 	subseq	r0, lr, r0, lsl #22
    38a8:	2b000000 	blcs	38b0 <__Stack_Size+0x34b0>
    38ac:	000016e9 	andeq	r1, r0, r9, ror #13
    38b0:	31026d0a 	tstcc	r2, sl, lsl #26
    38b4:	0b00000b 	bleq	38e8 <__Stack_Size+0x34e8>
    38b8:	0000005e 	andeq	r0, r0, lr, asr r0
    38bc:	00004c0b 	andeq	r4, r0, fp, lsl #24
    38c0:	722c0000 	eorvc	r0, ip, #0
    38c4:	03000016 	movweq	r0, #22
    38c8:	000b42eb 	andeq	r4, fp, fp, ror #5
    38cc:	005e0b00 	subseq	r0, lr, r0, lsl #22
    38d0:	2d000000 	stccs	0, cr0, [r0, #-0]
    38d4:	00001617 	andeq	r1, r0, r7, lsl r6
    38d8:	00c0e703 	sbceq	lr, r0, r3, lsl #14
    38dc:	4c0b0000 	stcmi	0, cr0, [fp], {-0}
    38e0:	0b000000 	bleq	38e8 <__Stack_Size+0x34e8>
    38e4:	000000d1 	ldrdeq	r0, [r0], -r1
    38e8:	05000000 	streq	r0, [r0, #-0]
    38ec:	00040000 	andeq	r0, r4, r0
    38f0:	00000b60 	andeq	r0, r0, r0, ror #22
    38f4:	02f40104 	rscseq	r0, r4, #4, 2
    38f8:	52010000 	andpl	r0, r1, #0
    38fc:	ec00001a 	stc	0, cr0, [r0], {26}
    3900:	f8000003 			; <UNDEFINED> instruction: 0xf8000003
    3904:	00000003 	andeq	r0, r0, r3
    3908:	cd000000 	stcgt	0, cr0, [r0, #-0]
    390c:	0200000e 	andeq	r0, r0, #14
    3910:	082d0504 	stmdaeq	sp!, {r2, r8, sl}
    3914:	02020000 	andeq	r0, r2, #0
    3918:	0007ff05 	andeq	pc, r7, r5, lsl #30
    391c:	06010200 	streq	r0, [r1], -r0, lsl #4
    3920:	000009de 	ldrdeq	r0, [r0], -lr
    3924:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    3928:	45270200 	strmi	r0, [r7, #-512]!	; 0x200
    392c:	02000000 	andeq	r0, r0, #0
    3930:	093a0704 	ldmdbeq	sl!, {r2, r8, r9, sl}
    3934:	75030000 	strvc	r0, [r3, #-0]
    3938:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    393c:	00005728 	andeq	r5, r0, r8, lsr #14
    3940:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3944:	00000bd7 	ldrdeq	r0, [r0], -r7
    3948:	00387503 	eorseq	r7, r8, r3, lsl #10
    394c:	00682902 	rsbeq	r2, r8, r2, lsl #18
    3950:	01020000 	mrseq	r0, (UNDEF: 2)
    3954:	0009dc08 	andeq	sp, r9, r8, lsl #24
    3958:	04590400 	ldrbeq	r0, [r9], #-1024	; 0x400
    395c:	2f020000 	svccs	0x00020000
    3960:	0000007a 	andeq	r0, r0, sl, ror r0
    3964:	00004505 	andeq	r4, r0, r5, lsl #10
    3968:	02010600 	andeq	r0, r1, #0, 12
    396c:	0000943e 	andeq	r9, r0, lr, lsr r4
    3970:	053f0700 	ldreq	r0, [pc, #-1792]!	; 3278 <__Stack_Size+0x2e78>
    3974:	07000000 	streq	r0, [r0, -r0]
    3978:	00000917 	andeq	r0, r0, r7, lsl r9
    397c:	b4040001 	strlt	r0, [r4], #-1
    3980:	02000000 	andeq	r0, r0, #0
    3984:	00007f3e 	andeq	r7, r0, lr, lsr pc
    3988:	07040200 	streq	r0, [r4, -r0, lsl #4]
    398c:	00000931 	andeq	r0, r0, r1, lsr r9
    3990:	4e031c08 	cdpmi	12, 0, cr1, cr3, cr8, {0}
    3994:	00010b01 	andeq	r0, r1, r1, lsl #22
    3998:	52430900 	subpl	r0, r3, #0, 18
    399c:	5003004c 	andpl	r0, r3, ip, asr #32
    39a0:	00006f01 	andeq	r6, r0, r1, lsl #30
    39a4:	43090000 	movwmi	r0, #36864	; 0x9000
    39a8:	03004852 	movweq	r4, #2130	; 0x852
    39ac:	006f0151 	rsbeq	r0, pc, r1, asr r1	; <UNPREDICTABLE>
    39b0:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    39b4:	00524449 	subseq	r4, r2, r9, asr #8
    39b8:	6f015203 	svcvs	0x00015203
    39bc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    39c0:	52444f09 	subpl	r4, r4, #9, 30	; 0x24
    39c4:	01530300 	cmpeq	r3, r0, lsl #6
    39c8:	0000006f 	andeq	r0, r0, pc, rrx
    39cc:	005f0a0c 	subseq	r0, pc, ip, lsl #20
    39d0:	54030000 	strpl	r0, [r3], #-0
    39d4:	00006f01 	andeq	r6, r0, r1, lsl #30
    39d8:	42091000 	andmi	r1, r9, #0
    39dc:	03005252 	movweq	r5, #594	; 0x252
    39e0:	006f0155 	rsbeq	r0, pc, r5, asr r1	; <UNPREDICTABLE>
    39e4:	0a140000 	beq	5039ec <__Stack_Size+0x5035ec>
    39e8:	00000cbd 			; <UNDEFINED> instruction: 0x00000cbd
    39ec:	6f015603 	svcvs	0x00015603
    39f0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    39f4:	08da0b00 	ldmeq	sl, {r8, r9, fp}^
    39f8:	57030000 	strpl	r0, [r3, -r0]
    39fc:	0000a601 	andeq	sl, r0, r1, lsl #12
    3a00:	5e040c00 	cdppl	12, 0, cr0, cr4, cr0, {0}
    3a04:	0d000000 	stceq	0, cr0, [r0, #-0]
    3a08:	000013f3 	strdeq	r1, [r0], -r3
    3a0c:	42300401 	eorsmi	r0, r0, #16777216	; 0x1000000
    3a10:	07000001 	streq	r0, [r0, -r1]
    3a14:	00001407 	andeq	r1, r0, r7, lsl #8
    3a18:	149d0700 	ldrne	r0, [sp], #1792	; 0x700
    3a1c:	07010000 	streq	r0, [r1, -r0]
    3a20:	00001430 	andeq	r1, r0, r0, lsr r4
    3a24:	148f0702 	strne	r0, [pc], #1794	; 3a2c <__Stack_Size+0x362c>
    3a28:	00030000 	andeq	r0, r3, r0
    3a2c:	0013f404 	andseq	pc, r3, r4, lsl #8
    3a30:	1d370400 	cfldrsne	mvf0, [r7, #-0]
    3a34:	0d000001 	stceq	0, cr0, [r0, #-4]
    3a38:	00000a26 	andeq	r0, r0, r6, lsr #20
    3a3c:	7e300501 	cdpvc	5, 3, cr0, cr0, cr1, {0}
    3a40:	07000001 	streq	r0, [r0, -r1]
    3a44:	00000a68 	andeq	r0, r0, r8, ror #20
    3a48:	0bea0700 	bleq	ffa85650 <SCS_BASE+0x1fa77650>
    3a4c:	07010000 	streq	r0, [r1, -r0]
    3a50:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3a54:	0c2a0702 	stceq	7, cr0, [sl], #-8
    3a58:	07030000 	streq	r0, [r3, -r0]
    3a5c:	000004b9 			; <UNDEFINED> instruction: 0x000004b9
    3a60:	09c00704 	stmibeq	r0, {r2, r8, r9, sl}^
    3a64:	00050000 	andeq	r0, r5, r0
    3a68:	001ac00e 	andseq	ip, sl, lr
    3a6c:	01260100 	teqeq	r6, r0, lsl #2
    3a70:	00019801 	andeq	r9, r1, r1, lsl #16
    3a74:	1a890f00 	bne	fe24767c <SCS_BASE+0x1e23967c>
    3a78:	26010000 	strcs	r0, [r1], -r0
    3a7c:	00009401 	andeq	r9, r0, r1, lsl #8
    3a80:	45100000 	ldrmi	r0, [r0, #-0]
    3a84:	0100001a 	tsteq	r0, sl, lsl r0
    3a88:	10100173 	andsne	r0, r0, r3, ror r1
    3a8c:	00280800 	eoreq	r0, r8, r0, lsl #16
    3a90:	9c010000 	stcls	0, cr0, [r1], {-0}
    3a94:	000001eb 	andeq	r0, r0, fp, ror #3
    3a98:	001a7611 	andseq	r7, sl, r1, lsl r6
    3a9c:	01730100 	cmneq	r3, r0, lsl #2
    3aa0:	0000003a 	andeq	r0, r0, sl, lsr r0
    3aa4:	000009a0 	andeq	r0, r0, r0, lsr #19
    3aa8:	001b1d12 	andseq	r1, fp, r2, lsl sp
    3aac:	01730100 	cmneq	r3, r0, lsl #2
    3ab0:	00000117 	andeq	r0, r0, r7, lsl r1
    3ab4:	6c135101 	ldfvss	f5, [r3], {1}
    3ab8:	01006e65 	tsteq	r0, r5, ror #28
    3abc:	005e0173 	subseq	r0, lr, r3, ror r1
    3ac0:	52010000 	andpl	r0, r1, #0
    3ac4:	78646914 	stmdavc	r4!, {r2, r4, r8, fp, sp, lr}^
    3ac8:	01750100 	cmneq	r5, r0, lsl #2
    3acc:	0000005e 	andeq	r0, r0, lr, asr r0
    3ad0:	000009be 			; <UNDEFINED> instruction: 0x000009be
    3ad4:	17f31500 	ldrbne	r1, [r3, r0, lsl #10]!
    3ad8:	27010000 	strcs	r0, [r1, -r0]
    3adc:	00000142 	andeq	r0, r0, r2, asr #2
    3ae0:	08001038 	stmdaeq	r0, {r3, r4, r5, ip}
    3ae4:	00000038 	andeq	r0, r0, r8, lsr r0
    3ae8:	02519c01 	subseq	r9, r1, #256	; 0x100
    3aec:	70160000 	andsvc	r0, r6, r0
    3af0:	01000038 	tsteq	r0, r8, lsr r0
    3af4:	00004c2a 	andeq	r4, r0, sl, lsr #24
    3af8:	7e170100 	mufvcs	f0, f7, f0
    3afc:	3a000001 	bcc	3b08 <__Stack_Size+0x3708>
    3b00:	0a080010 	beq	203b48 <__Stack_Size+0x203748>
    3b04:	01000000 	mrseq	r0, (UNDEF: 0)
    3b08:	018b182d 	orreq	r1, fp, sp, lsr #16
    3b0c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    3b10:	0800103a 	stmdaeq	r0, {r1, r3, r4, r5, ip}
    3b14:	0000000a 	andeq	r0, r0, sl
    3b18:	00018b18 	andeq	r8, r1, r8, lsl fp
    3b1c:	441a0100 	ldrmi	r0, [sl], #-256	; 0x100
    3b20:	80080010 	andhi	r0, r8, r0, lsl r0
    3b24:	1b000004 	blne	3b3c <__Stack_Size+0x373c>
    3b28:	0a035101 	beq	d7f34 <__Stack_Size+0xd7b34>
    3b2c:	011b2000 	tsteq	fp, r0
    3b30:	000c0550 	andeq	r0, ip, r0, asr r5
    3b34:	00400110 	subeq	r0, r0, r0, lsl r1
    3b38:	1c000000 	stcne	0, cr0, [r0], {-0}
    3b3c:	00001ade 	ldrdeq	r1, [r0], -lr
    3b40:	00005a01 	andeq	r5, r0, r1, lsl #20
    3b44:	00040000 	andeq	r0, r4, r0
    3b48:	9c010000 	stcls	0, cr0, [r1], {-0}
    3b4c:	00000270 	andeq	r0, r0, r0, ror r2
    3b50:	0000001d 	andeq	r0, r0, sp, lsl r0
    3b54:	0001eb00 	andeq	lr, r1, r0, lsl #22
    3b58:	7e1e0000 	cdpvc	0, 1, cr0, cr14, cr0, {0}
    3b5c:	70000001 	andvc	r0, r0, r1
    3b60:	1c080010 	stcne	0, cr0, [r8], {16}
    3b64:	01000000 	mrseq	r0, (UNDEF: 0)
    3b68:	0002d89c 	muleq	r2, ip, r8
    3b6c:	018b1f00 	orreq	r1, fp, r0, lsl #30
    3b70:	09f50000 	ldmibeq	r5!, {}^	; <UNPREDICTABLE>
    3b74:	72200000 	eorvc	r0, r0, #0
    3b78:	0a080010 	beq	203bc0 <__Stack_Size+0x2037c0>
    3b7c:	bd000000 	stclt	0, cr0, [r0, #-0]
    3b80:	1f000002 	svcne	0x00000002
    3b84:	0000018b 	andeq	r0, r0, fp, lsl #3
    3b88:	00000a2f 	andeq	r0, r0, pc, lsr #20
    3b8c:	00107c21 	andseq	r7, r0, r1, lsr #24
    3b90:	00048008 	andeq	r8, r4, r8
    3b94:	51011b00 	tstpl	r1, r0, lsl #22
    3b98:	20000a03 	andcs	r0, r0, r3, lsl #20
    3b9c:	0550011b 	ldrbeq	r0, [r0, #-283]	; 0x11b
    3ba0:	0110000c 	tsteq	r0, ip
    3ba4:	21000040 	tstcs	r0, r0, asr #32
    3ba8:	08001086 	stmdaeq	r0, {r1, r2, r7, ip}
    3bac:	0000049c 	muleq	r0, ip, r4
    3bb0:	0351011b 	cmpeq	r1, #-1073741818	; 0xc0000006
    3bb4:	1b20000a 	blne	803be4 <__Stack_Size+0x8037e4>
    3bb8:	0c055001 	stceq	0, cr5, [r5], {1}
    3bbc:	40011000 	andmi	r1, r1, r0
    3bc0:	3c150000 	ldccc	0, cr0, [r5], {-0}
    3bc4:	0100001a 	tsteq	r0, sl, lsl r0
    3bc8:	00014247 	andeq	r4, r1, r7, asr #4
    3bcc:	00108c00 	andseq	r8, r0, r0, lsl #24
    3bd0:	00002408 	andeq	r2, r0, r8, lsl #8
    3bd4:	029c0100 	addseq	r0, ip, #0, 2
    3bd8:	1a000003 	bne	3bec <__Stack_Size+0x37ec>
    3bdc:	080010a0 	stmdaeq	r0, {r5, r7, ip}
    3be0:	0000017e 	andeq	r0, r0, lr, ror r1
    3be4:	0250011b 	subseq	r0, r0, #-1073741818	; 0xc0000006
    3be8:	00000074 	andeq	r0, r0, r4, ror r0
    3bec:	00094c1c 	andeq	r4, r9, ip, lsl ip
    3bf0:	b05f0100 	subslt	r0, pc, r0, lsl #2
    3bf4:	04080010 	streq	r0, [r8], #-16
    3bf8:	01000000 	mrseq	r0, (UNDEF: 0)
    3bfc:	0003219c 	muleq	r3, ip, r1
    3c00:	10b41d00 	adcsne	r1, r4, r0, lsl #26
    3c04:	02d80800 	sbcseq	r0, r8, #0, 16
    3c08:	22000000 	andcs	r0, r0, #0
    3c0c:	00001550 	andeq	r1, r0, r0, asr r5
    3c10:	b4013b01 	strlt	r3, [r1], #-2817	; 0xb01
    3c14:	34080010 	strcc	r0, [r8], #-16
    3c18:	01000000 	mrseq	r0, (UNDEF: 0)
    3c1c:	00038a9c 	muleq	r3, ip, sl
    3c20:	1aa22300 	bne	fe88c828 <SCS_BASE+0x1e87e828>
    3c24:	3d010000 	stccc	0, cr0, [r1, #-0]
    3c28:	00003a01 	andeq	r3, r0, r1, lsl #20
    3c2c:	000a4200 	andeq	r4, sl, r0, lsl #4
    3c30:	1a672300 	bne	19cc838 <__Stack_Size+0x19cc438>
    3c34:	3d010000 	stccc	0, cr0, [r1, #-0]
    3c38:	00003a01 	andeq	r3, r0, r1, lsl #20
    3c3c:	000a7b00 	andeq	r7, sl, r0, lsl #22
    3c40:	1ab12300 	bne	fec4c848 <SCS_BASE+0x1ec3e848>
    3c44:	3d010000 	stccc	0, cr0, [r1, #-0]
    3c48:	00003a01 	andeq	r3, r0, r1, lsl #20
    3c4c:	000aa400 	andeq	sl, sl, r0, lsl #8
    3c50:	10cc2400 	sbcne	r2, ip, r0, lsl #8
    3c54:	01980800 	orrseq	r0, r8, r0, lsl #16
    3c58:	037a0000 	cmneq	sl, #0
    3c5c:	011b0000 	tsteq	fp, r0
    3c60:	00380152 	eorseq	r0, r8, r2, asr r1
    3c64:	0010da21 	andseq	sp, r0, r1, lsr #20
    3c68:	00019808 	andeq	r9, r1, r8, lsl #16
    3c6c:	52011b00 	andpl	r1, r1, #0, 22
    3c70:	00003401 	andeq	r3, r0, r1, lsl #8
    3c74:	000b5f22 	andeq	r5, fp, r2, lsr #30
    3c78:	015d0100 	cmpeq	sp, r0, lsl #2
    3c7c:	080010e8 	stmdaeq	r0, {r3, r5, r6, r7, ip}
    3c80:	0000002a 	andeq	r0, r0, sl, lsr #32
    3c84:	04229c01 	strteq	r9, [r2], #-3073	; 0xc01
    3c88:	64250000 	strtvs	r0, [r5], #-0
    3c8c:	01007461 	tsteq	r0, r1, ror #8
    3c90:	005e015d 	subseq	r0, lr, sp, asr r1
    3c94:	0ac20000 	beq	ff083c9c <SCS_BASE+0x1f075c9c>
    3c98:	5c260000 	stcpl	0, cr0, [r6], #-0
    3c9c:	0100001a 	tsteq	r0, sl, lsl r0
    3ca0:	006f015f 	rsbeq	r0, pc, pc, asr r1	; <UNPREDICTABLE>
    3ca4:	5e260000 	cdppl	0, 2, cr0, cr6, cr0, {0}
    3ca8:	01000008 	tsteq	r0, r8
    3cac:	006f0160 	rsbeq	r0, pc, r0, ror #2
    3cb0:	f6240000 			; <UNDEFINED> instruction: 0xf6240000
    3cb4:	b2080010 	andlt	r0, r8, #16
    3cb8:	db000004 	blle	3cd0 <__Stack_Size+0x38d0>
    3cbc:	1b000003 	blne	3cd0 <__Stack_Size+0x38d0>
    3cc0:	35015001 	strcc	r5, [r1, #-1]
    3cc4:	11002400 	tstne	r0, r0, lsl #8
    3cc8:	04c30800 	strbeq	r0, [r3], #2048	; 0x800
    3ccc:	03fa0000 	mvnseq	r0, #0
    3cd0:	011b0000 	tsteq	fp, r0
    3cd4:	1b310152 	blne	c44224 <__Stack_Size+0xc43e24>
    3cd8:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    3cdc:	50011bc0 	andpl	r1, r1, r0, asr #23
    3ce0:	00007402 	andeq	r7, r0, r2, lsl #8
    3ce4:	00110824 	andseq	r0, r1, r4, lsr #16
    3ce8:	0004de08 	andeq	sp, r4, r8, lsl #28
    3cec:	00041200 	andeq	r1, r4, r0, lsl #4
    3cf0:	51011b00 	tstpl	r1, r0, lsl #22
    3cf4:	011b3101 	tsteq	fp, r1, lsl #2
    3cf8:	00310150 	eorseq	r0, r1, r0, asr r1
    3cfc:	00110e1a 	andseq	r0, r1, sl, lsl lr
    3d00:	0004f508 	andeq	pc, r4, r8, lsl #10
    3d04:	50011b00 	andpl	r1, r1, r0, lsl #22
    3d08:	00003101 	andeq	r3, r0, r1, lsl #2
    3d0c:	001a9227 	andseq	r9, sl, r7, lsr #4
    3d10:	4c2d0600 	stcmi	6, cr0, [sp], #-0
    3d14:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    3d18:	0000005e 	andeq	r0, r0, lr, asr r0
    3d1c:	0000043d 	andeq	r0, r0, sp, lsr r4
    3d20:	00009f29 	andeq	r9, r0, r9, lsr #30
    3d24:	27001900 	strcs	r1, [r0, -r0, lsl #18]
    3d28:	000012e4 	andeq	r1, r0, r4, ror #5
    3d2c:	042d3507 	strteq	r3, [sp], #-1287	; 0x507
    3d30:	0d2a0000 	stceq	0, cr0, [sl, #-0]
    3d34:	0100001b 	tsteq	r0, fp, lsl r0
    3d38:	00003a0d 	andeq	r3, r0, sp, lsl #20
    3d3c:	2c030500 	cfstr32cs	mvfx0, [r3], {-0}
    3d40:	2a200001 	bcs	803d4c <__Stack_Size+0x80394c>
    3d44:	00001ad1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    3d48:	005e0e01 	subseq	r0, lr, r1, lsl #28
    3d4c:	03050000 	movweq	r0, #20480	; 0x5000
    3d50:	20000128 	andcs	r0, r0, r8, lsr #2
    3d54:	0003ad2a 	andeq	sl, r3, sl, lsr #26
    3d58:	7b150100 	blvc	544160 <__Stack_Size+0x543d60>
    3d5c:	05000004 	streq	r0, [r0, #-4]
    3d60:	00012403 	andeq	r2, r1, r3, lsl #8
    3d64:	003a0520 	eorseq	r0, sl, r0, lsr #10
    3d68:	252b0000 	strcs	r0, [fp, #-0]!
    3d6c:	08000007 	stmdaeq	r0, {r0, r1, r2}
    3d70:	000496e2 	andeq	r9, r4, r2, ror #13
    3d74:	04962c00 	ldreq	r2, [r6], #3072	; 0xc00
    3d78:	4c2c0000 	stcmi	0, cr0, [ip], #-0
    3d7c:	00000000 	andeq	r0, r0, r0
    3d80:	010b040c 	tsteq	fp, ip, lsl #8
    3d84:	d12b0000 	teqle	fp, r0
    3d88:	08000002 	stmdaeq	r0, {r1}
    3d8c:	0004b2e1 	andeq	fp, r4, r1, ror #5
    3d90:	04962c00 	ldreq	r2, [r6], #3072	; 0xc00
    3d94:	4c2c0000 	stcmi	0, cr0, [ip], #-0
    3d98:	00000000 	andeq	r0, r0, r0
    3d9c:	00019d2b 	andeq	r9, r1, fp, lsr #26
    3da0:	c3570500 	cmpgt	r7, #0, 10
    3da4:	2c000004 	stccs	0, cr0, [r0], {4}
    3da8:	0000003a 	andeq	r0, r0, sl, lsr r0
    3dac:	1aec2b00 	bne	ffb0e9b4 <SCS_BASE+0x1fb009b4>
    3db0:	19090000 	stmdbne	r9, {}	; <UNPREDICTABLE>
    3db4:	000004de 	ldrdeq	r0, [r0], -lr
    3db8:	0001172c 	andeq	r1, r1, ip, lsr #14
    3dbc:	004c2c00 	subeq	r2, ip, r0, lsl #24
    3dc0:	4c2c0000 	stcmi	0, cr0, [ip], #-0
    3dc4:	00000000 	andeq	r0, r0, r0
    3dc8:	001a7c2d 	andseq	r7, sl, sp, lsr #24
    3dcc:	02880a00 	addeq	r0, r8, #0, 20
    3dd0:	000004f5 	strdeq	r0, [r0], -r5
    3dd4:	00005e2c 	andeq	r5, r0, ip, lsr #28
    3dd8:	004c2c00 	subeq	r2, ip, r0, lsl #24
    3ddc:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    3de0:	00001b00 	andeq	r1, r0, r0, lsl #22
    3de4:	2c02710a 	stfcss	f7, [r2], {10}
    3de8:	0000005e 	andeq	r0, r0, lr, asr r0
    3dec:	08b70000 	ldmeq	r7!, {}	; <UNPREDICTABLE>
    3df0:	00040000 	andeq	r0, r4, r0
    3df4:	00000dfd 	strdeq	r0, [r0], -sp
    3df8:	02f40104 	rscseq	r0, r4, #4, 2
    3dfc:	9a010000 	bls	43e04 <__Stack_Size+0x43a04>
    3e00:	ec00001b 	stc	0, cr0, [r0], {27}
    3e04:	40000003 	andmi	r0, r0, r3
    3e08:	00000004 	andeq	r0, r0, r4
    3e0c:	54000000 	strpl	r0, [r0], #-0
    3e10:	02000010 	andeq	r0, r0, #16
    3e14:	082d0504 	stmdaeq	sp!, {r2, r8, sl}
    3e18:	02020000 	andeq	r0, r2, #0
    3e1c:	0007ff05 	andeq	pc, r7, r5, lsl #30
    3e20:	06010200 	streq	r0, [r1], -r0, lsl #4
    3e24:	000009de 	ldrdeq	r0, [r0], -lr
    3e28:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    3e2c:	45270200 	strmi	r0, [r7, #-512]!	; 0x200
    3e30:	02000000 	andeq	r0, r0, #0
    3e34:	093a0704 	ldmdbeq	sl!, {r2, r8, r9, sl}
    3e38:	75030000 	strvc	r0, [r3, #-0]
    3e3c:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    3e40:	00005728 	andeq	r5, r0, r8, lsr #14
    3e44:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3e48:	00000bd7 	ldrdeq	r0, [r0], -r7
    3e4c:	00387503 	eorseq	r7, r8, r3, lsl #10
    3e50:	00682902 	rsbeq	r2, r8, r2, lsl #18
    3e54:	01020000 	mrseq	r0, (UNDEF: 2)
    3e58:	0009dc08 	andeq	sp, r9, r8, lsl #24
    3e5c:	04590400 	ldrbeq	r0, [r9], #-1024	; 0x400
    3e60:	2f020000 	svccs	0x00020000
    3e64:	0000007a 	andeq	r0, r0, sl, ror r0
    3e68:	00004505 	andeq	r4, r0, r5, lsl #10
    3e6c:	02450400 	subeq	r0, r5, #0, 8
    3e70:	30020000 	andcc	r0, r2, r0
    3e74:	0000008a 	andeq	r0, r0, sl, lsl #1
    3e78:	00005705 	andeq	r5, r0, r5, lsl #14
    3e7c:	02010600 	andeq	r0, r1, #0, 12
    3e80:	0000a43c 	andeq	sl, r0, ip, lsr r4
    3e84:	1eca0700 	cdpne	7, 12, cr0, cr10, cr0, {0}
    3e88:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3e8c:	00544553 	subseq	r4, r4, r3, asr r5
    3e90:	8e040001 	cdphi	0, 0, cr0, cr4, cr1, {0}
    3e94:	02000007 	andeq	r0, r0, #7
    3e98:	00008f3c 	andeq	r8, r0, ip, lsr pc
    3e9c:	02010600 	andeq	r0, r1, #0, 12
    3ea0:	0000c43e 	andeq	ip, r0, lr, lsr r4
    3ea4:	053f0700 	ldreq	r0, [pc, #-1792]!	; 37ac <__Stack_Size+0x33ac>
    3ea8:	07000000 	streq	r0, [r0, -r0]
    3eac:	00000917 	andeq	r0, r0, r7, lsl r9
    3eb0:	b4040001 	strlt	r0, [r4], #-1
    3eb4:	02000000 	andeq	r0, r0, #0
    3eb8:	0000af3e 	andeq	sl, r0, lr, lsr pc
    3ebc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3ec0:	00000931 	andeq	r0, r0, r1, lsr r9
    3ec4:	0c032409 	cfstrseq	mvf2, [r3], {9}
    3ec8:	00015201 	andeq	r5, r1, r1, lsl #4
    3ecc:	43410a00 	movtmi	r0, #6656	; 0x1a00
    3ed0:	0e030052 	mcreq	0, 0, r0, cr3, cr2, {2}
    3ed4:	00006f01 	andeq	r6, r0, r1, lsl #30
    3ed8:	070b0000 	streq	r0, [fp, -r0]
    3edc:	0300001c 	movweq	r0, #28
    3ee0:	006f010f 	rsbeq	r0, pc, pc, lsl #2
    3ee4:	0b040000 	bleq	103eec <__Stack_Size+0x103aec>
    3ee8:	00001c04 	andeq	r1, r0, r4, lsl #24
    3eec:	6f011003 	svcvs	0x00011003
    3ef0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3ef4:	0052530a 	subseq	r5, r2, sl, lsl #6
    3ef8:	6f011103 	svcvs	0x00011103
    3efc:	0c000000 	stceq	0, cr0, [r0], {-0}
    3f00:	0052430a 	subseq	r4, r2, sl, lsl #6
    3f04:	6f011203 	svcvs	0x00011203
    3f08:	10000000 	andne	r0, r0, r0
    3f0c:	0052410a 	subseq	r4, r2, sl, lsl #2
    3f10:	6f011303 	svcvs	0x00011303
    3f14:	14000000 	strne	r0, [r0], #-0
    3f18:	001daf0b 	andseq	sl, sp, fp, lsl #30
    3f1c:	01140300 	tsteq	r4, r0, lsl #6
    3f20:	0000006f 	andeq	r0, r0, pc, rrx
    3f24:	424f0a18 	submi	r0, pc, #24, 20	; 0x18000
    3f28:	15030052 	strne	r0, [r3, #-82]	; 0x52
    3f2c:	00006f01 	andeq	r6, r0, r1, lsl #30
    3f30:	b40b1c00 	strlt	r1, [fp], #-3072	; 0xc00
    3f34:	0300001b 	movweq	r0, #27
    3f38:	006f0116 	rsbeq	r0, pc, r6, lsl r1	; <UNPREDICTABLE>
    3f3c:	00200000 	eoreq	r0, r0, r0
    3f40:	001db80c 	andseq	fp, sp, ip, lsl #16
    3f44:	01170300 	tsteq	r7, r0, lsl #6
    3f48:	000000d6 	ldrdeq	r0, [r0], -r6
    3f4c:	19031009 	stmdbne	r3, {r0, r3, ip}
    3f50:	0001d001 	andeq	sp, r1, r1
    3f54:	44520a00 	ldrbmi	r0, [r2], #-2560	; 0xa00
    3f58:	1b030050 	blne	c40a0 <__Stack_Size+0xc3ca0>
    3f5c:	00007f01 	andeq	r7, r0, r1, lsl #30
    3f60:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    3f64:	0300001d 	movweq	r0, #29
    3f68:	007f011c 	rsbseq	r0, pc, ip, lsl r1	; <UNPREDICTABLE>
    3f6c:	0b020000 	bleq	83f74 <__Stack_Size+0x83b74>
    3f70:	00001d8e 	andeq	r1, r0, lr, lsl #27
    3f74:	7f011d03 	svcvc	0x00011d03
    3f78:	04000000 	streq	r0, [r0], #-0
    3f7c:	001d940b 	andseq	r9, sp, fp, lsl #8
    3f80:	011e0300 	tsteq	lr, r0, lsl #6
    3f84:	0000007f 	andeq	r0, r0, pc, ror r0
    3f88:	1bcd0b06 	blne	ff346ba8 <SCS_BASE+0x1f338ba8>
    3f8c:	1f030000 	svcne	0x00030000
    3f90:	00007f01 	andeq	r7, r0, r1, lsl #30
    3f94:	d20b0800 	andle	r0, fp, #0, 16
    3f98:	0300001b 	movweq	r0, #27
    3f9c:	007f0120 	rsbseq	r0, pc, r0, lsr #2
    3fa0:	0b0a0000 	bleq	283fa8 <__Stack_Size+0x283ba8>
    3fa4:	00001bd7 	ldrdeq	r1, [r0], -r7
    3fa8:	7f012103 	svcvc	0x00012103
    3fac:	0c000000 	stceq	0, cr0, [r0], {-0}
    3fb0:	001bdc0b 	andseq	sp, fp, fp, lsl #24
    3fb4:	01220300 	teqeq	r2, r0, lsl #6
    3fb8:	0000007f 	andeq	r0, r0, pc, ror r0
    3fbc:	f40c000e 	vst4.8	{d0-d3}, [ip], lr
    3fc0:	0300001c 	movweq	r0, #28
    3fc4:	015e0123 	cmpeq	lr, r3, lsr #2
    3fc8:	01060000 	mrseq	r0, (UNDEF: 6)
    3fcc:	02031c04 	andeq	r1, r3, #4, 24	; 0x400
    3fd0:	6c070000 	stcvs	0, cr0, [r7], {-0}
    3fd4:	01000004 	tsteq	r0, r4
    3fd8:	00083b07 	andeq	r3, r8, r7, lsl #22
    3fdc:	c4070200 	strgt	r0, [r7], #-512	; 0x200
    3fe0:	03000000 	movweq	r0, #0
    3fe4:	0004f607 	andeq	pc, r4, r7, lsl #12
    3fe8:	0e070400 	cfcpyseq	mvf0, mvf7
    3fec:	05000004 	streq	r0, [r0, #-4]
    3ff0:	07580400 	ldrbeq	r0, [r8, -r0, lsl #8]
    3ff4:	22040000 	andcs	r0, r4, #0
    3ff8:	000001dc 	ldrdeq	r0, [r0], -ip
    3ffc:	001ce40d 	andseq	lr, ip, sp, lsl #8
    4000:	033f0100 	teqeq	pc, #0, 2
    4004:	00000203 	andeq	r0, r0, r3, lsl #4
    4008:	00022c01 	andeq	r2, r2, r1, lsl #24
    400c:	1c470e00 	mcrrne	14, 0, r0, r7, cr0
    4010:	41010000 	mrsmi	r0, (UNDEF: 1)
    4014:	00020303 	andeq	r0, r2, r3, lsl #6
    4018:	470f0000 	strmi	r0, [pc, -r0]
    401c:	01000007 	tsteq	r0, r7
    4020:	00111456 	andseq	r1, r1, r6, asr r4
    4024:	00001808 	andeq	r1, r0, r8, lsl #16
    4028:	519c0100 	orrspl	r0, ip, r0, lsl #2
    402c:	10000002 	andne	r0, r0, r2
    4030:	00001b68 	andeq	r1, r0, r8, ror #22
    4034:	003a5601 	eorseq	r5, sl, r1, lsl #12
    4038:	0ae10000 	beq	ff844040 <SCS_BASE+0x1f836040>
    403c:	0f000000 	svceq	0x00000000
    4040:	00001cff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    4044:	00006a01 	andeq	r6, r0, r1, lsl #20
    4048:	00180000 	andseq	r0, r8, r0
    404c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4050:	00000276 	andeq	r0, r0, r6, ror r2
    4054:	001cce10 	andseq	ip, ip, r0, lsl lr
    4058:	3a6a0100 	bcc	1a84460 <__Stack_Size+0x1a84060>
    405c:	02000000 	andeq	r0, r0, #0
    4060:	0000000b 	andeq	r0, r0, fp
    4064:	00015d0f 	andeq	r5, r1, pc, lsl #26
    4068:	2c7e0100 	ldfcse	f0, [lr], #-0
    406c:	18080011 	stmdane	r8, {r0, r4}
    4070:	01000000 	mrseq	r0, (UNDEF: 0)
    4074:	00029b9c 	muleq	r2, ip, fp
    4078:	1de11000 	stclne	0, cr1, [r1]
    407c:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    4080:	0000003a 	andeq	r0, r0, sl, lsr r0
    4084:	00000b23 	andeq	r0, r0, r3, lsr #22
    4088:	04881100 	streq	r1, [r8], #256	; 0x100
    408c:	90010000 	andls	r0, r1, r0
    4090:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
    4094:	00000018 	andeq	r0, r0, r8, lsl r0
    4098:	f8119c01 			; <UNDEFINED> instruction: 0xf8119c01
    409c:	01000005 	tsteq	r0, r5
    40a0:	00115c9e 	mulseq	r1, lr, ip
    40a4:	00001008 	andeq	r1, r0, r8
    40a8:	129c0100 	addsne	r0, ip, #0, 2
    40ac:	00001d34 	andeq	r1, r0, r4, lsr sp
    40b0:	3a029601 	bcc	a98bc <__Stack_Size+0xa94bc>
    40b4:	00000000 	andeq	r0, r0, r0
    40b8:	0c000000 	stceq	0, cr0, [r0], {-0}
    40bc:	01000000 	mrseq	r0, (UNDEF: 0)
    40c0:	1be1129c 	blne	ff848b38 <SCS_BASE+0x1f83ab38>
    40c4:	a3010000 	movwge	r0, #4096	; 0x1000
    40c8:	00003a02 	andeq	r3, r0, r2, lsl #20
    40cc:	00000000 	andeq	r0, r0, r0
    40d0:	00000c00 	andeq	r0, r0, r0, lsl #24
    40d4:	139c0100 	orrsne	r0, ip, #0, 2
    40d8:	00001c9a 	muleq	r0, sl, ip
    40dc:	a402b101 	strge	fp, [r2], #-257	; 0x101
    40e0:	00000000 	andeq	r0, r0, r0
    40e4:	10000000 	andne	r0, r0, r0
    40e8:	01000000 	mrseq	r0, (UNDEF: 0)
    40ec:	0003149c 	muleq	r3, ip, r4
    40f0:	1b5a1400 	blne	16890f8 <__Stack_Size+0x1688cf8>
    40f4:	b3010000 	movwlt	r0, #4096	; 0x1000
    40f8:	0000a402 	andeq	sl, r0, r2, lsl #8
    40fc:	000b4400 	andeq	r4, fp, r0, lsl #8
    4100:	76130000 	ldrvc	r0, [r3], -r0
    4104:	0100001b 	tsteq	r0, fp, lsl r0
    4108:	00a402c7 	adceq	r0, r4, r7, asr #5
    410c:	00000000 	andeq	r0, r0, r0
    4110:	00100000 	andseq	r0, r0, r0
    4114:	9c010000 	stcls	0, cr0, [r1], {-0}
    4118:	0000033f 	andeq	r0, r0, pc, lsr r3
    411c:	001c5314 	andseq	r5, ip, r4, lsl r3
    4120:	02c90100 	sbceq	r0, r9, #0, 2
    4124:	000000a4 	andeq	r0, r0, r4, lsr #1
    4128:	00000b69 	andeq	r0, r0, r9, ror #22
    412c:	1b221500 	blne	889534 <__Stack_Size+0x889134>
    4130:	e2010000 	and	r0, r1, #0
    4134:	00000002 	andeq	r0, r0, r2
    4138:	00001800 	andeq	r1, r0, r0, lsl #16
    413c:	749c0100 	ldrvc	r0, [ip], #256	; 0x100
    4140:	16000003 	strne	r0, [r0], -r3
    4144:	00001da6 	andeq	r1, r0, r6, lsr #27
    4148:	4c02e201 	sfmmi	f6, 1, [r2], {1}
    414c:	8f000000 	svchi	0x00000000
    4150:	1700000b 	strne	r0, [r0, -fp]
    4154:	00001a89 	andeq	r1, r0, r9, lsl #21
    4158:	c402e201 	strgt	lr, [r2], #-513	; 0x201
    415c:	01000000 	mrseq	r0, (UNDEF: 0)
    4160:	74130051 	ldrvc	r0, [r3], #-81	; 0x51
    4164:	0100001c 	tsteq	r0, ip, lsl r0
    4168:	00a40301 	adceq	r0, r4, r1, lsl #6
    416c:	00000000 	andeq	r0, r0, r0
    4170:	00200000 	eoreq	r0, r0, r0
    4174:	9c010000 	stcls	0, cr0, [r1], {-0}
    4178:	000003af 	andeq	r0, r0, pc, lsr #7
    417c:	001d6216 	andseq	r6, sp, r6, lsl r2
    4180:	03010100 	movweq	r0, #4352	; 0x1100
    4184:	0000004c 	andeq	r0, r0, ip, asr #32
    4188:	00000bc9 	andeq	r0, r0, r9, asr #23
    418c:	001c5314 	andseq	r5, ip, r4, lsl r3
    4190:	03030100 	movweq	r0, #12544	; 0x3100
    4194:	000000a4 	andeq	r0, r0, r4, lsr #1
    4198:	00000c03 	andeq	r0, r0, r3, lsl #24
    419c:	01be1500 			; <UNDEFINED> instruction: 0x01be1500
    41a0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    41a4:	00116c03 	andseq	r6, r1, r3, lsl #24
    41a8:	00000c08 	andeq	r0, r0, r8, lsl #24
    41ac:	d49c0100 	ldrle	r0, [ip], #256	; 0x100
    41b0:	17000003 	strne	r0, [r0, -r3]
    41b4:	00001d62 	andeq	r1, r0, r2, ror #26
    41b8:	4c032e01 	stcmi	14, cr2, [r3], {1}
    41bc:	01000000 	mrseq	r0, (UNDEF: 0)
    41c0:	0e180050 	mrceq	0, 0, r0, cr8, cr0, {2}
    41c4:	78000002 	stmdavc	r0, {r1}
    41c8:	28080011 	stmdacs	r8, {r0, r4}
    41cc:	01000000 	mrseq	r0, (UNDEF: 0)
    41d0:	0004009c 	muleq	r4, ip, r0
    41d4:	021f1900 	andseq	r1, pc, #0, 18
    41d8:	0c220000 	stceq	0, cr0, [r2], #-0
    41dc:	861a0000 	ldrhi	r0, [sl], -r0
    41e0:	0e080011 	mcreq	0, 0, r0, cr8, cr1, {0}
    41e4:	1b000000 	blne	41ec <__Stack_Size+0x3dec>
    41e8:	0000021f 	andeq	r0, r0, pc, lsl r2
    41ec:	941c0000 	ldrls	r0, [ip], #-0
    41f0:	0100001b 	tsteq	r0, fp, lsl r0
    41f4:	18010385 	stmdane	r1, {r0, r2, r7, r8, r9}
    41f8:	1d000004 	stcne	0, cr0, [r0, #-16]
    41fc:	87010069 	strhi	r0, [r1, -r9, rrx]
    4200:	00006f03 	andeq	r6, r0, r3, lsl #30
    4204:	c6130000 	ldrgt	r0, [r3], -r0
    4208:	0100001d 	tsteq	r0, sp, lsl r0
    420c:	02030366 	andeq	r0, r3, #-1744830463	; 0x98000001
    4210:	11a00000 	movne	r0, r0
    4214:	00360800 	eorseq	r0, r6, r0, lsl #16
    4218:	9c010000 	stcls	0, cr0, [r1], {-0}
    421c:	0000048c 	andeq	r0, r0, ip, lsl #9
    4220:	001c9216 	andseq	r9, ip, r6, lsl r2
    4224:	03660100 	cmneq	r6, #0, 2
    4228:	0000003a 	andeq	r0, r0, sl, lsr r0
    422c:	00000c41 	andeq	r0, r0, r1, asr #24
    4230:	001c4c14 	andseq	r4, ip, r4, lsl ip
    4234:	03680100 	cmneq	r8, #0, 2
    4238:	00000203 	andeq	r0, r0, r3, lsl #4
    423c:	00000c5f 	andeq	r0, r0, pc, asr ip
    4240:	0004001e 	andeq	r0, r4, lr, lsl r0
    4244:	0011ae00 	andseq	sl, r1, r0, lsl #28
    4248:	00001208 	andeq	r1, r0, r8, lsl #4
    424c:	03700100 	cmneq	r0, #0, 2
    4250:	00000479 	andeq	r0, r0, r9, ror r4
    4254:	0011ae1a 	andseq	sl, r1, sl, lsl lr
    4258:	00001208 	andeq	r1, r0, r8, lsl #4
    425c:	040d1f00 	streq	r1, [sp], #-3840	; 0xf00
    4260:	91020000 	mrsls	r0, (UNDEF: 2)
    4264:	20000074 	andcs	r0, r0, r4, ror r0
    4268:	080011a8 	stmdaeq	r0, {r3, r5, r7, r8, ip}
    426c:	0000020e 	andeq	r0, r0, lr, lsl #4
    4270:	0011c420 	andseq	ip, r1, r0, lsr #8
    4274:	00020e08 	andeq	r0, r2, r8, lsl #28
    4278:	f8210000 			; <UNDEFINED> instruction: 0xf8210000
    427c:	0100000b 	tsteq	r0, fp
    4280:	000203ad 	andeq	r0, r2, sp, lsr #7
    4284:	0011d800 	andseq	sp, r1, r0, lsl #16
    4288:	00004008 	andeq	r4, r0, r8
    428c:	ea9c0100 	b	fe704694 <SCS_BASE+0x1e6f6694>
    4290:	10000004 	andne	r0, r0, r4
    4294:	00001c5d 	andeq	r1, r0, sp, asr ip
    4298:	003aad01 	eorseq	sl, sl, r1, lsl #26
    429c:	0c940000 	ldceq	0, cr0, [r4], {0}
    42a0:	4c220000 	stcmi	0, cr0, [r2], #-0
    42a4:	0100001c 	tsteq	r0, ip, lsl r0
    42a8:	000203af 	andeq	r0, r2, pc, lsr #7
    42ac:	000cc000 	andeq	ip, ip, r0
    42b0:	11e42300 	mvnne	r2, r0, lsl #6
    42b4:	04180800 	ldreq	r0, [r8], #-2048	; 0x800
    42b8:	04d80000 	ldrbeq	r0, [r8], #0
    42bc:	01240000 	teqeq	r4, r0
    42c0:	ff0a0350 			; <UNDEFINED> instruction: 0xff0a0350
    42c4:	0425000f 	strteq	r0, [r5], #-15
    42c8:	18080012 	stmdane	r8, {r1, r4}
    42cc:	24000004 	strcs	r0, [r0], #-4
    42d0:	0a035001 	beq	d82dc <__Stack_Size+0xd7edc>
    42d4:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    42d8:	001bb921 	andseq	fp, fp, r1, lsr #18
    42dc:	03d40100 	bicseq	r0, r4, #0, 2
    42e0:	00000002 	andeq	r0, r0, r2
    42e4:	3c000000 	stccc	0, cr0, [r0], {-0}
    42e8:	01000000 	mrseq	r0, (UNDEF: 0)
    42ec:	0005399c 	muleq	r5, ip, r9
    42f0:	1c4c2200 	sfmne	f2, 2, [ip], {-0}
    42f4:	d6010000 	strle	r0, [r1], -r0
    42f8:	00000203 	andeq	r0, r0, r3, lsl #4
    42fc:	00000cea 	andeq	r0, r0, sl, ror #25
    4300:	00000023 	andeq	r0, r0, r3, lsr #32
    4304:	00041800 	andeq	r1, r4, r0, lsl #16
    4308:	00052700 	andeq	r2, r5, r0, lsl #14
    430c:	50012400 	andpl	r2, r1, r0, lsl #8
    4310:	0fff0a03 	svceq	0x00ff0a03
    4314:	00002500 	andeq	r2, r0, r0, lsl #10
    4318:	04180000 	ldreq	r0, [r8], #-0
    431c:	01240000 	teqeq	r4, r0
    4320:	ff0a0350 			; <UNDEFINED> instruction: 0xff0a0350
    4324:	2100000f 	tstcs	r0, pc
    4328:	00001b43 	andeq	r1, r0, r3, asr #22
    432c:	0203f701 	andeq	pc, r3, #262144	; 0x40000
    4330:	00000000 	andeq	r0, r0, r0
    4334:	00700000 	rsbseq	r0, r0, r0
    4338:	9c010000 	stcls	0, cr0, [r1], {-0}
    433c:	0000059b 	muleq	r0, fp, r5
    4340:	001c4c22 	andseq	r4, ip, r2, lsr #24
    4344:	03f90100 	mvnseq	r0, #0, 2
    4348:	14000002 	strne	r0, [r0], #-2
    434c:	2300000d 	movwcs	r0, #13
    4350:	00000000 	andeq	r0, r0, r0
    4354:	00000418 	andeq	r0, r0, r8, lsl r4
    4358:	00000576 	andeq	r0, r0, r6, ror r5
    435c:	03500124 	cmpeq	r0, #36, 2
    4360:	000fff0a 	andeq	pc, pc, sl, lsl #30
    4364:	00000023 	andeq	r0, r0, r3, lsr #32
    4368:	00041800 	andeq	r1, r4, r0, lsl #16
    436c:	00058b00 	andeq	r8, r5, r0, lsl #22
    4370:	50012400 	andpl	r2, r1, r0, lsl #8
    4374:	0fff0a03 	svceq	0x00ff0a03
    4378:	00002500 	andeq	r2, r0, r0, lsl #10
    437c:	04180000 	ldreq	r0, [r8], #-0
    4380:	01240000 	teqeq	r4, r0
    4384:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    4388:	132a1300 	teqne	sl, #0, 6
    438c:	36010000 	strcc	r0, [r1], -r0
    4390:	00020301 	andeq	r0, r2, r1, lsl #6
    4394:	00121800 	andseq	r1, r2, r0, lsl #16
    4398:	00004808 	andeq	r4, r0, r8, lsl #16
    439c:	1b9c0100 	blne	fe7047a4 <SCS_BASE+0x1e6f67a4>
    43a0:	16000006 	strne	r0, [r0], -r6
    43a4:	00003c45 	andeq	r3, r0, r5, asr #24
    43a8:	3a013601 	bcc	51bb4 <__Stack_Size+0x517b4>
    43ac:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    43b0:	1600000d 	strne	r0, [r0], -sp
    43b4:	00001cc9 	andeq	r1, r0, r9, asr #25
    43b8:	3a013601 	bcc	51bc4 <__Stack_Size+0x517c4>
    43bc:	75000000 	strvc	r0, [r0, #-0]
    43c0:	1400000d 	strne	r0, [r0], #-13
    43c4:	00001c4c 	andeq	r1, r0, ip, asr #24
    43c8:	03013801 	movweq	r3, #6145	; 0x1801
    43cc:	a1000002 	tstge	r0, r2
    43d0:	2300000d 	movwcs	r0, #13
    43d4:	08001224 	stmdaeq	r0, {r2, r5, r9, ip}
    43d8:	00000418 	andeq	r0, r0, r8, lsl r4
    43dc:	000005f8 	strdeq	r0, [r0], -r8
    43e0:	01500124 	cmpeq	r0, r4, lsr #2
    43e4:	3c23003f 	stccc	0, cr0, [r3], #-252	; 0xffffff04
    43e8:	18080012 	stmdane	r8, {r1, r4}
    43ec:	0b000004 	bleq	4404 <__Stack_Size+0x4004>
    43f0:	24000006 	strcs	r0, [r0], #-6
    43f4:	3f015001 	svccc	0x00015001
    43f8:	124a2500 	subne	r2, sl, #0, 10
    43fc:	04180800 	ldreq	r0, [r8], #-2048	; 0x800
    4400:	01240000 	teqeq	r4, r0
    4404:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    4408:	1d4c1300 	stclne	3, cr1, [ip, #-0]
    440c:	71010000 	mrsvc	r0, (UNDEF: 1)
    4410:	00020301 	andeq	r0, r2, r1, lsl #6
    4414:	00000000 	andeq	r0, r0, r0
    4418:	00003800 	andeq	r3, r0, r0, lsl #16
    441c:	889c0100 	ldmhi	ip, {r8}
    4420:	16000006 	strne	r0, [r0], -r6
    4424:	00003c45 	andeq	r3, r0, r5, asr #24
    4428:	3a017101 	bcc	60834 <__Stack_Size+0x60434>
    442c:	d6000000 	strle	r0, [r0], -r0
    4430:	1600000d 	strne	r0, [r0], -sp
    4434:	00001cc9 	andeq	r1, r0, r9, asr #25
    4438:	4c017101 	stfmis	f7, [r1], {1}
    443c:	02000000 	andeq	r0, r0, #0
    4440:	1400000e 	strne	r0, [r0], #-14
    4444:	00001c4c 	andeq	r1, r0, ip, asr #24
    4448:	03017301 	movweq	r7, #4865	; 0x1301
    444c:	23000002 	movwcs	r0, #2
    4450:	2300000e 	movwcs	r0, #14
    4454:	00000000 	andeq	r0, r0, r0
    4458:	00000418 	andeq	r0, r0, r8, lsl r4
    445c:	00000678 	andeq	r0, r0, r8, ror r6
    4460:	01500124 	cmpeq	r0, r4, lsr #2
    4464:	0025003f 	eoreq	r0, r5, pc, lsr r0
    4468:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    446c:	24000004 	strcs	r0, [r0], #-4
    4470:	3f015001 	svccc	0x00015001
    4474:	18130000 	ldmdane	r3, {}	; <UNPREDICTABLE>
    4478:	0100001d 	tsteq	r0, sp, lsl r0
    447c:	02030199 	andeq	r0, r3, #1073741862	; 0x40000026
    4480:	00000000 	andeq	r0, r0, r0
    4484:	00480000 	subeq	r0, r8, r0
    4488:	9c010000 	stcls	0, cr0, [r1], {-0}
    448c:	000006f5 	strdeq	r0, [r0], -r5
    4490:	003c4516 	eorseq	r4, ip, r6, lsl r5
    4494:	01990100 	orrseq	r0, r9, r0, lsl #2
    4498:	0000003a 	andeq	r0, r0, sl, lsr r0
    449c:	00000e4d 	andeq	r0, r0, sp, asr #28
    44a0:	001cc916 	andseq	ip, ip, r6, lsl r9
    44a4:	01990100 	orrseq	r0, r9, r0, lsl #2
    44a8:	0000005e 	andeq	r0, r0, lr, asr r0
    44ac:	00000e79 	andeq	r0, r0, r9, ror lr
    44b0:	001c4c14 	andseq	r4, ip, r4, lsl ip
    44b4:	019b0100 	orrseq	r0, fp, r0, lsl #2
    44b8:	00000203 	andeq	r0, r0, r3, lsl #4
    44bc:	00000e9a 	muleq	r0, sl, lr
    44c0:	00000023 	andeq	r0, r0, r3, lsr #32
    44c4:	00041800 	andeq	r1, r4, r0, lsl #16
    44c8:	0006e500 	andeq	lr, r6, r0, lsl #10
    44cc:	50012400 	andpl	r2, r1, r0, lsl #8
    44d0:	25003f01 	strcs	r3, [r0, #-3841]	; 0xf01
    44d4:	00000000 	andeq	r0, r0, r0
    44d8:	00000418 	andeq	r0, r0, r8, lsl r4
    44dc:	01500124 	cmpeq	r0, r4, lsr #2
    44e0:	1300003f 	movwne	r0, #63	; 0x3f
    44e4:	00001d6d 	andeq	r1, r0, sp, ror #26
    44e8:	0301ca01 	movweq	ip, #6657	; 0x1a01
    44ec:	00000002 	andeq	r0, r0, r2
    44f0:	a0000000 	andge	r0, r0, r0
    44f4:	01000000 	mrseq	r0, (UNDEF: 0)
    44f8:	0007cb9c 	muleq	r7, ip, fp
    44fc:	1d9a1600 	ldcne	6, cr1, [sl]
    4500:	ca010000 	bgt	44508 <__Stack_Size+0x44108>
    4504:	00003a01 	andeq	r3, r0, r1, lsl #20
    4508:	000ec400 	andeq	ip, lr, r0, lsl #8
    450c:	1cc41400 	cfstrdne	mvd1, [r4], {0}
    4510:	cc010000 	stcgt	0, cr0, [r1], {-0}
    4514:	00004c01 	andeq	r4, r0, r1, lsl #24
    4518:	000f0d00 	andeq	r0, pc, r0, lsl #26
    451c:	1c881400 	cfstrsne	mvf1, [r8], {0}
    4520:	cc010000 	stcgt	0, cr0, [r1], {-0}
    4524:	00004c01 	andeq	r4, r0, r1, lsl #24
    4528:	000f5900 	andeq	r5, pc, r0, lsl #18
    452c:	1b311400 	blne	c49534 <__Stack_Size+0xc49134>
    4530:	cc010000 	stcgt	0, cr0, [r1], {-0}
    4534:	00004c01 	andeq	r4, r0, r1, lsl #24
    4538:	000fb100 	andeq	fp, pc, r0, lsl #2
    453c:	1c6a1400 	cfstrdne	mvd1, [sl], #-0
    4540:	cc010000 	stcgt	0, cr0, [r1], {-0}
    4544:	00004c01 	andeq	r4, r0, r1, lsl #24
    4548:	00100d00 	andseq	r0, r0, r0, lsl #26
    454c:	1c4c1400 	cfstrdne	mvd1, [ip], {-0}
    4550:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    4554:	00020301 	andeq	r0, r2, r1, lsl #6
    4558:	00105500 	andseq	r5, r0, r0, lsl #10
    455c:	00002300 	andeq	r2, r0, r0, lsl #6
    4560:	04180000 	ldreq	r0, [r8], #-0
    4564:	07820000 	streq	r0, [r2, r0]
    4568:	01240000 	teqeq	r4, r0
    456c:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    4570:	00000023 	andeq	r0, r0, r3, lsr #32
    4574:	00041800 	andeq	r1, r4, r0, lsl #16
    4578:	00079500 	andeq	r9, r7, r0, lsl #10
    457c:	50012400 	andpl	r2, r1, r0, lsl #8
    4580:	23003f01 	movwcs	r3, #3841	; 0xf01
    4584:	00000000 	andeq	r0, r0, r0
    4588:	00000418 	andeq	r0, r0, r8, lsl r4
    458c:	000007a8 	andeq	r0, r0, r8, lsr #15
    4590:	01500124 	cmpeq	r0, r4, lsr #2
    4594:	0023003f 	eoreq	r0, r3, pc, lsr r0
    4598:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    459c:	bb000004 	bllt	45b4 <__Stack_Size+0x41b4>
    45a0:	24000007 	strcs	r0, [r0], #-7
    45a4:	3f015001 	svccc	0x00015001
    45a8:	00002500 	andeq	r2, r0, r0, lsl #10
    45ac:	04180000 	ldreq	r0, [r8], #-0
    45b0:	01240000 	teqeq	r4, r0
    45b4:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    45b8:	1c2f1300 	stcne	3, cr1, [pc], #-0	; 45c0 <__Stack_Size+0x41c0>
    45bc:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    45c0:	00020302 	andeq	r0, r2, r2, lsl #6
    45c4:	00000000 	andeq	r0, r0, r0
    45c8:	00008c00 	andeq	r8, r0, r0, lsl #24
    45cc:	419c0100 	orrsmi	r0, ip, r0, lsl #2
    45d0:	16000008 	strne	r0, [r0], -r8
    45d4:	00001a89 	andeq	r1, r0, r9, lsl #21
    45d8:	c4021901 	strgt	r1, [r2], #-2305	; 0x901
    45dc:	ab000000 	blge	45e4 <__Stack_Size+0x41e4>
    45e0:	14000010 	strne	r0, [r0], #-16
    45e4:	00001c4c 	andeq	r1, r0, ip, asr #24
    45e8:	03021b01 	movweq	r1, #11009	; 0x2b01
    45ec:	cc000002 	stcgt	0, cr0, [r0], {2}
    45f0:	23000010 	movwcs	r0, #16
    45f4:	00000000 	andeq	r0, r0, r0
    45f8:	00000418 	andeq	r0, r0, r8, lsl r4
    45fc:	0000081a 	andeq	r0, r0, sl, lsl r8
    4600:	03500124 	cmpeq	r0, #36, 2
    4604:	000fff0a 	andeq	pc, pc, sl, lsl #30
    4608:	00000023 	andeq	r0, r0, r3, lsr #32
    460c:	00041800 	andeq	r1, r4, r0, lsl #16
    4610:	00082f00 	andeq	r2, r8, r0, lsl #30
    4614:	50012400 	andpl	r2, r1, r0, lsl #8
    4618:	0fff0a03 	svceq	0x00ff0a03
    461c:	00002500 	andeq	r2, r0, r0, lsl #10
    4620:	04180000 	ldreq	r0, [r8], #-0
    4624:	01240000 	teqeq	r4, r0
    4628:	ff0a0350 			; <UNDEFINED> instruction: 0xff0a0350
    462c:	2600000f 	strcs	r0, [r0], -pc
    4630:	00001c0c 	andeq	r1, r0, ip, lsl #24
    4634:	03026a01 	movweq	r6, #10753	; 0x2a01
    4638:	00000002 	andeq	r0, r0, r2
    463c:	54000000 	strpl	r0, [r0], #-0
    4640:	01000000 	mrseq	r0, (UNDEF: 0)
    4644:	1c27169c 	stcne	6, cr1, [r7], #-624	; 0xfffffd90
    4648:	6a010000 	bvs	44650 <__Stack_Size+0x44250>
    464c:	00004c02 	andeq	r4, r0, r2, lsl #24
    4650:	00110100 	andseq	r0, r1, r0, lsl #2
    4654:	1b3b1600 	blne	ec9e5c <__Stack_Size+0xec9a5c>
    4658:	6a010000 	bvs	44660 <__Stack_Size+0x44260>
    465c:	00004c02 	andeq	r4, r0, r2, lsl #24
    4660:	00112200 	andseq	r2, r1, r0, lsl #4
    4664:	1cbb1600 	ldcne	6, cr1, [fp]
    4668:	6a010000 	bvs	44670 <__Stack_Size+0x44270>
    466c:	00004c02 	andeq	r4, r0, r2, lsl #24
    4670:	00114300 	andseq	r4, r1, r0, lsl #6
    4674:	1c4c1400 	cfstrdne	mvd1, [ip], {-0}
    4678:	6c010000 	stcvs	0, cr0, [r1], {-0}
    467c:	00020302 	andeq	r0, r2, r2, lsl #6
    4680:	00116400 	andseq	r6, r1, r0, lsl #8
    4684:	00002300 	andeq	r2, r0, r0, lsl #6
    4688:	04180000 	ldreq	r0, [r8], #-0
    468c:	08aa0000 	stmiaeq	sl!, {}	; <UNPREDICTABLE>
    4690:	01240000 	teqeq	r4, r0
    4694:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    4698:	00000025 	andeq	r0, r0, r5, lsr #32
    469c:	00041800 	andeq	r1, r4, r0, lsl #16
    46a0:	50012400 	andpl	r2, r1, r0, lsl #8
    46a4:	00003f01 	andeq	r3, r0, r1, lsl #30
    46a8:	0001a900 	andeq	sl, r1, r0, lsl #18
    46ac:	4b000400 	blmi	56b4 <__Stack_Size+0x52b4>
    46b0:	04000010 	streq	r0, [r0], #-16
    46b4:	0002f401 	andeq	pc, r2, r1, lsl #8
    46b8:	1e110100 	mufnes	f0, f1, f0
    46bc:	03ec0000 	mvneq	r0, #0
    46c0:	05000000 	streq	r0, [r0, #-0]
    46c4:	00000000 	andeq	r0, r0, r0
    46c8:	13660000 	cmnne	r6, #0
    46cc:	04020000 	streq	r0, [r2], #-0
    46d0:	00082d05 	andeq	r2, r8, r5, lsl #26
    46d4:	05020200 	streq	r0, [r2, #-512]	; 0x200
    46d8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    46dc:	de060102 	adfles	f0, f6, f2
    46e0:	03000009 	movweq	r0, #9
    46e4:	00323375 	eorseq	r3, r2, r5, ror r3
    46e8:	00452702 	subeq	r2, r5, r2, lsl #14
    46ec:	04020000 	streq	r0, [r2], #-0
    46f0:	00093a07 	andeq	r3, r9, r7, lsl #20
    46f4:	31750300 	cmncc	r5, r0, lsl #6
    46f8:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    46fc:	00000057 	andeq	r0, r0, r7, asr r0
    4700:	d7070202 	strle	r0, [r7, -r2, lsl #4]
    4704:	0300000b 	movweq	r0, #11
    4708:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    470c:	00006829 	andeq	r6, r0, r9, lsr #16
    4710:	08010200 	stmdaeq	r1, {r9}
    4714:	000009dc 	ldrdeq	r0, [r0], -ip
    4718:	00045904 	andeq	r5, r4, r4, lsl #18
    471c:	7a2f0200 	bvc	bc4f24 <__Stack_Size+0xbc4b24>
    4720:	05000000 	streq	r0, [r0, #-0]
    4724:	00000045 	andeq	r0, r0, r5, asr #32
    4728:	3c020106 	stfccs	f0, [r2], {6}
    472c:	00000094 	muleq	r0, r4, r0
    4730:	001eca07 	andseq	ip, lr, r7, lsl #20
    4734:	53080000 	movwpl	r0, #32768	; 0x8000
    4738:	01005445 	tsteq	r0, r5, asr #8
    473c:	078e0400 	streq	r0, [lr, r0, lsl #8]
    4740:	3c020000 	stccc	0, cr0, [r2], {-0}
    4744:	0000007f 	andeq	r0, r0, pc, ror r0
    4748:	31070402 	tstcc	r7, r2, lsl #8
    474c:	09000009 	stmdbeq	r0, {r0, r3}
    4750:	01780310 	cmneq	r8, r0, lsl r3
    4754:	000000e1 	andeq	r0, r0, r1, ror #1
    4758:	00524b0a 	subseq	r4, r2, sl, lsl #22
    475c:	6f017a03 	svcvs	0x00017a03
    4760:	00000000 	andeq	r0, r0, r0
    4764:	0052500a 	subseq	r5, r2, sl
    4768:	6f017b03 	svcvs	0x00017b03
    476c:	04000000 	streq	r0, [r0], #-0
    4770:	524c520a 	subpl	r5, ip, #-1610612736	; 0xa0000000
    4774:	017c0300 	cmneq	ip, r0, lsl #6
    4778:	0000006f 	andeq	r0, r0, pc, rrx
    477c:	52530a08 	subspl	r0, r3, #8, 20	; 0x8000
    4780:	017d0300 	cmneq	sp, r0, lsl #6
    4784:	0000006f 	andeq	r0, r0, pc, rrx
    4788:	6b0b000c 	blvs	2c47c0 <__Stack_Size+0x2c43c0>
    478c:	0300001e 	movweq	r0, #30
    4790:	00a6017e 	adceq	r0, r6, lr, ror r1
    4794:	ae0c0000 	cdpge	0, 0, cr0, cr12, cr0, {0}
    4798:	01000002 	tsteq	r0, r2
    479c:	0012602d 	andseq	r6, r2, sp, lsr #32
    47a0:	00000c08 	andeq	r0, r0, r8, lsl #24
    47a4:	109c0100 	addsne	r0, ip, r0, lsl #2
    47a8:	0d000001 	stceq	0, cr0, [r0, #-4]
    47ac:	00001e47 	andeq	r1, r0, r7, asr #28
    47b0:	004c2d01 	subeq	r2, ip, r1, lsl #26
    47b4:	50010000 	andpl	r0, r1, r0
    47b8:	06630c00 	strbteq	r0, [r3], -r0, lsl #24
    47bc:	44010000 	strmi	r0, [r1], #-0
    47c0:	0800126c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip}
    47c4:	0000000c 	andeq	r0, r0, ip
    47c8:	01339c01 	teqeq	r3, r1, lsl #24
    47cc:	020d0000 	andeq	r0, sp, #0
    47d0:	0100001e 	tsteq	r0, lr, lsl r0
    47d4:	00005e44 	andeq	r5, r0, r4, asr #28
    47d8:	00500100 	subseq	r0, r0, r0, lsl #2
    47dc:	0006330c 	andeq	r3, r6, ip, lsl #6
    47e0:	78540100 	ldmdavc	r4, {r8}^
    47e4:	0c080012 	stceq	0, cr0, [r8], {18}
    47e8:	01000000 	mrseq	r0, (UNDEF: 0)
    47ec:	0001569c 	muleq	r1, ip, r6
    47f0:	063b0d00 	ldrteq	r0, [fp], -r0, lsl #26
    47f4:	54010000 	strpl	r0, [r1], #-0
    47f8:	0000004c 	andeq	r0, r0, ip, asr #32
    47fc:	0e005001 	cdpeq	0, 0, cr5, cr0, cr1, {0}
    4800:	00001e2a 	andeq	r1, r0, sl, lsr #28
    4804:	00006401 	andeq	r6, r0, r1, lsl #8
    4808:	00100000 	andseq	r0, r0, r0
    480c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4810:	001df60e 	andseq	pc, sp, lr, lsl #12
    4814:	00710100 	rsbseq	r0, r1, r0, lsl #2
    4818:	10000000 	andne	r0, r0, r0
    481c:	01000000 	mrseq	r0, (UNDEF: 0)
    4820:	1e580f9c 	mrcne	15, 2, r0, cr8, cr12, {4}
    4824:	80010000 	andhi	r0, r1, r0
    4828:	00000094 	muleq	r0, r4, r0
    482c:	00000000 	andeq	r0, r0, r0
    4830:	00000014 	andeq	r0, r0, r4, lsl r0
    4834:	3d109c01 	ldccc	12, cr9, [r0, #-4]
    4838:	0100001e 	tsteq	r0, lr, lsl r0
    483c:	00004c80 	andeq	r4, r0, r0, lsl #25
    4840:	00118e00 	andseq	r8, r1, r0, lsl #28
    4844:	1c531100 	ldfnee	f1, [r3], {-0}
    4848:	82010000 	andhi	r0, r1, #0
    484c:	00000094 	muleq	r0, r4, r0
    4850:	000011af 	andeq	r1, r0, pc, lsr #3
    4854:	07430000 	strbeq	r0, [r3, -r0]
    4858:	00040000 	andeq	r0, r4, r0
    485c:	0000114c 	andeq	r1, r0, ip, asr #2
    4860:	02f40104 	rscseq	r0, r4, #4, 2
    4864:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    4868:	ec00001e 	stc	0, cr0, [r0], {30}
    486c:	38000003 	stmdacc	r0, {r0, r1}
    4870:	00000005 	andeq	r0, r0, r5
    4874:	36000000 	strcc	r0, [r0], -r0
    4878:	02000014 	andeq	r0, r0, #20
    487c:	082d0504 	stmdaeq	sp!, {r2, r8, sl}
    4880:	02020000 	andeq	r0, r2, #0
    4884:	0007ff05 	andeq	pc, r7, r5, lsl #30
    4888:	06010200 	streq	r0, [r1], -r0, lsl #4
    488c:	000009de 	ldrdeq	r0, [r0], -lr
    4890:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    4894:	45270200 	strmi	r0, [r7, #-512]!	; 0x200
    4898:	02000000 	andeq	r0, r0, #0
    489c:	093a0704 	ldmdbeq	sl!, {r2, r8, r9, sl}
    48a0:	75030000 	strvc	r0, [r3, #-0]
    48a4:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    48a8:	00005728 	andeq	r5, r0, r8, lsr #14
    48ac:	07020200 	streq	r0, [r2, -r0, lsl #4]
    48b0:	00000bd7 	ldrdeq	r0, [r0], -r7
    48b4:	00387503 	eorseq	r7, r8, r3, lsl #10
    48b8:	00682902 	rsbeq	r2, r8, r2, lsl #18
    48bc:	01020000 	mrseq	r0, (UNDEF: 2)
    48c0:	0009dc08 	andeq	sp, r9, r8, lsl #24
    48c4:	04590400 	ldrbeq	r0, [r9], #-1024	; 0x400
    48c8:	2f020000 	svccs	0x00020000
    48cc:	0000007a 	andeq	r0, r0, sl, ror r0
    48d0:	00004505 	andeq	r4, r0, r5, lsl #10
    48d4:	02010600 	andeq	r0, r1, #0, 12
    48d8:	0000943e 	andeq	r9, r0, lr, lsr r4
    48dc:	053f0700 	ldreq	r0, [pc, #-1792]!	; 41e4 <__Stack_Size+0x3de4>
    48e0:	07000000 	streq	r0, [r0, -r0]
    48e4:	00000917 	andeq	r0, r0, r7, lsl r9
    48e8:	b4040001 	strlt	r0, [r4], #-1
    48ec:	02000000 	andeq	r0, r0, #0
    48f0:	00007f3e 	andeq	r7, r0, lr, lsr pc
    48f4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    48f8:	00000931 	andeq	r0, r0, r1, lsr r9
    48fc:	4e031c08 	cdpmi	12, 0, cr1, cr3, cr8, {0}
    4900:	00010b01 	andeq	r0, r1, r1, lsl #22
    4904:	52430900 	subpl	r0, r3, #0, 18
    4908:	5003004c 	andpl	r0, r3, ip, asr #32
    490c:	00006f01 	andeq	r6, r0, r1, lsl #30
    4910:	43090000 	movwmi	r0, #36864	; 0x9000
    4914:	03004852 	movweq	r4, #2130	; 0x852
    4918:	006f0151 	rsbeq	r0, pc, r1, asr r1	; <UNPREDICTABLE>
    491c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    4920:	00524449 	subseq	r4, r2, r9, asr #8
    4924:	6f015203 	svcvs	0x00015203
    4928:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    492c:	52444f09 	subpl	r4, r4, #9, 30	; 0x24
    4930:	01530300 	cmpeq	r3, r0, lsl #6
    4934:	0000006f 	andeq	r0, r0, pc, rrx
    4938:	005f0a0c 	subseq	r0, pc, ip, lsl #20
    493c:	54030000 	strpl	r0, [r3], #-0
    4940:	00006f01 	andeq	r6, r0, r1, lsl #30
    4944:	42091000 	andmi	r1, r9, #0
    4948:	03005252 	movweq	r5, #594	; 0x252
    494c:	006f0155 	rsbeq	r0, pc, r5, asr r1	; <UNPREDICTABLE>
    4950:	0a140000 	beq	504958 <__Stack_Size+0x504558>
    4954:	00000cbd 			; <UNDEFINED> instruction: 0x00000cbd
    4958:	6f015603 	svcvs	0x00015603
    495c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4960:	08da0b00 	ldmeq	sl, {r8, r9, fp}^
    4964:	57030000 	strpl	r0, [r3, -r0]
    4968:	0000a601 	andeq	sl, r0, r1, lsl #12
    496c:	03180800 	tsteq	r8, #0, 16
    4970:	01480159 	cmpeq	r8, r9, asr r1
    4974:	140a0000 	strne	r0, [sl], #-0
    4978:	03000020 	movweq	r0, #32
    497c:	006f015b 	rsbeq	r0, pc, fp, asr r1	; <UNPREDICTABLE>
    4980:	0a000000 	beq	4988 <__Stack_Size+0x4588>
    4984:	00001ff9 	strdeq	r1, [r0], -r9
    4988:	6f015c03 	svcvs	0x00015c03
    498c:	04000000 	streq	r0, [r0], #-0
    4990:	001ef70a 	andseq	pc, lr, sl, lsl #14
    4994:	015d0300 	cmpeq	sp, r0, lsl #6
    4998:	00000158 	andeq	r0, r0, r8, asr r1
    499c:	6f0c0008 	svcvs	0x000c0008
    49a0:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    49a4:	0d000001 	stceq	0, cr0, [r0, #-4]
    49a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    49ac:	48050003 	stmdami	r5, {r0, r1}
    49b0:	0b000001 	bleq	49bc <__Stack_Size+0x45bc>
    49b4:	00001fe2 	andeq	r1, r0, r2, ror #31
    49b8:	17015e03 	strne	r5, [r1, -r3, lsl #28]
    49bc:	06000001 	streq	r0, [r0], -r1
    49c0:	84230401 	strthi	r0, [r3], #-1025	; 0x401
    49c4:	07000001 	streq	r0, [r0, -r1]
    49c8:	00000285 	andeq	r0, r0, r5, lsl #5
    49cc:	01ae0701 			; <UNDEFINED> instruction: 0x01ae0701
    49d0:	07020000 	streq	r0, [r2, -r0]
    49d4:	000009ef 	andeq	r0, r0, pc, ror #19
    49d8:	99040003 	stmdbls	r4, {r0, r1}
    49dc:	04000007 	streq	r0, [r0], #-7
    49e0:	00016927 	andeq	r6, r1, r7, lsr #18
    49e4:	04010600 	streq	r0, [r1], #-1536	; 0x600
    49e8:	0001c92e 	andeq	ip, r1, lr, lsr #18
    49ec:	07ab0700 	streq	r0, [fp, r0, lsl #14]!
    49f0:	07000000 	streq	r0, [r0, -r0]
    49f4:	00000c34 	andeq	r0, r0, r4, lsr ip
    49f8:	03ba0704 			; <UNDEFINED> instruction: 0x03ba0704
    49fc:	07280000 	streq	r0, [r8, -r0]!
    4a00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a04:	290700c8 	stmdbcs	r7, {r3, r6, r7}
    4a08:	14000004 	strne	r0, [r0], #-4
    4a0c:	00000007 	andeq	r0, r0, r7
    4a10:	f6071000 			; <UNDEFINED> instruction: 0xf6071000
    4a14:	1c000006 	stcne	0, cr0, [r0], {6}
    4a18:	00081d07 	andeq	r1, r8, r7, lsl #26
    4a1c:	04001800 	streq	r1, [r0], #-2048	; 0x800
    4a20:	000008e7 	andeq	r0, r0, r7, ror #17
    4a24:	018f3604 	orreq	r3, pc, r4, lsl #12
    4a28:	040e0000 	streq	r0, [lr], #-0
    4a2c:	02013e04 	andeq	r3, r1, #4, 28	; 0x40
    4a30:	870f0000 	strhi	r0, [pc, -r0]
    4a34:	04000000 	streq	r0, [r0], #-0
    4a38:	00004c40 	andeq	r4, r0, r0, asr #24
    4a3c:	c60f0000 	strgt	r0, [pc], -r0
    4a40:	0400000b 	streq	r0, [r0], #-11
    4a44:	00018441 	andeq	r8, r1, r1, asr #8
    4a48:	640f0200 	strvs	r0, [pc], #-512	; 4a50 <__Stack_Size+0x4650>
    4a4c:	04000000 	streq	r0, [r0], #-0
    4a50:	0001c942 	andeq	ip, r1, r2, asr #18
    4a54:	04000300 	streq	r0, [r0], #-768	; 0x300
    4a58:	000009cb 	andeq	r0, r0, fp, asr #19
    4a5c:	01d44304 	bicseq	r4, r4, r4, lsl #6
    4a60:	01060000 	mrseq	r0, (UNDEF: 6)
    4a64:	02214704 	eoreq	r4, r1, #4, 14	; 0x100000
    4a68:	c6070000 	strgt	r0, [r7], -r0
    4a6c:	0000001e 	andeq	r0, r0, lr, lsl r0
    4a70:	001e7f07 	andseq	r7, lr, r7, lsl #30
    4a74:	04000100 	streq	r0, [r0], #-256	; 0x100
    4a78:	00001fef 	andeq	r1, r0, pc, ror #31
    4a7c:	020c4904 	andeq	r4, ip, #4, 18	; 0x10000
    4a80:	16100000 	ldrne	r0, [r0], -r0
    4a84:	0100001f 	tsteq	r0, pc, lsl r0
    4a88:	00000033 	andeq	r0, r0, r3, lsr r0
    4a8c:	0000a400 	andeq	sl, r0, r0, lsl #8
    4a90:	0d9c0100 	ldfeqs	f0, [ip]
    4a94:	11000003 	tstne	r0, r3
    4a98:	00001ffe 	strdeq	r1, [r0], -lr
    4a9c:	030d3301 	movweq	r3, #54017	; 0xd301
    4aa0:	11f00000 	mvnsne	r0, r0
    4aa4:	00120000 	andseq	r0, r2, r0
    4aa8:	33000000 	movwcc	r0, #0
    4aac:	68000007 	stmdavs	r0, {r0, r1, r2}
    4ab0:	13000002 	movwne	r0, #2
    4ab4:	31015101 	tstcc	r1, r1, lsl #2
    4ab8:	01500113 	cmpeq	r0, r3, lsl r1
    4abc:	00120034 	andseq	r0, r2, r4, lsr r0
    4ac0:	33000000 	movwcc	r0, #0
    4ac4:	81000007 	tsthi	r0, r7
    4ac8:	13000002 	movwne	r0, #2
    4acc:	31015101 	tstcc	r1, r1, lsl #2
    4ad0:	02500113 	subseq	r0, r0, #-1073741820	; 0xc0000004
    4ad4:	12004008 	andne	r4, r0, #8
    4ad8:	00000000 	andeq	r0, r0, r0
    4adc:	00000733 	andeq	r0, r0, r3, lsr r7
    4ae0:	00000299 	muleq	r0, r9, r2
    4ae4:	01510113 	cmpeq	r1, r3, lsl r1
    4ae8:	50011331 	andpl	r1, r1, r1, lsr r3
    4aec:	12003801 	andne	r3, r0, #65536	; 0x10000
    4af0:	00000000 	andeq	r0, r0, r0
    4af4:	00000733 	andeq	r0, r0, r3, lsr r7
    4af8:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    4afc:	01510113 	cmpeq	r1, r3, lsl r1
    4b00:	50011331 	andpl	r1, r1, r1, lsr r3
    4b04:	12004001 	andne	r4, r0, #1
    4b08:	00000000 	andeq	r0, r0, r0
    4b0c:	00000733 	andeq	r0, r0, r3, lsr r7
    4b10:	000002ca 	andeq	r0, r0, sl, asr #5
    4b14:	01510113 	cmpeq	r1, r3, lsl r1
    4b18:	50011331 	andpl	r1, r1, r1, lsr r3
    4b1c:	00200802 	eoreq	r0, r0, r2, lsl #16
    4b20:	00000012 	andeq	r0, r0, r2, lsl r0
    4b24:	00073300 	andeq	r3, r7, r0, lsl #6
    4b28:	0002e300 	andeq	lr, r2, r0, lsl #6
    4b2c:	51011300 	mrspl	r1, SP_irq
    4b30:	01133101 	tsteq	r3, r1, lsl #2
    4b34:	80080250 	andhi	r0, r8, r0, asr r2
    4b38:	00001200 	andeq	r1, r0, r0, lsl #4
    4b3c:	07330000 	ldreq	r0, [r3, -r0]!
    4b40:	02fd0000 	rscseq	r0, sp, #0
    4b44:	01130000 	tsteq	r3, r0
    4b48:	13310151 	teqne	r1, #1073741844	; 0x40000014
    4b4c:	0a035001 	beq	d8b58 <__Stack_Size+0xd8758>
    4b50:	14000100 	strne	r0, [r0], #-256	; 0x100
    4b54:	00000000 	andeq	r0, r0, r0
    4b58:	00000733 	andeq	r0, r0, r3, lsr r7
    4b5c:	01510113 	cmpeq	r1, r3, lsl r1
    4b60:	15000030 	strne	r0, [r0, #-48]	; 0x30
    4b64:	00010b04 	andeq	r0, r1, r4, lsl #22
    4b68:	20301000 	eorscs	r1, r0, r0
    4b6c:	6b010000 	blvs	44b74 <__Stack_Size+0x44774>
    4b70:	00000000 	andeq	r0, r0, r0
    4b74:	00000016 	andeq	r0, r0, r6, lsl r0
    4b78:	03559c01 	cmpeq	r5, #256	; 0x100
    4b7c:	00120000 	andseq	r0, r2, r0
    4b80:	33000000 	movwcc	r0, #0
    4b84:	40000007 	andmi	r0, r0, r7
    4b88:	13000003 	movwne	r0, #3
    4b8c:	31015101 	tstcc	r1, r1, lsl #2
    4b90:	01500113 	cmpeq	r0, r3, lsl r1
    4b94:	00140031 	andseq	r0, r4, r1, lsr r0
    4b98:	33000000 	movwcc	r0, #0
    4b9c:	13000007 	movwne	r0, #7
    4ba0:	30015101 	andcc	r5, r1, r1, lsl #2
    4ba4:	01500113 	cmpeq	r0, r3, lsl r1
    4ba8:	10000031 	andne	r0, r0, r1, lsr r0
    4bac:	0000017d 	andeq	r0, r0, sp, ror r1
    4bb0:	12847c01 	addne	r7, r4, #256	; 0x100
    4bb4:	009c0800 	addseq	r0, ip, r0, lsl #16
    4bb8:	9c010000 	stcls	0, cr0, [r1], {-0}
    4bbc:	000003e1 	andeq	r0, r0, r1, ror #7
    4bc0:	001ffe16 	andseq	pc, pc, r6, lsl lr	; <UNPREDICTABLE>
    4bc4:	0d7c0100 	ldfeqe	f0, [ip, #-0]
    4bc8:	01000003 	tsteq	r0, r3
    4bcc:	20041150 	andcs	r1, r4, r0, asr r1
    4bd0:	7c010000 	stcvc	0, cr0, [r1], {-0}
    4bd4:	000003e1 	andeq	r0, r0, r1, ror #7
    4bd8:	000012b2 			; <UNDEFINED> instruction: 0x000012b2
    4bdc:	001f5317 	andseq	r5, pc, r7, lsl r3	; <UNPREDICTABLE>
    4be0:	3a7e0100 	bcc	1f84fe8 <__Stack_Size+0x1f84be8>
    4be4:	d3000000 	movwle	r0, #0
    4be8:	17000012 	smladne	r0, r2, r0, r0
    4bec:	00001fb3 			; <UNDEFINED> instruction: 0x00001fb3
    4bf0:	003a7e01 	eorseq	r7, sl, r1, lsl #28
    4bf4:	13020000 	movwne	r0, #8192	; 0x2000
    4bf8:	78170000 	ldmdavc	r7, {}	; <UNPREDICTABLE>
    4bfc:	0100001e 	tsteq	r0, lr, lsl r0
    4c00:	00003a7e 	andeq	r3, r0, lr, ror sl
    4c04:	00132c00 	andseq	r2, r3, r0, lsl #24
    4c08:	6f701800 	svcvs	0x00701800
    4c0c:	7e010073 	mcrvc	0, 0, r0, cr1, cr3, {3}
    4c10:	0000003a 	andeq	r0, r0, sl, lsr r0
    4c14:	00001362 	andeq	r1, r0, r2, ror #6
    4c18:	001f4417 	andseq	r4, pc, r7, lsl r4	; <UNPREDICTABLE>
    4c1c:	3a7f0100 	bcc	1fc5024 <__Stack_Size+0x1fc4c24>
    4c20:	c0000000 	andgt	r0, r0, r0
    4c24:	17000013 	smladne	r0, r3, r0, r0
    4c28:	00001efe 	strdeq	r1, [r0], -lr
    4c2c:	003a7f01 	eorseq	r7, sl, r1, lsl #30
    4c30:	13ea0000 	mvnne	r0, #0
    4c34:	15000000 	strne	r0, [r0, #-0]
    4c38:	00020104 	andeq	r0, r2, r4, lsl #2
    4c3c:	1eaf1000 	cdpne	0, 10, cr1, cr15, cr0, {0}
    4c40:	e5010000 	str	r0, [r1, #-0]
    4c44:	00000000 	andeq	r0, r0, r0
    4c48:	00000010 	andeq	r0, r0, r0, lsl r0
    4c4c:	040a9c01 	streq	r9, [sl], #-3073	; 0xc01
    4c50:	04160000 	ldreq	r0, [r6], #-0
    4c54:	01000020 	tsteq	r0, r0, lsr #32
    4c58:	0003e1e5 	andeq	lr, r3, r5, ror #3
    4c5c:	00500100 	subseq	r0, r0, r0, lsl #2
    4c60:	00049519 	andeq	r9, r4, r9, lsl r5
    4c64:	5ef60100 	cdppl	1, 15, cr0, cr6, cr0, {0}
    4c68:	20000000 	andcs	r0, r0, r0
    4c6c:	0c080013 	stceq	0, cr0, [r8], {19}
    4c70:	01000000 	mrseq	r0, (UNDEF: 0)
    4c74:	00044f9c 	muleq	r4, ip, pc	; <UNPREDICTABLE>
    4c78:	1ffe1100 	svcne	0x00fe1100
    4c7c:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    4c80:	0000030d 	andeq	r0, r0, sp, lsl #6
    4c84:	00001450 	andeq	r1, r0, r0, asr r4
    4c88:	00008716 	andeq	r8, r0, r6, lsl r7
    4c8c:	4cf60100 	ldfmie	f0, [r6]
    4c90:	01000000 	mrseq	r0, (UNDEF: 0)
    4c94:	1c531751 	mrrcne	7, 5, r1, r3, cr1
    4c98:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    4c9c:	0000005e 	andeq	r0, r0, lr, asr r0
    4ca0:	00001471 	andeq	r1, r0, r1, ror r4
    4ca4:	1f851a00 	svcne	0x00851a00
    4ca8:	10010000 	andne	r0, r1, r0
    4cac:	00004c01 	andeq	r4, r0, r1, lsl #24
    4cb0:	00000000 	andeq	r0, r0, r0
    4cb4:	00000600 	andeq	r0, r0, r0, lsl #12
    4cb8:	7a9c0100 	bvc	fe7050c0 <SCS_BASE+0x1e6f70c0>
    4cbc:	1b000004 	blne	4cd4 <__Stack_Size+0x48d4>
    4cc0:	00001ffe 	strdeq	r1, [r0], -lr
    4cc4:	0d011001 	stceq	0, cr1, [r1, #-4]
    4cc8:	9b000003 	blls	4cdc <__Stack_Size+0x48dc>
    4ccc:	00000014 	andeq	r0, r0, r4, lsl r0
    4cd0:	0020191a 	eoreq	r1, r0, sl, lsl r9
    4cd4:	01210100 	teqeq	r1, r0, lsl #2
    4cd8:	0000005e 	andeq	r0, r0, lr, asr r0
    4cdc:	00000000 	andeq	r0, r0, r0
    4ce0:	0000000c 	andeq	r0, r0, ip
    4ce4:	04c39c01 	strbeq	r9, [r3], #3073	; 0xc01
    4ce8:	fe1b0000 	cdp2	0, 1, cr0, cr11, cr0, {0}
    4cec:	0100001f 	tsteq	r0, pc, lsl r0
    4cf0:	030d0121 	movweq	r0, #53537	; 0xd121
    4cf4:	14bc0000 	ldrtne	r0, [ip], #0
    4cf8:	871c0000 	ldrhi	r0, [ip, -r0]
    4cfc:	01000000 	mrseq	r0, (UNDEF: 0)
    4d00:	004c0121 	subeq	r0, ip, r1, lsr #2
    4d04:	51010000 	mrspl	r0, (UNDEF: 1)
    4d08:	001c531d 	andseq	r5, ip, sp, lsl r3
    4d0c:	01230100 	teqeq	r3, r0, lsl #2
    4d10:	0000005e 	andeq	r0, r0, lr, asr r0
    4d14:	000014dd 	ldrdeq	r1, [r0], -sp
    4d18:	1e871a00 	vdivne.f32	s2, s14, s0
    4d1c:	3b010000 	blcc	44d24 <__Stack_Size+0x44924>
    4d20:	00004c01 	andeq	r4, r0, r1, lsl #24
    4d24:	00000000 	andeq	r0, r0, r0
    4d28:	00000600 	andeq	r0, r0, r0, lsl #12
    4d2c:	ee9c0100 	fmle	f0, f4, f0
    4d30:	1b000004 	blne	4d48 <__Stack_Size+0x4948>
    4d34:	00001ffe 	strdeq	r1, [r0], -lr
    4d38:	0d013b01 	vstreq	d3, [r1, #-4]
    4d3c:	07000003 	streq	r0, [r0, -r3]
    4d40:	00000015 	andeq	r0, r0, r5, lsl r0
    4d44:	0002d11e 	andeq	sp, r2, lr, lsl r1
    4d48:	014d0100 	mrseq	r0, (UNDEF: 93)
    4d4c:	0800132c 	stmdaeq	r0, {r2, r3, r5, r8, r9, ip}
    4d50:	00000004 	andeq	r0, r0, r4
    4d54:	05219c01 	streq	r9, [r1, #-3073]!	; 0xc01
    4d58:	fe1c0000 	cdp2	0, 1, cr0, cr12, cr0, {0}
    4d5c:	0100001f 	tsteq	r0, pc, lsl r0
    4d60:	030d014d 	movweq	r0, #53581	; 0xd14d
    4d64:	50010000 	andpl	r0, r1, r0
    4d68:	0000871c 	andeq	r8, r0, ip, lsl r7
    4d6c:	014d0100 	mrseq	r0, (UNDEF: 93)
    4d70:	0000004c 	andeq	r0, r0, ip, asr #32
    4d74:	1e005101 	adfnes	f5, f0, f1
    4d78:	00000725 	andeq	r0, r0, r5, lsr #14
    4d7c:	30016001 	andcc	r6, r1, r1
    4d80:	04080013 	streq	r0, [r8], #-19
    4d84:	01000000 	mrseq	r0, (UNDEF: 0)
    4d88:	0005549c 	muleq	r5, ip, r4
    4d8c:	1ffe1c00 	svcne	0x00fe1c00
    4d90:	60010000 	andvs	r0, r1, r0
    4d94:	00030d01 	andeq	r0, r3, r1, lsl #26
    4d98:	1c500100 	ldfnee	f0, [r0], {-0}
    4d9c:	00000087 	andeq	r0, r0, r7, lsl #1
    4da0:	4c016001 	stcmi	0, cr6, [r1], {1}
    4da4:	01000000 	mrseq	r0, (UNDEF: 0)
    4da8:	d01e0051 	andsle	r0, lr, r1, asr r0
    4dac:	0100001e 	tsteq	r0, lr, lsl r0
    4db0:	00000176 	andeq	r0, r0, r6, ror r1
    4db4:	000a0000 	andeq	r0, sl, r0
    4db8:	9c010000 	stcls	0, cr0, [r1], {-0}
    4dbc:	00000595 	muleq	r0, r5, r5
    4dc0:	001ffe1c 	andseq	pc, pc, ip, lsl lr	; <UNPREDICTABLE>
    4dc4:	01760100 	cmneq	r6, r0, lsl #2
    4dc8:	0000030d 	andeq	r0, r0, sp, lsl #6
    4dcc:	871c5001 	ldrhi	r5, [ip, -r1]
    4dd0:	01000000 	mrseq	r0, (UNDEF: 0)
    4dd4:	004c0176 	subeq	r0, ip, r6, ror r1
    4dd8:	51010000 	mrspl	r0, (UNDEF: 1)
    4ddc:	001ebf1c 	andseq	fp, lr, ip, lsl pc
    4de0:	01760100 	cmneq	r6, r0, lsl #2
    4de4:	00000221 	andeq	r0, r0, r1, lsr #4
    4de8:	1e005201 	cdpne	2, 0, cr5, cr0, cr1, {0}
    4dec:	00001fbe 			; <UNDEFINED> instruction: 0x00001fbe
    4df0:	00019001 	andeq	r9, r1, r1
    4df4:	04000000 	streq	r0, [r0], #-0
    4df8:	01000000 	mrseq	r0, (UNDEF: 0)
    4dfc:	0005c89c 	muleq	r5, ip, r8
    4e00:	1ffe1c00 	svcne	0x00fe1c00
    4e04:	90010000 	andls	r0, r1, r0
    4e08:	00030d01 	andeq	r0, r3, r1, lsl #26
    4e0c:	1c500100 	ldfnee	f0, [r0], {-0}
    4e10:	00001f4b 	andeq	r1, r0, fp, asr #30
    4e14:	4c019001 	stcmi	0, cr9, [r1], {1}
    4e18:	01000000 	mrseq	r0, (UNDEF: 0)
    4e1c:	a01e0051 	andsge	r0, lr, r1, asr r0
    4e20:	0100001f 	tsteq	r0, pc, lsl r0
    4e24:	000001a2 	andeq	r0, r0, r2, lsr #3
    4e28:	00100000 	andseq	r0, r0, r0
    4e2c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4e30:	0000060b 	andeq	r0, r0, fp, lsl #12
    4e34:	001ffe1c 	andseq	pc, pc, ip, lsl lr	; <UNPREDICTABLE>
    4e38:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    4e3c:	0000030d 	andeq	r0, r0, sp, lsl #6
    4e40:	871c5001 	ldrhi	r5, [ip, -r1]
    4e44:	01000000 	mrseq	r0, (UNDEF: 0)
    4e48:	004c01a2 	subeq	r0, ip, r2, lsr #3
    4e4c:	51010000 	mrspl	r0, (UNDEF: 1)
    4e50:	706d741f 	rsbvc	r7, sp, pc, lsl r4
    4e54:	01a40100 			; <UNDEFINED> instruction: 0x01a40100
    4e58:	0000003a 	andeq	r0, r0, sl, lsr r0
    4e5c:	00001528 	andeq	r1, r0, r8, lsr #10
    4e60:	1f221e00 	svcne	0x00221e00
    4e64:	c3010000 	movwgt	r0, #4096	; 0x1000
    4e68:	00000001 	andeq	r0, r0, r1
    4e6c:	00001c00 	andeq	r1, r0, r0, lsl #24
    4e70:	529c0100 	addspl	r0, ip, #0, 2
    4e74:	1b000006 	blne	4e94 <__Stack_Size+0x4a94>
    4e78:	00001f06 	andeq	r1, r0, r6, lsl #30
    4e7c:	5e01c301 	cdppl	3, 0, cr12, cr1, cr1, {0}
    4e80:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    4e84:	1b000015 	blne	4ee0 <__Stack_Size+0x4ae0>
    4e88:	00001f5f 	andeq	r1, r0, pc, asr pc
    4e8c:	5e01c301 	cdppl	3, 0, cr12, cr1, cr1, {0}
    4e90:	6a000000 	bvs	4e98 <__Stack_Size+0x4a98>
    4e94:	1d000015 	stcne	0, cr0, [r0, #-84]	; 0xffffffac
    4e98:	00001f44 	andeq	r1, r0, r4, asr #30
    4e9c:	3a01c501 	bcc	762a8 <__Stack_Size+0x75ea8>
    4ea0:	8b000000 	blhi	4ea8 <__Stack_Size+0x4aa8>
    4ea4:	00000015 	andeq	r0, r0, r5, lsl r0
    4ea8:	001e9b1e 	andseq	r9, lr, lr, lsl fp
    4eac:	01dc0100 	bicseq	r0, ip, r0, lsl #2
    4eb0:	00000000 	andeq	r0, r0, r0
    4eb4:	0000000c 	andeq	r0, r0, ip
    4eb8:	06779c01 	ldrbteq	r9, [r7], -r1, lsl #24
    4ebc:	891c0000 	ldmdbhi	ip, {}	; <UNPREDICTABLE>
    4ec0:	0100001a 	tsteq	r0, sl, lsl r0
    4ec4:	009401dc 			; <UNDEFINED> instruction: 0x009401dc
    4ec8:	50010000 	andpl	r0, r1, r0
    4ecc:	03851e00 	orreq	r1, r5, #0, 28
    4ed0:	07010000 	streq	r0, [r1, -r0]
    4ed4:	00133402 	andseq	r3, r3, r2, lsl #8
    4ed8:	00005408 	andeq	r5, r0, r8, lsl #8
    4edc:	ec9c0100 	ldfs	f0, [ip], {0}
    4ee0:	1b000006 	blne	4f00 <__Stack_Size+0x4b00>
    4ee4:	00001f39 	andeq	r1, r0, r9, lsr pc
    4ee8:	3a020701 	bcc	86af4 <__Stack_Size+0x866f4>
    4eec:	c3000000 	movwgt	r0, #0
    4ef0:	1c000015 	stcne	0, cr0, [r0], {21}
    4ef4:	00001a89 	andeq	r1, r0, r9, lsl #21
    4ef8:	94020701 	strls	r0, [r2], #-1793	; 0x701
    4efc:	01000000 	mrseq	r0, (UNDEF: 0)
    4f00:	6d741f51 	ldclvs	15, cr1, [r4, #-324]!	; 0xfffffebc
    4f04:	09010070 	stmdbeq	r1, {r4, r5, r6}
    4f08:	00003a02 	andeq	r3, r0, r2, lsl #20
    4f0c:	0015e400 	andseq	lr, r5, r0, lsl #8
    4f10:	1fc91d00 	svcne	0x00c91d00
    4f14:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    4f18:	00003a02 	andeq	r3, r0, r2, lsl #20
    4f1c:	00161500 	andseq	r1, r6, r0, lsl #10
    4f20:	1f441d00 	svcne	0x00441d00
    4f24:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    4f28:	00003a02 	andeq	r3, r0, r2, lsl #20
    4f2c:	00163e00 	andseq	r3, r6, r0, lsl #28
    4f30:	1f981d00 	svcne	0x00981d00
    4f34:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    4f38:	00003a02 	andeq	r3, r0, r2, lsl #20
    4f3c:	00165d00 	andseq	r5, r6, r0, lsl #26
    4f40:	ce1e0000 	cdpgt	0, 1, cr0, cr14, cr0, {0}
    4f44:	0100001f 	tsteq	r0, pc, lsl r0
    4f48:	00000239 	andeq	r0, r0, r9, lsr r2
    4f4c:	002a0000 	eoreq	r0, sl, r0
    4f50:	9c010000 	stcls	0, cr0, [r1], {-0}
    4f54:	00000733 	andeq	r0, r0, r3, lsr r7
    4f58:	001f061b 	andseq	r0, pc, fp, lsl r6	; <UNPREDICTABLE>
    4f5c:	02390100 	eorseq	r0, r9, #0, 2
    4f60:	0000005e 	andeq	r0, r0, lr, asr r0
    4f64:	00001698 	muleq	r0, r8, r6
    4f68:	001f5f1b 	andseq	r5, pc, fp, lsl pc	; <UNPREDICTABLE>
    4f6c:	02390100 	eorseq	r0, r9, #0, 2
    4f70:	0000005e 	andeq	r0, r0, lr, asr r0
    4f74:	000016b9 			; <UNDEFINED> instruction: 0x000016b9
    4f78:	706d741f 	rsbvc	r7, sp, pc, lsl r4
    4f7c:	023b0100 	eorseq	r0, fp, #0, 2
    4f80:	0000003a 	andeq	r0, r0, sl, lsr r0
    4f84:	000016da 	ldrdeq	r1, [r0], -sl
    4f88:	1f6e2000 	svcne	0x006e2000
    4f8c:	14050000 	strne	r0, [r5], #-0
    4f90:	003a2101 	eorseq	r2, sl, r1, lsl #2
    4f94:	94210000 	strtls	r0, [r1], #-0
    4f98:	00000000 	andeq	r0, r0, r0
    4f9c:	00097900 	andeq	r7, r9, r0, lsl #18
    4fa0:	34000400 	strcc	r0, [r0], #-1024	; 0x400
    4fa4:	04000013 	streq	r0, [r0], #-19
    4fa8:	0002f401 	andeq	pc, r2, r1, lsl #8
    4fac:	20da0100 	sbcscs	r0, sl, r0, lsl #2
    4fb0:	03ec0000 	mvneq	r0, #0
    4fb4:	05c80000 	strbeq	r0, [r8]
    4fb8:	00000000 	andeq	r0, r0, r0
    4fbc:	16740000 	ldrbtne	r0, [r4], -r0
    4fc0:	04020000 	streq	r0, [r2], #-0
    4fc4:	00082d05 	andeq	r2, r8, r5, lsl #26
    4fc8:	05020200 	streq	r0, [r2, #-512]	; 0x200
    4fcc:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4fd0:	de060102 	adfles	f0, f6, f2
    4fd4:	03000009 	movweq	r0, #9
    4fd8:	00323375 	eorseq	r3, r2, r5, ror r3
    4fdc:	00452702 	subeq	r2, r5, r2, lsl #14
    4fe0:	04020000 	streq	r0, [r2], #-0
    4fe4:	00093a07 	andeq	r3, r9, r7, lsl #20
    4fe8:	31750300 	cmncc	r5, r0, lsl #6
    4fec:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    4ff0:	00000057 	andeq	r0, r0, r7, asr r0
    4ff4:	d7070202 	strle	r0, [r7, -r2, lsl #4]
    4ff8:	0300000b 	movweq	r0, #11
    4ffc:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    5000:	00006829 	andeq	r6, r0, r9, lsr #16
    5004:	08010200 	stmdaeq	r1, {r9}
    5008:	000009dc 	ldrdeq	r0, [r0], -ip
    500c:	00045904 	andeq	r5, r4, r4, lsl #18
    5010:	7a2f0200 	bvc	bc5818 <__Stack_Size+0xbc5418>
    5014:	05000000 	streq	r0, [r0, #-0]
    5018:	00000045 	andeq	r0, r0, r5, asr #32
    501c:	00239e04 	eoreq	r9, r3, r4, lsl #28
    5020:	8a330200 	bhi	cc5828 <__Stack_Size+0xcc5428>
    5024:	06000000 	streq	r0, [r0], -r0
    5028:	0000007a 	andeq	r0, r0, sl, ror r0
    502c:	3c020107 	stfccs	f0, [r2], {7}
    5030:	000000a4 	andeq	r0, r0, r4, lsr #1
    5034:	001eca08 	andseq	ip, lr, r8, lsl #20
    5038:	53090000 	movwpl	r0, #36864	; 0x9000
    503c:	01005445 	tsteq	r0, r5, asr #8
    5040:	25220400 	strcs	r0, [r2, #-1024]!	; 0x400
    5044:	3c020000 	stccc	0, cr0, [r2], {-0}
    5048:	0000008f 	andeq	r0, r0, pc, lsl #1
    504c:	3e020107 	adfccs	f0, f2, f7
    5050:	000000c4 	andeq	r0, r0, r4, asr #1
    5054:	00053f08 	andeq	r3, r5, r8, lsl #30
    5058:	17080000 	strne	r0, [r8, -r0]
    505c:	01000009 	tsteq	r0, r9
    5060:	00b40400 	adcseq	r0, r4, r0, lsl #8
    5064:	3e020000 	cdpcc	0, 0, cr0, cr2, cr0, {0}
    5068:	000000af 	andeq	r0, r0, pc, lsr #1
    506c:	31070402 	tstcc	r7, r2, lsl #8
    5070:	0a000009 	beq	509c <__Stack_Size+0x4c9c>
    5074:	8103033c 	tsthi	r3, ip, lsr r3
    5078:	00017701 	andeq	r7, r1, r1, lsl #14
    507c:	23290b00 	teqcs	r9, #0, 22
    5080:	83030000 	movwhi	r0, #12288	; 0x3000
    5084:	00018701 	andeq	r8, r1, r1, lsl #14
    5088:	b90b0000 	stmdblt	fp, {}	; <UNPREDICTABLE>
    508c:	03000007 	movweq	r0, #7
    5090:	018c0184 	orreq	r0, ip, r4, lsl #3
    5094:	0b080000 	bleq	20509c <__Stack_Size+0x204c9c>
    5098:	000022ed 	andeq	r2, r0, sp, ror #5
    509c:	9c018503 	cfstr32ls	mvfx8, [r1], {3}
    50a0:	80000001 	andhi	r0, r0, r1
    50a4:	0021a50b 	eoreq	sl, r1, fp, lsl #10
    50a8:	01860300 	orreq	r0, r6, r0, lsl #6
    50ac:	0000018c 	andeq	r0, r0, ip, lsl #3
    50b0:	23030c88 	movwcs	r0, #15496	; 0x3c88
    50b4:	87030000 	strhi	r0, [r3, -r0]
    50b8:	0001a101 	andeq	sl, r1, r1, lsl #2
    50bc:	0c010000 	stceq	0, cr0, [r1], {-0}
    50c0:	000007cd 	andeq	r0, r0, sp, asr #15
    50c4:	8c018803 	stchi	8, cr8, [r1], {3}
    50c8:	08000001 	stmdaeq	r0, {r0}
    50cc:	22600c01 	rsbcs	r0, r0, #256	; 0x100
    50d0:	89030000 	stmdbhi	r3, {}	; <UNPREDICTABLE>
    50d4:	0001a601 	andeq	sl, r1, r1, lsl #12
    50d8:	0c018000 	stceq	0, cr8, [r1], {-0}
    50dc:	000007d7 	ldrdeq	r0, [r0], -r7
    50e0:	8c018a03 	stchi	10, cr8, [r1], {3}
    50e4:	88000001 	stmdahi	r0, {r0}
    50e8:	20400c01 	subcs	r0, r0, r1, lsl #24
    50ec:	8b030000 	blhi	c50f4 <__Stack_Size+0xc4cf4>
    50f0:	0001ab01 	andeq	sl, r1, r1, lsl #22
    50f4:	0c020000 	stceq	0, cr0, [r2], {-0}
    50f8:	000007e1 	andeq	r0, r0, r1, ror #15
    50fc:	b0018c03 	andlt	r8, r1, r3, lsl #24
    5100:	08000001 	stmdaeq	r0, {r0}
    5104:	50490d02 	subpl	r0, r9, r2, lsl #26
    5108:	8d030052 	stchi	0, cr0, [r3, #-328]	; 0xfffffeb8
    510c:	0001d001 	andeq	sp, r1, r1
    5110:	00030000 	andeq	r0, r3, r0
    5114:	00006f0e 	andeq	r6, r0, lr, lsl #30
    5118:	00018700 	andeq	r8, r1, r0, lsl #14
    511c:	00cf0f00 	sbceq	r0, pc, r0, lsl #30
    5120:	00010000 	andeq	r0, r1, r0
    5124:	00017705 	andeq	r7, r1, r5, lsl #14
    5128:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    512c:	019c0000 	orrseq	r0, ip, r0
    5130:	cf0f0000 	svcgt	0x000f0000
    5134:	1d000000 	stcne	0, cr0, [r0, #-0]
    5138:	01770500 	cmneq	r7, r0, lsl #10
    513c:	77050000 	strvc	r0, [r5, -r0]
    5140:	05000001 	streq	r0, [r0, #-1]
    5144:	00000177 	andeq	r0, r0, r7, ror r1
    5148:	00017705 	andeq	r7, r1, r5, lsl #14
    514c:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    5150:	01c00000 	biceq	r0, r0, r0
    5154:	cf0f0000 	svcgt	0x000f0000
    5158:	3d000000 	stccc	0, cr0, [r0, #-0]
    515c:	006f0e00 	rsbeq	r0, pc, r0, lsl #28
    5160:	01d00000 	bicseq	r0, r0, r0
    5164:	cf0f0000 	svcgt	0x000f0000
    5168:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    516c:	01c00500 	biceq	r0, r0, r0, lsl #10
    5170:	86100000 	ldrhi	r0, [r0], -r0
    5174:	03000022 	movweq	r0, #34	; 0x22
    5178:	00d6018e 	sbcseq	r0, r6, lr, lsl #3
    517c:	40110000 	andsmi	r0, r1, r0
    5180:	a1019003 	tstge	r1, r3
    5184:	0b000002 	bleq	5194 <__Stack_Size+0x4d94>
    5188:	00002148 	andeq	r2, r0, r8, asr #2
    518c:	7f019203 	svcvc	0x00019203
    5190:	00000000 	andeq	r0, r0, r0
    5194:	0021a00b 	eoreq	sl, r1, fp
    5198:	01930300 	orrseq	r0, r3, r0, lsl #6
    519c:	0000006f 	andeq	r0, r0, pc, rrx
    51a0:	22fe0b04 	rscscs	r0, lr, #4, 22	; 0x1000
    51a4:	94030000 	strls	r0, [r3], #-0
    51a8:	00006f01 	andeq	r6, r0, r1, lsl #30
    51ac:	5a0b0800 	bpl	2c71b4 <__Stack_Size+0x2c6db4>
    51b0:	03000022 	movweq	r0, #34	; 0x22
    51b4:	006f0195 	mlseq	pc, r5, r1, r0	; <UNPREDICTABLE>
    51b8:	120c0000 	andne	r0, ip, #0
    51bc:	00524353 	subseq	r4, r2, r3, asr r3
    51c0:	6f019603 	svcvs	0x00019603
    51c4:	10000000 	andne	r0, r0, r0
    51c8:	52434312 	subpl	r4, r3, #1207959552	; 0x48000000
    51cc:	01970300 	orrseq	r0, r7, r0, lsl #6
    51d0:	0000006f 	andeq	r0, r0, pc, rrx
    51d4:	227b0b14 	rsbscs	r0, fp, #20, 22	; 0x5000
    51d8:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    51dc:	0002b101 	andeq	fp, r2, r1, lsl #2
    51e0:	800b1800 	andhi	r1, fp, r0, lsl #16
    51e4:	03000022 	movweq	r0, #34	; 0x22
    51e8:	006f0199 	mlseq	pc, r9, r1, r0	; <UNPREDICTABLE>
    51ec:	0b240000 	bleq	9051f4 <__Stack_Size+0x904df4>
    51f0:	00002235 	andeq	r2, r0, r5, lsr r2
    51f4:	6f019a03 	svcvs	0x00019a03
    51f8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    51fc:	00230d0b 	eoreq	r0, r3, fp, lsl #26
    5200:	019b0300 	orrseq	r0, fp, r0, lsl #6
    5204:	0000006f 	andeq	r0, r0, pc, rrx
    5208:	23080b2c 	movwcs	r0, #35628	; 0x8b2c
    520c:	9c030000 	stcls	0, cr0, [r3], {-0}
    5210:	00006f01 	andeq	r6, r0, r1, lsl #30
    5214:	a30b3000 	movwge	r3, #45056	; 0xb000
    5218:	03000022 	movweq	r0, #34	; 0x22
    521c:	006f019d 	mlseq	pc, sp, r1, r0	; <UNPREDICTABLE>
    5220:	0b340000 	bleq	d05228 <__Stack_Size+0xd04e28>
    5224:	0000220c 	andeq	r2, r0, ip, lsl #4
    5228:	6f019e03 	svcvs	0x00019e03
    522c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    5230:	0024390b 	eoreq	r3, r4, fp, lsl #18
    5234:	019f0300 	orrseq	r0, pc, r0, lsl #6
    5238:	0000006f 	andeq	r0, r0, pc, rrx
    523c:	6f0e003c 	svcvs	0x000e003c
    5240:	b1000000 	mrslt	r0, (UNDEF: 0)
    5244:	0f000002 	svceq	0x00000002
    5248:	000000cf 	andeq	r0, r0, pc, asr #1
    524c:	a1050002 	tstge	r5, r2
    5250:	10000002 	andne	r0, r0, r2
    5254:	0000234a 	andeq	r2, r0, sl, asr #6
    5258:	e101a003 	tst	r1, r3
    525c:	13000001 	movwne	r0, #1
    5260:	fb1a0404 	blx	68627a <__Stack_Size+0x685e7a>
    5264:	14000002 	strne	r0, [r0], #-2
    5268:	000006a9 	andeq	r0, r0, r9, lsr #13
    526c:	005e1c04 	subseq	r1, lr, r4, lsl #24
    5270:	14000000 	strne	r0, [r0], #-0
    5274:	00000c08 	andeq	r0, r0, r8, lsl #24
    5278:	005e1d04 	subseq	r1, lr, r4, lsl #26
    527c:	14010000 	strne	r0, [r1], #-0
    5280:	00000b07 	andeq	r0, r0, r7, lsl #22
    5284:	005e1e04 	subseq	r1, lr, r4, lsl #28
    5288:	14020000 	strne	r0, [r2], #-0
    528c:	0000091e 	andeq	r0, r0, lr, lsl r9
    5290:	00c41f04 	sbceq	r1, r4, r4, lsl #30
    5294:	00030000 	andeq	r0, r3, r0
    5298:	00024a04 	andeq	r4, r2, r4, lsl #20
    529c:	c2200400 	eorgt	r0, r0, #0, 8
    52a0:	15000002 	strne	r0, [r0, #-2]
    52a4:	00002499 	muleq	r0, r9, r4
    52a8:	00002401 	andeq	r2, r0, r1, lsl #8
    52ac:	00340000 	eorseq	r0, r4, r0
    52b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    52b4:	0000032b 	andeq	r0, r0, fp, lsr #6
    52b8:	00359f16 	eorseq	r9, r5, r6, lsl pc
    52bc:	3a260100 	bcc	9856c4 <__Stack_Size+0x9852c4>
    52c0:	17000000 	strne	r0, [r0, -r0]
    52c4:	00000017 	andeq	r0, r0, r7, lsl r0
    52c8:	0023f415 	eoreq	pc, r3, r5, lsl r4	; <UNPREDICTABLE>
    52cc:	003b0100 	eorseq	r0, fp, r0, lsl #2
    52d0:	30000000 	andcc	r0, r0, r0
    52d4:	01000000 	mrseq	r0, (UNDEF: 0)
    52d8:	0003509c 	muleq	r3, ip, r0
    52dc:	359f1600 	ldrcc	r1, [pc, #1536]	; 58e4 <__Stack_Size+0x54e4>
    52e0:	3d010000 	stccc	0, cr0, [r1, #-0]
    52e4:	0000003a 	andeq	r0, r0, sl, lsr r0
    52e8:	00001736 	andeq	r1, r0, r6, lsr r7
    52ec:	0bad1500 	bleq	feb4a6f4 <SCS_BASE+0x1eb3c6f4>
    52f0:	61010000 	mrsvs	r0, (UNDEF: 1)
    52f4:	08001388 	stmdaeq	r0, {r3, r7, r8, r9, ip}
    52f8:	00000014 	andeq	r0, r0, r4, lsl r0
    52fc:	03759c01 	cmneq	r5, #256	; 0x100
    5300:	4e170000 	cdpmi	0, 1, cr0, cr7, cr0, {0}
    5304:	01000021 	tsteq	r0, r1, lsr #32
    5308:	00003a61 	andeq	r3, r0, r1, ror #20
    530c:	00176e00 	andseq	r6, r7, r0, lsl #28
    5310:	d4150000 	ldrle	r0, [r5], #-0
    5314:	01000006 	tsteq	r0, r6
    5318:	00139c74 	andseq	r9, r3, r4, ror ip
    531c:	00008408 	andeq	r8, r0, r8, lsl #8
    5320:	e39c0100 	orrs	r0, ip, #0, 2
    5324:	18000003 	stmdane	r0, {r0, r1}
    5328:	00002064 	andeq	r2, r0, r4, rrx
    532c:	03e37401 	mvneq	r7, #16777216	; 0x1000000
    5330:	50010000 	andpl	r0, r1, r0
    5334:	0022f216 	eoreq	pc, r2, r6, lsl r2	; <UNPREDICTABLE>
    5338:	3a760100 	bcc	1d85740 <__Stack_Size+0x1d85340>
    533c:	8f000000 	svchi	0x00000000
    5340:	16000017 			; <UNDEFINED> instruction: 0x16000017
    5344:	00001f44 	andeq	r1, r0, r4, asr #30
    5348:	003a7601 	eorseq	r7, sl, r1, lsl #12
    534c:	17eb0000 	strbne	r0, [fp, r0]!
    5350:	98160000 	ldmdals	r6, {}	; <UNPREDICTABLE>
    5354:	0100001f 	tsteq	r0, pc, lsl r0
    5358:	00003a76 	andeq	r3, r0, r6, ror sl
    535c:	00182100 	andseq	r2, r8, r0, lsl #2
    5360:	20d31600 	sbcscs	r1, r3, r0, lsl #12
    5364:	77010000 	strvc	r0, [r1, -r0]
    5368:	0000003a 	andeq	r0, r0, sl, lsr r0
    536c:	0000185c 	andeq	r1, r0, ip, asr r8
    5370:	0022a916 	eoreq	sl, r2, r6, lsl r9
    5374:	3a770100 	bcc	1dc577c <__Stack_Size+0x1dc537c>
    5378:	a5000000 	strge	r0, [r0, #-0]
    537c:	00000018 	andeq	r0, r0, r8, lsl r0
    5380:	02fb0419 	rscseq	r0, fp, #419430400	; 0x19000000
    5384:	dd150000 	ldcle	0, cr0, [r5, #-0]
    5388:	01000022 	tsteq	r0, r2, lsr #32
    538c:	000000a8 	andeq	r0, r0, r8, lsr #1
    5390:	00000c00 	andeq	r0, r0, r0, lsl #24
    5394:	0c9c0100 	ldfeqs	f0, [ip], {0}
    5398:	18000004 	stmdane	r0, {r2}
    539c:	00002064 	andeq	r2, r0, r4, rrx
    53a0:	03e3a801 	mvneq	sl, #65536	; 0x10000
    53a4:	50010000 	andpl	r0, r1, r0
    53a8:	20c31500 	sbccs	r1, r3, r0, lsl #10
    53ac:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    53b0:	00000000 	andeq	r0, r0, r0
    53b4:	00000004 	andeq	r0, r0, r4
    53b8:	042b9c01 	strteq	r9, [fp], #-3073	; 0xc01
    53bc:	001a0000 	andseq	r0, sl, r0
    53c0:	3d000000 	stccc	0, cr0, [r0, #-0]
    53c4:	00000009 	andeq	r0, r0, r9
    53c8:	0020f315 	eoreq	pc, r0, r5, lsl r3	; <UNPREDICTABLE>
    53cc:	00c40100 	sbceq	r0, r4, r0, lsl #2
    53d0:	04000000 	streq	r0, [r0], #-0
    53d4:	01000000 	mrseq	r0, (UNDEF: 0)
    53d8:	00044a9c 	muleq	r4, ip, sl
    53dc:	00001a00 	andeq	r1, r0, r0, lsl #20
    53e0:	09440000 	stmdbeq	r4, {}^	; <UNPREDICTABLE>
    53e4:	15000000 	strne	r0, [r0, #-0]
    53e8:	00002312 	andeq	r2, r0, r2, lsl r3
    53ec:	0000d001 	andeq	sp, r0, r1
    53f0:	00040000 	andeq	r0, r4, r0
    53f4:	9c010000 	stcls	0, cr0, [r1], {-0}
    53f8:	00000469 	andeq	r0, r0, r9, ror #8
    53fc:	0000001a 	andeq	r0, r0, sl, lsl r0
    5400:	00094b00 	andeq	r4, r9, r0, lsl #22
    5404:	61150000 	tstvs	r5, r0
    5408:	01000021 	tsteq	r0, r1, lsr #32
    540c:	000000dc 	ldrdeq	r0, [r0], -ip
    5410:	00000400 	andeq	r0, r0, r0, lsl #8
    5414:	889c0100 	ldmhi	ip, {r8}
    5418:	1a000004 	bne	5430 <__Stack_Size+0x5030>
    541c:	00000000 	andeq	r0, r0, r0
    5420:	00000952 	andeq	r0, r0, r2, asr r9
    5424:	21f91500 	mvnscs	r1, r0, lsl #10
    5428:	ea010000 	b	45430 <__Stack_Size+0x45030>
    542c:	00000000 	andeq	r0, r0, r0
    5430:	00000006 	andeq	r0, r0, r6
    5434:	04c09c01 	strbeq	r9, [r0], #3073	; 0xc01
    5438:	03170000 	tsteq	r7, #0
    543c:	01000024 	tsteq	r0, r4, lsr #32
    5440:	00003aea 	andeq	r3, r0, sl, ror #21
    5444:	0018df00 	andseq	sp, r8, r0, lsl #30
    5448:	00001b00 	andeq	r1, r0, r0, lsl #22
    544c:	09590000 	ldmdbeq	r9, {}^	; <UNPREDICTABLE>
    5450:	011c0000 	tsteq	ip, r0
    5454:	01f30550 	mvnseq	r0, r0, asr r5
    5458:	00243450 	eoreq	r3, r4, r0, asr r4
    545c:	22931d00 	addscs	r1, r3, #0, 26
    5460:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    5464:	0000003a 	andeq	r0, r0, sl, lsr r0
    5468:	00000000 	andeq	r0, r0, r0
    546c:	00000004 	andeq	r0, r0, r4
    5470:	04e39c01 	strbteq	r9, [r3], #3073	; 0xc01
    5474:	001a0000 	andseq	r0, sl, r0
    5478:	6a000000 	bvs	5480 <__Stack_Size+0x5080>
    547c:	00000009 	andeq	r0, r0, r9
    5480:	0020741e 	eoreq	r7, r0, lr, lsl r4
    5484:	01050100 	mrseq	r0, (UNDEF: 21)
    5488:	0000004c 	andeq	r0, r0, ip, asr #32
    548c:	00000000 	andeq	r0, r0, r0
    5490:	00000010 	andeq	r0, r0, r0, lsl r0
    5494:	d11f9c01 	tstle	pc, r1, lsl #24
    5498:	01000023 	tsteq	r0, r3, lsr #32
    549c:	00a40112 	adceq	r0, r4, r2, lsl r1
    54a0:	00000000 	andeq	r0, r0, r0
    54a4:	00200000 	eoreq	r0, r0, r0
    54a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    54ac:	00000544 	andeq	r0, r0, r4, asr #10
    54b0:	0006a920 	andeq	sl, r6, r0, lsr #18
    54b4:	01120100 	tsteq	r2, r0, lsl #2
    54b8:	0000005e 	andeq	r0, r0, lr, asr r0
    54bc:	00001900 	andeq	r1, r0, r0, lsl #18
    54c0:	0024a521 	eoreq	sl, r4, r1, lsr #10
    54c4:	01140100 	tsteq	r4, r0, lsl #2
    54c8:	000000a4 	andeq	r0, r0, r4, lsr #1
    54cc:	00001921 	andeq	r1, r0, r1, lsr #18
    54d0:	706d7422 	rsbvc	r7, sp, r2, lsr #8
    54d4:	01150100 	tsteq	r5, r0, lsl #2
    54d8:	0000003a 	andeq	r0, r0, sl, lsr r0
    54dc:	00001948 	andeq	r1, r0, r8, asr #18
    54e0:	22112300 	andscs	r2, r1, #0, 6
    54e4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    54e8:	00000001 	andeq	r0, r0, r1
    54ec:	00000c00 	andeq	r0, r0, r0, lsl #24
    54f0:	699c0100 	ldmibvs	ip, {r8}
    54f4:	24000005 	strcs	r0, [r0], #-5
    54f8:	000006a9 	andeq	r0, r0, r9, lsr #13
    54fc:	5e012e01 	cdppl	14, 0, cr2, cr1, cr1, {0}
    5500:	01000000 	mrseq	r0, (UNDEF: 0)
    5504:	45230050 	strmi	r0, [r3, #-80]!	; 0x50
    5508:	01000020 	tsteq	r0, r0, lsr #32
    550c:	0000013d 	andeq	r0, r0, sp, lsr r1
    5510:	00180000 	andseq	r0, r8, r0
    5514:	9c010000 	stcls	0, cr0, [r1], {-0}
    5518:	00000590 	muleq	r0, r0, r5
    551c:	0006a920 	andeq	sl, r6, r0, lsr #18
    5520:	013d0100 	teqeq	sp, r0, lsl #2
    5524:	0000005e 	andeq	r0, r0, lr, asr r0
    5528:	00001967 	andeq	r1, r0, r7, ror #18
    552c:	21751e00 	cmncs	r5, r0, lsl #28
    5530:	4d010000 	stcmi	0, cr0, [r1, #-0]
    5534:	00004c01 	andeq	r4, r0, r1, lsl #24
    5538:	00000000 	andeq	r0, r0, r0
    553c:	00001000 	andeq	r1, r0, r0
    5540:	1f9c0100 	svcne	0x009c0100
    5544:	00002477 	andeq	r2, r0, r7, ror r4
    5548:	a4015a01 	strge	r5, [r1], #-2561	; 0xa01
    554c:	00000000 	andeq	r0, r0, r0
    5550:	20000000 	andcs	r0, r0, r0
    5554:	01000000 	mrseq	r0, (UNDEF: 0)
    5558:	0005f19c 	muleq	r5, ip, r1
    555c:	06a92000 	strteq	r2, [r9], r0
    5560:	5a010000 	bpl	45568 <__Stack_Size+0x45168>
    5564:	00005e01 	andeq	r5, r0, r1, lsl #28
    5568:	00198800 	andseq	r8, r9, r0, lsl #16
    556c:	241c2100 	ldrcs	r2, [ip], #-256	; 0x100
    5570:	5c010000 	stcpl	0, cr0, [r1], {-0}
    5574:	0000a401 	andeq	sl, r0, r1, lsl #8
    5578:	0019a900 	andseq	sl, r9, r0, lsl #18
    557c:	6d742200 	lfmvs	f2, 2, [r4, #-0]
    5580:	5d010070 	stcpl	0, cr0, [r1, #-448]	; 0xfffffe40
    5584:	00003a01 	andeq	r3, r0, r1, lsl #20
    5588:	0019d000 	andseq	sp, r9, r0
    558c:	401e0000 	andsmi	r0, lr, r0
    5590:	01000021 	tsteq	r0, r1, lsr #32
    5594:	003a0177 	eorseq	r0, sl, r7, ror r1
    5598:	00000000 	andeq	r0, r0, r0
    559c:	000c0000 	andeq	r0, ip, r0
    55a0:	9c010000 	stcls	0, cr0, [r1], {-0}
    55a4:	00056923 	andeq	r6, r5, r3, lsr #18
    55a8:	01890100 	orreq	r0, r9, r0, lsl #2
    55ac:	08001420 	stmdaeq	r0, {r5, sl, ip}
    55b0:	00000014 	andeq	r0, r0, r4, lsl r0
    55b4:	063e9c01 	ldrteq	r9, [lr], -r1, lsl #24
    55b8:	0f200000 	svceq	0x00200000
    55bc:	01000024 	tsteq	r0, r4, lsr #32
    55c0:	003a0189 	eorseq	r0, sl, r9, lsl #3
    55c4:	19ef0000 	stmibne	pc!, {}^	; <UNPREDICTABLE>
    55c8:	96200000 	strtls	r0, [r0], -r0
    55cc:	01000019 	tsteq	r0, r9, lsl r0
    55d0:	003a0189 	eorseq	r0, sl, r9, lsl #3
    55d4:	1a100000 	bne	4055dc <__Stack_Size+0x4051dc>
    55d8:	23000000 	movwcs	r0, #0
    55dc:	0000012f 	andeq	r0, r0, pc, lsr #2
    55e0:	34019901 	strcc	r9, [r1], #-2305	; 0x901
    55e4:	18080014 	stmdane	r8, {r2, r4}
    55e8:	01000000 	mrseq	r0, (UNDEF: 0)
    55ec:	00065e9c 	muleq	r6, ip, lr
    55f0:	14402500 	strbne	r2, [r0], #-1280	; 0x500
    55f4:	09750800 	ldmdbeq	r5!, {fp}^
    55f8:	26000000 	strcs	r0, [r0], -r0
    55fc:	000021bd 			; <UNDEFINED> instruction: 0x000021bd
    5600:	0001a701 	andeq	sl, r1, r1, lsl #14
    5604:	10000000 	andne	r0, r0, r0
    5608:	01000000 	mrseq	r0, (UNDEF: 0)
    560c:	22c9239c 	sbccs	r2, r9, #156, 6	; 0x70000002
    5610:	ba010000 	blt	45618 <__Stack_Size+0x45218>
    5614:	00000001 	andeq	r0, r0, r1
    5618:	00001800 	andeq	r1, r0, r0, lsl #16
    561c:	a59c0100 	ldrge	r0, [ip, #256]	; 0x100
    5620:	20000006 	andcs	r0, r0, r6
    5624:	00002459 	andeq	r2, r0, r9, asr r4
    5628:	5e01ba01 	vmlapl.f32	s22, s2, s2
    562c:	31000000 	mrscc	r0, (UNDEF: 0)
    5630:	2400001a 	strcs	r0, [r0], #-26
    5634:	00001a89 	andeq	r1, r0, r9, lsl #21
    5638:	c401ba01 	strgt	fp, [r1], #-2561	; 0xa01
    563c:	01000000 	mrseq	r0, (UNDEF: 0)
    5640:	b0230051 	eorlt	r0, r3, r1, asr r0
    5644:	01000022 	tsteq	r0, r2, lsr #32
    5648:	000001d8 	ldrdeq	r0, [r0], -r8
    564c:	00200000 	eoreq	r0, r0, r0
    5650:	9c010000 	stcls	0, cr0, [r1], {-0}
    5654:	000006ec 	andeq	r0, r0, ip, ror #13
    5658:	00219220 	eoreq	r9, r1, r0, lsr #4
    565c:	01d80100 	bicseq	r0, r8, r0, lsl #2
    5660:	0000003a 	andeq	r0, r0, sl, lsr r0
    5664:	00001a6b 	andeq	r1, r0, fp, ror #20
    5668:	001a8920 	andseq	r8, sl, r0, lsr #18
    566c:	01d80100 	bicseq	r0, r8, r0, lsl #2
    5670:	000000c4 	andeq	r0, r0, r4, asr #1
    5674:	00001a8c 	andeq	r1, r0, ip, lsl #21
    5678:	001f4421 	andseq	r4, pc, r1, lsr #8
    567c:	01da0100 	bicseq	r0, sl, r0, lsl #2
    5680:	0000003a 	andeq	r0, r0, sl, lsr r0
    5684:	00001ac6 	andeq	r1, r0, r6, asr #21
    5688:	21122300 	tstcs	r2, r0, lsl #6
    568c:	00010000 	andeq	r0, r1, r0
    5690:	00000002 	andeq	r0, r0, r2
    5694:	00004c00 	andeq	r4, r0, r0, lsl #24
    5698:	739c0100 	orrsvc	r0, ip, #0, 2
    569c:	20000007 	andcs	r0, r0, r7
    56a0:	00002192 	muleq	r0, r2, r1
    56a4:	3a020001 	bcc	856b0 <__Stack_Size+0x852b0>
    56a8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    56ac:	2000001b 	andcs	r0, r0, fp, lsl r0
    56b0:	000023b1 			; <UNDEFINED> instruction: 0x000023b1
    56b4:	5e020001 	cdppl	0, 0, cr0, cr2, cr1, {0}
    56b8:	2f000000 	svccs	0x00000000
    56bc:	2000001b 	andcs	r0, r0, fp, lsl r0
    56c0:	000020aa 	andeq	r2, r0, sl, lsr #1
    56c4:	5e020101 	adfpls	f0, f2, f1
    56c8:	50000000 	andpl	r0, r0, r0
    56cc:	2100001b 	tstcs	r0, fp, lsl r0
    56d0:	00001fc9 	andeq	r1, r0, r9, asr #31
    56d4:	3a020301 	bcc	862e0 <__Stack_Size+0x85ee0>
    56d8:	71000000 	mrsvc	r0, (UNDEF: 0)
    56dc:	2100001b 	tstcs	r0, fp, lsl r0
    56e0:	00002324 	andeq	r2, r0, r4, lsr #6
    56e4:	3a020301 	bcc	862f0 <__Stack_Size+0x85ef0>
    56e8:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    56ec:	2100001b 	tstcs	r0, fp, lsl r0
    56f0:	0000243e 	andeq	r2, r0, lr, lsr r4
    56f4:	3a020301 	bcc	86300 <__Stack_Size+0x85f00>
    56f8:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    56fc:	2100001b 	tstcs	r0, fp, lsl r0
    5700:	000022f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    5704:	3a020401 	bcc	86710 <__Stack_Size+0x86310>
    5708:	02000000 	andeq	r0, r0, #0
    570c:	0000001c 	andeq	r0, r0, ip, lsl r0
    5710:	0023561f 	eoreq	r5, r3, pc, lsl r6
    5714:	022a0100 	eoreq	r0, sl, #0, 2
    5718:	000000a4 	andeq	r0, r0, r4, lsr #1
    571c:	00000000 	andeq	r0, r0, r0
    5720:	0000001c 	andeq	r0, r0, ip, lsl r0
    5724:	07ce9c01 	strbeq	r9, [lr, r1, lsl #24]
    5728:	92200000 	eorls	r0, r0, #0
    572c:	01000021 	tsteq	r0, r1, lsr #32
    5730:	003a022a 	eorseq	r0, sl, sl, lsr #4
    5734:	1c470000 	marne	acc0, r0, r7
    5738:	53210000 	teqpl	r1, #0
    573c:	0100001c 	tsteq	r0, ip, lsl r0
    5740:	00a4022c 	adceq	r0, r4, ip, lsr #4
    5744:	1c680000 	stclne	0, cr0, [r8], #-0
    5748:	74220000 	strtvc	r0, [r2], #-0
    574c:	0100706d 	tsteq	r0, sp, rrx
    5750:	003a022d 	eorseq	r0, sl, sp, lsr #4
    5754:	1c8f0000 	stcne	0, cr0, [pc], {0}
    5758:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    575c:	01000022 	tsteq	r0, r2, lsr #32
    5760:	003a022d 	eorseq	r0, sl, sp, lsr #4
    5764:	1cbe0000 	ldcne	0, cr0, [lr]
    5768:	23000000 	movwcs	r0, #0
    576c:	0000223a 	andeq	r2, r0, sl, lsr r2
    5770:	00025001 	andeq	r5, r2, r1
    5774:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5778:	01000000 	mrseq	r0, (UNDEF: 0)
    577c:	0008059c 	muleq	r8, ip, r5
    5780:	21922000 	orrscs	r2, r2, r0
    5784:	50010000 	andpl	r0, r1, r0
    5788:	00003a02 	andeq	r3, r0, r2, lsl #20
    578c:	001d0700 	andseq	r0, sp, r0, lsl #14
    5790:	6d742200 	lfmvs	f2, 2, [r4, #-0]
    5794:	52010070 	andpl	r0, r1, #112	; 0x70
    5798:	00003a02 	andeq	r3, r0, r2, lsl #20
    579c:	001d2800 	andseq	r2, sp, r0, lsl #16
    57a0:	7c230000 	stcvc	0, cr0, [r3], #-0
    57a4:	01000023 	tsteq	r0, r3, lsr #32
    57a8:	00000268 	andeq	r0, r0, r8, ror #4
    57ac:	00180000 	andseq	r0, r8, r0
    57b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    57b4:	0000083c 	andeq	r0, r0, ip, lsr r8
    57b8:	00219220 	eoreq	r9, r1, r0, lsr #4
    57bc:	02680100 	rsbeq	r0, r8, #0, 2
    57c0:	0000003a 	andeq	r0, r0, sl, lsr r0
    57c4:	00001d4a 	andeq	r1, r0, sl, asr #26
    57c8:	706d7422 	rsbvc	r7, sp, r2, lsr #8
    57cc:	026a0100 	rsbeq	r0, sl, #0, 2
    57d0:	0000003a 	andeq	r0, r0, sl, lsr r0
    57d4:	00001d6b 	andeq	r1, r0, fp, ror #26
    57d8:	21d41f00 	bicscs	r1, r4, r0, lsl #30
    57dc:	86010000 	strhi	r0, [r1], -r0
    57e0:	0000a402 	andeq	sl, r0, r2, lsl #8
    57e4:	00000000 	andeq	r0, r0, r0
    57e8:	00001c00 	andeq	r1, r0, r0, lsl #24
    57ec:	979c0100 	ldrls	r0, [ip, r0, lsl #2]
    57f0:	20000008 	andcs	r0, r0, r8
    57f4:	00002192 	muleq	r0, r2, r1
    57f8:	3a028601 	bcc	a7004 <__Stack_Size+0xa6c04>
    57fc:	9a000000 	bls	5804 <__Stack_Size+0x5404>
    5800:	2100001d 	tstcs	r0, sp, lsl r0
    5804:	00001c53 	andeq	r1, r0, r3, asr ip
    5808:	a4028801 	strge	r8, [r2], #-2049	; 0x801
    580c:	bb000000 	bllt	5814 <__Stack_Size+0x5414>
    5810:	2200001d 	andcs	r0, r0, #29
    5814:	00706d74 	rsbseq	r6, r0, r4, ror sp
    5818:	3a028a01 	bcc	a8024 <__Stack_Size+0xa7c24>
    581c:	e2000000 	and	r0, r0, #0
    5820:	2100001d 	tstcs	r0, sp, lsl r0
    5824:	0000222e 	andeq	r2, r0, lr, lsr #4
    5828:	3a028a01 	bcc	a8034 <__Stack_Size+0xa7c34>
    582c:	11000000 	mrsne	r0, (UNDEF: 0)
    5830:	0000001e 	andeq	r0, r0, lr, lsl r0
    5834:	00232e1f 	eoreq	r2, r3, pc, lsl lr
    5838:	02ae0100 	adceq	r0, lr, #0, 2
    583c:	0000003a 	andeq	r0, r0, sl, lsr r0
    5840:	00000000 	andeq	r0, r0, r0
    5844:	00000030 	andeq	r0, r0, r0, lsr r0
    5848:	08f29c01 	ldmeq	r2!, {r0, sl, fp, ip, pc}^
    584c:	92200000 	eorls	r0, r0, #0
    5850:	01000021 	tsteq	r0, r1, lsr #32
    5854:	003a02ae 	eorseq	r0, sl, lr, lsr #5
    5858:	1e5a0000 	cdpne	0, 5, cr0, cr10, cr0, {0}
    585c:	a4210000 	strtge	r0, [r1], #-0
    5860:	01000023 	tsteq	r0, r3, lsr #32
    5864:	003a02b0 	ldrhteq	r0, [sl], -r0
    5868:	1ead0000 	cdpne	0, 10, cr0, cr13, cr0, {0}
    586c:	44210000 	strtmi	r0, [r1], #-0
    5870:	0100001f 	tsteq	r0, pc, lsl r0
    5874:	003a02b1 	ldrhteq	r0, [sl], -r1
    5878:	1efa0000 	cdpne	0, 15, cr0, cr10, cr0, {0}
    587c:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    5880:	01000022 	tsteq	r0, r2, lsr #32
    5884:	003a02b1 	ldrhteq	r0, [sl], -r1
    5888:	1f490000 	svcne	0x00490000
    588c:	1f000000 	svcne	0x00000000
    5890:	00002095 	muleq	r0, r5, r0
    5894:	3a02dc01 	bcc	bc8a0 <__Stack_Size+0xbc4a0>
    5898:	00000000 	andeq	r0, r0, r0
    589c:	14000000 	strne	r0, [r0], #-0
    58a0:	01000000 	mrseq	r0, (UNDEF: 0)
    58a4:	00093d9c 	muleq	r9, ip, sp
    58a8:	21922000 	orrscs	r2, r2, r0
    58ac:	dc010000 	stcle	0, cr0, [r1], {-0}
    58b0:	00003a02 	andeq	r3, r0, r2, lsl #20
    58b4:	001fc600 	andseq	ip, pc, r0, lsl #12
    58b8:	21052100 	mrscs	r2, (UNDEF: 21)
    58bc:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    58c0:	00003a02 	andeq	r3, r0, r2, lsl #20
    58c4:	001fe700 	andseq	lr, pc, r0, lsl #14
    58c8:	6d742200 	lfmvs	f2, 2, [r4, #-0]
    58cc:	df010070 	svcle	0x00010070
    58d0:	00003a02 	andeq	r3, r0, r2, lsl #20
    58d4:	00200600 	eoreq	r0, r0, r0, lsl #12
    58d8:	2c270000 	stccs	0, cr0, [r7], #-0
    58dc:	05000024 	streq	r0, [r0, #-36]	; 0x24
    58e0:	244a2729 	strbcs	r2, [sl], #-1833	; 0x729
    58e4:	28050000 	stmdacs	r5, {}	; <UNPREDICTABLE>
    58e8:	0021ae27 	eoreq	sl, r1, r7, lsr #28
    58ec:	272c0500 	strcs	r0, [ip, -r0, lsl #10]!
    58f0:	00002466 	andeq	r2, r0, r6, ror #8
    58f4:	65282b05 	strvs	r2, [r8, #-2821]!	; 0xb05
    58f8:	05000022 	streq	r0, [r0, #-34]	; 0x22
    58fc:	00096a2e 	andeq	r6, r9, lr, lsr #20
    5900:	003a2900 	eorseq	r2, sl, r0, lsl #18
    5904:	2a000000 	bcs	590c <__Stack_Size+0x550c>
    5908:	00002133 	andeq	r2, r0, r3, lsr r1
    590c:	003a2f05 	eorseq	r2, sl, r5, lsl #30
    5910:	75270000 	strvc	r0, [r7, #-0]!
    5914:	05000022 	streq	r0, [r0, #-34]	; 0x22
    5918:	086d001f 	stmdaeq	sp!, {r0, r1, r2, r3, r4}^
    591c:	00040000 	andeq	r0, r4, r0
    5920:	000015ac 	andeq	r1, r0, ip, lsr #11
    5924:	02f40104 	rscseq	r0, r4, #4, 2
    5928:	fb010000 	blx	45932 <__Stack_Size+0x45532>
    592c:	ec000024 	stc	0, cr0, [r0], {36}	; 0x24
    5930:	c0000003 	andgt	r0, r0, r3
    5934:	00000006 	andeq	r0, r0, r6
    5938:	b0000000 	andlt	r0, r0, r0
    593c:	02000019 	andeq	r0, r0, #25
    5940:	082d0504 	stmdaeq	sp!, {r2, r8, sl}
    5944:	02020000 	andeq	r0, r2, #0
    5948:	0007ff05 	andeq	pc, r7, r5, lsl #30
    594c:	06010200 	streq	r0, [r1], -r0, lsl #4
    5950:	000009de 	ldrdeq	r0, [r0], -lr
    5954:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    5958:	45270200 	strmi	r0, [r7, #-512]!	; 0x200
    595c:	02000000 	andeq	r0, r0, #0
    5960:	093a0704 	ldmdbeq	sl!, {r2, r8, r9, sl}
    5964:	75030000 	strvc	r0, [r3, #-0]
    5968:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    596c:	00005728 	andeq	r5, r0, r8, lsr #14
    5970:	07020200 	streq	r0, [r2, -r0, lsl #4]
    5974:	00000bd7 	ldrdeq	r0, [r0], -r7
    5978:	00387503 	eorseq	r7, r8, r3, lsl #10
    597c:	00682902 	rsbeq	r2, r8, r2, lsl #18
    5980:	01020000 	mrseq	r0, (UNDEF: 2)
    5984:	0009dc08 	andeq	sp, r9, r8, lsl #24
    5988:	63750300 	cmnvs	r5, #0, 6
    598c:	2d020038 	stccs	0, cr0, [r2, #-224]	; 0xffffff20
    5990:	0000007a 	andeq	r0, r0, sl, ror r0
    5994:	00006804 	andeq	r6, r0, r4, lsl #16
    5998:	04590500 	ldrbeq	r0, [r9], #-1280	; 0x500
    599c:	2f020000 	svccs	0x00020000
    59a0:	0000008a 	andeq	r0, r0, sl, lsl #1
    59a4:	00004506 	andeq	r4, r0, r6, lsl #10
    59a8:	75760300 	ldrbvc	r0, [r6, #-768]!	; 0x300
    59ac:	31020038 	tstcc	r2, r8, lsr r0
    59b0:	0000009a 	muleq	r0, sl, r0
    59b4:	00006806 	andeq	r6, r0, r6, lsl #16
    59b8:	02010700 	andeq	r0, r1, #0, 14
    59bc:	0000b43c 	andeq	fp, r0, ip, lsr r4
    59c0:	1eca0800 	cdpne	8, 12, cr0, cr10, cr0, {0}
    59c4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    59c8:	00544553 	subseq	r4, r4, r3, asr r5
    59cc:	8e050001 	cdphi	0, 0, cr0, cr5, cr1, {0}
    59d0:	02000007 	andeq	r0, r0, #7
    59d4:	00009f3c 	andeq	r9, r0, ip, lsr pc
    59d8:	25220500 	strcs	r0, [r2, #-1280]!	; 0x500
    59dc:	3c020000 	stccc	0, cr0, [r2], {-0}
    59e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    59e4:	3e020107 	adfccs	f0, f2, f7
    59e8:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    59ec:	00053f08 	andeq	r3, r5, r8, lsl #30
    59f0:	17080000 	strne	r0, [r8, -r0]
    59f4:	01000009 	tsteq	r0, r9
    59f8:	00b40500 	adcseq	r0, r4, r0, lsl #10
    59fc:	3e020000 	cdpcc	0, 0, cr0, cr2, cr0, {0}
    5a00:	000000ca 	andeq	r0, r0, sl, asr #1
    5a04:	41020107 	tstmi	r2, r7, lsl #2
    5a08:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5a0c:	0014a108 	andseq	sl, r4, r8, lsl #2
    5a10:	0b080000 	bleq	205a18 <__Stack_Size+0x205618>
    5a14:	01000014 	tsteq	r0, r4, lsl r0
    5a18:	00e90500 	rsceq	r0, r9, r0, lsl #10
    5a1c:	41020000 	mrsmi	r0, (UNDEF: 2)
    5a20:	000000ea 	andeq	r0, r0, sl, ror #1
    5a24:	31070402 	tstcc	r7, r2, lsl #8
    5a28:	0a000009 	beq	5a54 <__Stack_Size+0x5654>
    5a2c:	01aa0328 			; <UNDEFINED> instruction: 0x01aa0328
    5a30:	0000019c 	muleq	r0, ip, r1
    5a34:	0052430b 	subseq	r4, r2, fp, lsl #6
    5a38:	7f01ac03 	svcvc	0x0001ac03
    5a3c:	00000000 	andeq	r0, r0, r0
    5a40:	00257c0c 	eoreq	r7, r5, ip, lsl #24
    5a44:	01ad0300 			; <UNDEFINED> instruction: 0x01ad0300
    5a48:	0000007f 	andeq	r0, r0, pc, ror r0
    5a4c:	49430b04 	stmdbmi	r3, {r2, r8, r9, fp}^
    5a50:	ae030052 	mcrge	0, 0, r0, cr3, cr2, {2}
    5a54:	00007f01 	andeq	r7, r0, r1, lsl #30
    5a58:	e10c0800 	tst	ip, r0, lsl #16
    5a5c:	03000025 	movweq	r0, #37	; 0x25
    5a60:	007f01af 	rsbseq	r0, pc, pc, lsr #3
    5a64:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    5a68:	000024c2 	andeq	r2, r0, r2, asr #9
    5a6c:	7f01b003 	svcvc	0x0001b003
    5a70:	10000000 	andne	r0, r0, r0
    5a74:	0026030c 	eoreq	r0, r6, ip, lsl #6
    5a78:	01b10300 			; <UNDEFINED> instruction: 0x01b10300
    5a7c:	0000007f 	andeq	r0, r0, pc, ror r0
    5a80:	26140c14 			; <UNDEFINED> instruction: 0x26140c14
    5a84:	b2030000 	andlt	r0, r3, #0
    5a88:	00007f01 	andeq	r7, r0, r1, lsl #30
    5a8c:	900c1800 	andls	r1, ip, r0, lsl #16
    5a90:	03000025 	movweq	r0, #37	; 0x25
    5a94:	007f01b3 	ldrhteq	r0, [pc], #-19
    5a98:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
    5a9c:	0000252b 	andeq	r2, r0, fp, lsr #10
    5aa0:	7f01b403 	svcvc	0x0001b403
    5aa4:	20000000 	andcs	r0, r0, r0
    5aa8:	5253430b 	subspl	r4, r3, #738197504	; 0x2c000000
    5aac:	01b50300 			; <UNDEFINED> instruction: 0x01b50300
    5ab0:	0000007f 	andeq	r0, r0, pc, ror r0
    5ab4:	b60d0024 	strlt	r0, [sp], -r4, lsr #32
    5ab8:	03000024 	movweq	r0, #36	; 0x24
    5abc:	011101b6 			; <UNDEFINED> instruction: 0x011101b6
    5ac0:	140e0000 	strne	r0, [lr], #-0
    5ac4:	01ed1904 	mvneq	r1, r4, lsl #18
    5ac8:	d60f0000 	strle	r0, [pc], -r0
    5acc:	04000026 	streq	r0, [r0], #-38	; 0x26
    5ad0:	00003a1b 	andeq	r3, r0, fp, lsl sl
    5ad4:	810f0000 	mrshi	r0, CPSR
    5ad8:	04000025 	streq	r0, [r0], #-37	; 0x25
    5adc:	00003a1c 	andeq	r3, r0, ip, lsl sl
    5ae0:	2e0f0400 	cfcpyscs	mvf0, mvf15
    5ae4:	04000027 	streq	r0, [r0], #-39	; 0x27
    5ae8:	00003a1d 	andeq	r3, r0, sp, lsl sl
    5aec:	f20f0800 	vadd.i8	d0, d15, d0
    5af0:	04000026 	streq	r0, [r0], #-38	; 0x26
    5af4:	00003a1e 	andeq	r3, r0, lr, lsl sl
    5af8:	5c0f0c00 	stcpl	12, cr0, [pc], {-0}
    5afc:	04000026 	streq	r0, [r0], #-38	; 0x26
    5b00:	00003a1f 	andeq	r3, r0, pc, lsl sl
    5b04:	05001000 	streq	r1, [r0, #-0]
    5b08:	00002549 	andeq	r2, r0, r9, asr #10
    5b0c:	01a82004 			; <UNDEFINED> instruction: 0x01a82004
    5b10:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
    5b14:	01000000 	mrseq	r0, (UNDEF: 0)
    5b18:	00144c7c 	andseq	r4, r4, ip, ror ip
    5b1c:	00003c08 	andeq	r3, r0, r8, lsl #24
    5b20:	119c0100 	orrsne	r0, ip, r0, lsl #2
    5b24:	000005b2 			; <UNDEFINED> instruction: 0x000005b2
    5b28:	14889f01 	strne	r9, [r8], #3841	; 0xf01
    5b2c:	00380800 	eorseq	r0, r8, r0, lsl #16
    5b30:	9c010000 	stcls	0, cr0, [r1], {-0}
    5b34:	0000022c 	andeq	r0, r0, ip, lsr #4
    5b38:	00271512 	eoreq	r1, r7, r2, lsl r5
    5b3c:	3a9f0100 	bcc	fe7c5f44 <SCS_BASE+0x1e7b7f44>
    5b40:	01000000 	mrseq	r0, (UNDEF: 0)
    5b44:	3e110050 	mrccc	0, 0, r0, cr1, cr0, {2}
    5b48:	01000026 	tsteq	r0, r6, lsr #32
    5b4c:	000000e9 	andeq	r0, r0, r9, ror #1
    5b50:	00001400 	andeq	r1, r0, r0, lsl #8
    5b54:	609c0100 	addsvs	r0, ip, r0, lsl #2
    5b58:	13000002 	movwne	r0, #2
    5b5c:	00002648 	andeq	r2, r0, r8, asr #12
    5b60:	005ee901 	subseq	lr, lr, r1, lsl #18
    5b64:	20310000 	eorscs	r0, r1, r0
    5b68:	44140000 	ldrmi	r0, [r4], #-0
    5b6c:	0100001f 	tsteq	r0, pc, lsl r0
    5b70:	00003aeb 	andeq	r3, r0, fp, ror #21
    5b74:	00205200 	eoreq	r5, r0, r0, lsl #4
    5b78:	7d150000 	ldcvc	0, cr0, [r5, #-0]
    5b7c:	01000027 	tsteq	r0, r7, lsr #32
    5b80:	00000106 	andeq	r0, r0, r6, lsl #2
    5b84:	000c0000 	andeq	r0, ip, r0
    5b88:	9c010000 	stcls	0, cr0, [r1], {-0}
    5b8c:	00000285 	andeq	r0, r0, r5, lsl #5
    5b90:	001a8916 	andseq	r8, sl, r6, lsl r9
    5b94:	01060100 	mrseq	r0, (UNDEF: 22)
    5b98:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5b9c:	15005001 	strne	r5, [r0, #-1]
    5ba0:	00000101 	andeq	r0, r0, r1, lsl #2
    5ba4:	c0011f01 	andgt	r1, r1, r1, lsl #30
    5ba8:	14080014 	strne	r0, [r8], #-20
    5bac:	01000000 	mrseq	r0, (UNDEF: 0)
    5bb0:	0002cc9c 	muleq	r2, ip, ip
    5bb4:	26761700 	ldrbtcs	r1, [r6], -r0, lsl #14
    5bb8:	1f010000 	svcne	0x00010000
    5bbc:	00003a01 	andeq	r3, r0, r1, lsl #20
    5bc0:	00207c00 	eoreq	r7, r0, r0, lsl #24
    5bc4:	255b1700 	ldrbcs	r1, [fp, #-1792]	; 0x700
    5bc8:	1f010000 	svcne	0x00010000
    5bcc:	00003a01 	andeq	r3, r0, r1, lsl #20
    5bd0:	00209d00 	eoreq	r9, r0, r0, lsl #26
    5bd4:	1f441800 	svcne	0x00441800
    5bd8:	21010000 	mrscs	r0, (UNDEF: 1)
    5bdc:	00003a01 	andeq	r3, r0, r1, lsl #20
    5be0:	0020be00 	eoreq	fp, r0, r0, lsl #28
    5be4:	6b150000 	blvs	545bec <__Stack_Size+0x5457ec>
    5be8:	0100000b 	tsteq	r0, fp
    5bec:	14d4013c 	ldrbne	r0, [r4], #316	; 0x13c
    5bf0:	000c0800 	andeq	r0, ip, r0, lsl #16
    5bf4:	9c010000 	stcls	0, cr0, [r1], {-0}
    5bf8:	000002f1 	strdeq	r0, [r0], -r1
    5bfc:	001a8916 	andseq	r8, sl, r6, lsl r9
    5c00:	013c0100 	teqeq	ip, r0, lsl #2
    5c04:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5c08:	15005001 	strne	r5, [r0, #-1]
    5c0c:	00000018 	andeq	r0, r0, r8, lsl r0
    5c10:	e0014f01 	and	r4, r1, r1, lsl #30
    5c14:	14080014 	strne	r0, [r8], #-20
    5c18:	01000000 	mrseq	r0, (UNDEF: 0)
    5c1c:	0003289c 	muleq	r3, ip, r8
    5c20:	271d1700 	ldrcs	r1, [sp, -r0, lsl #14]
    5c24:	4f010000 	svcmi	0x00010000
    5c28:	00003a01 	andeq	r3, r0, r1, lsl #20
    5c2c:	0020fb00 	eoreq	pc, r0, r0, lsl #22
    5c30:	1f441800 	svcne	0x00441800
    5c34:	51010000 	mrspl	r0, (UNDEF: 1)
    5c38:	00003a01 	andeq	r3, r0, r1, lsl #20
    5c3c:	00211c00 	eoreq	r1, r1, r0, lsl #24
    5c40:	03190000 	tsteq	r9, #0
    5c44:	01000009 	tsteq	r0, r9
    5c48:	005e016d 	subseq	r0, lr, sp, ror #2
    5c4c:	14f40000 	ldrbtne	r0, [r4], #0
    5c50:	00100800 	andseq	r0, r0, r0, lsl #16
    5c54:	9c010000 	stcls	0, cr0, [r1], {-0}
    5c58:	00069415 	andeq	r9, r6, r5, lsl r4
    5c5c:	01840100 	orreq	r0, r4, r0, lsl #2
    5c60:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
    5c64:	00000014 	andeq	r0, r0, r4, lsl r0
    5c68:	03759c01 	cmneq	r5, #256	; 0x100
    5c6c:	a6170000 	ldrge	r0, [r7], -r0
    5c70:	01000026 	tsteq	r0, r6, lsr #32
    5c74:	003a0184 	eorseq	r0, sl, r4, lsl #3
    5c78:	21460000 	mrscs	r0, (UNDEF: 70)
    5c7c:	44180000 	ldrmi	r0, [r8], #-0
    5c80:	0100001f 	tsteq	r0, pc, lsl r0
    5c84:	003a0186 	eorseq	r0, sl, r6, lsl #3
    5c88:	21670000 	cmncs	r7, r0
    5c8c:	15000000 	strne	r0, [r0, #-0]
    5c90:	000006c4 	andeq	r0, r0, r4, asr #13
    5c94:	1801a501 	stmdane	r1, {r0, r8, sl, sp, pc}
    5c98:	14080015 	strne	r0, [r8], #-21
    5c9c:	01000000 	mrseq	r0, (UNDEF: 0)
    5ca0:	0003ac9c 	muleq	r3, ip, ip
    5ca4:	24cb1700 	strbcs	r1, [fp], #1792	; 0x700
    5ca8:	a5010000 	strge	r0, [r1, #-0]
    5cac:	00003a01 	andeq	r3, r0, r1, lsl #20
    5cb0:	00219100 	eoreq	r9, r1, r0, lsl #2
    5cb4:	1f441800 	svcne	0x00441800
    5cb8:	a7010000 	strge	r0, [r1, -r0]
    5cbc:	00003a01 	andeq	r3, r0, r1, lsl #20
    5cc0:	0021b200 	eoreq	fp, r1, r0, lsl #4
    5cc4:	87150000 	ldrhi	r0, [r5, -r0]
    5cc8:	01000001 	tsteq	r0, r1
    5ccc:	152c01c6 	strne	r0, [ip, #-454]!	; 0x1c6
    5cd0:	00140800 	andseq	r0, r4, r0, lsl #16
    5cd4:	9c010000 	stcls	0, cr0, [r1], {-0}
    5cd8:	000003e3 	andeq	r0, r0, r3, ror #7
    5cdc:	0024cb17 	eoreq	ip, r4, r7, lsl fp
    5ce0:	01c60100 	biceq	r0, r6, r0, lsl #2
    5ce4:	0000003a 	andeq	r0, r0, sl, lsr r0
    5ce8:	000021dc 	ldrdeq	r2, [r0], -ip
    5cec:	001f4418 	andseq	r4, pc, r8, lsl r4	; <UNPREDICTABLE>
    5cf0:	01c80100 	biceq	r0, r8, r0, lsl #2
    5cf4:	0000003a 	andeq	r0, r0, sl, lsr r0
    5cf8:	000021fd 	strdeq	r2, [r0], -sp
    5cfc:	27021500 	strcs	r1, [r2, -r0, lsl #10]
    5d00:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
    5d04:	00000001 	andeq	r0, r0, r1
    5d08:	00001800 	andeq	r1, r0, r0, lsl #16
    5d0c:	189c0100 	ldmne	ip, {r8}
    5d10:	17000004 	strne	r0, [r0, -r4]
    5d14:	00002790 	muleq	r0, r0, r7
    5d18:	5e01e901 	cdppl	9, 0, cr14, cr1, cr1, {0}
    5d1c:	27000000 	strcs	r0, [r0, -r0]
    5d20:	16000022 	strne	r0, [r0], -r2, lsr #32
    5d24:	00001a89 	andeq	r1, r0, r9, lsl #21
    5d28:	df01e901 	svcle	0x0001e901
    5d2c:	01000000 	mrseq	r0, (UNDEF: 0)
    5d30:	76150051 			; <UNDEFINED> instruction: 0x76150051
    5d34:	01000007 	tsteq	r0, r7
    5d38:	15400208 	strbne	r0, [r0, #-520]	; 0x208
    5d3c:	000c0800 	andeq	r0, ip, r0, lsl #16
    5d40:	9c010000 	stcls	0, cr0, [r1], {-0}
    5d44:	0000043d 	andeq	r0, r0, sp, lsr r4
    5d48:	00269516 	eoreq	r9, r6, r6, lsl r5
    5d4c:	02080100 	andeq	r0, r8, #0, 2
    5d50:	0000003a 	andeq	r0, r0, sl, lsr r0
    5d54:	15005001 	strne	r5, [r0, #-1]
    5d58:	000024d4 	ldrdeq	r2, [r0], -r4
    5d5c:	00021d01 	andeq	r1, r2, r1, lsl #26
    5d60:	14000000 	strne	r0, [r0], #-0
    5d64:	01000000 	mrseq	r0, (UNDEF: 0)
    5d68:	0004749c 	muleq	r4, ip, r4
    5d6c:	253f1700 	ldrcs	r1, [pc, #-1792]!	; 5674 <__Stack_Size+0x5274>
    5d70:	1d010000 	stcne	0, cr0, [r1, #-0]
    5d74:	00003a02 	andeq	r3, r0, r2, lsl #20
    5d78:	00226100 	eoreq	r6, r2, r0, lsl #2
    5d7c:	1f441800 	svcne	0x00441800
    5d80:	1f010000 	svcne	0x00010000
    5d84:	00003a02 	andeq	r3, r0, r2, lsl #20
    5d88:	00228200 	eoreq	r8, r2, r0, lsl #4
    5d8c:	3e150000 	cdpcc	0, 1, cr0, cr5, cr0, {0}
    5d90:	01000027 	tsteq	r0, r7, lsr #32
    5d94:	0000023c 	andeq	r0, r0, ip, lsr r2
    5d98:	00200000 	eoreq	r0, r0, r0
    5d9c:	9c010000 	stcls	0, cr0, [r1], {-0}
    5da0:	00000499 	muleq	r0, r9, r4
    5da4:	00251316 	eoreq	r1, r5, r6, lsl r3
    5da8:	023c0100 	eorseq	r0, ip, #0, 2
    5dac:	0000005e 	andeq	r0, r0, lr, asr r0
    5db0:	15005001 	strne	r5, [r0, #-1]
    5db4:	000025d6 	ldrdeq	r2, [r0], -r6
    5db8:	00026301 	andeq	r6, r2, r1, lsl #6
    5dbc:	0c000000 	stceq	0, cr0, [r0], {-0}
    5dc0:	01000000 	mrseq	r0, (UNDEF: 0)
    5dc4:	0004be9c 	muleq	r4, ip, lr
    5dc8:	1a891600 	bne	fe24b5d0 <SCS_BASE+0x1e23d5d0>
    5dcc:	63010000 	movwvs	r0, #4096	; 0x1000
    5dd0:	0000df02 	andeq	sp, r0, r2, lsl #30
    5dd4:	00500100 	subseq	r0, r0, r0, lsl #2
    5dd8:	00268415 	eoreq	r8, r6, r5, lsl r4
    5ddc:	02790100 	rsbseq	r0, r9, #0, 2
    5de0:	00000000 	andeq	r0, r0, r0
    5de4:	00000010 	andeq	r0, r0, r0, lsl r0
    5de8:	04e59c01 	strbteq	r9, [r5], #3073	; 0xc01
    5dec:	a6170000 	ldrge	r0, [r7], -r0
    5df0:	01000025 	tsteq	r0, r5, lsr #32
    5df4:	003a0279 	eorseq	r0, sl, r9, ror r2
    5df8:	22ac0000 	adccs	r0, ip, #0
    5dfc:	15000000 	strne	r0, [r0, #-0]
    5e00:	0000276f 	andeq	r2, r0, pc, ror #14
    5e04:	00028c01 	andeq	r8, r2, r1, lsl #24
    5e08:	0c000000 	stceq	0, cr0, [r0], {-0}
    5e0c:	01000000 	mrseq	r0, (UNDEF: 0)
    5e10:	00050a9c 	muleq	r5, ip, sl
    5e14:	1a891600 	bne	fe24b61c <SCS_BASE+0x1e23d61c>
    5e18:	8c010000 	stchi	0, cr0, [r1], {-0}
    5e1c:	0000df02 	andeq	sp, r0, r2, lsl #30
    5e20:	00500100 	subseq	r0, r0, r0, lsl #2
    5e24:	00275d15 	eoreq	r5, r7, r5, lsl sp
    5e28:	029c0100 	addseq	r0, ip, #0, 2
    5e2c:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
    5e30:	00000084 	andeq	r0, r0, r4, lsl #1
    5e34:	056f9c01 	strbeq	r9, [pc, #-3073]!	; 523b <__Stack_Size+0x4e3b>
    5e38:	e7160000 	ldr	r0, [r6, -r0]
    5e3c:	01000026 	tsteq	r0, r6, lsr #32
    5e40:	056f029c 	strbeq	r0, [pc, #-668]!	; 5bac <__Stack_Size+0x57ac>
    5e44:	50010000 	andpl	r0, r1, r0
    5e48:	706d741a 	rsbvc	r7, sp, sl, lsl r4
    5e4c:	029e0100 	addseq	r0, lr, #0, 2
    5e50:	0000003a 	andeq	r0, r0, sl, lsr r0
    5e54:	000022cd 	andeq	r2, r0, sp, asr #5
    5e58:	0025ce18 	eoreq	ip, r5, r8, lsl lr
    5e5c:	029e0100 	addseq	r0, lr, #0, 2
    5e60:	0000003a 	andeq	r0, r0, sl, lsr r0
    5e64:	00002351 	andeq	r2, r0, r1, asr r3
    5e68:	0025f918 	eoreq	pc, r5, r8, lsl r9	; <UNPREDICTABLE>
    5e6c:	029e0100 	addseq	r0, lr, #0, 2
    5e70:	0000003a 	andeq	r0, r0, sl, lsr r0
    5e74:	00002381 	andeq	r2, r0, r1, lsl #7
    5e78:	00270f18 	eoreq	r0, r7, r8, lsl pc
    5e7c:	029e0100 	addseq	r0, lr, #0, 2
    5e80:	0000003a 	andeq	r0, r0, sl, lsr r0
    5e84:	000023a6 	andeq	r2, r0, r6, lsr #7
    5e88:	ed041b00 	vstr	d1, [r4, #-0]
    5e8c:	15000001 	strne	r0, [r0, #-1]
    5e90:	00002566 	andeq	r2, r0, r6, ror #10
    5e94:	00030001 	andeq	r0, r3, r1
    5e98:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5e9c:	01000000 	mrseq	r0, (UNDEF: 0)
    5ea0:	0005aa9c 	muleq	r5, ip, sl
    5ea4:	27971700 	ldrcs	r1, [r7, r0, lsl #14]
    5ea8:	00010000 	andeq	r0, r1, r0
    5eac:	00003a03 	andeq	r3, r0, r3, lsl #20
    5eb0:	00243100 	eoreq	r3, r4, r0, lsl #2
    5eb4:	1a891600 	bne	fe24b6bc <SCS_BASE+0x1e23d6bc>
    5eb8:	00010000 	andeq	r0, r1, r0
    5ebc:	0000df03 	andeq	sp, r0, r3, lsl #30
    5ec0:	00510100 	subseq	r0, r1, r0, lsl #2
    5ec4:	000b2f15 	andeq	r2, fp, r5, lsl pc
    5ec8:	03210100 	teqeq	r1, #0, 2
    5ecc:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
    5ed0:	00000018 	andeq	r0, r0, r8, lsl r0
    5ed4:	05df9c01 	ldrbeq	r9, [pc, #3073]	; 6add <__Stack_Size+0x66dd>
    5ed8:	30170000 	andscc	r0, r7, r0
    5edc:	01000025 	tsteq	r0, r5, lsr #32
    5ee0:	003a0321 	eorseq	r0, sl, r1, lsr #6
    5ee4:	246b0000 	strbtcs	r0, [fp], #-0
    5ee8:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
    5eec:	0100001a 	tsteq	r0, sl, lsl r0
    5ef0:	00df0321 	sbcseq	r0, pc, r1, lsr #6
    5ef4:	51010000 	mrspl	r0, (UNDEF: 1)
    5ef8:	05471500 	strbeq	r1, [r7, #-1280]	; 0x500
    5efc:	43010000 	movwmi	r0, #4096	; 0x1000
    5f00:	0015e803 	andseq	lr, r5, r3, lsl #16
    5f04:	00001808 	andeq	r1, r0, r8, lsl #16
    5f08:	149c0100 	ldrne	r0, [ip], #256	; 0x100
    5f0c:	17000006 	strne	r0, [r0, -r6]
    5f10:	000025ea 	andeq	r2, r0, sl, ror #11
    5f14:	3a034301 	bcc	d6b20 <__Stack_Size+0xd6720>
    5f18:	a5000000 	strge	r0, [r0, #-0]
    5f1c:	16000024 	strne	r0, [r0], -r4, lsr #32
    5f20:	00001a89 	andeq	r1, r0, r9, lsl #21
    5f24:	df034301 	svcle	0x00034301
    5f28:	01000000 	mrseq	r0, (UNDEF: 0)
    5f2c:	6e150051 	mrcvs	0, 0, r0, cr5, cr1, {2}
    5f30:	0100001f 	tsteq	r0, pc, lsl r0
    5f34:	16000363 	strne	r0, [r0], -r3, ror #6
    5f38:	00180800 	andseq	r0, r8, r0, lsl #16
    5f3c:	9c010000 	stcls	0, cr0, [r1], {-0}
    5f40:	00000649 	andeq	r0, r0, r9, asr #12
    5f44:	00253017 	eoreq	r3, r5, r7, lsl r0
    5f48:	03630100 	cmneq	r3, #0, 2
    5f4c:	0000003a 	andeq	r0, r0, sl, lsr r0
    5f50:	000024df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    5f54:	001a8916 	andseq	r8, sl, r6, lsl r9
    5f58:	03630100 	cmneq	r3, #0, 2
    5f5c:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5f60:	15005101 	strne	r5, [r0, #-257]	; 0x101
    5f64:	000025b7 			; <UNDEFINED> instruction: 0x000025b7
    5f68:	18038401 	stmdane	r3, {r0, sl, pc}
    5f6c:	18080016 	stmdane	r8, {r1, r2, r4}
    5f70:	01000000 	mrseq	r0, (UNDEF: 0)
    5f74:	00067e9c 	muleq	r6, ip, lr
    5f78:	25ea1700 	strbcs	r1, [sl, #1792]!	; 0x700
    5f7c:	84010000 	strhi	r0, [r1], #-0
    5f80:	00003a03 	andeq	r3, r0, r3, lsl #20
    5f84:	00251900 	eoreq	r1, r5, r0, lsl #18
    5f88:	1a891600 	bne	fe24b790 <SCS_BASE+0x1e23d790>
    5f8c:	84010000 	strhi	r0, [r1], #-0
    5f90:	0000df03 	andeq	sp, r0, r3, lsl #30
    5f94:	00510100 	subseq	r0, r1, r0, lsl #2
    5f98:	00262b15 	eoreq	r2, r6, r5, lsl fp
    5f9c:	039c0100 	orrseq	r0, ip, #0, 2
    5fa0:	00000000 	andeq	r0, r0, r0
    5fa4:	0000000c 	andeq	r0, r0, ip
    5fa8:	06a39c01 	strteq	r9, [r3], r1, lsl #24
    5fac:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
    5fb0:	0100001a 	tsteq	r0, sl, lsl r0
    5fb4:	00df039c 	smullseq	r0, pc, ip, r3	; <UNPREDICTABLE>
    5fb8:	50010000 	andpl	r0, r1, r0
    5fbc:	26bb1500 	ldrtcs	r1, [fp], r0, lsl #10
    5fc0:	ac010000 	stcge	0, cr0, [r1], {-0}
    5fc4:	00000003 	andeq	r0, r0, r3
    5fc8:	00000c00 	andeq	r0, r0, r0, lsl #24
    5fcc:	c89c0100 	ldmgt	ip, {r8}
    5fd0:	16000006 	strne	r0, [r0], -r6
    5fd4:	00001a89 	andeq	r1, r0, r9, lsl #21
    5fd8:	df03ac01 	svcle	0x0003ac01
    5fdc:	01000000 	mrseq	r0, (UNDEF: 0)
    5fe0:	98150050 	ldmdals	r5, {r4, r6}
    5fe4:	01000025 	tsteq	r0, r5, lsr #32
    5fe8:	000003c1 	andeq	r0, r0, r1, asr #7
    5fec:	000c0000 	andeq	r0, ip, r0
    5ff0:	9c010000 	stcls	0, cr0, [r1], {-0}
    5ff4:	000006ed 	andeq	r0, r0, sp, ror #13
    5ff8:	00278816 	eoreq	r8, r7, r6, lsl r8
    5ffc:	03c10100 	biceq	r0, r1, #0, 2
    6000:	0000005e 	andeq	r0, r0, lr, asr r0
    6004:	1c005001 	stcne	0, cr5, [r0], {1}
    6008:	00000787 	andeq	r0, r0, r7, lsl #15
    600c:	b403dd01 	strlt	sp, [r3], #-3329	; 0xd01
    6010:	30000000 	andcc	r0, r0, r0
    6014:	28080016 	stmdacs	r8, {r1, r2, r4}
    6018:	01000000 	mrseq	r0, (UNDEF: 0)
    601c:	0007489c 	muleq	r7, ip, r8
    6020:	266d1700 	strbtcs	r1, [sp], -r0, lsl #14
    6024:	dd010000 	stcle	0, cr0, [r1, #-0]
    6028:	00005e03 	andeq	r5, r0, r3, lsl #28
    602c:	00255300 	eoreq	r5, r5, r0, lsl #6
    6030:	6d741a00 	vldmdbvs	r4!, {s3-s2}
    6034:	df010070 	svcle	0x00010070
    6038:	00003a03 	andeq	r3, r0, r3, lsl #20
    603c:	00257400 	eoreq	r7, r5, r0, lsl #8
    6040:	260a1800 	strcs	r1, [sl], -r0, lsl #16
    6044:	e0010000 	and	r0, r1, r0
    6048:	00003a03 	andeq	r3, r0, r3, lsl #20
    604c:	0025bd00 	eoreq	fp, r5, r0, lsl #26
    6050:	1c531800 	mrrcne	8, 0, r1, r3, cr0
    6054:	e1010000 	mrs	r0, (UNDEF: 1)
    6058:	0000b403 	andeq	fp, r0, r3, lsl #8
    605c:	0025f300 	eoreq	pc, r5, r0, lsl #6
    6060:	d31d0000 	tstle	sp, #0
    6064:	01000001 	tsteq	r0, r1
    6068:	0000ffc6 	andeq	pc, r0, r6, asr #31
    606c:	00165800 	andseq	r5, r6, r0, lsl #16
    6070:	00002e08 	andeq	r2, r0, r8, lsl #28
    6074:	b29c0100 	addslt	r0, ip, #0, 2
    6078:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    607c:	0000261c 	andeq	r2, r0, ip, lsl r6
    6080:	007fc801 	rsbseq	ip, pc, r1, lsl #16
    6084:	91020000 	mrsls	r0, (UNDEF: 2)
    6088:	1c4c1474 	cfstrdne	mvd1, [ip], {116}	; 0x74
    608c:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    6090:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    6094:	00002636 	andeq	r2, r0, r6, lsr r6
    6098:	0026b114 	eoreq	fp, r6, r4, lsl r1
    609c:	b4ca0100 	strblt	r0, [sl], #256	; 0x100
    60a0:	5b000000 	blpl	60a8 <__Stack_Size+0x5ca8>
    60a4:	1f000026 	svcne	0x00000026
    60a8:	08001664 	stmdaeq	r0, {r2, r5, r6, r9, sl, ip}
    60ac:	000006ed 	andeq	r0, r0, sp, ror #13
    60b0:	000007a1 	andeq	r0, r0, r1, lsr #15
    60b4:	02500120 	subseq	r0, r0, #32, 2
    60b8:	21003108 	tstcs	r0, r8, lsl #2
    60bc:	0800167a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, sl, ip}
    60c0:	000006ed 	andeq	r0, r0, sp, ror #13
    60c4:	02500120 	subseq	r0, r0, #32, 2
    60c8:	00003108 	andeq	r3, r0, r8, lsl #2
    60cc:	00095d22 	andeq	r5, r9, r2, lsr #26
    60d0:	04100100 	ldreq	r0, [r0], #-256	; 0x100
    60d4:	08001688 	stmdaeq	r0, {r3, r7, r9, sl, ip}
    60d8:	00000010 	andeq	r0, r0, r0, lsl r0
    60dc:	1b1c9c01 	blne	72d0e8 <__Stack_Size+0x72cce8>
    60e0:	01000025 	tsteq	r0, r5, lsr #32
    60e4:	00bf0424 	adcseq	r0, pc, r4, lsr #8
    60e8:	00000000 	andeq	r0, r0, r0
    60ec:	00140000 	andseq	r0, r4, r0
    60f0:	9c010000 	stcls	0, cr0, [r1], {-0}
    60f4:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    60f8:	00279017 	eoreq	r9, r7, r7, lsl r0
    60fc:	04240100 	strteq	r0, [r4], #-256	; 0x100
    6100:	0000005e 	andeq	r0, r0, lr, asr r0
    6104:	0000266e 	andeq	r2, r0, lr, ror #12
    6108:	001c5318 	andseq	r5, ip, r8, lsl r3
    610c:	04260100 	strteq	r0, [r6], #-256	; 0x100
    6110:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    6114:	0000268f 	andeq	r2, r0, pc, lsl #13
    6118:	24e51500 	strbtcs	r1, [r5], #1280	; 0x500
    611c:	47010000 	strmi	r0, [r1, -r0]
    6120:	00000004 	andeq	r0, r0, r4
    6124:	00000c00 	andeq	r0, r0, r0, lsl #24
    6128:	249c0100 	ldrcs	r0, [ip], #256	; 0x100
    612c:	16000008 	strne	r0, [r0], -r8
    6130:	00002790 	muleq	r0, r0, r7
    6134:	5e044701 	cdppl	7, 0, cr4, cr4, cr1, {0}
    6138:	01000000 	mrseq	r0, (UNDEF: 0)
    613c:	6f230050 	svcvs	0x00230050
    6140:	34000000 	strcc	r0, [r0], #-0
    6144:	24000008 	strcs	r0, [r0], #-8
    6148:	0000010a 	andeq	r0, r0, sl, lsl #2
    614c:	4c1e000f 	ldcmi	0, cr0, [lr], {15}
    6150:	01000027 	tsteq	r0, r7, lsr #32
    6154:	0008456f 	andeq	r4, r8, pc, ror #10
    6158:	0d030500 	cfstr32eq	mvfx0, [r3, #-0]
    615c:	04080027 	streq	r0, [r8], #-39	; 0x27
    6160:	00000824 	andeq	r0, r0, r4, lsr #16
    6164:	00006f23 	andeq	r6, r0, r3, lsr #30
    6168:	00085a00 	andeq	r5, r8, r0, lsl #20
    616c:	010a2400 	tsteq	sl, r0, lsl #8
    6170:	00030000 	andeq	r0, r3, r0
    6174:	0027a51e 	eoreq	sl, r7, lr, lsl r5
    6178:	6b700100 	blvs	1c06580 <__Stack_Size+0x1c06180>
    617c:	05000008 	streq	r0, [r0, #-8]
    6180:	00271d03 	eoreq	r1, r7, r3, lsl #26
    6184:	084a0408 	stmdaeq	sl, {r3, sl}^
    6188:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    618c:	0400001f 	streq	r0, [r0], #-31
    6190:	0017d300 	andseq	sp, r7, r0, lsl #6
    6194:	f4010400 	vst3.8	{d0-d2}, [r1], r0
    6198:	01000002 	tsteq	r0, r2
    619c:	00002d89 	andeq	r2, r0, r9, lsl #27
    61a0:	000003ec 	andeq	r0, r0, ip, ror #7
    61a4:	00000800 	andeq	r0, r0, r0, lsl #16
    61a8:	00000000 	andeq	r0, r0, r0
    61ac:	00001ccd 	andeq	r1, r0, sp, asr #25
    61b0:	2d050402 	cfstrscs	mvf0, [r5, #-8]
    61b4:	02000008 	andeq	r0, r0, #8
    61b8:	07ff0502 	ldrbeq	r0, [pc, r2, lsl #10]!
    61bc:	01020000 	mrseq	r0, (UNDEF: 2)
    61c0:	0009de06 	andeq	sp, r9, r6, lsl #28
    61c4:	33750300 	cmncc	r5, #0, 6
    61c8:	27020032 	smladxcs	r2, r2, r0, r0
    61cc:	00000045 	andeq	r0, r0, r5, asr #32
    61d0:	3a070402 	bcc	1c71e0 <__Stack_Size+0x1c6de0>
    61d4:	03000009 	movweq	r0, #9
    61d8:	00363175 	eorseq	r3, r6, r5, ror r1
    61dc:	00572802 	subseq	r2, r7, r2, lsl #16
    61e0:	02020000 	andeq	r0, r2, #0
    61e4:	000bd707 	andeq	sp, fp, r7, lsl #14
    61e8:	38750300 	ldmdacc	r5!, {r8, r9}^
    61ec:	68290200 	stmdavs	r9!, {r9}
    61f0:	02000000 	andeq	r0, r0, #0
    61f4:	09dc0801 	ldmibeq	ip, {r0, fp}^
    61f8:	59040000 	stmdbpl	r4, {}	; <UNPREDICTABLE>
    61fc:	02000004 	andeq	r0, r0, #4
    6200:	00007a2f 	andeq	r7, r0, pc, lsr #20
    6204:	00450500 	subeq	r0, r5, r0, lsl #10
    6208:	45040000 	strmi	r0, [r4, #-0]
    620c:	02000002 	andeq	r0, r0, #2
    6210:	00008a30 	andeq	r8, r0, r0, lsr sl
    6214:	00570500 	subseq	r0, r7, r0, lsl #10
    6218:	01060000 	mrseq	r0, (UNDEF: 6)
    621c:	00a43c02 	adceq	r3, r4, r2, lsl #24
    6220:	ca070000 	bgt	1c6228 <__Stack_Size+0x1c5e28>
    6224:	0000001e 	andeq	r0, r0, lr, lsl r0
    6228:	54455308 	strbpl	r5, [r5], #-776	; 0x308
    622c:	04000100 	streq	r0, [r0], #-256	; 0x100
    6230:	0000078e 	andeq	r0, r0, lr, lsl #15
    6234:	008f3c02 	addeq	r3, pc, r2, lsl #24
    6238:	22040000 	andcs	r0, r4, #0
    623c:	02000025 	andeq	r0, r0, #37	; 0x25
    6240:	00008f3c 	andeq	r8, r0, ip, lsr pc
    6244:	02010600 	andeq	r0, r1, #0, 12
    6248:	0000cf3e 	andeq	ip, r0, lr, lsr pc
    624c:	053f0700 	ldreq	r0, [pc, #-1792]!	; 5b54 <__Stack_Size+0x5754>
    6250:	07000000 	streq	r0, [r0, -r0]
    6254:	00000917 	andeq	r0, r0, r7, lsl r9
    6258:	b4040001 	strlt	r0, [r4], #-1
    625c:	02000000 	andeq	r0, r0, #0
    6260:	0000ba3e 	andeq	fp, r0, lr, lsr sl
    6264:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6268:	00000931 	andeq	r0, r0, r1, lsr r9
    626c:	0b035009 	bleq	da298 <__Stack_Size+0xd9e98>
    6270:	0002f202 	andeq	pc, r2, r2, lsl #4
    6274:	52430a00 	subpl	r0, r3, #0, 20
    6278:	0d030031 	stceq	0, cr0, [r3, #-196]	; 0xffffff3c
    627c:	00007f02 	andeq	r7, r0, r2, lsl #30
    6280:	b90b0000 	stmdblt	fp, {}	; <UNPREDICTABLE>
    6284:	03000007 	movweq	r0, #7
    6288:	004c020e 	subeq	r0, ip, lr, lsl #4
    628c:	0a020000 	beq	86294 <__Stack_Size+0x85e94>
    6290:	00325243 	eorseq	r5, r2, r3, asr #4
    6294:	7f020f03 	svcvc	0x00020f03
    6298:	04000000 	streq	r0, [r0], #-0
    629c:	0007c30b 	andeq	ip, r7, fp, lsl #6
    62a0:	02100300 	andseq	r0, r0, #0, 6
    62a4:	0000004c 	andeq	r0, r0, ip, asr #32
    62a8:	05ad0b06 	streq	r0, [sp, #2822]!	; 0xb06
    62ac:	11030000 	mrsne	r0, (UNDEF: 3)
    62b0:	00007f02 	andeq	r7, r0, r2, lsl #30
    62b4:	cd0b0800 	stcgt	8, cr0, [fp, #-0]
    62b8:	03000007 	movweq	r0, #7
    62bc:	004c0212 	subeq	r0, ip, r2, lsl r2
    62c0:	0b0a0000 	bleq	2862c8 <__Stack_Size+0x285ec8>
    62c4:	00000477 	andeq	r0, r0, r7, ror r4
    62c8:	7f021303 	svcvc	0x00021303
    62cc:	0c000000 	stceq	0, cr0, [r0], {-0}
    62d0:	0007d70b 	andeq	sp, r7, fp, lsl #14
    62d4:	02140300 	andseq	r0, r4, #0, 6
    62d8:	0000004c 	andeq	r0, r0, ip, asr #32
    62dc:	52530a0e 	subspl	r0, r3, #57344	; 0xe000
    62e0:	02150300 	andseq	r0, r5, #0, 6
    62e4:	0000007f 	andeq	r0, r0, pc, ror r0
    62e8:	07e10b10 			; <UNDEFINED> instruction: 0x07e10b10
    62ec:	16030000 	strne	r0, [r3], -r0
    62f0:	00004c02 	andeq	r4, r0, r2, lsl #24
    62f4:	450a1200 	strmi	r1, [sl, #-512]	; 0x200
    62f8:	03005247 	movweq	r5, #583	; 0x247
    62fc:	007f0217 	rsbseq	r0, pc, r7, lsl r2	; <UNPREDICTABLE>
    6300:	0b140000 	bleq	506308 <__Stack_Size+0x505f08>
    6304:	000007eb 	andeq	r0, r0, fp, ror #15
    6308:	4c021803 	stcmi	8, cr1, [r2], {3}
    630c:	16000000 	strne	r0, [r0], -r0
    6310:	0002790b 	andeq	r7, r2, fp, lsl #18
    6314:	02190300 	andseq	r0, r9, #0, 6
    6318:	0000007f 	andeq	r0, r0, pc, ror r0
    631c:	07f50b18 			; <UNDEFINED> instruction: 0x07f50b18
    6320:	1a030000 	bne	c6328 <__Stack_Size+0xc5f28>
    6324:	00004c02 	andeq	r4, r0, r2, lsl #24
    6328:	7f0b1a00 	svcvc	0x000b1a00
    632c:	03000002 	movweq	r0, #2
    6330:	007f021b 	rsbseq	r0, pc, fp, lsl r2	; <UNPREDICTABLE>
    6334:	0b1c0000 	bleq	70633c <__Stack_Size+0x705f3c>
    6338:	00000c4a 	andeq	r0, r0, sl, asr #24
    633c:	4c021c03 	stcmi	12, cr1, [r2], {3}
    6340:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6344:	0005270b 	andeq	r2, r5, fp, lsl #14
    6348:	021d0300 	andseq	r0, sp, #0, 6
    634c:	0000007f 	andeq	r0, r0, pc, ror r0
    6350:	08090b20 	stmdaeq	r9, {r5, r8, r9, fp}
    6354:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
    6358:	00004c02 	andeq	r4, r0, r2, lsl #24
    635c:	430a2200 	movwmi	r2, #41472	; 0xa200
    6360:	0300544e 	movweq	r5, #1102	; 0x44e
    6364:	007f021f 	rsbseq	r0, pc, pc, lsl r2	; <UNPREDICTABLE>
    6368:	0b240000 	bleq	906370 <__Stack_Size+0x905f70>
    636c:	00000813 	andeq	r0, r0, r3, lsl r8
    6370:	4c022003 	stcmi	0, cr2, [r2], {3}
    6374:	26000000 	strcs	r0, [r0], -r0
    6378:	4353500a 	cmpmi	r3, #10
    637c:	02210300 	eoreq	r0, r1, #0, 6
    6380:	0000007f 	andeq	r0, r0, pc, ror r0
    6384:	0a740b28 	beq	1d0902c <__Stack_Size+0x1d08c2c>
    6388:	22030000 	andcs	r0, r3, #0
    638c:	00004c02 	andeq	r4, r0, r2, lsl #24
    6390:	410a2a00 	tstmi	sl, r0, lsl #20
    6394:	03005252 	movweq	r5, #594	; 0x252
    6398:	007f0223 	rsbseq	r0, pc, r3, lsr #4
    639c:	0b2c0000 	bleq	b063a4 <__Stack_Size+0xb05fa4>
    63a0:	00000a7f 	andeq	r0, r0, pc, ror sl
    63a4:	4c022403 	cfstrsmi	mvf2, [r2], {3}
    63a8:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    63ac:	5243520a 	subpl	r5, r3, #-1610612736	; 0xa0000000
    63b0:	02250300 	eoreq	r0, r5, #0, 6
    63b4:	0000007f 	andeq	r0, r0, pc, ror r0
    63b8:	0a8a0b30 	beq	fe289080 <SCS_BASE+0x1e27b080>
    63bc:	26030000 	strcs	r0, [r3], -r0
    63c0:	00004c02 	andeq	r4, r0, r2, lsl #24
    63c4:	650b3200 	strvs	r3, [fp, #-512]	; 0x200
    63c8:	03000002 	movweq	r0, #2
    63cc:	007f0227 	rsbseq	r0, pc, r7, lsr #4
    63d0:	0b340000 	bleq	d063d8 <__Stack_Size+0xd05fd8>
    63d4:	00000a95 	muleq	r0, r5, sl
    63d8:	4c022803 	stcmi	8, cr2, [r2], {3}
    63dc:	36000000 	strcc	r0, [r0], -r0
    63e0:	00026a0b 	andeq	r6, r2, fp, lsl #20
    63e4:	02290300 	eoreq	r0, r9, #0, 6
    63e8:	0000007f 	andeq	r0, r0, pc, ror r0
    63ec:	0aa00b38 	beq	fe8090d4 <SCS_BASE+0x1e7fb0d4>
    63f0:	2a030000 	bcs	c63f8 <__Stack_Size+0xc5ff8>
    63f4:	00004c02 	andeq	r4, r0, r2, lsl #24
    63f8:	6f0b3a00 	svcvs	0x000b3a00
    63fc:	03000002 	movweq	r0, #2
    6400:	007f022b 	rsbseq	r0, pc, fp, lsr #4
    6404:	0b3c0000 	bleq	f0640c <__Stack_Size+0xf0600c>
    6408:	00000aab 	andeq	r0, r0, fp, lsr #21
    640c:	4c022c03 	stcmi	12, cr2, [r2], {3}
    6410:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    6414:	0002740b 	andeq	r7, r2, fp, lsl #8
    6418:	022d0300 	eoreq	r0, sp, #0, 6
    641c:	0000007f 	andeq	r0, r0, pc, ror r0
    6420:	0ab60b40 	beq	fed89128 <SCS_BASE+0x1ed7b128>
    6424:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    6428:	00004c02 	andeq	r4, r0, r2, lsl #24
    642c:	400b4200 	andmi	r4, fp, r0, lsl #4
    6430:	03000002 	movweq	r0, #2
    6434:	007f022f 	rsbseq	r0, pc, pc, lsr #4
    6438:	0b440000 	bleq	1106440 <__Stack_Size+0x1106040>
    643c:	00000ac1 	andeq	r0, r0, r1, asr #21
    6440:	4c023003 	stcmi	0, cr3, [r2], {3}
    6444:	46000000 	strmi	r0, [r0], -r0
    6448:	5243440a 	subpl	r4, r3, #167772160	; 0xa000000
    644c:	02310300 	eorseq	r0, r1, #0, 6
    6450:	0000007f 	andeq	r0, r0, pc, ror r0
    6454:	0acc0b48 	beq	ff30917c <SCS_BASE+0x1f2fb17c>
    6458:	32030000 	andcc	r0, r3, #0
    645c:	00004c02 	andeq	r4, r0, r2, lsl #24
    6460:	360b4a00 	strcc	r4, [fp], -r0, lsl #20
    6464:	03000008 	movweq	r0, #8
    6468:	007f0233 	rsbseq	r0, pc, r3, lsr r2	; <UNPREDICTABLE>
    646c:	0b4c0000 	bleq	1306474 <__Stack_Size+0x1306074>
    6470:	00000ad7 	ldrdeq	r0, [r0], -r7
    6474:	4c023403 	cfstrsmi	mvf3, [r2], {3}
    6478:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    647c:	01e90c00 	mvneq	r0, r0, lsl #24
    6480:	35030000 	strcc	r0, [r3, #-0]
    6484:	0000e102 	andeq	lr, r0, r2, lsl #2
    6488:	040a0d00 	streq	r0, [sl], #-3328	; 0xd00
    648c:	0003431b 	andeq	r4, r3, fp, lsl r3
    6490:	045e0e00 	ldrbeq	r0, [lr], #-3584	; 0xe00
    6494:	1d040000 	stcne	0, cr0, [r4, #-0]
    6498:	0000004c 	andeq	r0, r0, ip, asr #32
    649c:	05830e00 	streq	r0, [r3, #3584]	; 0xe00
    64a0:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    64a4:	0000004c 	andeq	r0, r0, ip, asr #32
    64a8:	06b90e02 	ldrteq	r0, [r9], r2, lsl #28
    64ac:	1f040000 	svcne	0x00040000
    64b0:	0000004c 	andeq	r0, r0, ip, asr #32
    64b4:	02200e04 	eoreq	r0, r0, #4, 28	; 0x40
    64b8:	20040000 	andcs	r0, r4, r0
    64bc:	0000004c 	andeq	r0, r0, ip, asr #32
    64c0:	04c30e06 	strbeq	r0, [r3], #3590	; 0xe06
    64c4:	21040000 	mrscs	r0, (UNDEF: 4)
    64c8:	0000005e 	andeq	r0, r0, lr, asr r0
    64cc:	80040008 	andhi	r0, r4, r8
    64d0:	0400000b 	streq	r0, [r0], #-11
    64d4:	0002fe22 	andeq	pc, r2, r2, lsr #28
    64d8:	04100d00 	ldreq	r0, [r0], #-3328	; 0xd00
    64dc:	0003b725 	andeq	fp, r3, r5, lsr #14
    64e0:	2f290e00 	svccs	0x00290e00
    64e4:	27040000 	strcs	r0, [r4, -r0]
    64e8:	0000004c 	andeq	r0, r0, ip, asr #32
    64ec:	2abf0e00 	bcs	fefc9cf4 <SCS_BASE+0x1efbbcf4>
    64f0:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    64f4:	0000004c 	andeq	r0, r0, ip, asr #32
    64f8:	2ffa0e02 	svccs	0x00fa0e02
    64fc:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
    6500:	0000004c 	andeq	r0, r0, ip, asr #32
    6504:	2aa20e04 	bcs	fe889d1c <SCS_BASE+0x1e87bd1c>
    6508:	2a040000 	bcs	106510 <__Stack_Size+0x106110>
    650c:	0000004c 	andeq	r0, r0, ip, asr #32
    6510:	28680e06 	stmdacs	r8!, {r1, r2, r9, sl, fp}^
    6514:	2b040000 	blcs	10651c <__Stack_Size+0x10611c>
    6518:	0000004c 	andeq	r0, r0, ip, asr #32
    651c:	2cc50e08 	stclcs	14, cr0, [r5], {8}
    6520:	2c040000 	stccs	0, cr0, [r4], {-0}
    6524:	0000004c 	andeq	r0, r0, ip, asr #32
    6528:	29bc0e0a 	ldmibcs	ip!, {r1, r3, r9, sl, fp}
    652c:	2d040000 	stccs	0, cr0, [r4, #-0]
    6530:	0000004c 	andeq	r0, r0, ip, asr #32
    6534:	2df40e0c 	ldclcs	14, cr0, [r4, #48]!	; 0x30
    6538:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
    653c:	0000004c 	andeq	r0, r0, ip, asr #32
    6540:	5604000e 	strpl	r0, [r4], -lr
    6544:	04000028 	streq	r0, [r0], #-40	; 0x28
    6548:	00034e2f 	andeq	r4, r3, pc, lsr #28
    654c:	040a0d00 	streq	r0, [sl], #-3328	; 0xd00
    6550:	00040732 	andeq	r0, r4, r2, lsr r7
    6554:	2e560e00 	cdpcs	14, 5, cr0, cr6, cr0, {0}
    6558:	34040000 	strcc	r0, [r4], #-0
    655c:	0000004c 	andeq	r0, r0, ip, asr #32
    6560:	2f510e00 	svccs	0x00510e00
    6564:	35040000 	strcc	r0, [r4, #-0]
    6568:	0000004c 	andeq	r0, r0, ip, asr #32
    656c:	2ee10e02 	cdpcs	14, 14, cr0, cr1, cr2, {0}
    6570:	36040000 	strcc	r0, [r4], -r0
    6574:	0000004c 	andeq	r0, r0, ip, asr #32
    6578:	2bf20e04 	blcs	ffc89d90 <SCS_BASE+0x1fc7bd90>
    657c:	37040000 	strcc	r0, [r4, -r0]
    6580:	0000004c 	andeq	r0, r0, ip, asr #32
    6584:	31290e06 	teqcc	r9, r6, lsl #28
    6588:	38040000 	stmdacc	r4, {}	; <UNPREDICTABLE>
    658c:	0000004c 	andeq	r0, r0, ip, asr #32
    6590:	bc040008 	stclt	0, cr0, [r4], {8}
    6594:	04000028 	streq	r0, [r0], #-40	; 0x28
    6598:	0003c239 	andeq	ip, r3, r9, lsr r2
    659c:	040e0d00 	streq	r0, [lr], #-3328	; 0xd00
    65a0:	00046f3c 	andeq	r6, r4, ip, lsr pc
    65a4:	2f430e00 	svccs	0x00430e00
    65a8:	3e040000 	cdpcc	0, 0, cr0, cr4, cr0, {0}
    65ac:	0000004c 	andeq	r0, r0, ip, asr #32
    65b0:	2a2e0e00 	bcs	b89db8 <__Stack_Size+0xb899b8>
    65b4:	3f040000 	svccc	0x00040000
    65b8:	0000004c 	andeq	r0, r0, ip, asr #32
    65bc:	2bc50e02 	blcs	ff149dcc <SCS_BASE+0x1f13bdcc>
    65c0:	40040000 	andmi	r0, r4, r0
    65c4:	0000004c 	andeq	r0, r0, ip, asr #32
    65c8:	304c0e04 	subcc	r0, ip, r4, lsl #28
    65cc:	41040000 	mrsmi	r0, (UNDEF: 4)
    65d0:	0000004c 	andeq	r0, r0, ip, asr #32
    65d4:	2cbb0e06 	ldccs	14, cr0, [fp], #24
    65d8:	42040000 	andmi	r0, r4, #0
    65dc:	0000004c 	andeq	r0, r0, ip, asr #32
    65e0:	2b6c0e08 	blcs	1b09e08 <__Stack_Size+0x1b09a08>
    65e4:	43040000 	movwmi	r0, #16384	; 0x4000
    65e8:	0000004c 	andeq	r0, r0, ip, asr #32
    65ec:	2fd40e0a 	svccs	0x00d40e0a
    65f0:	44040000 	strmi	r0, [r4], #-0
    65f4:	0000004c 	andeq	r0, r0, ip, asr #32
    65f8:	4804000c 	stmdami	r4, {r2, r3}
    65fc:	0400002c 	streq	r0, [r0], #-44	; 0x2c
    6600:	00041245 	andeq	r1, r4, r5, asr #4
    6604:	315e0f00 	cmpcc	lr, r0, lsl #30
    6608:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    660c:	04ac0105 	strteq	r0, [ip], #261	; 0x105
    6610:	e6100000 	ldr	r0, [r0], -r0
    6614:	01000029 	tsteq	r0, r9, lsr #32
    6618:	04ac0518 	strteq	r0, [ip], #1304	; 0x518
    661c:	ce100000 	cdpgt	0, 1, cr0, cr0, cr0, {0}
    6620:	01000028 	tsteq	r0, r8, lsr #32
    6624:	004c0518 	subeq	r0, ip, r8, lsl r5
    6628:	cc110000 	ldcgt	0, cr0, [r1], {-0}
    662c:	01000029 	tsteq	r0, r9, lsr #32
    6630:	004c051a 	subeq	r0, ip, sl, lsl r5
    6634:	12000000 	andne	r0, r0, #0
    6638:	0002f204 	andeq	pc, r2, r4, lsl #4
    663c:	2a671300 	bcs	19cb244 <__Stack_Size+0x19cae44>
    6640:	ed010000 	stc	0, cr0, [r1, #-0]
    6644:	0000000b 	andeq	r0, r0, fp
    6648:	00003200 	andeq	r3, r0, r0, lsl #4
    664c:	279c0100 	ldrcs	r0, [ip, r0, lsl #2]
    6650:	14000005 	strne	r0, [r0], #-5
    6654:	000029e6 	andeq	r2, r0, r6, ror #19
    6658:	ac0bed01 	stcge	13, cr14, [fp], {1}
    665c:	01000004 	tsteq	r0, r4
    6660:	2f511550 	svccs	0x00511550
    6664:	ed010000 	stc	0, cr0, [r1, #-0]
    6668:	00004c0b 	andeq	r4, r0, fp, lsl #24
    666c:	0026ce00 	eoreq	ip, r6, r0, lsl #28
    6670:	2ee11500 	cdpcs	5, 14, cr1, cr1, cr0, {0}
    6674:	ed010000 	stc	0, cr0, [r1, #-0]
    6678:	00004c0b 	andeq	r4, r0, fp, lsl #24
    667c:	0026ef00 	eoreq	lr, r6, r0, lsl #30
    6680:	31291500 	teqcc	r9, r0, lsl #10
    6684:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    6688:	00004c0b 	andeq	r4, r0, fp, lsl #24
    668c:	00271000 	eoreq	r1, r7, r0
    6690:	2e441600 	cdpcs	6, 4, cr1, cr4, cr0, {0}
    6694:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    6698:	00004c0b 	andeq	r4, r0, fp, lsl #24
    669c:	00273100 	eoreq	r3, r7, r0, lsl #2
    66a0:	2b3d1600 	blcs	f4bea8 <__Stack_Size+0xf4baa8>
    66a4:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    66a8:	00004c0b 	andeq	r4, r0, fp, lsl #24
    66ac:	00276c00 	eoreq	r6, r7, r0, lsl #24
    66b0:	9e130000 	cdpls	0, 1, cr0, cr3, cr0, {0}
    66b4:	01000028 	tsteq	r0, r8, lsr #32
    66b8:	00000c1b 	andeq	r0, r0, fp, lsl ip
    66bc:	003a0000 	eorseq	r0, sl, r0
    66c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    66c4:	000005ac 	andeq	r0, r0, ip, lsr #11
    66c8:	0029e614 	eoreq	lr, r9, r4, lsl r6
    66cc:	0c1b0100 	ldfeqs	f0, [fp], {-0}
    66d0:	000004ac 	andeq	r0, r0, ip, lsr #9
    66d4:	51155001 	tstpl	r5, r1
    66d8:	0100002f 	tsteq	r0, pc, lsr #32
    66dc:	004c0c1b 	subeq	r0, ip, fp, lsl ip
    66e0:	27960000 	ldrcs	r0, [r6, r0]
    66e4:	e1150000 	tst	r5, r0
    66e8:	0100002e 	tsteq	r0, lr, lsr #32
    66ec:	004c0c1b 	subeq	r0, ip, fp, lsl ip
    66f0:	27b70000 	ldrcs	r0, [r7, r0]!
    66f4:	29150000 	ldmdbcs	r5, {}	; <UNPREDICTABLE>
    66f8:	01000031 	tsteq	r0, r1, lsr r0
    66fc:	004c0c1c 	subeq	r0, ip, ip, lsl ip
    6700:	27d80000 	ldrbcs	r0, [r8, r0]
    6704:	44160000 	ldrmi	r0, [r6], #-0
    6708:	0100002e 	tsteq	r0, lr, lsr #32
    670c:	004c0c1e 	subeq	r0, ip, lr, lsl ip
    6710:	27f90000 	ldrbcs	r0, [r9, r0]!
    6714:	3d160000 	ldccc	0, cr0, [r6, #-0]
    6718:	0100002b 	tsteq	r0, fp, lsr #32
    671c:	004c0c1e 	subeq	r0, ip, lr, lsl ip
    6720:	28230000 	stmdacs	r3!, {}	; <UNPREDICTABLE>
    6724:	74170000 	ldrvc	r0, [r7], #-0
    6728:	0100706d 	tsteq	r0, sp, rrx
    672c:	004c0c1e 	subeq	r0, ip, lr, lsl ip
    6730:	284d0000 	stmdacs	sp, {}^	; <UNPREDICTABLE>
    6734:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    6738:	00003059 	andeq	r3, r0, r9, asr r0
    673c:	00008601 	andeq	r8, r0, r1, lsl #12
    6740:	00c80000 	sbceq	r0, r8, r0
    6744:	9c010000 	stcls	0, cr0, [r1], {-0}
    6748:	000006b8 			; <UNDEFINED> instruction: 0x000006b8
    674c:	0029e619 	eoreq	lr, r9, r9, lsl r6
    6750:	ac860100 	stfges	f0, [r6], {0}
    6754:	80000004 	andhi	r0, r0, r4
    6758:	1a000028 	bne	6800 <__Stack_Size+0x6400>
    675c:	00000000 	andeq	r0, r0, r0
    6760:	00001f17 	andeq	r1, r0, r7, lsl pc
    6764:	000005e8 	andeq	r0, r0, r8, ror #11
    6768:	0151011b 	cmpeq	r1, fp, lsl r1
    676c:	50011b31 	andpl	r1, r1, r1, lsr fp
    6770:	1a003101 	bne	12b7c <__Stack_Size+0x1277c>
    6774:	00000000 	andeq	r0, r0, r0
    6778:	00001f2e 	andeq	r1, r0, lr, lsr #30
    677c:	00000602 	andeq	r0, r0, r2, lsl #12
    6780:	0151011b 	cmpeq	r1, fp, lsl r1
    6784:	50011b31 	andpl	r1, r1, r1, lsr fp
    6788:	08000a03 	stmdaeq	r0, {r0, r1, r9, fp}
    678c:	00001a00 	andeq	r1, r0, r0, lsl #20
    6790:	1f170000 	svcne	0x00170000
    6794:	061a0000 	ldreq	r0, [sl], -r0
    6798:	011b0000 	tsteq	fp, r0
    679c:	1b310151 	blne	c46ce8 <__Stack_Size+0xc468e8>
    67a0:	32015001 	andcc	r5, r1, #1
    67a4:	00001c00 	andeq	r1, r0, r0, lsl #24
    67a8:	1f170000 	svcne	0x00170000
    67ac:	062d0000 	strteq	r0, [sp], -r0
    67b0:	011b0000 	tsteq	fp, r0
    67b4:	00300151 	eorseq	r0, r0, r1, asr r1
    67b8:	0000001a 	andeq	r0, r0, sl, lsl r0
    67bc:	001f1700 	andseq	r1, pc, r0, lsl #14
    67c0:	00064500 	andeq	r4, r6, r0, lsl #10
    67c4:	51011b00 	tstpl	r1, r0, lsl #22
    67c8:	011b3101 	tsteq	fp, r1, lsl #2
    67cc:	00340150 	eorseq	r0, r4, r0, asr r1
    67d0:	0000001a 	andeq	r0, r0, sl, lsl r0
    67d4:	001f1700 	andseq	r1, pc, r0, lsl #14
    67d8:	00065d00 	andeq	r5, r6, r0, lsl #26
    67dc:	51011b00 	tstpl	r1, r0, lsl #22
    67e0:	011b3101 	tsteq	fp, r1, lsl #2
    67e4:	00380150 	eorseq	r0, r8, r0, asr r1
    67e8:	0000001a 	andeq	r0, r0, sl, lsl r0
    67ec:	001f1700 	andseq	r1, pc, r0, lsl #14
    67f0:	00067500 	andeq	r7, r6, r0, lsl #10
    67f4:	51011b00 	tstpl	r1, r0, lsl #22
    67f8:	011b3101 	tsteq	fp, r1, lsl #2
    67fc:	00400150 	subeq	r0, r0, r0, asr r1
    6800:	0000001a 	andeq	r0, r0, sl, lsl r0
    6804:	001f1700 	andseq	r1, pc, r0, lsl #14
    6808:	00068e00 	andeq	r8, r6, r0, lsl #28
    680c:	51011b00 	tstpl	r1, r0, lsl #22
    6810:	011b3101 	tsteq	fp, r1, lsl #2
    6814:	20080250 	andcs	r0, r8, r0, asr r2
    6818:	00001a00 	andeq	r1, r0, r0, lsl #20
    681c:	1f2e0000 	svcne	0x002e0000
    6820:	06a80000 	strteq	r0, [r8], r0
    6824:	011b0000 	tsteq	fp, r0
    6828:	1b310151 	blne	c46d74 <__Stack_Size+0xc46974>
    682c:	0a035001 	beq	da838 <__Stack_Size+0xda438>
    6830:	1d002000 	stcne	0, cr2, [r0, #-0]
    6834:	00000000 	andeq	r0, r0, r0
    6838:	00001f2e 	andeq	r1, r0, lr, lsr #30
    683c:	0151011b 	cmpeq	r1, fp, lsl r1
    6840:	18000030 	stmdane	r0, {r4, r5}
    6844:	00000c7f 	andeq	r0, r0, pc, ror ip
    6848:	1698c601 	ldrne	ip, [r8], r1, lsl #12
    684c:	003c0800 	eorseq	r0, ip, r0, lsl #16
    6850:	9c010000 	stcls	0, cr0, [r1], {-0}
    6854:	000006e8 	andeq	r0, r0, r8, ror #13
    6858:	0029e61e 	eoreq	lr, r9, lr, lsl r6
    685c:	acc60100 	stfgee	f0, [r6], {0}
    6860:	01000004 	tsteq	r0, r4
    6864:	2b961e50 	blcs	fe58e1ac <SCS_BASE+0x1e5801ac>
    6868:	c6010000 	strgt	r0, [r1], -r0
    686c:	000006e8 	andeq	r0, r0, r8, ror #13
    6870:	12005101 	andne	r5, r0, #1073741824	; 0x40000000
    6874:	00034304 	andeq	r4, r3, r4, lsl #6
    6878:	297b1800 	ldmdbcs	fp!, {fp, ip}^
    687c:	ed010000 	stc	0, cr0, [r1, #-0]
    6880:	00000000 	andeq	r0, r0, r0
    6884:	00000074 	andeq	r0, r0, r4, ror r0
    6888:	074b9c01 	strbeq	r9, [fp, -r1, lsl #24]
    688c:	e61e0000 	ldr	r0, [lr], -r0
    6890:	01000029 	tsteq	r0, r9, lsr #32
    6894:	0004aced 	andeq	sl, r4, sp, ror #25
    6898:	1e500100 	rdfnes	f0, f0, f0
    689c:	00002db0 			; <UNDEFINED> instruction: 0x00002db0
    68a0:	074bed01 	strbeq	lr, [fp, -r1, lsl #26]
    68a4:	51010000 	mrspl	r0, (UNDEF: 1)
    68a8:	002f091f 	eoreq	r0, pc, pc, lsl r9	; <UNPREDICTABLE>
    68ac:	4cef0100 	stfmie	f0, [pc]	; 68b4 <__Stack_Size+0x64b4>
    68b0:	5b000000 	blpl	68b8 <__Stack_Size+0x64b8>
    68b4:	1f000029 	svcne	0x00000029
    68b8:	00002b3d 	andeq	r2, r0, sp, lsr fp
    68bc:	004cef01 	subeq	lr, ip, r1, lsl #30
    68c0:	297a0000 	ldmdbcs	sl!, {}^	; <UNPREDICTABLE>
    68c4:	fc1f0000 	ldc2	0, cr0, [pc], {-0}
    68c8:	01000030 	tsteq	r0, r0, lsr r0
    68cc:	00004cef 	andeq	r4, r0, pc, ror #25
    68d0:	0029a400 	eoreq	sl, r9, r0, lsl #8
    68d4:	04120000 	ldreq	r0, [r2], #-0
    68d8:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
    68dc:	002a4320 	eoreq	r4, sl, r0, lsr #6
    68e0:	01480100 	mrseq	r0, (UNDEF: 88)
    68e4:	00000000 	andeq	r0, r0, r0
    68e8:	00000088 	andeq	r0, r0, r8, lsl #1
    68ec:	07b49c01 	ldreq	r9, [r4, r1, lsl #24]!
    68f0:	e6140000 	ldr	r0, [r4], -r0
    68f4:	01000029 	tsteq	r0, r9, lsr #32
    68f8:	04ac0148 	strteq	r0, [ip], #328	; 0x148
    68fc:	50010000 	andpl	r0, r1, r0
    6900:	002db014 	eoreq	fp, sp, r4, lsl r0
    6904:	01480100 	mrseq	r0, (UNDEF: 88)
    6908:	0000074b 	andeq	r0, r0, fp, asr #14
    690c:	09165101 	ldmdbeq	r6, {r0, r8, ip, lr}
    6910:	0100002f 	tsteq	r0, pc, lsr #32
    6914:	004c014a 	subeq	r0, ip, sl, asr #2
    6918:	29e00000 	stmibcs	r0!, {}^	; <UNPREDICTABLE>
    691c:	3d160000 	ldccc	0, cr0, [r6, #-0]
    6920:	0100002b 	tsteq	r0, fp, lsr #32
    6924:	004c014a 	subeq	r0, ip, sl, asr #2
    6928:	29ff0000 	ldmibcs	pc!, {}^	; <UNPREDICTABLE>
    692c:	fc160000 	ldc2	0, cr0, [r6], {-0}
    6930:	01000030 	tsteq	r0, r0, lsr r0
    6934:	004c014a 	subeq	r0, ip, sl, asr #2
    6938:	2a600000 	bcs	1806940 <__Stack_Size+0x1806540>
    693c:	20000000 	andcs	r0, r0, r0
    6940:	00002acf 	andeq	r2, r0, pc, asr #21
    6944:	0001a401 	andeq	sl, r1, r1, lsl #8
    6948:	84000000 	strhi	r0, [r0], #-0
    694c:	01000000 	mrseq	r0, (UNDEF: 0)
    6950:	0008179c 	muleq	r8, ip, r7
    6954:	29e61400 	stmibcs	r6!, {sl, ip}^
    6958:	a4010000 	strge	r0, [r1], #-0
    695c:	0004ac01 	andeq	sl, r4, r1, lsl #24
    6960:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    6964:	00002db0 			; <UNDEFINED> instruction: 0x00002db0
    6968:	4b01a401 	blmi	6f974 <__Stack_Size+0x6f574>
    696c:	01000007 	tsteq	r0, r7
    6970:	2f091651 	svccs	0x00091651
    6974:	a6010000 	strge	r0, [r1], -r0
    6978:	00004c01 	andeq	r4, r0, r1, lsl #24
    697c:	002a9500 	eoreq	r9, sl, r0, lsl #10
    6980:	2b3d1600 	blcs	f4c188 <__Stack_Size+0xf4bd88>
    6984:	a6010000 	strge	r0, [r1], -r0
    6988:	00004c01 	andeq	r4, r0, r1, lsl #24
    698c:	002ab400 	eoreq	fp, sl, r0, lsl #8
    6990:	30fc1600 	rscscc	r1, ip, r0, lsl #12
    6994:	a6010000 	strge	r0, [r1], -r0
    6998:	00004c01 	andeq	r4, r0, r1, lsl #24
    699c:	002b1500 	eoreq	r1, fp, r0, lsl #10
    69a0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    69a4:	0100002d 	tsteq	r0, sp, lsr #32
    69a8:	00000200 	andeq	r0, r0, r0, lsl #4
    69ac:	00680000 	rsbeq	r0, r8, r0
    69b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    69b4:	0000087c 	andeq	r0, r0, ip, ror r8
    69b8:	0029e614 	eoreq	lr, r9, r4, lsl r6
    69bc:	02000100 	andeq	r0, r0, #0, 2
    69c0:	000004ac 	andeq	r0, r0, ip, lsr #9
    69c4:	b0155001 	andslt	r5, r5, r1
    69c8:	0100002d 	tsteq	r0, sp, lsr #32
    69cc:	074b0200 	strbeq	r0, [fp, -r0, lsl #4]
    69d0:	2b4a0000 	blcs	12869d8 <__Stack_Size+0x12865d8>
    69d4:	09160000 	ldmdbeq	r6, {}	; <UNPREDICTABLE>
    69d8:	0100002f 	tsteq	r0, pc, lsr #32
    69dc:	004c0202 	subeq	r0, ip, r2, lsl #4
    69e0:	2b6b0000 	blcs	1ac69e8 <__Stack_Size+0x1ac65e8>
    69e4:	3d160000 	ldccc	0, cr0, [r6, #-0]
    69e8:	0100002b 	tsteq	r0, fp, lsr #32
    69ec:	004c0202 	subeq	r0, ip, r2, lsl #4
    69f0:	2b8a0000 	blcs	fe2869f8 <SCS_BASE+0x1e2789f8>
    69f4:	fc160000 	ldc2	0, cr0, [r6], {-0}
    69f8:	01000030 	tsteq	r0, r0, lsr r0
    69fc:	004c0202 	subeq	r0, ip, r2, lsl #4
    6a00:	2bb40000 	blcs	fed06a08 <SCS_BASE+0x1ecf8a08>
    6a04:	20000000 	andcs	r0, r0, r0
    6a08:	00002f86 	andeq	r2, r0, r6, lsl #31
    6a0c:	0002d101 	andeq	sp, r2, r1, lsl #2
    6a10:	22000000 	andcs	r0, r0, #0
    6a14:	01000000 	mrseq	r0, (UNDEF: 0)
    6a18:	0008af9c 	muleq	r8, ip, pc	; <UNPREDICTABLE>
    6a1c:	29e61400 	stmibcs	r6!, {sl, ip}^
    6a20:	d1010000 	mrsle	r0, (UNDEF: 1)
    6a24:	0004ac02 	andeq	sl, r4, r2, lsl #24
    6a28:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    6a2c:	00002b2a 	andeq	r2, r0, sl, lsr #22
    6a30:	af02d101 	svcge	0x0002d101
    6a34:	01000008 	tsteq	r0, r8
    6a38:	04120051 	ldreq	r0, [r2], #-81	; 0x51
    6a3c:	0000046f 	andeq	r0, r0, pc, ror #8
    6a40:	00301620 	eorseq	r1, r0, r0, lsr #12
    6a44:	02ee0100 	rsceq	r0, lr, #0, 2
    6a48:	00000000 	andeq	r0, r0, r0
    6a4c:	00000012 	andeq	r0, r0, r2, lsl r0
    6a50:	08da9c01 	ldmeq	sl, {r0, sl, fp, ip, pc}^
    6a54:	96140000 	ldrls	r0, [r4], -r0
    6a58:	0100002b 	tsteq	r0, fp, lsr #32
    6a5c:	06e802ee 	strbteq	r0, [r8], lr, ror #5
    6a60:	50010000 	andpl	r0, r1, r0
    6a64:	29372000 	ldmdbcs	r7!, {sp}
    6a68:	00010000 	andeq	r0, r1, r0
    6a6c:	00000003 	andeq	r0, r0, r3
    6a70:	00001400 	andeq	r1, r0, r0, lsl #8
    6a74:	ff9c0100 			; <UNDEFINED> instruction: 0xff9c0100
    6a78:	14000008 	strne	r0, [r0], #-8
    6a7c:	00002db0 			; <UNDEFINED> instruction: 0x00002db0
    6a80:	4b030001 	blmi	c6a8c <__Stack_Size+0xc668c>
    6a84:	01000007 	tsteq	r0, r7
    6a88:	db200050 	blle	806bd0 <__Stack_Size+0x8067d0>
    6a8c:	01000027 	tsteq	r0, r7, lsr #32
    6a90:	00000315 	andeq	r0, r0, r5, lsl r3
    6a94:	00100000 	andseq	r0, r0, r0
    6a98:	9c010000 	stcls	0, cr0, [r1], {-0}
    6a9c:	00000924 	andeq	r0, r0, r4, lsr #18
    6aa0:	002d1714 	eoreq	r1, sp, r4, lsl r7
    6aa4:	03150100 	tsteq	r5, #0, 2
    6aa8:	00000924 	andeq	r0, r0, r4, lsr #18
    6aac:	12005001 	andne	r5, r0, #1
    6ab0:	00040704 	andeq	r0, r4, r4, lsl #14
    6ab4:	30912000 	addscc	r2, r1, r0
    6ab8:	27010000 	strcs	r0, [r1, -r0]
    6abc:	00000003 	andeq	r0, r0, r3
    6ac0:	00001200 	andeq	r1, r0, r0, lsl #4
    6ac4:	4f9c0100 	svcmi	0x009c0100
    6ac8:	14000009 	strne	r0, [r0], #-9
    6acc:	00002b2a 	andeq	r2, r0, sl, lsr #22
    6ad0:	af032701 	svcge	0x00032701
    6ad4:	01000008 	tsteq	r0, r8
    6ad8:	ee200050 	mcr	0, 1, r0, cr0, cr0, {2}
    6adc:	01000004 	tsteq	r0, r4
    6ae0:	16d4033c 			; <UNDEFINED> instruction: 0x16d4033c
    6ae4:	00180800 	andseq	r0, r8, r0, lsl #16
    6ae8:	9c010000 	stcls	0, cr0, [r1], {-0}
    6aec:	00000982 	andeq	r0, r0, r2, lsl #19
    6af0:	0029e614 	eoreq	lr, r9, r4, lsl r6
    6af4:	033c0100 	teqeq	ip, #0, 2
    6af8:	000004ac 	andeq	r0, r0, ip, lsr #9
    6afc:	89145001 	ldmdbhi	r4, {r0, ip, lr}
    6b00:	0100001a 	tsteq	r0, sl, lsl r0
    6b04:	00cf033c 	sbceq	r0, pc, ip, lsr r3	; <UNPREDICTABLE>
    6b08:	51010000 	mrspl	r0, (UNDEF: 1)
    6b0c:	2f602000 	svccs	0x00602000
    6b10:	57010000 	strpl	r0, [r1, -r0]
    6b14:	00000003 	andeq	r0, r0, r3
    6b18:	00001c00 	andeq	r1, r0, r0, lsl #24
    6b1c:	b59c0100 	ldrlt	r0, [ip, #256]	; 0x100
    6b20:	14000009 	strne	r0, [r0], #-9
    6b24:	000029e6 	andeq	r2, r0, r6, ror #19
    6b28:	ac035701 	stcge	7, cr5, [r3], {1}
    6b2c:	01000004 	tsteq	r0, r4
    6b30:	1a891450 	bne	fe24bc78 <SCS_BASE+0x1e23dc78>
    6b34:	57010000 	strpl	r0, [r1, -r0]
    6b38:	0000cf03 	andeq	ip, r0, r3, lsl #30
    6b3c:	00510100 	subseq	r0, r1, r0, lsl #2
    6b40:	00088f20 	andeq	r8, r8, r0, lsr #30
    6b44:	037d0100 	cmneq	sp, #0, 2
    6b48:	080016ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip}
    6b4c:	00000012 	andeq	r0, r0, r2, lsl r0
    6b50:	09f89c01 	ldmibeq	r8!, {r0, sl, fp, ip, pc}^
    6b54:	e6140000 	ldr	r0, [r4], -r0
    6b58:	01000029 	tsteq	r0, r9, lsr #32
    6b5c:	04ac037d 	strteq	r0, [ip], #893	; 0x37d
    6b60:	50010000 	andpl	r0, r1, r0
    6b64:	00310315 	eorseq	r0, r1, r5, lsl r3
    6b68:	037d0100 	cmneq	sp, #0, 2
    6b6c:	0000004c 	andeq	r0, r0, ip, asr #32
    6b70:	00002bde 	ldrdeq	r2, [r0], -lr
    6b74:	001a8914 	andseq	r8, sl, r4, lsl r9
    6b78:	037d0100 	cmneq	sp, #0, 2
    6b7c:	000000cf 	andeq	r0, r0, pc, asr #1
    6b80:	20005201 	andcs	r5, r0, r1, lsl #4
    6b84:	00002c71 	andeq	r2, r0, r1, ror ip
    6b88:	0003a001 	andeq	sl, r3, r1
    6b8c:	04000000 	streq	r0, [r0], #-0
    6b90:	01000000 	mrseq	r0, (UNDEF: 0)
    6b94:	000a2b9c 	muleq	sl, ip, fp
    6b98:	29e61400 	stmibcs	r6!, {sl, ip}^
    6b9c:	a0010000 	andge	r0, r1, r0
    6ba0:	0004ac03 	andeq	sl, r4, r3, lsl #24
    6ba4:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    6ba8:	00002e34 	andeq	r2, r0, r4, lsr lr
    6bac:	4c03a001 	stcmi	0, cr10, [r3], {1}
    6bb0:	01000000 	mrseq	r0, (UNDEF: 0)
    6bb4:	07200051 			; <UNDEFINED> instruction: 0x07200051
    6bb8:	0100002b 	tsteq	r0, fp, lsr #32
    6bbc:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
    6bc0:	00080000 	andeq	r0, r8, r0
    6bc4:	9c010000 	stcls	0, cr0, [r1], {-0}
    6bc8:	00000a6e 	andeq	r0, r0, lr, ror #20
    6bcc:	0029e614 	eoreq	lr, r9, r4, lsl r6
    6bd0:	03bf0100 			; <UNDEFINED> instruction: 0x03bf0100
    6bd4:	000004ac 	andeq	r0, r0, ip, lsr #9
    6bd8:	3c145001 	ldccc	0, cr5, [r4], {1}
    6bdc:	0100002c 	tsteq	r0, ip, lsr #32
    6be0:	004c03bf 	strheq	r0, [ip], #-63	; 0xffffffc1
    6be4:	51010000 	mrspl	r0, (UNDEF: 1)
    6be8:	002aac15 	eoreq	sl, sl, r5, lsl ip
    6bec:	03bf0100 			; <UNDEFINED> instruction: 0x03bf0100
    6bf0:	0000004c 	andeq	r0, r0, ip, asr #32
    6bf4:	00002c18 	andeq	r2, r0, r8, lsl ip
    6bf8:	300b2000 	andcc	r2, fp, r0
    6bfc:	dc010000 	stcle	0, cr0, [r1], {-0}
    6c00:	00000003 	andeq	r0, r0, r3
    6c04:	00001200 	andeq	r1, r0, r0, lsl #4
    6c08:	b19c0100 	orrslt	r0, ip, r0, lsl #2
    6c0c:	1400000a 	strne	r0, [r0], #-10
    6c10:	000029e6 	andeq	r2, r0, r6, ror #19
    6c14:	ac03dc01 	stcge	12, cr13, [r3], {1}
    6c18:	01000004 	tsteq	r0, r4
    6c1c:	31361550 	teqcc	r6, r0, asr r5
    6c20:	dc010000 	stcle	0, cr0, [r1], {-0}
    6c24:	00004c03 	andeq	r4, r0, r3, lsl #24
    6c28:	002c3900 	eoreq	r3, ip, r0, lsl #18
    6c2c:	1a891400 	bne	fe24bc34 <SCS_BASE+0x1e23dc34>
    6c30:	dc010000 	stcle	0, cr0, [r1], {-0}
    6c34:	0000cf03 	andeq	ip, r0, r3, lsl #30
    6c38:	00520100 	subseq	r0, r2, r0, lsl #2
    6c3c:	002e9920 	eoreq	r9, lr, r0, lsr #18
    6c40:	03f80100 	mvnseq	r0, #0, 2
    6c44:	00000000 	andeq	r0, r0, r0
    6c48:	0000000e 	andeq	r0, r0, lr
    6c4c:	0ad69c01 	beq	ff5adc58 <SCS_BASE+0x1f59fc58>
    6c50:	e6140000 	ldr	r0, [r4], -r0
    6c54:	01000029 	tsteq	r0, r9, lsr #32
    6c58:	04ac03f8 	strteq	r0, [ip], #1016	; 0x3f8
    6c5c:	50010000 	andpl	r0, r1, r0
    6c60:	2aeb2000 	bcs	ffacec68 <SCS_BASE+0x1fac0c68>
    6c64:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    6c68:	00000004 	andeq	r0, r0, r4
    6c6c:	00001a00 	andeq	r1, r0, r0, lsl #20
    6c70:	3f9c0100 	svccc	0x009c0100
    6c74:	1400000b 	strne	r0, [r0], #-11
    6c78:	000029e6 	andeq	r2, r0, r6, ror #19
    6c7c:	ac040e01 	stcge	14, cr0, [r4], {1}
    6c80:	01000004 	tsteq	r0, r4
    6c84:	28ce1550 	stmiacs	lr, {r4, r6, r8, sl, ip}^
    6c88:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    6c8c:	00004c04 	andeq	r4, r0, r4, lsl #24
    6c90:	002c7300 	eoreq	r7, ip, r0, lsl #6
    6c94:	047a2100 	ldrbteq	r2, [sl], #-256	; 0x100
    6c98:	00000000 	andeq	r0, r0, r0
    6c9c:	000e0000 	andeq	r0, lr, r0
    6ca0:	15010000 	strne	r0, [r1, #-0]
    6ca4:	04932204 	ldreq	r2, [r3], #516	; 0x204
    6ca8:	2c730000 	ldclcs	0, cr0, [r3], #-0
    6cac:	87230000 	strhi	r0, [r3, -r0]!
    6cb0:	01000004 	tsteq	r0, r4
    6cb4:	00002450 	andeq	r2, r0, r0, asr r4
    6cb8:	000e0000 	andeq	r0, lr, r0
    6cbc:	9f250000 	svcls	0x00250000
    6cc0:	94000004 	strls	r0, [r0], #-4
    6cc4:	0000002c 	andeq	r0, r0, ip, lsr #32
    6cc8:	a5200000 	strge	r0, [r0, #-0]!
    6ccc:	0100002f 	tsteq	r0, pc, lsr #32
    6cd0:	0000042d 	andeq	r0, r0, sp, lsr #8
    6cd4:	00340000 	eorseq	r0, r4, r0
    6cd8:	9c010000 	stcls	0, cr0, [r1], {-0}
    6cdc:	00000bee 	andeq	r0, r0, lr, ror #23
    6ce0:	0029e615 	eoreq	lr, r9, r5, lsl r6
    6ce4:	042d0100 	strteq	r0, [sp], #-256	; 0x100
    6ce8:	000004ac 	andeq	r0, r0, ip, lsr #9
    6cec:	00002cc9 	andeq	r2, r0, r9, asr #25
    6cf0:	002cd515 	eoreq	sp, ip, r5, lsl r5
    6cf4:	042d0100 	strteq	r0, [sp], #-256	; 0x100
    6cf8:	0000004c 	andeq	r0, r0, ip, asr #32
    6cfc:	00002cfd 	strdeq	r2, [r0], -sp
    6d00:	002f5115 	eoreq	r5, pc, r5, lsl r1	; <UNPREDICTABLE>
    6d04:	042e0100 	strteq	r0, [lr], #-256	; 0x100
    6d08:	0000004c 	andeq	r0, r0, ip, asr #32
    6d0c:	00002d1e 	andeq	r2, r0, lr, lsl sp
    6d10:	00312d15 	eorseq	r2, r1, r5, lsl sp
    6d14:	042e0100 	strteq	r0, [lr], #-256	; 0x100
    6d18:	0000004c 	andeq	r0, r0, ip, asr #32
    6d1c:	00002d3f 	andeq	r2, r0, pc, lsr sp
    6d20:	00047a26 	andeq	r7, r4, r6, lsr #20
    6d24:	00000000 	andeq	r0, r0, r0
    6d28:	00000e00 	andeq	r0, r0, r0, lsl #28
    6d2c:	04410100 	strbeq	r0, [r1], #-256	; 0x100
    6d30:	00000bcb 	andeq	r0, r0, fp, asr #23
    6d34:	00049323 	andeq	r9, r4, r3, lsr #6
    6d38:	23550100 	cmpcs	r5, #0, 2
    6d3c:	00000487 	andeq	r0, r0, r7, lsl #9
    6d40:	00245401 	eoreq	r5, r4, r1, lsl #8
    6d44:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    6d48:	25000000 	strcs	r0, [r0, #-0]
    6d4c:	0000049f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
    6d50:	00002d79 	andeq	r2, r0, r9, ror sp
    6d54:	001a0000 	andseq	r0, sl, r0
    6d58:	27000000 	strcs	r0, [r0, -r0]
    6d5c:	e4000005 	str	r0, [r0], #-5
    6d60:	1b00000b 	blne	6d94 <__Stack_Size+0x6994>
    6d64:	31015201 	tstcc	r1, r1, lsl #4
    6d68:	0250011b 	subseq	r0, r0, #-1073741818	; 0xc0000006
    6d6c:	27000074 	smlsdxcs	r0, r4, r0, r0
    6d70:	00000000 	andeq	r0, r0, r0
    6d74:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
    6d78:	2e052000 	cdpcs	0, 0, cr2, cr5, cr0, {0}
    6d7c:	b1010000 	mrslt	r0, (UNDEF: 1)
    6d80:	00000004 	andeq	r0, r0, r4
    6d84:	00001400 	andeq	r1, r0, r0, lsl #8
    6d88:	519c0100 	orrspl	r0, ip, r0, lsl #2
    6d8c:	1400000c 	strne	r0, [r0], #-12
    6d90:	000029e6 	andeq	r2, r0, r6, ror #19
    6d94:	ac04b101 	stfged	f3, [r4], {1}
    6d98:	01000004 	tsteq	r0, r4
    6d9c:	28e51550 	stmiacs	r5!, {r4, r6, r8, sl, ip}^
    6da0:	b1010000 	mrslt	r0, (UNDEF: 1)
    6da4:	00004c04 	andeq	r4, r0, r4, lsl #24
    6da8:	002da300 	eoreq	sl, sp, r0, lsl #6
    6dac:	30ca1400 	sbccc	r1, sl, r0, lsl #8
    6db0:	b1010000 	mrslt	r0, (UNDEF: 1)
    6db4:	00004c04 	andeq	r4, r0, r4, lsl #24
    6db8:	15520100 	ldrbne	r0, [r2, #-256]	; 0x100
    6dbc:	00002dc1 	andeq	r2, r0, r1, asr #27
    6dc0:	4c04b201 	sfmmi	f3, 1, [r4], {1}
    6dc4:	c4000000 	strgt	r0, [r0], #-0
    6dc8:	1600002d 	strne	r0, [r0], -sp, lsr #32
    6dcc:	000029cc 	andeq	r2, r0, ip, asr #19
    6dd0:	4c04b401 	cfstrsmi	mvf11, [r4], {1}
    6dd4:	e5000000 	str	r0, [r0, #-0]
    6dd8:	0000002d 	andeq	r0, r0, sp, lsr #32
    6ddc:	002ef120 	eoreq	pc, lr, r0, lsr #2
    6de0:	045b0100 	ldrbeq	r0, [fp], #-256	; 0x100
    6de4:	00000000 	andeq	r0, r0, r0
    6de8:	0000001a 	andeq	r0, r0, sl, lsl r0
    6dec:	0cc89c01 	stcleq	12, cr9, [r8], {1}
    6df0:	e6150000 	ldr	r0, [r5], -r0
    6df4:	01000029 	tsteq	r0, r9, lsr #32
    6df8:	04ac045b 	strteq	r0, [ip], #1115	; 0x45b
    6dfc:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
    6e00:	e5150000 	ldr	r0, [r5, #-0]
    6e04:	01000028 	tsteq	r0, r8, lsr #32
    6e08:	004c045b 	subeq	r0, ip, fp, asr r4
    6e0c:	2e320000 	cdpcs	0, 3, cr0, cr2, cr0, {0}
    6e10:	ca150000 	bgt	546e18 <__Stack_Size+0x546a18>
    6e14:	01000030 	tsteq	r0, r0, lsr r0
    6e18:	004c045b 	subeq	r0, ip, fp, asr r4
    6e1c:	2e530000 	cdpcs	0, 5, cr0, cr3, cr0, {0}
    6e20:	c1150000 	tstgt	r5, r0
    6e24:	0100002d 	tsteq	r0, sp, lsr #32
    6e28:	004c045c 	subeq	r0, ip, ip, asr r4
    6e2c:	2e740000 	cdpcs	0, 7, cr0, cr4, cr0, {0}
    6e30:	cc160000 	ldcgt	0, cr0, [r6], {-0}
    6e34:	01000029 	tsteq	r0, r9, lsr #32
    6e38:	004c045e 	subeq	r0, ip, lr, asr r4
    6e3c:	2e950000 	cdpcs	0, 9, cr0, cr5, cr0, {0}
    6e40:	00280000 	eoreq	r0, r8, r0
    6e44:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    6e48:	1b00000b 	blne	6e7c <__Stack_Size+0x6a7c>
    6e4c:	74025001 	strvc	r5, [r2], #-1
    6e50:	20000000 	andcs	r0, r0, r0
    6e54:	00002a4f 	andeq	r2, r0, pc, asr #20
    6e58:	00048d01 	andeq	r8, r4, r1, lsl #26
    6e5c:	14000000 	strne	r0, [r0], #-0
    6e60:	01000000 	mrseq	r0, (UNDEF: 0)
    6e64:	000d2f9c 	muleq	sp, ip, pc	; <UNPREDICTABLE>
    6e68:	29e61500 	stmibcs	r6!, {r8, sl, ip}^
    6e6c:	8d010000 	stchi	0, cr0, [r1, #-0]
    6e70:	0004ac04 	andeq	sl, r4, r4, lsl #24
    6e74:	002ed200 	eoreq	sp, lr, r0, lsl #4
    6e78:	28e51500 	stmiacs	r5!, {r8, sl, ip}^
    6e7c:	8d010000 	stchi	0, cr0, [r1, #-0]
    6e80:	00004c04 	andeq	r4, r0, r4, lsl #24
    6e84:	002ef000 	eoreq	pc, lr, r0
    6e88:	30ca1500 	sbccc	r1, sl, r0, lsl #10
    6e8c:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    6e90:	00004c04 	andeq	r4, r0, r4, lsl #24
    6e94:	002f1100 	eoreq	r1, pc, r0, lsl #2
    6e98:	2dc11500 	cfstr64cs	mvdx1, [r1]
    6e9c:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    6ea0:	00004c04 	andeq	r4, r0, r4, lsl #24
    6ea4:	002f3200 	eoreq	r3, pc, r0, lsl #4
    6ea8:	00002800 	andeq	r2, r0, r0, lsl #16
    6eac:	0bee0000 	bleq	ffb86eb4 <SCS_BASE+0x1fb78eb4>
    6eb0:	011b0000 	tsteq	fp, r0
    6eb4:	00740250 	rsbseq	r0, r4, r0, asr r2
    6eb8:	54200000 	strtpl	r0, [r0], #-0
    6ebc:	0100000c 	tsteq	r0, ip
    6ec0:	16fe04d6 	usatne	r0, #30, r6, asr #9
    6ec4:	00060800 	andeq	r0, r6, r0, lsl #16
    6ec8:	9c010000 	stcls	0, cr0, [r1], {-0}
    6ecc:	00000d70 	andeq	r0, r0, r0, ror sp
    6ed0:	0029e614 	eoreq	lr, r9, r4, lsl r6
    6ed4:	04d60100 	ldrbeq	r0, [r6], #256	; 0x100
    6ed8:	000004ac 	andeq	r0, r0, ip, lsr #9
    6edc:	bb145001 	bllt	51aee8 <__Stack_Size+0x51aae8>
    6ee0:	0100002e 	tsteq	r0, lr, lsr #32
    6ee4:	004c04d6 	ldrdeq	r0, [ip], #-70	; 0xffffffba
    6ee8:	51010000 	mrspl	r0, (UNDEF: 1)
    6eec:	002c0e14 	eoreq	r0, ip, r4, lsl lr
    6ef0:	04d60100 	ldrbeq	r0, [r6], #256	; 0x100
    6ef4:	0000004c 	andeq	r0, r0, ip, asr #32
    6ef8:	20005201 	andcs	r5, r0, r1, lsl #4
    6efc:	00002d33 	andeq	r2, r0, r3, lsr sp
    6f00:	0004f201 	andeq	pc, r4, r1, lsl #4
    6f04:	10000000 	andne	r0, r0, r0
    6f08:	01000000 	mrseq	r0, (UNDEF: 0)
    6f0c:	000db59c 	muleq	sp, ip, r5
    6f10:	29e61400 	stmibcs	r6!, {sl, ip}^
    6f14:	f2010000 	vhadd.s8	d0, d1, d0
    6f18:	0004ac04 	andeq	sl, r4, r4, lsl #24
    6f1c:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    6f20:	00000583 	andeq	r0, r0, r3, lsl #11
    6f24:	4c04f201 	sfmmi	f7, 1, [r4], {1}
    6f28:	53000000 	movwpl	r0, #0
    6f2c:	1600002f 	strne	r0, [r0], -pc, lsr #32
    6f30:	00002a3c 	andeq	r2, r0, ip, lsr sl
    6f34:	4c04f401 	cfstrsmi	mvf15, [r4], {1}
    6f38:	74000000 	strvc	r0, [r0], #-0
    6f3c:	0000002f 	andeq	r0, r0, pc, lsr #32
    6f40:	00047a29 	andeq	r7, r4, r9, lsr #20
    6f44:	00000000 	andeq	r0, r0, r0
    6f48:	00001000 	andeq	r1, r0, r0
    6f4c:	e29c0100 	adds	r0, ip, #0, 2
    6f50:	2300000d 	movwcs	r0, #13
    6f54:	00000487 	andeq	r0, r0, r7, lsl #9
    6f58:	93225001 	teqls	r2, #1
    6f5c:	a9000004 	stmdbge	r0, {r2}
    6f60:	2500002f 	strcs	r0, [r0, #-47]	; 0x2f
    6f64:	0000049f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
    6f68:	00002fca 	andeq	r2, r0, sl, asr #31
    6f6c:	2c972000 	ldccs	0, cr2, [r7], {0}
    6f70:	45010000 	strmi	r0, [r1, #-0]
    6f74:	00000005 	andeq	r0, r0, r5
    6f78:	00003c00 	andeq	r3, r0, r0, lsl #24
    6f7c:	679c0100 	ldrvs	r0, [ip, r0, lsl #2]
    6f80:	1400000e 	strne	r0, [r0], #-14
    6f84:	000029e6 	andeq	r2, r0, r6, ror #19
    6f88:	ac054501 	cfstr32ge	mvfx4, [r5], {1}
    6f8c:	01000004 	tsteq	r0, r4
    6f90:	2be21550 	blcs	ff88c4d8 <SCS_BASE+0x1f87e4d8>
    6f94:	45010000 	strmi	r0, [r1, #-0]
    6f98:	00004c05 	andeq	r4, r0, r5, lsl #24
    6f9c:	002fff00 	eoreq	pc, pc, r0, lsl #30
    6fa0:	299c1500 	ldmibcs	ip, {r8, sl, ip}
    6fa4:	46010000 	strmi	r0, [r1], -r0
    6fa8:	00004c05 	andeq	r4, r0, r5, lsl #24
    6fac:	00302000 	eorseq	r2, r0, r0
    6fb0:	29fc1500 	ldmibcs	ip!, {r8, sl, ip}^
    6fb4:	46010000 	strmi	r0, [r1], -r0
    6fb8:	00004c05 	andeq	r4, r0, r5, lsl #24
    6fbc:	00304100 	eorseq	r4, r0, r0, lsl #2
    6fc0:	29cc1600 	stmibcs	ip, {r9, sl, ip}^
    6fc4:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    6fc8:	00004c05 	andeq	r4, r0, r5, lsl #24
    6fcc:	00306200 	eorseq	r6, r0, r0, lsl #4
    6fd0:	2e441600 	cdpcs	6, 4, cr1, cr4, cr0, {0}
    6fd4:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    6fd8:	00004c05 	andeq	r4, r0, r5, lsl #24
    6fdc:	00309700 	eorseq	r9, r0, r0, lsl #14
    6fe0:	2b3d1600 	blcs	f4c7e8 <__Stack_Size+0xf4c3e8>
    6fe4:	4a010000 	bmi	46fec <__Stack_Size+0x46bec>
    6fe8:	00004c05 	andeq	r4, r0, r5, lsl #24
    6fec:	0030c100 	eorseq	ip, r0, r0, lsl #2
    6ff0:	2d200000 	stccs	0, cr0, [r0, #-0]
    6ff4:	01000030 	tsteq	r0, r0, lsr r0
    6ff8:	0000057f 	andeq	r0, r0, pc, ror r5
    6ffc:	00100000 	andseq	r0, r0, r0
    7000:	9c010000 	stcls	0, cr0, [r1], {-0}
    7004:	00000eac 	andeq	r0, r0, ip, lsr #29
    7008:	0029e614 	eoreq	lr, r9, r4, lsl r6
    700c:	057f0100 	ldrbeq	r0, [pc, #-256]!	; 6f14 <__Stack_Size+0x6b14>
    7010:	000004ac 	andeq	r0, r0, ip, lsr #9
    7014:	eb155001 	bl	55b020 <__Stack_Size+0x55ac20>
    7018:	01000029 	tsteq	r0, r9, lsr #32
    701c:	004c057f 	subeq	r0, ip, pc, ror r5
    7020:	30eb0000 	rsccc	r0, fp, r0
    7024:	44160000 	ldrmi	r0, [r6], #-0
    7028:	0100002e 	tsteq	r0, lr, lsr #32
    702c:	004c0581 	subeq	r0, ip, r1, lsl #11
    7030:	310c0000 	mrscc	r0, (UNDEF: 12)
    7034:	20000000 	andcs	r0, r0, r0
    7038:	00002923 	andeq	r2, r0, r3, lsr #18
    703c:	0005a101 	andeq	sl, r5, r1, lsl #2
    7040:	14000000 	strne	r0, [r0], #-0
    7044:	01000000 	mrseq	r0, (UNDEF: 0)
    7048:	000ef19c 	muleq	lr, ip, r1
    704c:	29e61400 	stmibcs	r6!, {sl, ip}^
    7050:	a1010000 	mrsge	r0, (UNDEF: 1)
    7054:	0004ac05 	andeq	sl, r4, r5, lsl #24
    7058:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    705c:	000029eb 	andeq	r2, r0, fp, ror #19
    7060:	4c05a101 	stfmid	f2, [r5], {1}
    7064:	41000000 	mrsmi	r0, (UNDEF: 0)
    7068:	16000031 			; <UNDEFINED> instruction: 0x16000031
    706c:	00002e44 	andeq	r2, r0, r4, asr #28
    7070:	4c05a301 	stcmi	3, cr10, [r5], {1}
    7074:	62000000 	andvs	r0, r0, #0
    7078:	00000031 	andeq	r0, r0, r1, lsr r0
    707c:	00310a20 	eorseq	r0, r1, r0, lsr #20
    7080:	05c30100 	strbeq	r0, [r3, #256]	; 0x100
    7084:	00000000 	andeq	r0, r0, r0
    7088:	00000010 	andeq	r0, r0, r0, lsl r0
    708c:	0f369c01 	svceq	0x00369c01
    7090:	e6140000 	ldr	r0, [r4], -r0
    7094:	01000029 	tsteq	r0, r9, lsr #32
    7098:	04ac05c3 	strteq	r0, [ip], #1475	; 0x5c3
    709c:	50010000 	andpl	r0, r1, r0
    70a0:	0029eb15 	eoreq	lr, r9, r5, lsl fp
    70a4:	05c30100 	strbeq	r0, [r3, #256]	; 0x100
    70a8:	0000004c 	andeq	r0, r0, ip, asr #32
    70ac:	00003197 	muleq	r0, r7, r1
    70b0:	002e4d16 	eoreq	r4, lr, r6, lsl sp
    70b4:	05c50100 	strbeq	r0, [r5, #256]	; 0x100
    70b8:	0000004c 	andeq	r0, r0, ip, asr #32
    70bc:	000031b8 			; <UNDEFINED> instruction: 0x000031b8
    70c0:	2d752000 	ldclcs	0, cr2, [r5, #-0]
    70c4:	e5010000 	str	r0, [r1, #-0]
    70c8:	00000005 	andeq	r0, r0, r5
    70cc:	00001400 	andeq	r1, r0, r0, lsl #8
    70d0:	7b9c0100 	blvc	fe7074d8 <SCS_BASE+0x1e6f94d8>
    70d4:	1400000f 	strne	r0, [r0], #-15
    70d8:	000029e6 	andeq	r2, r0, r6, ror #19
    70dc:	ac05e501 	cfstr32ge	mvfx14, [r5], {1}
    70e0:	01000004 	tsteq	r0, r4
    70e4:	29eb1550 	stmibcs	fp!, {r4, r6, r8, sl, ip}^
    70e8:	e5010000 	str	r0, [r1, #-0]
    70ec:	00004c05 	andeq	r4, r0, r5, lsl #24
    70f0:	0031ed00 	eorseq	lr, r1, r0, lsl #26
    70f4:	2e4d1600 	cdpcs	6, 4, cr1, cr13, cr0, {0}
    70f8:	e7010000 	str	r0, [r1, -r0]
    70fc:	00004c05 	andeq	r4, r0, r5, lsl #24
    7100:	00320e00 	eorseq	r0, r2, r0, lsl #28
    7104:	15200000 	strne	r0, [r0, #-0]!
    7108:	0100002b 	tsteq	r0, fp, lsr #32
    710c:	00000602 	andeq	r0, r0, r2, lsl #12
    7110:	00180000 	andseq	r0, r8, r0
    7114:	9c010000 	stcls	0, cr0, [r1], {-0}
    7118:	00000fae 	andeq	r0, r0, lr, lsr #31
    711c:	0029e614 	eoreq	lr, r9, r4, lsl r6
    7120:	06020100 	streq	r0, [r2], -r0, lsl #2
    7124:	000004ac 	andeq	r0, r0, ip, lsr #9
    7128:	89145001 	ldmdbhi	r4, {r0, ip, lr}
    712c:	0100001a 	tsteq	r0, sl, lsl r0
    7130:	00cf0602 	sbceq	r0, pc, r2, lsl #12
    7134:	51010000 	mrspl	r0, (UNDEF: 1)
    7138:	2e622000 	cdpcs	0, 6, cr2, cr2, cr0, {0}
    713c:	1d010000 	stcne	0, cr0, [r1, #-0]
    7140:	00000006 	andeq	r0, r0, r6
    7144:	00001800 	andeq	r1, r0, r0, lsl #16
    7148:	e19c0100 	orrs	r0, ip, r0, lsl #2
    714c:	1400000f 	strne	r0, [r0], #-15
    7150:	000029e6 	andeq	r2, r0, r6, ror #19
    7154:	ac061d01 	stcge	13, cr1, [r6], {1}
    7158:	01000004 	tsteq	r0, r4
    715c:	1a891450 	bne	fe24c2a4 <SCS_BASE+0x1e23e2a4>
    7160:	1d010000 	stcne	0, cr0, [r1, #-0]
    7164:	0000cf06 	andeq	ip, r0, r6, lsl #30
    7168:	00510100 	subseq	r0, r1, r0, lsl #2
    716c:	00296020 	eoreq	r6, r9, r0, lsr #32
    7170:	06390100 	ldrteq	r0, [r9], -r0, lsl #2
    7174:	00000000 	andeq	r0, r0, r0
    7178:	00000018 	andeq	r0, r0, r8, lsl r0
    717c:	10149c01 	andsne	r9, r4, r1, lsl #24
    7180:	e6140000 	ldr	r0, [r4], -r0
    7184:	01000029 	tsteq	r0, r9, lsr #32
    7188:	04ac0639 	strteq	r0, [ip], #1593	; 0x639
    718c:	50010000 	andpl	r0, r1, r0
    7190:	001a8914 	andseq	r8, sl, r4, lsl r9
    7194:	06390100 	ldrteq	r0, [r9], -r0, lsl #2
    7198:	000000cf 	andeq	r0, r0, pc, asr #1
    719c:	20005101 	andcs	r5, r0, r1, lsl #2
    71a0:	00002e70 	andeq	r2, r0, r0, ror lr
    71a4:	00065501 	andeq	r5, r6, r1, lsl #10
    71a8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    71ac:	01000000 	mrseq	r0, (UNDEF: 0)
    71b0:	0010479c 	mulseq	r0, ip, r7
    71b4:	29e61400 	stmibcs	r6!, {sl, ip}^
    71b8:	55010000 	strpl	r0, [r1, #-0]
    71bc:	0004ac06 	andeq	sl, r4, r6, lsl #24
    71c0:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    71c4:	00001a89 	andeq	r1, r0, r9, lsl #21
    71c8:	cf065501 	svcgt	0x00065501
    71cc:	01000000 	mrseq	r0, (UNDEF: 0)
    71d0:	87200051 			; <UNDEFINED> instruction: 0x87200051
    71d4:	01000029 	tsteq	r0, r9, lsr #32
    71d8:	00000674 	andeq	r0, r0, r4, ror r6
    71dc:	00100000 	andseq	r0, r0, r0
    71e0:	9c010000 	stcls	0, cr0, [r1], {-0}
    71e4:	0000108c 	andeq	r1, r0, ip, lsl #1
    71e8:	0029e614 	eoreq	lr, r9, r4, lsl r6
    71ec:	06740100 	ldrbteq	r0, [r4], -r0, lsl #2
    71f0:	000004ac 	andeq	r0, r0, ip, lsr #9
    71f4:	48155001 	ldmdami	r5, {r0, ip, lr}
    71f8:	01000028 	tsteq	r0, r8, lsr #32
    71fc:	004c0674 	subeq	r0, ip, r4, ror r6
    7200:	32430000 	subcc	r0, r3, #0
    7204:	44160000 	ldrmi	r0, [r6], #-0
    7208:	0100002e 	tsteq	r0, lr, lsr #32
    720c:	004c0676 	subeq	r0, ip, r6, ror r6
    7210:	32640000 	rsbcc	r0, r4, #0
    7214:	20000000 	andcs	r0, r0, r0
    7218:	0000290e 	andeq	r2, r0, lr, lsl #18
    721c:	00069501 	andeq	r9, r6, r1, lsl #10
    7220:	14000000 	strne	r0, [r0], #-0
    7224:	01000000 	mrseq	r0, (UNDEF: 0)
    7228:	0010d19c 	mulseq	r0, ip, r1
    722c:	29e61400 	stmibcs	r6!, {sl, ip}^
    7230:	95010000 	strls	r0, [r1, #-0]
    7234:	0004ac06 	andeq	sl, r4, r6, lsl #24
    7238:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    723c:	00002848 	andeq	r2, r0, r8, asr #16
    7240:	4c069501 	cfstr32mi	mvfx9, [r6], {1}
    7244:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    7248:	16000032 			; <UNDEFINED> instruction: 0x16000032
    724c:	00002e44 	andeq	r2, r0, r4, asr #28
    7250:	4c069701 	stcmi	7, cr9, [r6], {1}
    7254:	ba000000 	blt	725c <__Stack_Size+0x6e5c>
    7258:	00000032 	andeq	r0, r0, r2, lsr r0
    725c:	00287720 	eoreq	r7, r8, r0, lsr #14
    7260:	06b60100 	ldrteq	r0, [r6], r0, lsl #2
    7264:	00000000 	andeq	r0, r0, r0
    7268:	00000010 	andeq	r0, r0, r0, lsl r0
    726c:	11169c01 	tstne	r6, r1, lsl #24
    7270:	e6140000 	ldr	r0, [r4], -r0
    7274:	01000029 	tsteq	r0, r9, lsr #32
    7278:	04ac06b6 	strteq	r0, [ip], #1718	; 0x6b6
    727c:	50010000 	andpl	r0, r1, r0
    7280:	00284815 	eoreq	r4, r8, r5, lsl r8
    7284:	06b60100 	ldrteq	r0, [r6], r0, lsl #2
    7288:	0000004c 	andeq	r0, r0, ip, asr #32
    728c:	000032ef 	andeq	r3, r0, pc, ror #5
    7290:	002e4d16 	eoreq	r4, lr, r6, lsl sp
    7294:	06b80100 	ldrteq	r0, [r8], r0, lsl #2
    7298:	0000004c 	andeq	r0, r0, ip, asr #32
    729c:	00003310 	andeq	r3, r0, r0, lsl r3
    72a0:	27ec2000 	strbcs	r2, [ip, r0]!
    72a4:	d7010000 	strle	r0, [r1, -r0]
    72a8:	00000006 	andeq	r0, r0, r6
    72ac:	00001400 	andeq	r1, r0, r0, lsl #8
    72b0:	5b9c0100 	blpl	fe7076b8 <SCS_BASE+0x1e6f96b8>
    72b4:	14000011 	strne	r0, [r0], #-17
    72b8:	000029e6 	andeq	r2, r0, r6, ror #19
    72bc:	ac06d701 	stcge	7, cr13, [r6], {1}
    72c0:	01000004 	tsteq	r0, r4
    72c4:	28481550 	stmdacs	r8, {r4, r6, r8, sl, ip}^
    72c8:	d7010000 	strle	r0, [r1, -r0]
    72cc:	00004c06 	andeq	r4, r0, r6, lsl #24
    72d0:	00334500 	eorseq	r4, r3, r0, lsl #10
    72d4:	2e4d1600 	cdpcs	6, 4, cr1, cr13, cr0, {0}
    72d8:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    72dc:	00004c06 	andeq	r4, r0, r6, lsl #24
    72e0:	00336600 	eorseq	r6, r3, r0, lsl #12
    72e4:	e2200000 	eor	r0, r0, #0
    72e8:	0100002d 	tsteq	r0, sp, lsr #32
    72ec:	000006f7 	strdeq	r0, [r0], -r7
    72f0:	00100000 	andseq	r0, r0, r0
    72f4:	9c010000 	stcls	0, cr0, [r1], {-0}
    72f8:	000011a0 	andeq	r1, r0, r0, lsr #3
    72fc:	0029e614 	eoreq	lr, r9, r4, lsl r6
    7300:	06f70100 	ldrbteq	r0, [r7], r0, lsl #2
    7304:	000004ac 	andeq	r0, r0, ip, lsr #9
    7308:	a9155001 	ldmdbge	r5, {r0, ip, lr}
    730c:	01000028 	tsteq	r0, r8, lsr #32
    7310:	004c06f7 	strdeq	r0, [ip], #-103	; 0xffffff99
    7314:	339b0000 	orrscc	r0, fp, #0
    7318:	44160000 	ldrmi	r0, [r6], #-0
    731c:	0100002e 	tsteq	r0, lr, lsr #32
    7320:	004c06f9 	strdeq	r0, [ip], #-105	; 0xffffff97
    7324:	33bc0000 			; <UNDEFINED> instruction: 0x33bc0000
    7328:	20000000 	andcs	r0, r0, r0
    732c:	00002b5a 	andeq	r2, r0, sl, asr fp
    7330:	00071801 	andeq	r1, r7, r1, lsl #16
    7334:	14000000 	strne	r0, [r0], #-0
    7338:	01000000 	mrseq	r0, (UNDEF: 0)
    733c:	0011e59c 	mulseq	r1, ip, r5
    7340:	29e61400 	stmibcs	r6!, {sl, ip}^
    7344:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    7348:	0004ac07 	andeq	sl, r4, r7, lsl #24
    734c:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    7350:	000028a9 	andeq	r2, r0, r9, lsr #17
    7354:	4c071801 	stcmi	8, cr1, [r7], {1}
    7358:	f1000000 	cps	#0
    735c:	16000033 			; <UNDEFINED> instruction: 0x16000033
    7360:	00002e44 	andeq	r2, r0, r4, asr #28
    7364:	4c071a01 	stcmi	10, cr1, [r7], {1}
    7368:	12000000 	andne	r0, r0, #0
    736c:	00000034 	andeq	r0, r0, r4, lsr r0
    7370:	0029d420 	eoreq	sp, r9, r0, lsr #8
    7374:	07390100 	ldreq	r0, [r9, -r0, lsl #2]!
    7378:	00000000 	andeq	r0, r0, r0
    737c:	00000010 	andeq	r0, r0, r0, lsl r0
    7380:	122a9c01 	eorne	r9, sl, #256	; 0x100
    7384:	e6140000 	ldr	r0, [r4], -r0
    7388:	01000029 	tsteq	r0, r9, lsr #32
    738c:	04ac0739 	strteq	r0, [ip], #1849	; 0x739
    7390:	50010000 	andpl	r0, r1, r0
    7394:	0028a915 	eoreq	sl, r8, r5, lsl r9
    7398:	07390100 	ldreq	r0, [r9, -r0, lsl #2]!
    739c:	0000004c 	andeq	r0, r0, ip, asr #32
    73a0:	00003447 	andeq	r3, r0, r7, asr #8
    73a4:	002e4d16 	eoreq	r4, lr, r6, lsl sp
    73a8:	073b0100 	ldreq	r0, [fp, -r0, lsl #2]!
    73ac:	0000004c 	andeq	r0, r0, ip, asr #32
    73b0:	00003468 	andeq	r3, r0, r8, ror #8
    73b4:	27b32000 	ldrcs	r2, [r3, r0]!
    73b8:	5a010000 	bpl	473c0 <__Stack_Size+0x46fc0>
    73bc:	00000007 	andeq	r0, r0, r7
    73c0:	00001400 	andeq	r1, r0, r0, lsl #8
    73c4:	6f9c0100 	svcvs	0x009c0100
    73c8:	14000012 	strne	r0, [r0], #-18
    73cc:	000029e6 	andeq	r2, r0, r6, ror #19
    73d0:	ac075a01 	stcge	10, cr5, [r7], {1}
    73d4:	01000004 	tsteq	r0, r4
    73d8:	28a91550 	stmiacs	r9!, {r4, r6, r8, sl, ip}
    73dc:	5a010000 	bpl	473e4 <__Stack_Size+0x46fe4>
    73e0:	00004c07 	andeq	r4, r0, r7, lsl #24
    73e4:	00349d00 	eorseq	r9, r4, r0, lsl #26
    73e8:	2e4d1600 	cdpcs	6, 4, cr1, cr13, cr0, {0}
    73ec:	5c010000 	stcpl	0, cr0, [r1], {-0}
    73f0:	00004c07 	andeq	r4, r0, r7, lsl #24
    73f4:	0034be00 	eorseq	fp, r4, r0, lsl #28
    73f8:	a4200000 	strtge	r0, [r0], #-0
    73fc:	01000030 	tsteq	r0, r0, lsr r0
    7400:	0000077b 	andeq	r0, r0, fp, ror r7
    7404:	00100000 	andseq	r0, r0, r0
    7408:	9c010000 	stcls	0, cr0, [r1], {-0}
    740c:	000012b4 			; <UNDEFINED> instruction: 0x000012b4
    7410:	0029e614 	eoreq	lr, r9, r4, lsl r6
    7414:	077b0100 	ldrbeq	r0, [fp, -r0, lsl #2]!
    7418:	000004ac 	andeq	r0, r0, ip, lsr #9
    741c:	02155001 	andseq	r5, r5, #1
    7420:	0100002c 	tsteq	r0, ip, lsr #32
    7424:	004c077b 	subeq	r0, ip, fp, ror r7
    7428:	34f30000 	ldrbtcc	r0, [r3], #0
    742c:	44160000 	ldrmi	r0, [r6], #-0
    7430:	0100002e 	tsteq	r0, lr, lsr #32
    7434:	004c077d 	subeq	r0, ip, sp, ror r7
    7438:	35140000 	ldrcc	r0, [r4, #-0]
    743c:	20000000 	andcs	r0, r0, r0
    7440:	00002f95 	muleq	r0, r5, pc	; <UNPREDICTABLE>
    7444:	00079b01 	andeq	r9, r7, r1, lsl #22
    7448:	10000000 	andne	r0, r0, r0
    744c:	01000000 	mrseq	r0, (UNDEF: 0)
    7450:	0012f99c 	mulseq	r2, ip, r9
    7454:	29e61400 	stmibcs	r6!, {sl, ip}^
    7458:	9b010000 	blls	47460 <__Stack_Size+0x47060>
    745c:	0004ac07 	andeq	sl, r4, r7, lsl #24
    7460:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    7464:	00002c02 	andeq	r2, r0, r2, lsl #24
    7468:	4c079b01 	stcmi	11, cr9, [r7], {1}
    746c:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    7470:	16000035 			; <UNDEFINED> instruction: 0x16000035
    7474:	00002e44 	andeq	r2, r0, r4, asr #28
    7478:	4c079d01 	stcmi	13, cr9, [r7], {1}
    747c:	6a000000 	bvs	7484 <__Stack_Size+0x7084>
    7480:	00000035 	andeq	r0, r0, r5, lsr r0
    7484:	002d5920 	eoreq	r5, sp, r0, lsr #18
    7488:	07bb0100 	ldreq	r0, [fp, r0, lsl #2]!
    748c:	00000000 	andeq	r0, r0, r0
    7490:	00000010 	andeq	r0, r0, r0, lsl r0
    7494:	133e9c01 	teqne	lr, #256	; 0x100
    7498:	e6140000 	ldr	r0, [r4], -r0
    749c:	01000029 	tsteq	r0, r9, lsr #32
    74a0:	04ac07bb 	strteq	r0, [ip], #1979	; 0x7bb
    74a4:	50010000 	andpl	r0, r1, r0
    74a8:	002c0215 	eoreq	r0, ip, r5, lsl r2
    74ac:	07bb0100 	ldreq	r0, [fp, r0, lsl #2]!
    74b0:	0000004c 	andeq	r0, r0, ip, asr #32
    74b4:	00003594 	muleq	r0, r4, r5
    74b8:	002e4d16 	eoreq	r4, lr, r6, lsl sp
    74bc:	07bd0100 	ldreq	r0, [sp, r0, lsl #2]!
    74c0:	0000004c 	andeq	r0, r0, ip, asr #32
    74c4:	000035b5 			; <UNDEFINED> instruction: 0x000035b5
    74c8:	2adb2000 	bcs	ff6cf4d0 <SCS_BASE+0x1f6c14d0>
    74cc:	db010000 	blle	474d4 <__Stack_Size+0x470d4>
    74d0:	00000007 	andeq	r0, r0, r7
    74d4:	00001000 	andeq	r1, r0, r0
    74d8:	839c0100 	orrshi	r0, ip, #0, 2
    74dc:	14000013 	strne	r0, [r0], #-19
    74e0:	000029e6 	andeq	r2, r0, r6, ror #19
    74e4:	ac07db01 	stcge	11, cr13, [r7], {1}
    74e8:	01000004 	tsteq	r0, r4
    74ec:	2c021550 	cfstr32cs	mvfx1, [r2], {80}	; 0x50
    74f0:	db010000 	blle	474f8 <__Stack_Size+0x470f8>
    74f4:	00004c07 	andeq	r4, r0, r7, lsl #24
    74f8:	0035ea00 	eorseq	lr, r5, r0, lsl #20
    74fc:	2e4d1600 	cdpcs	6, 4, cr1, cr13, cr0, {0}
    7500:	dd010000 	stcle	0, cr0, [r1, #-0]
    7504:	00004c07 	andeq	r4, r0, r7, lsl #24
    7508:	00360b00 	eorseq	r0, r6, r0, lsl #22
    750c:	c5200000 	strgt	r0, [r0, #-0]!
    7510:	01000027 	tsteq	r0, r7, lsr #32
    7514:	000007fb 	strdeq	r0, [r0], -fp
    7518:	00100000 	andseq	r0, r0, r0
    751c:	9c010000 	stcls	0, cr0, [r1], {-0}
    7520:	000013c8 	andeq	r1, r0, r8, asr #7
    7524:	0029e614 	eoreq	lr, r9, r4, lsl r6
    7528:	07fb0100 	ldrbeq	r0, [fp, r0, lsl #2]!
    752c:	000004ac 	andeq	r0, r0, ip, lsr #9
    7530:	68155001 	ldmdavs	r5, {r0, ip, lr}
    7534:	01000028 	tsteq	r0, r8, lsr #32
    7538:	004c07fb 	strdeq	r0, [ip], #-123	; 0xffffff85
    753c:	36350000 	ldrtcc	r0, [r5], -r0
    7540:	3d160000 	ldccc	0, cr0, [r6, #-0]
    7544:	0100002b 	tsteq	r0, fp, lsr #32
    7548:	004c07fd 	strdeq	r0, [ip], #-125	; 0xffffff83
    754c:	36560000 	ldrbcc	r0, [r6], -r0
    7550:	20000000 	andcs	r0, r0, r0
    7554:	00002e13 	andeq	r2, r0, r3, lsl lr
    7558:	00081801 	andeq	r1, r8, r1, lsl #16
    755c:	10000000 	andne	r0, r0, r0
    7560:	01000000 	mrseq	r0, (UNDEF: 0)
    7564:	00140d9c 	mulseq	r4, ip, sp
    7568:	29e61400 	stmibcs	r6!, {sl, ip}^
    756c:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    7570:	0004ac08 	andeq	sl, r4, r8, lsl #24
    7574:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    7578:	00002cc5 	andeq	r2, r0, r5, asr #25
    757c:	4c081801 	stcmi	8, cr1, [r8], {1}
    7580:	8b000000 	blhi	7588 <__Stack_Size+0x7188>
    7584:	16000036 			; <UNDEFINED> instruction: 0x16000036
    7588:	00002b3d 	andeq	r2, r0, sp, lsr fp
    758c:	4c081a01 	stcmi	10, cr1, [r8], {1}
    7590:	ac000000 	stcge	0, cr0, [r0], {-0}
    7594:	00000036 	andeq	r0, r0, r6, lsr r0
    7598:	00317520 	eorseq	r7, r1, r0, lsr #10
    759c:	08360100 	ldmdaeq	r6!, {r8}
    75a0:	00000000 	andeq	r0, r0, r0
    75a4:	00000014 	andeq	r0, r0, r4, lsl r0
    75a8:	14529c01 	ldrbne	r9, [r2], #-3073	; 0xc01
    75ac:	e6140000 	ldr	r0, [r4], -r0
    75b0:	01000029 	tsteq	r0, r9, lsr #32
    75b4:	04ac0836 	strteq	r0, [ip], #2102	; 0x836
    75b8:	50010000 	andpl	r0, r1, r0
    75bc:	00286815 	eoreq	r6, r8, r5, lsl r8
    75c0:	08360100 	ldmdaeq	r6!, {r8}
    75c4:	0000004c 	andeq	r0, r0, ip, asr #32
    75c8:	000036e1 	andeq	r3, r0, r1, ror #13
    75cc:	002b3d16 	eoreq	r3, fp, r6, lsl sp
    75d0:	08380100 	ldmdaeq	r8!, {r8}
    75d4:	0000004c 	andeq	r0, r0, ip, asr #32
    75d8:	00003702 	andeq	r3, r0, r2, lsl #14
    75dc:	30642000 	rsbcc	r2, r4, r0
    75e0:	53010000 	movwpl	r0, #4096	; 0x1000
    75e4:	00000008 	andeq	r0, r0, r8
    75e8:	00001400 	andeq	r1, r0, r0, lsl #8
    75ec:	979c0100 	ldrls	r0, [ip, r0, lsl #2]
    75f0:	14000014 	strne	r0, [r0], #-20
    75f4:	000029e6 	andeq	r2, r0, r6, ror #19
    75f8:	ac085301 	stcge	3, cr5, [r8], {1}
    75fc:	01000004 	tsteq	r0, r4
    7600:	2cc51550 	cfstr64cs	mvdx1, [r5], {80}	; 0x50
    7604:	53010000 	movwpl	r0, #4096	; 0x1000
    7608:	00004c08 	andeq	r4, r0, r8, lsl #24
    760c:	00373700 	eorseq	r3, r7, r0, lsl #14
    7610:	2b3d1600 	blcs	f4ce18 <__Stack_Size+0xf4ca18>
    7614:	55010000 	strpl	r0, [r1, #-0]
    7618:	00004c08 	andeq	r4, r0, r8, lsl #24
    761c:	00375800 	eorseq	r5, r7, r0, lsl #16
    7620:	b4200000 	strtlt	r0, [r0], #-0
    7624:	01000030 	tsteq	r0, r0, lsr r0
    7628:	00000871 	andeq	r0, r0, r1, ror r8
    762c:	00140000 	andseq	r0, r4, r0
    7630:	9c010000 	stcls	0, cr0, [r1], {-0}
    7634:	000014dc 	ldrdeq	r1, [r0], -ip
    7638:	0029e614 	eoreq	lr, r9, r4, lsl r6
    763c:	08710100 	ldmdaeq	r1!, {r8}^
    7640:	000004ac 	andeq	r0, r0, ip, lsr #9
    7644:	68155001 	ldmdavs	r5, {r0, ip, lr}
    7648:	01000028 	tsteq	r0, r8, lsr #32
    764c:	004c0871 	subeq	r0, ip, r1, ror r8
    7650:	378d0000 	strcc	r0, [sp, r0]
    7654:	3d160000 	ldccc	0, cr0, [r6, #-0]
    7658:	0100002b 	tsteq	r0, fp, lsr #32
    765c:	004c0873 	subeq	r0, ip, r3, ror r8
    7660:	37ae0000 	strcc	r0, [lr, r0]!
    7664:	20000000 	andcs	r0, r0, r0
    7668:	00002831 	andeq	r2, r0, r1, lsr r8
    766c:	00088e01 	andeq	r8, r8, r1, lsl #28
    7670:	14000000 	strne	r0, [r0], #-0
    7674:	01000000 	mrseq	r0, (UNDEF: 0)
    7678:	0015219c 	mulseq	r5, ip, r1
    767c:	29e61400 	stmibcs	r6!, {sl, ip}^
    7680:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    7684:	0004ac08 	andeq	sl, r4, r8, lsl #24
    7688:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    768c:	00002cc5 	andeq	r2, r0, r5, asr #25
    7690:	4c088e01 	stcmi	14, cr8, [r8], {1}
    7694:	e3000000 	movw	r0, #0
    7698:	16000037 			; <UNDEFINED> instruction: 0x16000037
    769c:	00002b3d 	andeq	r2, r0, sp, lsr fp
    76a0:	4c089001 	stcmi	0, cr9, [r8], {1}
    76a4:	04000000 	streq	r0, [r0], #-0
    76a8:	00000038 	andeq	r0, r0, r8, lsr r0
    76ac:	00307b20 	eorseq	r7, r0, r0, lsr #22
    76b0:	08ac0100 	stmiaeq	ip!, {r8}
    76b4:	00000000 	andeq	r0, r0, r0
    76b8:	00000014 	andeq	r0, r0, r4, lsl r0
    76bc:	15669c01 	strbne	r9, [r6, #-3073]!	; 0xc01
    76c0:	e6140000 	ldr	r0, [r4], -r0
    76c4:	01000029 	tsteq	r0, r9, lsr #32
    76c8:	04ac08ac 	strteq	r0, [ip], #2220	; 0x8ac
    76cc:	50010000 	andpl	r0, r1, r0
    76d0:	00286815 	eoreq	r6, r8, r5, lsl r8
    76d4:	08ac0100 	stmiaeq	ip!, {r8}
    76d8:	0000004c 	andeq	r0, r0, ip, asr #32
    76dc:	00003839 	andeq	r3, r0, r9, lsr r8
    76e0:	002b3d16 	eoreq	r3, fp, r6, lsl sp
    76e4:	08ae0100 	stmiaeq	lr!, {r8}
    76e8:	0000004c 	andeq	r0, r0, ip, asr #32
    76ec:	0000385a 	andeq	r3, r0, sl, asr r8
    76f0:	2c202000 	stccs	0, cr2, [r0], #-0
    76f4:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    76f8:	00000008 	andeq	r0, r0, r8
    76fc:	00001c00 	andeq	r1, r0, r0, lsl #24
    7700:	a99c0100 	ldmibge	ip, {r8}
    7704:	14000015 	strne	r0, [r0], #-21
    7708:	000029e6 	andeq	r2, r0, r6, ror #19
    770c:	ac08ce01 	stcge	14, cr12, [r8], {1}
    7710:	01000004 	tsteq	r0, r4
    7714:	2e561450 	mrccs	4, 2, r1, cr6, cr0, {2}
    7718:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    771c:	00004c08 	andeq	r4, r0, r8, lsl #24
    7720:	15510100 	ldrbne	r0, [r1, #-256]	; 0x100
    7724:	00002ec5 	andeq	r2, r0, r5, asr #29
    7728:	4c08ce01 	stcmi	14, cr12, [r8], {1}
    772c:	8f000000 	svchi	0x00000000
    7730:	00000038 	andeq	r0, r0, r8, lsr r0
    7734:	0028f920 	eoreq	pc, r8, r0, lsr #18
    7738:	08ea0100 	stmiaeq	sl!, {r8}^
    773c:	00000000 	andeq	r0, r0, r0
    7740:	0000001c 	andeq	r0, r0, ip, lsl r0
    7744:	15ec9c01 	strbne	r9, [ip, #3073]!	; 0xc01
    7748:	e6140000 	ldr	r0, [r4], -r0
    774c:	01000029 	tsteq	r0, r9, lsr #32
    7750:	04ac08ea 	strteq	r0, [ip], #2282	; 0x8ea
    7754:	50010000 	andpl	r0, r1, r0
    7758:	002e5614 	eoreq	r5, lr, r4, lsl r6
    775c:	08ea0100 	stmiaeq	sl!, {r8}^
    7760:	0000004c 	andeq	r0, r0, ip, asr #32
    7764:	b2155101 	andslt	r5, r5, #1073741824	; 0x40000000
    7768:	0100002c 	tsteq	r0, ip, lsr #32
    776c:	004c08ea 	subeq	r0, ip, sl, ror #17
    7770:	38b00000 	ldmcc	r0!, {}	; <UNPREDICTABLE>
    7774:	20000000 	andcs	r0, r0, r0
    7778:	00002bad 	andeq	r2, r0, sp, lsr #23
    777c:	00091201 	andeq	r1, r9, r1, lsl #4
    7780:	44000000 	strmi	r0, [r0], #-0
    7784:	01000000 	mrseq	r0, (UNDEF: 0)
    7788:	0016339c 	mulseq	r6, ip, r3
    778c:	29e61500 	stmibcs	r6!, {r8, sl, ip}^
    7790:	12010000 	andne	r0, r1, #0
    7794:	0004ac09 	andeq	sl, r4, r9, lsl #24
    7798:	0038d100 	eorseq	sp, r8, r0, lsl #2
    779c:	2e561500 	cdpcs	5, 5, cr1, cr6, cr0, {0}
    77a0:	12010000 	andne	r0, r1, #0
    77a4:	00004c09 	andeq	r4, r0, r9, lsl #24
    77a8:	0038f100 	eorseq	pc, r8, r0, lsl #2
    77ac:	2f291500 	svccs	0x00291500
    77b0:	12010000 	andne	r0, r1, #0
    77b4:	00004c09 	andeq	r4, r0, r9, lsl #24
    77b8:	00392b00 	eorseq	r2, r9, r0, lsl #22
    77bc:	ee200000 	cdp	0, 2, cr0, cr0, cr0, {0}
    77c0:	0100002c 	tsteq	r0, ip, lsr #32
    77c4:	00000938 	andeq	r0, r0, r8, lsr r9
    77c8:	00180000 	andseq	r0, r8, r0
    77cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    77d0:	00001666 	andeq	r1, r0, r6, ror #12
    77d4:	0029e614 	eoreq	lr, r9, r4, lsl r6
    77d8:	09380100 	ldmdbeq	r8!, {r8}
    77dc:	000004ac 	andeq	r0, r0, ip, lsr #9
    77e0:	89145001 	ldmdbhi	r4, {r0, ip, lr}
    77e4:	0100001a 	tsteq	r0, sl, lsl r0
    77e8:	00cf0938 	sbceq	r0, pc, r8, lsr r9	; <UNPREDICTABLE>
    77ec:	51010000 	mrspl	r0, (UNDEF: 1)
    77f0:	29482000 	stmdbcs	r8, {sp}^
    77f4:	55010000 	strpl	r0, [r1, #-0]
    77f8:	00000009 	andeq	r0, r0, r9
    77fc:	00001800 	andeq	r1, r0, r0, lsl #16
    7800:	999c0100 	ldmibls	ip, {r8}
    7804:	14000016 	strne	r0, [r0], #-22
    7808:	000029e6 	andeq	r2, r0, r6, ror #19
    780c:	ac095501 	cfstr32ge	mvfx5, [r9], {1}
    7810:	01000004 	tsteq	r0, r4
    7814:	2d061450 	cfstrscs	mvf1, [r6, #-320]	; 0xfffffec0
    7818:	55010000 	strpl	r0, [r1, #-0]
    781c:	00004c09 	andeq	r4, r0, r9, lsl #24
    7820:	00510100 	subseq	r0, r1, r0, lsl #2
    7824:	002c5c20 	eoreq	r5, ip, r0, lsr #24
    7828:	09700100 	ldmdbeq	r0!, {r8}^
    782c:	00000000 	andeq	r0, r0, r0
    7830:	00000018 	andeq	r0, r0, r8, lsl r0
    7834:	16cc9c01 	strbne	r9, [ip], r1, lsl #24
    7838:	e6140000 	ldr	r0, [r4], -r0
    783c:	01000029 	tsteq	r0, r9, lsr #32
    7840:	04ac0970 	strteq	r0, [ip], #2416	; 0x970
    7844:	50010000 	andpl	r0, r1, r0
    7848:	001a8914 	andseq	r8, sl, r4, lsl r9
    784c:	09700100 	ldmdbeq	r0!, {r8}^
    7850:	000000cf 	andeq	r0, r0, pc, asr #1
    7854:	20005101 	andcs	r5, r0, r1, lsl #2
    7858:	00002f12 	andeq	r2, r0, r2, lsl pc
    785c:	00098d01 	andeq	r8, r9, r1, lsl #26
    7860:	16000000 	strne	r0, [r0], -r0
    7864:	01000000 	mrseq	r0, (UNDEF: 0)
    7868:	0017019c 	mulseq	r7, ip, r1
    786c:	29e61400 	stmibcs	r6!, {sl, ip}^
    7870:	8d010000 	stchi	0, cr0, [r1, #-0]
    7874:	0004ac09 	andeq	sl, r4, r9, lsl #24
    7878:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    787c:	00002970 	andeq	r2, r0, r0, ror r9
    7880:	4c098d01 	stcmi	13, cr8, [r9], {1}
    7884:	4c000000 	stcmi	0, cr0, [r0], {-0}
    7888:	00000039 	andeq	r0, r0, r9, lsr r0
    788c:	002b7e20 	eoreq	r7, fp, r0, lsr #28
    7890:	09ae0100 	stmibeq	lr!, {r8}
    7894:	00000000 	andeq	r0, r0, r0
    7898:	00000016 	andeq	r0, r0, r6, lsl r0
    789c:	17369c01 	ldrne	r9, [r6, -r1, lsl #24]!
    78a0:	e6140000 	ldr	r0, [r4], -r0
    78a4:	01000029 	tsteq	r0, r9, lsr #32
    78a8:	04ac09ae 	strteq	r0, [ip], #2478	; 0x9ae
    78ac:	50010000 	andpl	r0, r1, r0
    78b0:	002f3415 	eoreq	r3, pc, r5, lsl r4	; <UNPREDICTABLE>
    78b4:	09ae0100 	stmibeq	lr!, {r8}
    78b8:	0000004c 	andeq	r0, r0, ip, asr #32
    78bc:	0000396d 	andeq	r3, r0, sp, ror #18
    78c0:	2dce2000 	stclcs	0, cr2, [lr]
    78c4:	ca010000 	bgt	478cc <__Stack_Size+0x474cc>
    78c8:	00000009 	andeq	r0, r0, r9
    78cc:	00001600 	andeq	r1, r0, r0, lsl #12
    78d0:	6b9c0100 	blvs	fe707cd8 <SCS_BASE+0x1e6f9cd8>
    78d4:	14000017 	strne	r0, [r0], #-23
    78d8:	000029e6 	andeq	r2, r0, r6, ror #19
    78dc:	ac09ca01 	stcge	10, cr12, [r9], {1}
    78e0:	01000004 	tsteq	r0, r4
    78e4:	2a201550 	bcs	80ce2c <__Stack_Size+0x80ca2c>
    78e8:	ca010000 	bgt	478f0 <__Stack_Size+0x474f0>
    78ec:	00004c09 	andeq	r4, r0, r9, lsl #24
    78f0:	00398e00 	eorseq	r8, r9, r0, lsl #28
    78f4:	44200000 	strtmi	r0, [r0], #-0
    78f8:	01000031 	tsteq	r0, r1, lsr r0
    78fc:	000009e4 	andeq	r0, r0, r4, ror #19
    7900:	00160000 	andseq	r0, r6, r0
    7904:	9c010000 	stcls	0, cr0, [r1], {-0}
    7908:	000017a0 	andeq	r1, r0, r0, lsr #15
    790c:	0029e614 	eoreq	lr, r9, r4, lsl r6
    7910:	09e40100 	stmibeq	r4!, {r8}^
    7914:	000004ac 	andeq	r0, r0, ip, lsr #9
    7918:	c0155001 	andsgt	r5, r5, r1
    791c:	0100002f 	tsteq	r0, pc, lsr #32
    7920:	004c09e4 	subeq	r0, ip, r4, ror #19
    7924:	39af0000 	stmibcc	pc!, {}	; <UNPREDICTABLE>
    7928:	20000000 	andcs	r0, r0, r0
    792c:	00002bd3 	ldrdeq	r2, [r0], -r3
    7930:	0009f901 	andeq	pc, r9, r1, lsl #18
    7934:	04000000 	streq	r0, [r0], #-0
    7938:	01000000 	mrseq	r0, (UNDEF: 0)
    793c:	0017d39c 	mulseq	r7, ip, r3
    7940:	29e61400 	stmibcs	r6!, {sl, ip}^
    7944:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    7948:	0004ac09 	andeq	sl, r4, r9, lsl #24
    794c:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    7950:	00003200 	andeq	r3, r0, r0, lsl #4
    7954:	4c09f901 	stcmi	9, cr15, [r9], {1}
    7958:	01000000 	mrseq	r0, (UNDEF: 0)
    795c:	e8200051 	stmda	r0!, {r0, r4, r6}
    7960:	0100002f 	tsteq	r0, pc, lsr #32
    7964:	00000a0a 	andeq	r0, r0, sl, lsl #20
    7968:	00040000 	andeq	r0, r4, r0
    796c:	9c010000 	stcls	0, cr0, [r1], {-0}
    7970:	00001806 	andeq	r1, r0, r6, lsl #16
    7974:	0029e614 	eoreq	lr, r9, r4, lsl r6
    7978:	0a0a0100 	beq	287d80 <__Stack_Size+0x287980>
    797c:	000004ac 	andeq	r0, r0, ip, lsr #9
    7980:	ef145001 	svc	0x00145001
    7984:	0100002f 	tsteq	r0, pc, lsr #32
    7988:	004c0a0a 	subeq	r0, ip, sl, lsl #20
    798c:	51010000 	mrspl	r0, (UNDEF: 1)
    7990:	28012000 	stmdacs	r1, {sp}
    7994:	1c010000 	stcne	0, cr0, [r1], {-0}
    7998:	0000000a 	andeq	r0, r0, sl
    799c:	00000400 	andeq	r0, r0, r0, lsl #8
    79a0:	399c0100 	ldmibcc	ip, {r8}
    79a4:	14000018 	strne	r0, [r0], #-24
    79a8:	000029e6 	andeq	r2, r0, r6, ror #19
    79ac:	ac0a1c01 	stcge	12, cr1, [sl], {1}
    79b0:	01000004 	tsteq	r0, r4
    79b4:	28081450 	stmdacs	r8, {r4, r6, sl, ip}
    79b8:	1c010000 	stcne	0, cr0, [r1], {-0}
    79bc:	00004c0a 	andeq	r4, r0, sl, lsl #24
    79c0:	00510100 	subseq	r0, r1, r0, lsl #2
    79c4:	00281120 	eoreq	r1, r8, r0, lsr #2
    79c8:	0a2e0100 	beq	b87dd0 <__Stack_Size+0xb879d0>
    79cc:	00000000 	andeq	r0, r0, r0
    79d0:	00000004 	andeq	r0, r0, r4
    79d4:	186c9c01 	stmdane	ip!, {r0, sl, fp, ip, pc}^
    79d8:	e6140000 	ldr	r0, [r4], -r0
    79dc:	01000029 	tsteq	r0, r9, lsr #32
    79e0:	04ac0a2e 	strteq	r0, [ip], #2606	; 0xa2e
    79e4:	50010000 	andpl	r0, r1, r0
    79e8:	00281814 	eoreq	r1, r8, r4, lsl r8
    79ec:	0a2e0100 	beq	b87df4 <__Stack_Size+0xb879f4>
    79f0:	0000004c 	andeq	r0, r0, ip, asr #32
    79f4:	20005101 	andcs	r5, r0, r1, lsl #2
    79f8:	00002d49 	andeq	r2, r0, r9, asr #26
    79fc:	000a4001 	andeq	r4, sl, r1
    7a00:	04000000 	streq	r0, [r0], #-0
    7a04:	01000000 	mrseq	r0, (UNDEF: 0)
    7a08:	00189f9c 	mulseq	r8, ip, pc	; <UNPREDICTABLE>
    7a0c:	29e61400 	stmibcs	r6!, {sl, ip}^
    7a10:	40010000 	andmi	r0, r1, r0
    7a14:	0004ac0a 	andeq	sl, r4, sl, lsl #24
    7a18:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    7a1c:	00002d50 	andeq	r2, r0, r0, asr sp
    7a20:	4c0a4001 	stcmi	0, cr4, [sl], {1}
    7a24:	01000000 	mrseq	r0, (UNDEF: 0)
    7a28:	21200051 	qsubcs	r0, r1, r0
    7a2c:	01000028 	tsteq	r0, r8, lsr #32
    7a30:	00000a52 	andeq	r0, r0, r2, asr sl
    7a34:	00060000 	andeq	r0, r6, r0
    7a38:	9c010000 	stcls	0, cr0, [r1], {-0}
    7a3c:	000018d2 	ldrdeq	r1, [r0], -r2
    7a40:	0029e614 	eoreq	lr, r9, r4, lsl r6
    7a44:	0a520100 	beq	1487e4c <__Stack_Size+0x1487a4c>
    7a48:	000004ac 	andeq	r0, r0, ip, lsr #9
    7a4c:	28145001 	ldmdacs	r4, {r0, ip, lr}
    7a50:	01000028 	tsteq	r0, r8, lsr #32
    7a54:	004c0a52 	subeq	r0, ip, r2, asr sl
    7a58:	51010000 	mrspl	r0, (UNDEF: 1)
    7a5c:	2eb12000 	cdpcs	0, 11, cr2, cr1, cr0, {0}
    7a60:	6a010000 	bvs	47a68 <__Stack_Size+0x47668>
    7a64:	0000000a 	andeq	r0, r0, sl
    7a68:	00001600 	andeq	r1, r0, r0, lsl #12
    7a6c:	079c0100 	ldreq	r0, [ip, r0, lsl #2]
    7a70:	14000019 	strne	r0, [r0], #-25
    7a74:	000029e6 	andeq	r2, r0, r6, ror #19
    7a78:	ac0a6a01 	stcge	10, cr6, [sl], {1}
    7a7c:	01000004 	tsteq	r0, r4
    7a80:	2e2a1550 	mcrcs	5, 1, r1, cr10, cr0, {2}
    7a84:	6a010000 	bvs	47a8c <__Stack_Size+0x4768c>
    7a88:	00004c0a 	andeq	r4, r0, sl, lsl #24
    7a8c:	0039d000 	eorseq	sp, r9, r0
    7a90:	83200000 	teqhi	r0, #0
    7a94:	0100002c 	tsteq	r0, ip, lsr #32
    7a98:	00000a86 	andeq	r0, r0, r6, lsl #21
    7a9c:	001a0000 	andseq	r0, sl, r0
    7aa0:	9c010000 	stcls	0, cr0, [r1], {-0}
    7aa4:	0000193c 	andeq	r1, r0, ip, lsr r9
    7aa8:	0029e614 	eoreq	lr, r9, r4, lsl r6
    7aac:	0a860100 	beq	fe187eb4 <SCS_BASE+0x1e179eb4>
    7ab0:	000004ac 	andeq	r0, r0, ip, lsr #9
    7ab4:	2a155001 	bcs	55bac0 <__Stack_Size+0x55b6c0>
    7ab8:	0100002e 	tsteq	r0, lr, lsr #32
    7abc:	004c0a86 	subeq	r0, ip, r6, lsl #21
    7ac0:	39f10000 	ldmibcc	r1!, {}^	; <UNPREDICTABLE>
    7ac4:	20000000 	andcs	r0, r0, r0
    7ac8:	000030dd 	ldrdeq	r3, [r0], -sp
    7acc:	00028a01 	andeq	r8, r2, r1, lsl #20
    7ad0:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    7ad4:	01000000 	mrseq	r0, (UNDEF: 0)
    7ad8:	001a3e9c 	mulseq	sl, ip, lr
    7adc:	29e61500 	stmibcs	r6!, {r8, sl, ip}^
    7ae0:	8a010000 	bhi	47ae8 <__Stack_Size+0x476e8>
    7ae4:	0004ac02 	andeq	sl, r4, r2, lsl #24
    7ae8:	003a1200 	eorseq	r1, sl, r0, lsl #4
    7aec:	2d171500 	cfldr32cs	mvfx1, [r7, #-0]
    7af0:	8a010000 	bhi	47af8 <__Stack_Size+0x476f8>
    7af4:	00092402 	andeq	r2, r9, r2, lsl #8
    7af8:	003a7800 	eorseq	r7, sl, r0, lsl #16
    7afc:	2f731600 	svccs	0x00731600
    7b00:	8c010000 	stchi	0, cr0, [r1], {-0}
    7b04:	00004c02 	andeq	r4, r0, r2, lsl #24
    7b08:	003abd00 	eorseq	fp, sl, r0, lsl #26
    7b0c:	2e851600 	cdpcs	6, 8, cr1, cr5, cr0, {0}
    7b10:	8d010000 	stchi	0, cr0, [r1, #-0]
    7b14:	00004c02 	andeq	r4, r0, r2, lsl #24
    7b18:	003ae700 	eorseq	lr, sl, r0, lsl #14
    7b1c:	00001a00 	andeq	r1, r0, r0, lsl #20
    7b20:	04b20000 	ldrteq	r0, [r2], #0
    7b24:	19a60000 	stmibne	r6!, {}	; <UNPREDICTABLE>
    7b28:	011b0000 	tsteq	fp, r0
    7b2c:	00750250 	rsbseq	r0, r5, r0, asr r2
    7b30:	00001a00 	andeq	r1, r0, r0, lsl #20
    7b34:	18d20000 	ldmne	r2, {}^	; <UNPREDICTABLE>
    7b38:	19ba0000 	ldmibne	sl!, {}	; <UNPREDICTABLE>
    7b3c:	011b0000 	tsteq	fp, r0
    7b40:	00750250 	rsbseq	r0, r5, r0, asr r2
    7b44:	00001a00 	andeq	r1, r0, r0, lsl #20
    7b48:	05270000 	streq	r0, [r7, #-0]!
    7b4c:	19da0000 	ldmibne	sl, {}^	; <UNPREDICTABLE>
    7b50:	011b0000 	tsteq	fp, r0
    7b54:	00760252 	rsbseq	r0, r6, r2, asr r2
    7b58:	0251011b 	subseq	r0, r1, #-1073741818	; 0xc0000006
    7b5c:	011b0077 	tsteq	fp, r7, ror r0
    7b60:	00750250 	rsbseq	r0, r5, r0, asr r2
    7b64:	00001c00 	andeq	r1, r0, r0, lsl #24
    7b68:	19070000 	stmdbne	r7, {}	; <UNPREDICTABLE>
    7b6c:	19ef0000 	stmibne	pc!, {}^	; <UNPREDICTABLE>
    7b70:	011b0000 	tsteq	fp, r0
    7b74:	01f30350 	mvnseq	r0, r0, asr r3
    7b78:	00270050 	eoreq	r0, r7, r0, asr r0
    7b7c:	27000000 	strcs	r0, [r0, -r0]
    7b80:	1a000005 	bne	7b9c <__Stack_Size+0x779c>
    7b84:	00000000 	andeq	r0, r0, r0
    7b88:	00001907 	andeq	r1, r0, r7, lsl #18
    7b8c:	00001a0c 	andeq	r1, r0, ip, lsl #20
    7b90:	0250011b 	subseq	r0, r0, #-1073741818	; 0xc0000006
    7b94:	1a000075 	bne	7d70 <__Stack_Size+0x7970>
    7b98:	00000000 	andeq	r0, r0, r0
    7b9c:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
    7ba0:	00001a2c 	andeq	r1, r0, ip, lsr #20
    7ba4:	0252011b 	subseq	r0, r2, #-1073741818	; 0xc0000006
    7ba8:	011b0076 	tsteq	fp, r6, ror r0
    7bac:	00770251 	rsbseq	r0, r7, r1, asr r2
    7bb0:	0250011b 	subseq	r0, r0, #-1073741818	; 0xc0000006
    7bb4:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    7bb8:	00000000 	andeq	r0, r0, r0
    7bbc:	000018d2 	ldrdeq	r1, [r0], -r2
    7bc0:	0350011b 	cmpeq	r0, #-1073741818	; 0xc0000006
    7bc4:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    7bc8:	2ecd2000 	cdpcs	0, 12, cr2, cr13, cr0, {0}
    7bcc:	a2010000 	andge	r0, r1, #0
    7bd0:	0000000a 	andeq	r0, r0, sl
    7bd4:	00001600 	andeq	r1, r0, r0, lsl #12
    7bd8:	739c0100 	orrsvc	r0, ip, #0, 2
    7bdc:	1400001a 	strne	r0, [r0], #-26
    7be0:	000029e6 	andeq	r2, r0, r6, ror #19
    7be4:	ac0aa201 	sfmge	f2, 1, [sl], {1}
    7be8:	01000004 	tsteq	r0, r4
    7bec:	2e2a1550 	mcrcs	5, 1, r1, cr10, cr0, {2}
    7bf0:	a2010000 	andge	r0, r1, #0
    7bf4:	00004c0a 	andeq	r4, r0, sl, lsl #24
    7bf8:	003b1100 	eorseq	r1, fp, r0, lsl #2
    7bfc:	0c200000 	stceq	0, cr0, [r0], #-0
    7c00:	0100002a 	tsteq	r0, sl, lsr #32
    7c04:	00000abe 			; <UNDEFINED> instruction: 0x00000abe
    7c08:	001a0000 	andseq	r0, sl, r0
    7c0c:	9c010000 	stcls	0, cr0, [r1], {-0}
    7c10:	00001aa8 	andeq	r1, r0, r8, lsr #21
    7c14:	0029e614 	eoreq	lr, r9, r4, lsl r6
    7c18:	0abe0100 	beq	fef88020 <SCS_BASE+0x1ef7a020>
    7c1c:	000004ac 	andeq	r0, r0, ip, lsr #9
    7c20:	2a155001 	bcs	55bc2c <__Stack_Size+0x55b82c>
    7c24:	0100002e 	tsteq	r0, lr, lsr #32
    7c28:	004c0abe 	strheq	r0, [ip], #-174	; 0xffffff52
    7c2c:	3b320000 	blcc	c87c34 <__Stack_Size+0xc87834>
    7c30:	2a000000 	bcs	7c38 <__Stack_Size+0x7838>
    7c34:	00002d28 	andeq	r2, r0, r8, lsr #26
    7c38:	010c4b01 	tsteq	ip, r1, lsl #22
    7c3c:	00001b0a 	andeq	r1, r0, sl, lsl #22
    7c40:	0029e610 	eoreq	lr, r9, r0, lsl r6
    7c44:	0c4b0100 	stfeqe	f0, [fp], {-0}
    7c48:	000004ac 	andeq	r0, r0, ip, lsr #9
    7c4c:	002f5110 	eoreq	r5, pc, r0, lsl r1	; <UNPREDICTABLE>
    7c50:	0c4b0100 	stfeqe	f0, [fp], {-0}
    7c54:	0000004c 	andeq	r0, r0, ip, asr #32
    7c58:	002ee110 	eoreq	lr, lr, r0, lsl r1
    7c5c:	0c4b0100 	stfeqe	f0, [fp], {-0}
    7c60:	0000004c 	andeq	r0, r0, ip, asr #32
    7c64:	00312910 	eorseq	r2, r1, r0, lsl r9
    7c68:	0c4c0100 	stfeqe	f0, [ip], {-0}
    7c6c:	0000004c 	andeq	r0, r0, ip, asr #32
    7c70:	002e4d11 	eoreq	r4, lr, r1, lsl sp
    7c74:	0c4e0100 	stfeqe	f0, [lr], {-0}
    7c78:	0000004c 	andeq	r0, r0, ip, asr #32
    7c7c:	002b3d11 	eoreq	r3, fp, r1, lsl sp
    7c80:	0c4e0100 	stfeqe	f0, [lr], {-0}
    7c84:	0000004c 	andeq	r0, r0, ip, asr #32
    7c88:	706d742b 	rsbvc	r7, sp, fp, lsr #8
    7c8c:	0c4e0100 	stfeqe	f0, [lr], {-0}
    7c90:	0000004c 	andeq	r0, r0, ip, asr #32
    7c94:	30412a00 	subcc	r2, r1, r0, lsl #20
    7c98:	7a010000 	bvc	47ca0 <__Stack_Size+0x478a0>
    7c9c:	1b6c010c 	blne	1b080d4 <__Stack_Size+0x1b07cd4>
    7ca0:	e6100000 	ldr	r0, [r0], -r0
    7ca4:	01000029 	tsteq	r0, r9, lsr #32
    7ca8:	04ac0c7a 	strteq	r0, [ip], #3194	; 0xc7a
    7cac:	51100000 	tstpl	r0, r0
    7cb0:	0100002f 	tsteq	r0, pc, lsr #32
    7cb4:	004c0c7a 	subeq	r0, ip, sl, ror ip
    7cb8:	e1100000 	tst	r0, r0
    7cbc:	0100002e 	tsteq	r0, lr, lsr #32
    7cc0:	004c0c7a 	subeq	r0, ip, sl, ror ip
    7cc4:	29100000 	ldmdbcs	r0, {}	; <UNPREDICTABLE>
    7cc8:	01000031 	tsteq	r0, r1, lsr r0
    7ccc:	004c0c7b 	subeq	r0, ip, fp, ror ip
    7cd0:	4d110000 	ldcmi	0, cr0, [r1, #-0]
    7cd4:	0100002e 	tsteq	r0, lr, lsr #32
    7cd8:	004c0c7d 	subeq	r0, ip, sp, ror ip
    7cdc:	3d110000 	ldccc	0, cr0, [r1, #-0]
    7ce0:	0100002b 	tsteq	r0, fp, lsr #32
    7ce4:	004c0c7d 	subeq	r0, ip, sp, ror ip
    7ce8:	742b0000 	strtvc	r0, [fp], #-0
    7cec:	0100706d 	tsteq	r0, sp, rrx
    7cf0:	004c0c7d 	subeq	r0, ip, sp, ror ip
    7cf4:	20000000 	andcs	r0, r0, r0
    7cf8:	0000311e 	andeq	r3, r0, lr, lsl r1
    7cfc:	00024901 	andeq	r4, r2, r1, lsl #18
    7d00:	b6000000 	strlt	r0, [r0], -r0
    7d04:	01000000 	mrseq	r0, (UNDEF: 0)
    7d08:	001cc49c 	mulseq	ip, ip, r4
    7d0c:	29e61500 	stmibcs	r6!, {r8, sl, ip}^
    7d10:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    7d14:	0004ac02 	andeq	sl, r4, r2, lsl #24
    7d18:	003b5300 	eorseq	r5, fp, r0, lsl #6
    7d1c:	2d171500 	cfldr32cs	mvfx1, [r7, #-0]
    7d20:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    7d24:	00092402 	andeq	r2, r9, r2, lsl #8
    7d28:	003beb00 	eorseq	lr, fp, r0, lsl #22
    7d2c:	1aa82c00 	bne	fea12d34 <SCS_BASE+0x1ea04d34>
    7d30:	00000000 	andeq	r0, r0, r0
    7d34:	07c80000 	strbeq	r0, [r8, r0]
    7d38:	6a010000 	bvs	47d40 <__Stack_Size+0x47940>
    7d3c:	001bfc02 	andseq	pc, fp, r2, lsl #24
    7d40:	1ad92200 	bne	ff650548 <SCS_BASE+0x1f642548>
    7d44:	3c490000 	marcc	acc0, r0, r9
    7d48:	cd220000 	stcgt	0, cr0, [r2, #-0]
    7d4c:	5c00001a 	stcpl	0, cr0, [r0], {26}
    7d50:	2200003c 	andcs	r0, r0, #60	; 0x3c
    7d54:	00001ac1 	andeq	r1, r0, r1, asr #21
    7d58:	00003c6f 	andeq	r3, r0, pc, ror #24
    7d5c:	001ab522 	andseq	fp, sl, r2, lsr #10
    7d60:	003c8200 	eorseq	r8, ip, r0, lsl #4
    7d64:	07c82d00 	strbeq	r2, [r8, r0, lsl #26]
    7d68:	e5250000 	str	r0, [r5, #-0]!
    7d6c:	a300001a 	movwge	r0, #26
    7d70:	2500003c 	strcs	r0, [r0, #-60]	; 0x3c
    7d74:	00001af1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    7d78:	00003cde 	ldrdeq	r3, [r0], -lr
    7d7c:	001afd25 	andseq	pc, sl, r5, lsr #26
    7d80:	003d1400 	eorseq	r1, sp, r0, lsl #8
    7d84:	2c000000 	stccs	0, cr0, [r0], {-0}
    7d88:	00001b0a 	andeq	r1, r0, sl, lsl #22
    7d8c:	00000000 	andeq	r0, r0, r0
    7d90:	000007e8 	andeq	r0, r0, r8, ror #15
    7d94:	56027401 	strpl	r7, [r2], -r1, lsl #8
    7d98:	2200001c 	andcs	r0, r0, #28
    7d9c:	00001b3b 	andeq	r1, r0, fp, lsr fp
    7da0:	00003d37 	andeq	r3, r0, r7, lsr sp
    7da4:	001b2f22 	andseq	r2, fp, r2, lsr #30
    7da8:	003d4a00 	eorseq	r4, sp, r0, lsl #20
    7dac:	1b232200 	blne	8d05b4 <__Stack_Size+0x8d01b4>
    7db0:	3d5d0000 	ldclcc	0, cr0, [sp, #-0]
    7db4:	17220000 	strne	r0, [r2, -r0]!
    7db8:	7000001b 	andvc	r0, r0, fp, lsl r0
    7dbc:	2d00003d 	stccs	0, cr0, [r0, #-244]	; 0xffffff0c
    7dc0:	000007e8 	andeq	r0, r0, r8, ror #15
    7dc4:	001b4725 	andseq	r4, fp, r5, lsr #14
    7dc8:	003d9100 	eorseq	r9, sp, r0, lsl #2
    7dcc:	1b532500 	blne	14d11d4 <__Stack_Size+0x14d0dd4>
    7dd0:	3dd80000 	ldclcc	0, cr0, [r8]
    7dd4:	5f250000 	svcpl	0x00250000
    7dd8:	1300001b 	movwne	r0, #27
    7ddc:	0000003e 	andeq	r0, r0, lr, lsr r0
    7de0:	00001a00 	andeq	r1, r0, r0, lsl #20
    7de4:	04b20000 	ldrteq	r0, [r2], #0
    7de8:	1c6a0000 	stclne	0, cr0, [sl], #-0
    7dec:	011b0000 	tsteq	fp, r0
    7df0:	00740250 	rsbseq	r0, r4, r0, asr r2
    7df4:	00001c00 	andeq	r1, r0, r0, lsl #24
    7df8:	18d20000 	ldmne	r2, {}^	; <UNPREDICTABLE>
    7dfc:	1c7f0000 	ldclne	0, cr0, [pc], #-0	; 7e04 <__Stack_Size+0x7a04>
    7e00:	011b0000 	tsteq	fp, r0
    7e04:	01f30350 	mvnseq	r0, r0, asr r3
    7e08:	00270050 	eoreq	r0, r7, r0, asr r0
    7e0c:	27000000 	strcs	r0, [r0, -r0]
    7e10:	1c000005 	stcne	0, cr0, [r0], {5}
    7e14:	00000000 	andeq	r0, r0, r0
    7e18:	00001907 	andeq	r1, r0, r7, lsl #18
    7e1c:	00001c9d 	muleq	r0, sp, ip
    7e20:	0350011b 	cmpeq	r0, #-1073741818	; 0xc0000006
    7e24:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    7e28:	0000001c 	andeq	r0, r0, ip, lsl r0
    7e2c:	001a3e00 	andseq	r3, sl, r0, lsl #28
    7e30:	001cb200 	andseq	fp, ip, r0, lsl #4
    7e34:	50011b00 	andpl	r1, r1, r0, lsl #22
    7e38:	5001f303 	andpl	pc, r1, r3, lsl #6
    7e3c:	00001d00 	andeq	r1, r0, r0, lsl #26
    7e40:	1a730000 	bne	1cc7e48 <__Stack_Size+0x1cc7a48>
    7e44:	011b0000 	tsteq	fp, r0
    7e48:	01f30350 	mvnseq	r0, r0, asr r3
    7e4c:	20000050 	andcs	r0, r0, r0, asr r0
    7e50:	00002b45 	andeq	r2, r0, r5, asr #22
    7e54:	000ad801 	andeq	sp, sl, r1, lsl #16
    7e58:	10000000 	andne	r0, r0, r0
    7e5c:	01000000 	mrseq	r0, (UNDEF: 0)
    7e60:	001cf99c 	mulseq	ip, ip, r9
    7e64:	29e61400 	stmibcs	r6!, {sl, ip}^
    7e68:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    7e6c:	0004ac0a 	andeq	sl, r4, sl, lsl #24
    7e70:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    7e74:	000028b4 			; <UNDEFINED> instruction: 0x000028b4
    7e78:	4c0ad801 	stcmi	8, cr13, [sl], {1}
    7e7c:	36000000 	strcc	r0, [r0], -r0
    7e80:	0000003e 	andeq	r0, r0, lr, lsr r0
    7e84:	0029ac2e 	eoreq	sl, r9, lr, lsr #24
    7e88:	0aec0100 	beq	ffb08290 <SCS_BASE+0x1fafa290>
    7e8c:	0000004c 	andeq	r0, r0, ip, asr #32
    7e90:	00000000 	andeq	r0, r0, r0
    7e94:	00000006 	andeq	r0, r0, r6
    7e98:	1d249c01 	stcne	12, cr9, [r4, #-4]!
    7e9c:	e6150000 	ldr	r0, [r5], -r0
    7ea0:	01000029 	tsteq	r0, r9, lsr #32
    7ea4:	04ac0aec 	strteq	r0, [ip], #2796	; 0xaec
    7ea8:	3e570000 	cdpcc	0, 5, cr0, cr7, cr0, {0}
    7eac:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    7eb0:	00002a72 	andeq	r2, r0, r2, ror sl
    7eb4:	4c0afd01 	stcmi	13, cr15, [sl], {1}
    7eb8:	00000000 	andeq	r0, r0, r0
    7ebc:	06000000 	streq	r0, [r0], -r0
    7ec0:	01000000 	mrseq	r0, (UNDEF: 0)
    7ec4:	001d4f9c 	mulseq	sp, ip, pc	; <UNPREDICTABLE>
    7ec8:	29e61500 	stmibcs	r6!, {r8, sl, ip}^
    7ecc:	fd010000 	stc2	0, cr0, [r1, #-0]
    7ed0:	0004ac0a 	andeq	sl, r4, sl, lsl #24
    7ed4:	003e7800 	eorseq	r7, lr, r0, lsl #16
    7ed8:	822e0000 	eorhi	r0, lr, #0
    7edc:	0100002a 	tsteq	r0, sl, lsr #32
    7ee0:	004c0b0e 	subeq	r0, ip, lr, lsl #22
    7ee4:	00000000 	andeq	r0, r0, r0
    7ee8:	00060000 	andeq	r0, r6, r0
    7eec:	9c010000 	stcls	0, cr0, [r1], {-0}
    7ef0:	00001d7a 	andeq	r1, r0, sl, ror sp
    7ef4:	0029e615 	eoreq	lr, r9, r5, lsl r6
    7ef8:	0b0e0100 	bleq	388300 <__Stack_Size+0x387f00>
    7efc:	000004ac 	andeq	r0, r0, ip, lsr #9
    7f00:	00003e99 	muleq	r0, r9, lr
    7f04:	2a922e00 	bcs	fe49370c <SCS_BASE+0x1e48570c>
    7f08:	1f010000 	svcne	0x00010000
    7f0c:	00004c0b 	andeq	r4, r0, fp, lsl #24
    7f10:	00000000 	andeq	r0, r0, r0
    7f14:	00000800 	andeq	r0, r0, r0, lsl #16
    7f18:	a59c0100 	ldrge	r0, [ip, #256]	; 0x100
    7f1c:	1500001d 	strne	r0, [r0, #-29]
    7f20:	000029e6 	andeq	r2, r0, r6, ror #19
    7f24:	ac0b1f01 	stcge	15, cr1, [fp], {1}
    7f28:	ba000004 	blt	7f40 <__Stack_Size+0x7b40>
    7f2c:	0000003e 	andeq	r0, r0, lr, lsr r0
    7f30:	002da12e 	eoreq	sl, sp, lr, lsr #2
    7f34:	0b2f0100 	bleq	bc833c <__Stack_Size+0xbc7f3c>
    7f38:	0000004c 	andeq	r0, r0, ip, asr #32
    7f3c:	00000000 	andeq	r0, r0, r0
    7f40:	00000006 	andeq	r0, r0, r6
    7f44:	1dd09c01 	ldclne	12, cr9, [r0, #4]
    7f48:	e6150000 	ldr	r0, [r5], -r0
    7f4c:	01000029 	tsteq	r0, r9, lsr #32
    7f50:	04ac0b2f 	strteq	r0, [ip], #2863	; 0xb2f
    7f54:	3edb0000 	cdpcc	0, 13, cr0, cr11, cr0, {0}
    7f58:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    7f5c:	00002c2b 	andeq	r2, r0, fp, lsr #24
    7f60:	4c0b3f01 	stcmi	15, cr3, [fp], {1}
    7f64:	00000000 	andeq	r0, r0, r0
    7f68:	06000000 	streq	r0, [r0], -r0
    7f6c:	01000000 	mrseq	r0, (UNDEF: 0)
    7f70:	001dfb9c 	mulseq	sp, ip, fp
    7f74:	29e61500 	stmibcs	r6!, {r8, sl, ip}^
    7f78:	3f010000 	svccc	0x00010000
    7f7c:	0004ac0b 	andeq	sl, r4, fp, lsl #24
    7f80:	003efc00 	eorseq	pc, lr, r0, lsl #24
    7f84:	8c2e0000 	stchi	0, cr0, [lr], #-0
    7f88:	01000028 	tsteq	r0, r8, lsr #32
    7f8c:	00a40b5d 	adceq	r0, r4, sp, asr fp
    7f90:	00000000 	andeq	r0, r0, r0
    7f94:	000c0000 	andeq	r0, ip, r0
    7f98:	9c010000 	stcls	0, cr0, [r1], {-0}
    7f9c:	00001e44 	andeq	r1, r0, r4, asr #28
    7fa0:	0029e615 	eoreq	lr, r9, r5, lsl r6
    7fa4:	0b5d0100 	bleq	17483ac <__Stack_Size+0x1747fac>
    7fa8:	000004ac 	andeq	r0, r0, ip, lsr #9
    7fac:	00003f1d 	andeq	r3, r0, sp, lsl pc
    7fb0:	002bbc14 	eoreq	fp, fp, r4, lsl ip
    7fb4:	0b5d0100 	bleq	17483bc <__Stack_Size+0x1747fbc>
    7fb8:	0000004c 	andeq	r0, r0, ip, asr #32
    7fbc:	53165101 	tstpl	r6, #1073741824	; 0x40000000
    7fc0:	0100001c 	tsteq	r0, ip, lsl r0
    7fc4:	00af0b5f 	adceq	r0, pc, pc, asr fp	; <UNPREDICTABLE>
    7fc8:	3f3e0000 	svccc	0x003e0000
    7fcc:	20000000 	andcs	r0, r0, r0
    7fd0:	00000232 	andeq	r0, r0, r2, lsr r2
    7fd4:	040b8601 	streq	r8, [fp], #-1537	; 0x601
    7fd8:	08080017 	stmdaeq	r8, {r0, r1, r2, r4}
    7fdc:	01000000 	mrseq	r0, (UNDEF: 0)
    7fe0:	001e799c 	mulseq	lr, ip, r9
    7fe4:	29e61400 	stmibcs	r6!, {sl, ip}^
    7fe8:	86010000 	strhi	r0, [r1], -r0
    7fec:	0004ac0b 	andeq	sl, r4, fp, lsl #24
    7ff0:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    7ff4:	00002bbc 			; <UNDEFINED> instruction: 0x00002bbc
    7ff8:	4c0b8601 	stcmi	6, cr8, [fp], {1}
    7ffc:	66000000 	strvs	r0, [r0], -r0
    8000:	0000003f 	andeq	r0, r0, pc, lsr r0
    8004:	0030ec2e 	eorseq	lr, r0, lr, lsr #24
    8008:	0ba20100 	bleq	fe888410 <SCS_BASE+0x1e87a410>
    800c:	000000af 	andeq	r0, r0, pc, lsr #1
    8010:	00000000 	andeq	r0, r0, r0
    8014:	00000016 	andeq	r0, r0, r6, lsl r0
    8018:	1ee29c01 	cdpne	12, 14, cr9, cr2, cr1, {0}
    801c:	e6150000 	ldr	r0, [r5], -r0
    8020:	01000029 	tsteq	r0, r9, lsr #32
    8024:	04ac0ba2 	strteq	r0, [ip], #2978	; 0xba2
    8028:	3f870000 	svccc	0x00870000
    802c:	03140000 	tsteq	r4, #0
    8030:	01000031 	tsteq	r0, r1, lsr r0
    8034:	004c0ba2 	subeq	r0, ip, r2, lsr #23
    8038:	51010000 	mrspl	r0, (UNDEF: 1)
    803c:	001c5316 	andseq	r5, ip, r6, lsl r3
    8040:	0ba40100 	bleq	fe908448 <SCS_BASE+0x1e8fa448>
    8044:	000000af 	andeq	r0, r0, pc, lsr #1
    8048:	00003fa8 	andeq	r3, r0, r8, lsr #31
    804c:	001c5416 	andseq	r5, ip, r6, lsl r4
    8050:	0ba50100 	bleq	fe948458 <SCS_BASE+0x1e93a458>
    8054:	0000004c 	andeq	r0, r0, ip, asr #32
    8058:	00003fc7 	andeq	r3, r0, r7, asr #31
    805c:	00290516 	eoreq	r0, r9, r6, lsl r5
    8060:	0ba50100 	bleq	fe948468 <SCS_BASE+0x1e93a468>
    8064:	0000004c 	andeq	r0, r0, ip, asr #32
    8068:	00003feb 	andeq	r3, r0, fp, ror #31
    806c:	0e602000 	cdpeq	0, 6, cr2, cr0, cr0, {0}
    8070:	cd010000 	stcgt	0, cr0, [r1, #-0]
    8074:	00170c0b 	andseq	r0, r7, fp, lsl #24
    8078:	00000808 	andeq	r0, r0, r8, lsl #16
    807c:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
    8080:	1400001f 	strne	r0, [r0], #-31
    8084:	000029e6 	andeq	r2, r0, r6, ror #19
    8088:	ac0bcd01 	stcge	13, cr12, [fp], {1}
    808c:	01000004 	tsteq	r0, r4
    8090:	31031550 	tstcc	r3, r0, asr r5
    8094:	cd010000 	stcgt	0, cr0, [r1, #-0]
    8098:	00004c0b 	andeq	r4, r0, fp, lsl #24
    809c:	00400f00 	subeq	r0, r0, r0, lsl #30
    80a0:	b72f0000 	strlt	r0, [pc, -r0]!
    80a4:	05000025 	streq	r0, [r0, #-37]	; 0x25
    80a8:	1f2e0115 	svcne	0x002e0115
    80ac:	3a300000 	bcc	c080b4 <__Stack_Size+0xc07cb4>
    80b0:	30000000 	andcc	r0, r0, r0
    80b4:	000000cf 	andeq	r0, r0, pc, asr #1
    80b8:	1f6e3100 	svcne	0x006e3100
    80bc:	14050000 	strne	r0, [r5], #-0
    80c0:	003a3001 	eorseq	r3, sl, r1
    80c4:	cf300000 	svcgt	0x00300000
    80c8:	00000000 	andeq	r0, r0, r0
    80cc:	00020700 	andeq	r0, r2, r0, lsl #14
    80d0:	91000400 	tstls	r0, r0, lsl #8
    80d4:	0400001a 	streq	r0, [r0], #-26
    80d8:	0002f401 	andeq	pc, r2, r1, lsl #8
    80dc:	319e0100 	orrscc	r0, lr, r0, lsl #2
    80e0:	03ec0000 	mvneq	r0, #0
    80e4:	0ad00000 	beq	ff4080ec <SCS_BASE+0x1f3fa0ec>
    80e8:	00000000 	andeq	r0, r0, r0
    80ec:	26020000 	strcs	r0, [r2], -r0
    80f0:	04020000 	streq	r0, [r2], #-0
    80f4:	00082d05 	andeq	r2, r8, r5, lsl #26
    80f8:	05020200 	streq	r0, [r2, #-512]	; 0x200
    80fc:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    8100:	de060102 	adfles	f0, f6, f2
    8104:	03000009 	movweq	r0, #9
    8108:	00323375 	eorseq	r3, r2, r5, ror r3
    810c:	00452702 	subeq	r2, r5, r2, lsl #14
    8110:	04020000 	streq	r0, [r2], #-0
    8114:	00093a07 	andeq	r3, r9, r7, lsl #20
    8118:	07020200 	streq	r0, [r2, -r0, lsl #4]
    811c:	00000bd7 	ldrdeq	r0, [r0], -r7
    8120:	00387503 	eorseq	r7, r8, r3, lsl #10
    8124:	005d2902 	subseq	r2, sp, r2, lsl #18
    8128:	01020000 	mrseq	r0, (UNDEF: 2)
    812c:	0009dc08 	andeq	sp, r9, r8, lsl #24
    8130:	04590400 	ldrbeq	r0, [r9], #-1024	; 0x400
    8134:	2f020000 	svccs	0x00020000
    8138:	0000006f 	andeq	r0, r0, pc, rrx
    813c:	00004505 	andeq	r4, r0, r5, lsl #10
    8140:	239e0400 	orrscs	r0, lr, #0, 8
    8144:	33020000 	movwcc	r0, #8192	; 0x2000
    8148:	0000007f 	andeq	r0, r0, pc, ror r0
    814c:	00006f06 	andeq	r6, r0, r6, lsl #30
    8150:	02010700 	andeq	r0, r1, #0, 14
    8154:	0000993c 	andeq	r9, r0, ip, lsr r9
    8158:	1eca0800 	cdpne	8, 12, cr0, cr10, cr0, {0}
    815c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    8160:	00544553 	subseq	r4, r4, r3, asr r5
    8164:	8e040001 	cdphi	0, 0, cr0, cr4, cr1, {0}
    8168:	02000007 	andeq	r0, r0, #7
    816c:	0000843c 	andeq	r8, r0, ip, lsr r4
    8170:	02010700 	andeq	r0, r1, #0, 14
    8174:	0000b93e 	andeq	fp, r0, lr, lsr r9
    8178:	053f0800 	ldreq	r0, [pc, #-2048]!	; 7980 <__Stack_Size+0x7580>
    817c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8180:	00000917 	andeq	r0, r0, r7, lsl r9
    8184:	b4040001 	strlt	r0, [r4], #-1
    8188:	02000000 	andeq	r0, r0, #0
    818c:	0000a43e 	andeq	sl, r0, lr, lsr r4
    8190:	07040200 	streq	r0, [r4, -r0, lsl #4]
    8194:	00000931 	andeq	r0, r0, r1, lsr r9
    8198:	0203100a 	andeq	r1, r3, #10
    819c:	00010902 	andeq	r0, r1, r2, lsl #18
    81a0:	31f30b00 	mvnscc	r0, r0, lsl #22
    81a4:	04030000 	streq	r0, [r3], #-0
    81a8:	00006402 	andeq	r6, r0, r2, lsl #8
    81ac:	200b0000 	andcs	r0, fp, r0
    81b0:	03000032 	movweq	r0, #50	; 0x32
    81b4:	00640205 	rsbeq	r0, r4, r5, lsl #4
    81b8:	0c040000 	stceq	0, cr0, [r4], {-0}
    81bc:	004c4156 	subeq	r4, ip, r6, asr r1
    81c0:	64020603 	strvs	r0, [r2], #-1539	; 0x603
    81c4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    81c8:	0031dd0b 	eorseq	sp, r1, fp, lsl #26
    81cc:	02070300 	andeq	r0, r7, #0, 6
    81d0:	00000074 	andeq	r0, r0, r4, ror r0
    81d4:	e30d000c 	movw	r0, #53260	; 0xd00c
    81d8:	03000031 	movweq	r0, #49	; 0x31
    81dc:	00cb0208 	sbceq	r0, fp, r8, lsl #4
    81e0:	080e0000 	stmdaeq	lr, {}	; <UNPREDICTABLE>
    81e4:	01000032 	tsteq	r0, r2, lsr r0
    81e8:	0000002b 	andeq	r0, r0, fp, lsr #32
    81ec:	00001800 	andeq	r1, r0, r0, lsl #16
    81f0:	389c0100 	ldmcc	ip, {r8}
    81f4:	0f000001 	svceq	0x00000001
    81f8:	00003225 	andeq	r3, r0, r5, lsr #4
    81fc:	003a2b01 	eorseq	r2, sl, r1, lsl #22
    8200:	50010000 	andpl	r0, r1, r0
    8204:	0a140e00 	beq	50ba0c <__Stack_Size+0x50b60c>
    8208:	42010000 	andmi	r0, r1, #0
    820c:	08001714 	stmdaeq	r0, {r2, r4, r8, r9, sl, ip}
    8210:	0000000c 	andeq	r0, r0, ip
    8214:	015b9c01 	cmpeq	fp, r1, lsl #24
    8218:	3b0f0000 	blcc	3c8220 <__Stack_Size+0x3c7e20>
    821c:	01000006 	tsteq	r0, r6
    8220:	00003a42 	andeq	r3, r0, r2, asr #20
    8224:	00500100 	subseq	r0, r0, r0, lsl #2
    8228:	00089c0e 	andeq	r9, r8, lr, lsl #24
    822c:	20550100 	subscs	r0, r5, r0, lsl #2
    8230:	28080017 	stmdacs	r8, {r0, r1, r2, r4}
    8234:	01000000 	mrseq	r0, (UNDEF: 0)
    8238:	0001809c 	muleq	r1, ip, r0
    823c:	31f81000 	mvnscc	r1, r0
    8240:	55010000 	strpl	r0, [r1, #-0]
    8244:	0000003a 	andeq	r0, r0, sl, lsr r0
    8248:	00004030 	andeq	r4, r0, r0, lsr r0
    824c:	07650e00 	strbeq	r0, [r5, -r0, lsl #28]!
    8250:	70010000 	andvc	r0, r1, r0
    8254:	08001748 	stmdaeq	r0, {r3, r6, r8, r9, sl, ip}
    8258:	00000018 	andeq	r0, r0, r8, lsl r0
    825c:	01a39c01 			; <UNDEFINED> instruction: 0x01a39c01
    8260:	890f0000 	stmdbhi	pc, {}	; <UNPREDICTABLE>
    8264:	0100001a 	tsteq	r0, sl, lsl r0
    8268:	0000b970 	andeq	fp, r0, r0, ror r9
    826c:	00500100 	subseq	r0, r0, r0, lsl #2
    8270:	00318b11 	eorseq	r8, r1, r1, lsl fp
    8274:	3a860100 	bcc	fe18867c <SCS_BASE+0x1e17a67c>
    8278:	00000000 	andeq	r0, r0, r0
    827c:	0c000000 	stceq	0, cr0, [r0], {-0}
    8280:	01000000 	mrseq	r0, (UNDEF: 0)
    8284:	31ba129c 			; <UNDEFINED> instruction: 0x31ba129c
    8288:	96010000 	strls	r0, [r1], -r0
    828c:	00000099 	muleq	r0, r9, r0
    8290:	00000000 	andeq	r0, r0, r0
    8294:	0000001c 	andeq	r0, r0, ip, lsl r0
    8298:	d0109c01 	andsle	r9, r0, r1, lsl #24
    829c:	01000031 	tsteq	r0, r1, lsr r0
    82a0:	00005396 	muleq	r0, r6, r3
    82a4:	00406b00 	subeq	r6, r0, r0, lsl #22
    82a8:	260a1300 	strcs	r1, [sl], -r0, lsl #6
    82ac:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    82b0:	0000003a 	andeq	r0, r0, sl, lsr r0
    82b4:	0000408c 	andeq	r4, r0, ip, lsl #1
    82b8:	706d7414 	rsbvc	r7, sp, r4, lsl r4
    82bc:	3a980100 	bcc	fe6086c4 <SCS_BASE+0x1e5fa6c4>
    82c0:	ab000000 	blge	82c8 <__Stack_Size+0x7ec8>
    82c4:	13000040 	movwne	r0, #64	; 0x40
    82c8:	00001c53 	andeq	r1, r0, r3, asr ip
    82cc:	00999901 	addseq	r9, r9, r1, lsl #18
    82d0:	40d80000 	sbcsmi	r0, r8, r0
    82d4:	00000000 	andeq	r0, r0, r0
    82d8:	00000a28 	andeq	r0, r0, r8, lsr #20
    82dc:	1bb90004 	blne	fee482f4 <SCS_BASE+0x1ee3a2f4>
    82e0:	01040000 	mrseq	r0, (UNDEF: 4)
    82e4:	000002f4 	strdeq	r0, [r0], -r4
    82e8:	0033c901 	eorseq	ip, r3, r1, lsl #18
    82ec:	0003ec00 	andeq	lr, r3, r0, lsl #24
    82f0:	000b0800 	andeq	r0, fp, r0, lsl #16
    82f4:	00000000 	andeq	r0, r0, r0
    82f8:	0026e400 	eoreq	lr, r6, r0, lsl #8
    82fc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    8300:	0000093f 	andeq	r0, r0, pc, lsr r9
    8304:	2d050402 	cfstrscs	mvf0, [r5, #-8]
    8308:	02000008 	andeq	r0, r0, #8
    830c:	07ff0502 	ldrbeq	r0, [pc, r2, lsl #10]!
    8310:	01020000 	mrseq	r0, (UNDEF: 2)
    8314:	0009de06 	andeq	sp, r9, r6, lsl #28
    8318:	33750300 	cmncc	r5, #0, 6
    831c:	27020032 	smladxcs	r2, r2, r0, r0
    8320:	0000004c 	andeq	r0, r0, ip, asr #32
    8324:	3a070402 	bcc	1c9334 <__Stack_Size+0x1c8f34>
    8328:	03000009 	movweq	r0, #9
    832c:	00363175 	eorseq	r3, r6, r5, ror r1
    8330:	005e2802 	subseq	r2, lr, r2, lsl #16
    8334:	02020000 	andeq	r0, r2, #0
    8338:	000bd707 	andeq	sp, fp, r7, lsl #14
    833c:	38750300 	ldmdacc	r5!, {r8, r9}^
    8340:	6f290200 	svcvs	0x00290200
    8344:	02000000 	andeq	r0, r0, #0
    8348:	09dc0801 	ldmibeq	ip, {r0, fp}^
    834c:	59040000 	stmdbpl	r4, {}	; <UNPREDICTABLE>
    8350:	02000004 	andeq	r0, r0, #4
    8354:	0000812f 	andeq	r8, r0, pc, lsr #2
    8358:	004c0500 	subeq	r0, ip, r0, lsl #10
    835c:	45040000 	strmi	r0, [r4, #-0]
    8360:	02000002 	andeq	r0, r0, #2
    8364:	00009130 	andeq	r9, r0, r0, lsr r1
    8368:	005e0500 	subseq	r0, lr, r0, lsl #10
    836c:	01060000 	mrseq	r0, (UNDEF: 6)
    8370:	00ab3c02 	adceq	r3, fp, r2, lsl #24
    8374:	ca070000 	bgt	1c837c <__Stack_Size+0x1c7f7c>
    8378:	0000001e 	andeq	r0, r0, lr, lsl r0
    837c:	54455308 	strbpl	r5, [r5], #-776	; 0x308
    8380:	04000100 	streq	r0, [r0], #-256	; 0x100
    8384:	0000078e 	andeq	r0, r0, lr, lsl #15
    8388:	00963c02 	addseq	r3, r6, r2, lsl #24
    838c:	22040000 	andcs	r0, r4, #0
    8390:	02000025 	andeq	r0, r0, #37	; 0x25
    8394:	0000963c 	andeq	r9, r0, ip, lsr r6
    8398:	02010600 	andeq	r0, r1, #0, 12
    839c:	0000d63e 	andeq	sp, r0, lr, lsr r6
    83a0:	053f0700 	ldreq	r0, [pc, #-1792]!	; 7ca8 <__Stack_Size+0x78a8>
    83a4:	07000000 	streq	r0, [r0, -r0]
    83a8:	00000917 	andeq	r0, r0, r7, lsl r9
    83ac:	b4040001 	strlt	r0, [r4], #-1
    83b0:	02000000 	andeq	r0, r0, #0
    83b4:	0000c13e 	andeq	ip, r0, lr, lsr r1
    83b8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    83bc:	00000931 	andeq	r0, r0, r1, lsr r9
    83c0:	38031c09 	stmdacc	r3, {r0, r3, sl, fp, ip}
    83c4:	0001a602 	andeq	sl, r1, r2, lsl #12
    83c8:	52530a00 	subspl	r0, r3, #0, 20
    83cc:	023a0300 	eorseq	r0, sl, #0, 6
    83d0:	00000086 	andeq	r0, r0, r6, lsl #1
    83d4:	07b90b00 	ldreq	r0, [r9, r0, lsl #22]!
    83d8:	3b030000 	blcc	c83e0 <__Stack_Size+0xc7fe0>
    83dc:	00005302 	andeq	r5, r0, r2, lsl #6
    83e0:	440a0200 	strmi	r0, [sl], #-512	; 0x200
    83e4:	3c030052 	stccc	0, cr0, [r3], {82}	; 0x52
    83e8:	00008602 	andeq	r8, r0, r2, lsl #12
    83ec:	c30b0400 	movwgt	r0, #46080	; 0xb400
    83f0:	03000007 	movweq	r0, #7
    83f4:	0053023d 	subseq	r0, r3, sp, lsr r2
    83f8:	0a060000 	beq	188400 <__Stack_Size+0x188000>
    83fc:	00525242 	subseq	r5, r2, r2, asr #4
    8400:	86023e03 	strhi	r3, [r2], -r3, lsl #28
    8404:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8408:	0007cd0b 	andeq	ip, r7, fp, lsl #26
    840c:	023f0300 	eorseq	r0, pc, #0, 6
    8410:	00000053 	andeq	r0, r0, r3, asr r0
    8414:	52430a0a 	subpl	r0, r3, #40960	; 0xa000
    8418:	40030031 	andmi	r0, r3, r1, lsr r0
    841c:	00008602 	andeq	r8, r0, r2, lsl #12
    8420:	d70b0c00 	strle	r0, [fp, -r0, lsl #24]
    8424:	03000007 	movweq	r0, #7
    8428:	00530241 	subseq	r0, r3, r1, asr #4
    842c:	0a0e0000 	beq	388434 <__Stack_Size+0x388034>
    8430:	00325243 	eorseq	r5, r2, r3, asr #4
    8434:	86024203 	strhi	r4, [r2], -r3, lsl #4
    8438:	10000000 	andne	r0, r0, r0
    843c:	0007e10b 	andeq	lr, r7, fp, lsl #2
    8440:	02430300 	subeq	r0, r3, #0, 6
    8444:	00000053 	andeq	r0, r0, r3, asr r0
    8448:	52430a12 	subpl	r0, r3, #73728	; 0x12000
    844c:	44030033 	strmi	r0, [r3], #-51	; 0x33
    8450:	00008602 	andeq	r8, r0, r2, lsl #12
    8454:	eb0b1400 	bl	2cd45c <__Stack_Size+0x2cd05c>
    8458:	03000007 	movweq	r0, #7
    845c:	00530245 	subseq	r0, r3, r5, asr #4
    8460:	0b160000 	bleq	588468 <__Stack_Size+0x588068>
    8464:	000001ce 	andeq	r0, r0, lr, asr #3
    8468:	86024603 	strhi	r4, [r2], -r3, lsl #12
    846c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    8470:	0007f50b 	andeq	pc, r7, fp, lsl #10
    8474:	02470300 	subeq	r0, r7, #0, 6
    8478:	00000053 	andeq	r0, r0, r3, asr r0
    847c:	ab0c001a 	blge	3084ec <__Stack_Size+0x3080ec>
    8480:	03000004 	movweq	r0, #4
    8484:	00e80248 	rsceq	r0, r8, r8, asr #4
    8488:	100d0000 	andne	r0, sp, r0
    848c:	02031a04 	andeq	r1, r3, #4, 20	; 0x4000
    8490:	0c0e0000 	stceq	0, cr0, [lr], {-0}
    8494:	04000002 	streq	r0, [r0], #-2
    8498:	0000411c 	andeq	r4, r0, ip, lsl r1
    849c:	0f0e0000 	svceq	0x000e0000
    84a0:	04000001 	streq	r0, [r0], #-1
    84a4:	0000531d 	andeq	r5, r0, sp, lsl r3
    84a8:	4e0e0400 	cfcpysmi	mvf0, mvf14
    84ac:	04000001 	streq	r0, [r0], #-1
    84b0:	0000531e 	andeq	r5, r0, lr, lsl r3
    84b4:	220e0600 	andcs	r0, lr, #0, 12
    84b8:	0400000b 	streq	r0, [r0], #-11
    84bc:	0000531f 	andeq	r5, r0, pc, lsl r3
    84c0:	a20e0800 	andge	r0, lr, #0, 16
    84c4:	04000005 	streq	r0, [r0], #-5
    84c8:	00005320 	andeq	r5, r0, r0, lsr #6
    84cc:	c00e0a00 	andgt	r0, lr, r0, lsl #20
    84d0:	04000005 	streq	r0, [r0], #-5
    84d4:	00005321 	andeq	r5, r0, r1, lsr #6
    84d8:	04000c00 	streq	r0, [r0], #-3072	; 0xc00
    84dc:	00000af5 	strdeq	r0, [r0], -r5
    84e0:	01b22204 			; <UNDEFINED> instruction: 0x01b22204
    84e4:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
    84e8:	02472504 	subeq	r2, r7, #4, 10	; 0x1000000
    84ec:	1a0e0000 	bne	3884f4 <__Stack_Size+0x3880f4>
    84f0:	04000034 	streq	r0, [r0], #-52	; 0x34
    84f4:	00005327 	andeq	r5, r0, r7, lsr #6
    84f8:	c80e0000 	stmdagt	lr, {}	; <UNPREDICTABLE>
    84fc:	04000034 	streq	r0, [r0], #-52	; 0x34
    8500:	00005328 	andeq	r5, r0, r8, lsr #6
    8504:	460e0200 	strmi	r0, [lr], -r0, lsl #4
    8508:	04000032 	streq	r0, [r0], #-50	; 0x32
    850c:	00005329 	andeq	r5, r0, r9, lsr #6
    8510:	da0e0400 	ble	389518 <__Stack_Size+0x389118>
    8514:	04000034 	streq	r0, [r0], #-52	; 0x34
    8518:	0000532a 	andeq	r5, r0, sl, lsr #6
    851c:	04000600 	streq	r0, [r0], #-1536	; 0x600
    8520:	0000327f 	andeq	r3, r0, pc, ror r2
    8524:	020e2b04 	andeq	r2, lr, #4, 22	; 0x1000
    8528:	140d0000 	strne	r0, [sp], #-0
    852c:	02971905 	addseq	r1, r7, #81920	; 0x14000
    8530:	d60e0000 	strle	r0, [lr], -r0
    8534:	05000026 	streq	r0, [r0, #-38]	; 0x26
    8538:	0000411b 	andeq	r4, r0, fp, lsl r1
    853c:	810e0000 	mrshi	r0, (UNDEF: 14)
    8540:	05000025 	streq	r0, [r0, #-37]	; 0x25
    8544:	0000411c 	andeq	r4, r0, ip, lsl r1
    8548:	2e0e0400 	cfcpyscs	mvf0, mvf14
    854c:	05000027 	streq	r0, [r0, #-39]	; 0x27
    8550:	0000411d 	andeq	r4, r0, sp, lsl r1
    8554:	f20e0800 	vadd.i8	d0, d14, d0
    8558:	05000026 	streq	r0, [r0, #-38]	; 0x26
    855c:	0000411e 	andeq	r4, r0, lr, lsl r1
    8560:	5c0e0c00 	stcpl	12, cr0, [lr], {-0}
    8564:	05000026 	streq	r0, [r0, #-38]	; 0x26
    8568:	0000411f 	andeq	r4, r0, pc, lsl r1
    856c:	04001000 	streq	r1, [r0], #-0
    8570:	00002549 	andeq	r2, r0, r9, asr #10
    8574:	02522005 	subseq	r2, r2, #5
    8578:	340f0000 	strcc	r0, [pc], #-0	; 8580 <__Stack_Size+0x8180>
    857c:	0100000a 	tsteq	r0, sl
    8580:	0017605a 	andseq	r6, r7, sl, asr r0
    8584:	00009408 	andeq	r9, r0, r8, lsl #8
    8588:	729c0100 	addsvc	r0, ip, #0, 2
    858c:	10000003 	andne	r0, r0, r3
    8590:	000033c2 	andeq	r3, r0, r2, asr #7
    8594:	03725a01 	cmneq	r2, #4096	; 0x1000
    8598:	41170000 	tstmi	r7, r0
    859c:	94110000 	ldrls	r0, [r1], #-0
    85a0:	e5080017 	str	r0, [r8, #-23]
    85a4:	e0000009 	and	r0, r0, r9
    85a8:	12000002 	andne	r0, r0, #2
    85ac:	31015101 	tstcc	r1, r1, lsl #2
    85b0:	03500112 	cmpeq	r0, #-2147483644	; 0x80000004
    85b4:	0040000a 	subeq	r0, r0, sl
    85b8:	0017a213 	andseq	sl, r7, r3, lsl r2
    85bc:	0009e508 	andeq	lr, r9, r8, lsl #10
    85c0:	0002fa00 	andeq	pc, r2, r0, lsl #20
    85c4:	51011200 	mrspl	r1, R9_usr
    85c8:	01123001 	tsteq	r2, r1
    85cc:	000a0350 	andeq	r0, sl, r0, asr r3
    85d0:	ac110040 	ldcge	0, cr0, [r1], {64}	; 0x40
    85d4:	fc080017 	stc2	0, cr0, [r8], {23}
    85d8:	14000009 	strne	r0, [r0], #-9
    85dc:	12000003 	andne	r0, r0, #3
    85e0:	31015101 	tstcc	r1, r1, lsl #2
    85e4:	03500112 	cmpeq	r0, #-2147483644	; 0x80000004
    85e8:	00243d40 	eoreq	r3, r4, r0, asr #26
    85ec:	0017bc11 	andseq	fp, r7, r1, lsl ip
    85f0:	0009fc08 	andeq	pc, r9, r8, lsl #24
    85f4:	00032e00 	andeq	r2, r3, r0, lsl #28
    85f8:	51011200 	mrspl	r1, R9_usr
    85fc:	01123101 	tsteq	r2, r1, lsl #2
    8600:	3e400350 	mcrcc	3, 2, r0, cr0, cr0, {2}
    8604:	cc110024 	ldcgt	0, cr0, [r1], {36}	; 0x24
    8608:	fc080017 	stc2	0, cr0, [r8], {23}
    860c:	48000009 	stmdami	r0, {r0, r3}
    8610:	12000003 	andne	r0, r0, #3
    8614:	31015101 	tstcc	r1, r1, lsl #2
    8618:	03500112 	cmpeq	r0, #-2147483644	; 0x80000004
    861c:	00243f40 	eoreq	r3, r4, r0, asr #30
    8620:	0017dc11 	andseq	sp, r7, r1, lsl ip
    8624:	0009fc08 	andeq	pc, r9, r8, lsl #24
    8628:	00036200 	andeq	r6, r3, r0, lsl #4
    862c:	51011200 	mrspl	r1, R9_usr
    8630:	01123101 	tsteq	r2, r1, lsl #2
    8634:	40400350 	submi	r0, r0, r0, asr r3
    8638:	ea140024 	b	5086d0 <__Stack_Size+0x5082d0>
    863c:	fc080017 	stc2	0, cr0, [r8], {23}
    8640:	12000009 	andne	r0, r0, #9
    8644:	30015101 	andcc	r5, r1, r1, lsl #2
    8648:	04150000 	ldreq	r0, [r5], #-0
    864c:	000001a6 	andeq	r0, r0, r6, lsr #3
    8650:	0000de0f 	andeq	sp, r0, pc, lsl #28
    8654:	f48c0100 	vst2.8	{d0[0],d1[0]}, [ip], r0
    8658:	88080017 	stmdahi	r8, {r0, r1, r2, r4}
    865c:	01000000 	mrseq	r0, (UNDEF: 0)
    8660:	0004159c 	muleq	r4, ip, r5
    8664:	33c21000 	biccc	r1, r2, #0
    8668:	8c010000 	stchi	0, cr0, [r1], {-0}
    866c:	00000372 	andeq	r0, r0, r2, ror r3
    8670:	000041a7 	andeq	r4, r0, r7, lsr #3
    8674:	0033e310 	eorseq	lr, r3, r0, lsl r3
    8678:	158c0100 	strne	r0, [ip, #256]	; 0x100
    867c:	d3000004 	movwle	r0, #4
    8680:	16000041 	strne	r0, [r0], -r1, asr #32
    8684:	00001f44 	andeq	r1, r0, r4, asr #30
    8688:	00418e01 	subeq	r8, r1, r1, lsl #28
    868c:	41ff0000 	mvnsmi	r0, r0
    8690:	dc160000 	ldcle	0, cr0, [r6], {-0}
    8694:	01000032 	tsteq	r0, r2, lsr r0
    8698:	0000418e 	andeq	r4, r0, lr, lsl #3
    869c:	0042ec00 	subeq	lr, r2, r0, lsl #24
    86a0:	32371600 	eorscc	r1, r7, #0, 12
    86a4:	8f010000 	svchi	0x00010000
    86a8:	00000041 	andeq	r0, r0, r1, asr #32
    86ac:	00004363 	andeq	r4, r0, r3, ror #6
    86b0:	00345916 	eorseq	r5, r4, r6, lsl r9
    86b4:	41900100 	orrsmi	r0, r0, r0, lsl #2
    86b8:	dc000000 	stcle	0, cr0, [r0], {-0}
    86bc:	16000043 	strne	r0, [r0], -r3, asr #32
    86c0:	00003372 	andeq	r3, r0, r2, ror r3
    86c4:	00419101 	subeq	r9, r1, r1, lsl #2
    86c8:	41a70000 			; <UNDEFINED> instruction: 0x41a70000
    86cc:	7d170000 	ldcvc	0, cr0, [r7, #-0]
    86d0:	01000033 	tsteq	r0, r3, lsr r0
    86d4:	00029792 	muleq	r2, r2, r7
    86d8:	5c910200 	lfmpl	f0, 4, [r1], {0}
    86dc:	00183a18 	andseq	r3, r8, r8, lsl sl
    86e0:	000a1308 	andeq	r1, sl, r8, lsl #6
    86e4:	50011200 	andpl	r1, r1, r0, lsl #4
    86e8:	005c9102 	subseq	r9, ip, r2, lsl #2
    86ec:	03041500 	movweq	r1, #17664	; 0x4500
    86f0:	0f000002 	svceq	0x00000002
    86f4:	00000cac 	andeq	r0, r0, ip, lsr #25
    86f8:	187ce801 	ldmdane	ip!, {r0, fp, sp, lr, pc}^
    86fc:	00160800 	andseq	r0, r6, r0, lsl #16
    8700:	9c010000 	stcls	0, cr0, [r1], {-0}
    8704:	0000043e 	andeq	r0, r0, lr, lsr r4
    8708:	0033e319 	eorseq	lr, r3, r9, lsl r3
    870c:	15e80100 	strbne	r0, [r8, #256]!	; 0x100
    8710:	01000004 	tsteq	r0, r4
    8714:	950f0050 	strls	r0, [pc, #-80]	; 86cc <__Stack_Size+0x82cc>
    8718:	01000034 	tsteq	r0, r4, lsr r0
    871c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    8720:	00002000 	andeq	r2, r0, r0
    8724:	809c0100 	addshi	r0, ip, r0, lsl #2
    8728:	19000004 	stmdbne	r0, {r2}
    872c:	000033c2 	andeq	r3, r0, r2, asr #7
    8730:	0372ff01 	cmneq	r2, #1, 30
    8734:	50010000 	andpl	r0, r1, r0
    8738:	00333910 	eorseq	r3, r3, r0, lsl r9
    873c:	80ff0100 	rscshi	r0, pc, r0, lsl #2
    8740:	7a000004 	bvc	8758 <__Stack_Size+0x8358>
    8744:	1a000044 	bne	885c <__Stack_Size+0x845c>
    8748:	00001f44 	andeq	r1, r0, r4, asr #30
    874c:	41010101 	tstmi	r1, r1, lsl #2
    8750:	9b000000 	blls	8758 <__Stack_Size+0x8358>
    8754:	00000044 	andeq	r0, r0, r4, asr #32
    8758:	02470415 	subeq	r0, r7, #352321536	; 0x15000000
    875c:	5c1b0000 	ldcpl	0, cr0, [fp], {-0}
    8760:	01000033 	tsteq	r0, r3, lsr r0
    8764:	00000123 	andeq	r0, r0, r3, lsr #2
    8768:	000c0000 	andeq	r0, ip, r0
    876c:	9c010000 	stcls	0, cr0, [r1], {-0}
    8770:	000004ab 	andeq	r0, r0, fp, lsr #9
    8774:	0033391c 	eorseq	r3, r3, ip, lsl r9
    8778:	01230100 	teqeq	r3, r0, lsl #2
    877c:	00000480 	andeq	r0, r0, r0, lsl #9
    8780:	1b005001 	blne	1c78c <__Stack_Size+0x1c38c>
    8784:	000001f5 	strdeq	r0, [r0], -r5
    8788:	92013701 	andls	r3, r1, #262144	; 0x40000
    878c:	18080018 	stmdane	r8, {r3, r4}
    8790:	01000000 	mrseq	r0, (UNDEF: 0)
    8794:	0004de9c 	muleq	r4, ip, lr
    8798:	33c21c00 	biccc	r1, r2, #0, 24
    879c:	37010000 	strcc	r0, [r1, -r0]
    87a0:	00037201 	andeq	r7, r3, r1, lsl #4
    87a4:	1c500100 	ldfnee	f0, [r0], {-0}
    87a8:	00001a89 	andeq	r1, r0, r9, lsl #21
    87ac:	d6013701 	strle	r3, [r1], -r1, lsl #14
    87b0:	01000000 	mrseq	r0, (UNDEF: 0)
    87b4:	661b0051 			; <UNDEFINED> instruction: 0x661b0051
    87b8:	01000008 	tsteq	r0, r8
    87bc:	18aa0162 	stmiane	sl!, {r1, r5, r6, r8}
    87c0:	00320800 	eorseq	r0, r2, r0, lsl #16
    87c4:	9c010000 	stcls	0, cr0, [r1], {-0}
    87c8:	00000563 	andeq	r0, r0, r3, ror #10
    87cc:	0033c21d 	eorseq	ip, r3, sp, lsl r2
    87d0:	01620100 	cmneq	r2, r0, lsl #2
    87d4:	00000372 	andeq	r0, r0, r2, ror r3
    87d8:	000044d5 	ldrdeq	r4, [r0], -r5
    87dc:	0032c41d 	eorseq	ip, r2, sp, lsl r4
    87e0:	01620100 	cmneq	r2, r0, lsl #2
    87e4:	00000053 	andeq	r0, r0, r3, asr r0
    87e8:	0000450e 	andeq	r4, r0, lr, lsl #10
    87ec:	001a891d 	andseq	r8, sl, sp, lsl r9
    87f0:	01620100 	cmneq	r2, r0, lsl #2
    87f4:	000000d6 	ldrdeq	r0, [r0], -r6
    87f8:	0000452f 	andeq	r4, r0, pc, lsr #10
    87fc:	0034e81a 	eorseq	lr, r4, sl, lsl r8
    8800:	01640100 	cmneq	r4, r0, lsl #2
    8804:	00000041 	andeq	r0, r0, r1, asr #32
    8808:	00004569 	andeq	r4, r0, r9, ror #10
    880c:	0034031a 	eorseq	r0, r4, sl, lsl r3
    8810:	01640100 	cmneq	r4, r0, lsl #2
    8814:	00000041 	andeq	r0, r0, r1, asr #32
    8818:	0000458d 	andeq	r4, r0, sp, lsl #11
    881c:	0034d31a 	eorseq	sp, r4, sl, lsl r3
    8820:	01640100 	cmneq	r4, r0, lsl #2
    8824:	00000041 	andeq	r0, r0, r1, asr #32
    8828:	000045c8 	andeq	r4, r0, r8, asr #11
    882c:	0033721e 	eorseq	r7, r3, lr, lsl r2
    8830:	01650100 	cmneq	r5, r0, lsl #2
    8834:	00000041 	andeq	r0, r0, r1, asr #32
    8838:	1b005001 	blne	1c844 <__Stack_Size+0x1c444>
    883c:	000032b7 			; <UNDEFINED> instruction: 0x000032b7
    8840:	00019d01 	andeq	r9, r1, r1, lsl #26
    8844:	12000000 	andne	r0, r0, #0
    8848:	01000000 	mrseq	r0, (UNDEF: 0)
    884c:	0005a69c 	muleq	r5, ip, r6
    8850:	33c21c00 	biccc	r1, r2, #0, 24
    8854:	9d010000 	stcls	0, cr0, [r1, #-0]
    8858:	00037201 	andeq	r7, r3, r1, lsl #4
    885c:	1d500100 	ldfnee	f0, [r0, #-0]
    8860:	0000334f 	andeq	r3, r0, pc, asr #6
    8864:	53019d01 	movwpl	r9, #7425	; 0x1d01
    8868:	10000000 	andne	r0, r0, r0
    886c:	1c000046 	stcne	0, cr0, [r0], {70}	; 0x46
    8870:	00001a89 	andeq	r1, r0, r9, lsl #21
    8874:	d6019d01 	strle	r9, [r1], -r1, lsl #26
    8878:	01000000 	mrseq	r0, (UNDEF: 0)
    887c:	8e1b0052 	mrchi	0, 0, r0, cr11, cr2, {2}
    8880:	01000033 	tsteq	r0, r3, lsr r0
    8884:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    8888:	00160000 	andseq	r0, r6, r0
    888c:	9c010000 	stcls	0, cr0, [r1], {-0}
    8890:	000005db 	ldrdeq	r0, [r0], -fp
    8894:	0033c21c 	eorseq	ip, r3, ip, lsl r2
    8898:	01bc0100 			; <UNDEFINED> instruction: 0x01bc0100
    889c:	00000372 	andeq	r0, r0, r2, ror r3
    88a0:	f41d5001 			; <UNDEFINED> instruction: 0xf41d5001
    88a4:	01000033 	tsteq	r0, r3, lsr r0
    88a8:	006501bc 	strhteq	r0, [r5], #-28	; 0xffffffe4
    88ac:	464a0000 	strbmi	r0, [sl], -r0
    88b0:	1b000000 	blne	88b8 <__Stack_Size+0x84b8>
    88b4:	000034a5 	andeq	r3, r0, r5, lsr #9
    88b8:	0001d501 	andeq	sp, r1, r1, lsl #10
    88bc:	16000000 	strne	r0, [r0], -r0
    88c0:	01000000 	mrseq	r0, (UNDEF: 0)
    88c4:	0006109c 	muleq	r6, ip, r0
    88c8:	33c21c00 	biccc	r1, r2, #0, 24
    88cc:	d5010000 	strle	r0, [r1, #-0]
    88d0:	00037201 	andeq	r7, r3, r1, lsl #4
    88d4:	1d500100 	ldfnee	f0, [r0, #-0]
    88d8:	000032aa 	andeq	r3, r0, sl, lsr #5
    88dc:	5301d501 	movwpl	sp, #5377	; 0x1501
    88e0:	6b000000 	blvs	88e8 <__Stack_Size+0x84e8>
    88e4:	00000046 	andeq	r0, r0, r6, asr #32
    88e8:	0034261b 	eorseq	r2, r4, fp, lsl r6
    88ec:	01ea0100 	mvneq	r0, r0, lsl #2
    88f0:	00000000 	andeq	r0, r0, r0
    88f4:	00000018 	andeq	r0, r0, r8, lsl r0
    88f8:	06439c01 	strbeq	r9, [r3], -r1, lsl #24
    88fc:	c21c0000 	andsgt	r0, ip, #0
    8900:	01000033 	tsteq	r0, r3, lsr r0
    8904:	037201ea 	cmneq	r2, #-2147483590	; 0x8000003a
    8908:	50010000 	andpl	r0, r1, r0
    890c:	001a891c 	andseq	r8, sl, ip, lsl r9
    8910:	01ea0100 	mvneq	r0, r0, lsl #2
    8914:	000000d6 	ldrdeq	r0, [r0], -r6
    8918:	1b005101 	blne	1cd24 <__Stack_Size+0x1c924>
    891c:	0000330d 	andeq	r3, r0, sp, lsl #6
    8920:	00020a01 	andeq	r0, r2, r1, lsl #20
    8924:	16000000 	strne	r0, [r0], -r0
    8928:	01000000 	mrseq	r0, (UNDEF: 0)
    892c:	0006789c 	muleq	r6, ip, r8
    8930:	33c21c00 	biccc	r1, r2, #0, 24
    8934:	0a010000 	beq	4893c <__Stack_Size+0x4853c>
    8938:	00037202 	andeq	r7, r3, r2, lsl #4
    893c:	1d500100 	ldfnee	f0, [r0, #-0]
    8940:	00003264 	andeq	r3, r0, r4, ror #4
    8944:	53020a01 	movwpl	r0, #10753	; 0x2a01
    8948:	8c000000 	stchi	0, cr0, [r0], {-0}
    894c:	00000046 	andeq	r0, r0, r6, asr #32
    8950:	00344c1b 	eorseq	r4, r4, fp, lsl ip
    8954:	021f0100 	andseq	r0, pc, #0, 2
    8958:	00000000 	andeq	r0, r0, r0
    895c:	00000018 	andeq	r0, r0, r8, lsl r0
    8960:	06ab9c01 	strteq	r9, [fp], r1, lsl #24
    8964:	c21c0000 	andsgt	r0, ip, #0
    8968:	01000033 	tsteq	r0, r3, lsr r0
    896c:	0372021f 	cmneq	r2, #-268435455	; 0xf0000001
    8970:	50010000 	andpl	r0, r1, r0
    8974:	001a891c 	andseq	r8, sl, ip, lsl r9
    8978:	021f0100 	andseq	r0, pc, #0, 2
    897c:	000000d6 	ldrdeq	r0, [r0], -r6
    8980:	1b005101 	blne	1cd8c <__Stack_Size+0x1c98c>
    8984:	000002c2 	andeq	r0, r0, r2, asr #5
    8988:	dc023b01 	stcle	11, cr3, [r2], {1}
    898c:	08080018 	stmdaeq	r8, {r3, r4}
    8990:	01000000 	mrseq	r0, (UNDEF: 0)
    8994:	0006e09c 	muleq	r6, ip, r0
    8998:	33c21c00 	biccc	r1, r2, #0, 24
    899c:	3b010000 	blcc	489a4 <__Stack_Size+0x485a4>
    89a0:	00037202 	andeq	r7, r3, r2, lsl #4
    89a4:	1d500100 	ldfnee	f0, [r0, #-0]
    89a8:	00001cc9 	andeq	r1, r0, r9, asr #25
    89ac:	53023b01 	movwpl	r3, #11009	; 0x2b01
    89b0:	ad000000 	stcge	0, cr0, [r0, #-0]
    89b4:	00000046 	andeq	r0, r0, r6, asr #32
    89b8:	000e2d1f 	andeq	r2, lr, pc, lsl sp
    89bc:	024e0100 	subeq	r0, lr, #0, 2
    89c0:	00000053 	andeq	r0, r0, r3, asr r0
    89c4:	080018e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, ip}
    89c8:	00000008 	andeq	r0, r0, r8
    89cc:	070b9c01 	streq	r9, [fp, -r1, lsl #24]
    89d0:	c21d0000 	andsgt	r0, sp, #0
    89d4:	01000033 	tsteq	r0, r3, lsr r0
    89d8:	0372024e 	cmneq	r2, #-536870908	; 0xe0000004
    89dc:	46ce0000 	strbmi	r0, [lr], r0
    89e0:	1b000000 	blne	89e8 <__Stack_Size+0x85e8>
    89e4:	000033b2 			; <UNDEFINED> instruction: 0x000033b2
    89e8:	00026001 	andeq	r6, r2, r1
    89ec:	0c000000 	stceq	0, cr0, [r0], {-0}
    89f0:	01000000 	mrseq	r0, (UNDEF: 0)
    89f4:	0007309c 	muleq	r7, ip, r0
    89f8:	33c21c00 	biccc	r1, r2, #0, 24
    89fc:	60010000 	andvs	r0, r1, r0
    8a00:	00037202 	andeq	r7, r3, r2, lsl #4
    8a04:	00500100 	subseq	r0, r0, r0, lsl #2
    8a08:	00339f1b 	eorseq	r9, r3, fp, lsl pc
    8a0c:	02730100 	rsbseq	r0, r3, #0, 2
    8a10:	00000000 	andeq	r0, r0, r0
    8a14:	00000012 	andeq	r0, r0, r2, lsl r0
    8a18:	07659c01 	strbeq	r9, [r5, -r1, lsl #24]!
    8a1c:	c21c0000 	andsgt	r0, ip, #0
    8a20:	01000033 	tsteq	r0, r3, lsr r0
    8a24:	03720273 	cmneq	r2, #805306375	; 0x30000007
    8a28:	50010000 	andpl	r0, r1, r0
    8a2c:	0032fd1d 	eorseq	pc, r2, sp, lsl sp	; <UNPREDICTABLE>
    8a30:	02730100 	rsbseq	r0, r3, #0, 2
    8a34:	00000065 	andeq	r0, r0, r5, rrx
    8a38:	000046ef 	andeq	r4, r0, pc, ror #13
    8a3c:	32511b00 	subscc	r1, r1, #0, 22
    8a40:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    8a44:	00000002 	andeq	r0, r0, r2
    8a48:	00001200 	andeq	r1, r0, r0, lsl #4
    8a4c:	9a9c0100 	bls	fe708e54 <SCS_BASE+0x1e6fae54>
    8a50:	1c000007 	stcne	0, cr0, [r0], {7}
    8a54:	000033c2 	andeq	r3, r0, r2, asr #7
    8a58:	72028901 	andvc	r8, r2, #16384	; 0x4000
    8a5c:	01000003 	tsteq	r0, r3
    8a60:	34b81d50 	ldrtcc	r1, [r8], #3408	; 0xd50
    8a64:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    8a68:	00006502 	andeq	r6, r0, r2, lsl #10
    8a6c:	00471000 	subeq	r1, r7, r0
    8a70:	821b0000 	andshi	r0, fp, #0
    8a74:	01000034 	tsteq	r0, r4, lsr r0
    8a78:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    8a7c:	00180000 	andseq	r0, r8, r0
    8a80:	9c010000 	stcls	0, cr0, [r1], {-0}
    8a84:	000007cd 	andeq	r0, r0, sp, asr #15
    8a88:	0033c21c 	eorseq	ip, r3, ip, lsl r2
    8a8c:	029f0100 	addseq	r0, pc, #0, 2
    8a90:	00000372 	andeq	r0, r0, r2, ror r3
    8a94:	891c5001 	ldmdbhi	ip, {r0, ip, lr}
    8a98:	0100001a 	tsteq	r0, sl, lsl r0
    8a9c:	00d6029f 	smullseq	r0, r6, pc, r2	; <UNPREDICTABLE>
    8aa0:	51010000 	mrspl	r0, (UNDEF: 1)
    8aa4:	346b1b00 	strbtcc	r1, [fp], #-2816	; 0xb00
    8aa8:	bc010000 	stclt	0, cr0, [r1], {-0}
    8aac:	00000002 	andeq	r0, r0, r2
    8ab0:	00001800 	andeq	r1, r0, r0, lsl #16
    8ab4:	009c0100 	addseq	r0, ip, r0, lsl #2
    8ab8:	1c000008 	stcne	0, cr0, [r0], {8}
    8abc:	000033c2 	andeq	r3, r0, r2, asr #7
    8ac0:	7202bc01 	andvc	fp, r2, #256	; 0x100
    8ac4:	01000003 	tsteq	r0, r3
    8ac8:	1a891c50 	bne	fe24fc10 <SCS_BASE+0x1e241c10>
    8acc:	bc010000 	stclt	0, cr0, [r1], {-0}
    8ad0:	0000d602 	andeq	sp, r0, r2, lsl #12
    8ad4:	00510100 	subseq	r0, r1, r0, lsl #2
    8ad8:	0032961b 	eorseq	r9, r2, fp, lsl r6
    8adc:	02d90100 	sbcseq	r0, r9, #0, 2
    8ae0:	00000000 	andeq	r0, r0, r0
    8ae4:	00000018 	andeq	r0, r0, r8, lsl r0
    8ae8:	08339c01 	ldmdaeq	r3!, {r0, sl, fp, ip, pc}
    8aec:	c21c0000 	andsgt	r0, ip, #0
    8af0:	01000033 	tsteq	r0, r3, lsr r0
    8af4:	037202d9 	cmneq	r2, #-1879048179	; 0x9000000d
    8af8:	50010000 	andpl	r0, r1, r0
    8afc:	001a891c 	andseq	r8, sl, ip, lsl r9
    8b00:	02d90100 	sbcseq	r0, r9, #0, 2
    8b04:	000000d6 	ldrdeq	r0, [r0], -r6
    8b08:	1b005101 	blne	1cf14 <__Stack_Size+0x1cb14>
    8b0c:	00003409 	andeq	r3, r0, r9, lsl #8
    8b10:	0002f801 	andeq	pc, r2, r1, lsl #16
    8b14:	16000000 	strne	r0, [r0], -r0
    8b18:	01000000 	mrseq	r0, (UNDEF: 0)
    8b1c:	0008689c 	muleq	r8, ip, r8
    8b20:	33c21c00 	biccc	r1, r2, #0, 24
    8b24:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    8b28:	00037202 	andeq	r7, r3, r2, lsl #4
    8b2c:	1d500100 	ldfnee	f0, [r0, #-0]
    8b30:	000032cd 	andeq	r3, r0, sp, asr #5
    8b34:	5302f801 	movwpl	pc, #10241	; 0x2801	; <UNPREDICTABLE>
    8b38:	31000000 	mrscc	r0, (UNDEF: 0)
    8b3c:	00000047 	andeq	r0, r0, r7, asr #32
    8b40:	00343e1b 	eorseq	r3, r4, fp, lsl lr
    8b44:	030d0100 	movweq	r0, #53504	; 0xd100
    8b48:	00000000 	andeq	r0, r0, r0
    8b4c:	00000018 	andeq	r0, r0, r8, lsl r0
    8b50:	089b9c01 	ldmeq	fp, {r0, sl, fp, ip, pc}
    8b54:	c21c0000 	andsgt	r0, ip, #0
    8b58:	01000033 	tsteq	r0, r3, lsr r0
    8b5c:	0372030d 	cmneq	r2, #872415232	; 0x34000000
    8b60:	50010000 	andpl	r0, r1, r0
    8b64:	001a891c 	andseq	r8, sl, ip, lsl r9
    8b68:	030d0100 	movweq	r0, #53504	; 0xd100
    8b6c:	000000d6 	ldrdeq	r0, [r0], -r6
    8b70:	1f005101 	svcne	0x00005101
    8b74:	00000399 	muleq	r0, r9, r3
    8b78:	ab033501 	blge	d5f84 <__Stack_Size+0xd5b84>
    8b7c:	ec000000 	stc	0, cr0, [r0], {-0}
    8b80:	0c080018 	stceq	0, cr0, [r8], {24}
    8b84:	01000000 	mrseq	r0, (UNDEF: 0)
    8b88:	0008e49c 	muleq	r8, ip, r4
    8b8c:	33c21d00 	biccc	r1, r2, #0, 26
    8b90:	35010000 	strcc	r0, [r1, #-0]
    8b94:	00037203 	andeq	r7, r3, r3, lsl #4
    8b98:	00475200 	subeq	r5, r7, r0, lsl #4
    8b9c:	332e1c00 	teqcc	lr, #0, 24
    8ba0:	35010000 	strcc	r0, [r1, #-0]
    8ba4:	00005303 	andeq	r5, r0, r3, lsl #6
    8ba8:	1a510100 	bne	1448fb0 <__Stack_Size+0x1448bb0>
    8bac:	00001c53 	andeq	r1, r0, r3, asr ip
    8bb0:	ab033701 	blge	d67bc <__Stack_Size+0xd63bc>
    8bb4:	73000000 	movwvc	r0, #0
    8bb8:	00000047 	andeq	r0, r0, r7, asr #32
    8bbc:	0008ca1b 	andeq	ip, r8, fp, lsl sl
    8bc0:	03690100 	cmneq	r9, #0, 2
    8bc4:	080018f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, ip}
    8bc8:	00000008 	andeq	r0, r0, r8
    8bcc:	09199c01 	ldmdbeq	r9, {r0, sl, fp, ip, pc}
    8bd0:	c21c0000 	andsgt	r0, ip, #0
    8bd4:	01000033 	tsteq	r0, r3, lsr r0
    8bd8:	03720369 	cmneq	r2, #-1543503871	; 0xa4000001
    8bdc:	50010000 	andpl	r0, r1, r0
    8be0:	00332e1d 	eorseq	r2, r3, sp, lsl lr
    8be4:	03690100 	cmneq	r9, #0, 2
    8be8:	00000053 	andeq	r0, r0, r3, asr r0
    8bec:	0000479b 	muleq	r0, fp, r7
    8bf0:	10251f00 	eorne	r1, r5, r0, lsl #30
    8bf4:	8a010000 	bhi	48bfc <__Stack_Size+0x487fc>
    8bf8:	0000b603 	andeq	fp, r0, r3, lsl #12
    8bfc:	00190000 	andseq	r0, r9, r0
    8c00:	00003e08 	andeq	r3, r0, r8, lsl #28
    8c04:	949c0100 	ldrls	r0, [ip], #256	; 0x100
    8c08:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    8c0c:	000033c2 	andeq	r3, r0, r2, asr #7
    8c10:	72038a01 	andvc	r8, r3, #4096	; 0x1000
    8c14:	bc000003 	stclt	0, cr0, [r0], {3}
    8c18:	1d000047 	stcne	0, cr0, [r0, #-284]	; 0xfffffee4
    8c1c:	000032c4 	andeq	r3, r0, r4, asr #5
    8c20:	53038a01 	movwpl	r8, #14849	; 0x3a01
    8c24:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    8c28:	1a000047 	bne	8d4c <__Stack_Size+0x894c>
    8c2c:	00003402 	andeq	r3, r0, r2, lsl #8
    8c30:	41038c01 	tstmi	r3, r1, lsl #24
    8c34:	22000000 	andcs	r0, r0, #0
    8c38:	1a000048 	bne	8d60 <__Stack_Size+0x8960>
    8c3c:	000034d3 	ldrdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    8c40:	41038c01 	tstmi	r3, r1, lsl #24
    8c44:	a0000000 	andge	r0, r0, r0
    8c48:	1a000048 	bne	8d70 <__Stack_Size+0x8970>
    8c4c:	000034e8 	andeq	r3, r0, r8, ror #9
    8c50:	41038c01 	tstmi	r3, r1, lsl #24
    8c54:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    8c58:	1a000048 	bne	8d80 <__Stack_Size+0x8980>
    8c5c:	00001c53 	andeq	r1, r0, r3, asr ip
    8c60:	b6038d01 	strlt	r8, [r3], -r1, lsl #26
    8c64:	0c000000 	stceq	0, cr0, [r0], {-0}
    8c68:	00000049 	andeq	r0, r0, r9, asr #32
    8c6c:	0032e51b 	eorseq	lr, r2, fp, lsl r5
    8c70:	03da0100 	bicseq	r0, sl, #0, 2
    8c74:	00000000 	andeq	r0, r0, r0
    8c78:	0000000e 	andeq	r0, r0, lr
    8c7c:	09e59c01 	stmibeq	r5!, {r0, sl, fp, ip, pc}^
    8c80:	c21c0000 	andsgt	r0, ip, #0
    8c84:	01000033 	tsteq	r0, r3, lsr r0
    8c88:	037203da 	cmneq	r2, #1744830467	; 0x68000003
    8c8c:	50010000 	andpl	r0, r1, r0
    8c90:	0032c41d 	eorseq	ip, r2, sp, lsl r4
    8c94:	03da0100 	bicseq	r0, sl, #0, 2
    8c98:	00000053 	andeq	r0, r0, r3, asr r0
    8c9c:	0000492b 	andeq	r4, r0, fp, lsr #18
    8ca0:	0034021a 	eorseq	r0, r4, sl, lsl r2
    8ca4:	03dc0100 	bicseq	r0, ip, #0, 2
    8ca8:	00000053 	andeq	r0, r0, r3, asr r0
    8cac:	0000494c 	andeq	r4, r0, ip, asr #18
    8cb0:	0034d320 	eorseq	sp, r4, r0, lsr #6
    8cb4:	03dc0100 	bicseq	r0, ip, #0, 2
    8cb8:	00000053 	andeq	r0, r0, r3, asr r0
    8cbc:	1f6e2100 	svcne	0x006e2100
    8cc0:	14050000 	strne	r0, [r5], #-0
    8cc4:	0009fc01 	andeq	pc, r9, r1, lsl #24
    8cc8:	00412200 	subeq	r2, r1, r0, lsl #4
    8ccc:	d6220000 	strtle	r0, [r2], -r0
    8cd0:	00000000 	andeq	r0, r0, r0
    8cd4:	0025b721 	eoreq	fp, r5, r1, lsr #14
    8cd8:	01150500 	tsteq	r5, r0, lsl #10
    8cdc:	00000a13 	andeq	r0, r0, r3, lsl sl
    8ce0:	00004122 	andeq	r4, r0, r2, lsr #2
    8ce4:	00d62200 	sbcseq	r2, r6, r0, lsl #4
    8ce8:	21000000 	mrscs	r0, (UNDEF: 0)
    8cec:	0000275d 	andeq	r2, r0, sp, asr r7
    8cf0:	25011005 	strcs	r1, [r1, #-5]
    8cf4:	2200000a 	andcs	r0, r0, #10
    8cf8:	00000a25 	andeq	r0, r0, r5, lsr #20
    8cfc:	97041500 	strls	r1, [r4, -r0, lsl #10]
    8d00:	00000002 	andeq	r0, r0, r2
    8d04:	0000005f 	andeq	r0, r0, pc, asr r0
    8d08:	1da60002 	stcne	0, cr0, [r6, #8]!
    8d0c:	01040000 	mrseq	r0, (UNDEF: 4)
    8d10:	000029fc 	strdeq	r2, [r0], -ip
    8d14:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
    8d18:	080001a2 	stmdaeq	r0, {r1, r5, r7, r8}
    8d1c:	2f62696c 	svccs	0x0062696c
    8d20:	2f637273 	svccs	0x00637273
    8d24:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xf63
    8d28:	336d7865 	cmncc	sp, #6619136	; 0x650000
    8d2c:	63616d5f 	cmnvs	r1, #6080	; 0x17c0
    8d30:	732e6f72 	teqvc	lr, #456	; 0x1c8
    8d34:	73552f00 	cmpvc	r5, #0, 30
    8d38:	2f737265 	svccs	0x00737265
    8d3c:	61726142 	cmnvs	r2, r2, asr #2
    8d40:	704f2f6d 	subvc	r2, pc, sp, ror #30
    8d44:	4d436e65 	stclmi	14, cr6, [r3, #-404]	; 0xfffffe6c
    8d48:	34302e39 	ldrtcc	r2, [r0], #-3641	; 0xe39
    8d4c:	6472415f 	ldrbtvs	r4, [r2], #-351	; 0x15f
    8d50:	6f6f4275 	svcvs	0x006f4275
    8d54:	47002f74 	smlsdxmi	r0, r4, pc, r2	; <UNPREDICTABLE>
    8d58:	4120554e 	teqmi	r0, lr, asr #10
    8d5c:	2e322053 	mrccs	0, 1, r2, cr2, cr3, {2}
    8d60:	302e3432 	eorcc	r3, lr, r2, lsr r4
    8d64:	ec800100 	stfs	f0, [r0], {0}
    8d68:	04000000 	streq	r0, [r0], #-0
    8d6c:	001dba00 	andseq	fp, sp, r0, lsl #20
    8d70:	f4010400 	vst3.8	{d0-d2}, [r1], r0
    8d74:	01000002 	tsteq	r0, r2
    8d78:	000034ff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
    8d7c:	000003ec 	andeq	r0, r0, ip, ror #7
    8d80:	00000be8 	andeq	r0, r0, r8, ror #23
    8d84:	00000000 	andeq	r0, r0, r0
    8d88:	00002a96 	muleq	r0, r6, sl
    8d8c:	00353102 	eorseq	r3, r5, r2, lsl #2
    8d90:	40d70100 	sbcsmi	r0, r7, r0, lsl #2
    8d94:	50080019 	andpl	r0, r8, r9, lsl r0
    8d98:	01000000 	mrseq	r0, (UNDEF: 0)
    8d9c:	00005e9c 	muleq	r0, ip, lr
    8da0:	352a0300 	strcc	r0, [sl, #-768]!	; 0x300
    8da4:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    8da8:	0000005e 	andeq	r0, r0, lr, asr r0
    8dac:	00351a04 	eorseq	r1, r5, r4, lsl #20
    8db0:	5ed90100 	cdppl	1, 13, cr0, cr9, cr0, {0}
    8db4:	73000000 	movwvc	r0, #0
    8db8:	05000049 	streq	r0, [r0, #-73]	; 0x49
    8dbc:	08001972 	stmdaeq	r0, {r1, r4, r5, r6, r8, fp, ip}
    8dc0:	000000dd 	ldrdeq	r0, [r0], -sp
    8dc4:	64040600 	strvs	r0, [r4], #-1536	; 0x600
    8dc8:	07000000 	streq	r0, [r0, -r0]
    8dcc:	093a0704 	ldmdbeq	sl!, {r2, r8, r9, sl}
    8dd0:	22080000 	andcs	r0, r8, #0
    8dd4:	01000035 	tsteq	r0, r5, lsr r0
    8dd8:	0000645f 	andeq	r6, r0, pc, asr r4
    8ddc:	35520800 	ldrbcc	r0, [r2, #-2048]	; 0x800
    8de0:	61010000 	mrsvs	r0, (UNDEF: 1)
    8de4:	00000064 	andeq	r0, r0, r4, rrx
    8de8:	00355908 	eorseq	r5, r5, r8, lsl #18
    8dec:	64630100 	strbtvs	r0, [r3], #-256	; 0x100
    8df0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8df4:	0000354c 	andeq	r3, r0, ip, asr #10
    8df8:	00646601 	rsbeq	r6, r4, r1, lsl #12
    8dfc:	f1080000 	cpsie	
    8e00:	01000034 	tsteq	r0, r4, lsr r0
    8e04:	00006468 	andeq	r6, r0, r8, ror #8
    8e08:	34f70900 	ldrbtcc	r0, [r7], #2304	; 0x900
    8e0c:	6b010000 	blvs	48e14 <__Stack_Size+0x48a14>
    8e10:	0000c00a 	andeq	ip, r0, sl
    8e14:	0000b900 	andeq	fp, r0, r0, lsl #18
    8e18:	00b90b00 	adcseq	r0, r9, r0, lsl #22
    8e1c:	004c0000 	subeq	r0, ip, r0
    8e20:	31070407 	tstcc	r7, r7, lsl #8
    8e24:	06000009 	streq	r0, [r0], -r9
    8e28:	0000c604 	andeq	ip, r0, r4, lsl #12
    8e2c:	3f0d0c00 	svccc	0x000d0c00
    8e30:	01000035 	tsteq	r0, r5, lsr r0
    8e34:	0000d87f 	andeq	sp, r0, pc, ror r8
    8e38:	00030500 	andeq	r0, r3, r0, lsl #10
    8e3c:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    8e40:	000000a9 	andeq	r0, r0, r9, lsr #1
    8e44:	000bf30f 	andeq	pc, fp, pc, lsl #6
    8e48:	e8720100 	ldmda	r2!, {r8}^
    8e4c:	10000000 	andne	r0, r0, r0
    8e50:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    8e54:	f6000074 			; <UNDEFINED> instruction: 0xf6000074
    8e58:	04000003 	streq	r0, [r0], #-3
    8e5c:	001e9200 	andseq	r9, lr, r0, lsl #4
    8e60:	f4010400 	vst3.8	{d0-d2}, [r1], r0
    8e64:	01000002 	tsteq	r0, r2
    8e68:	00003582 	andeq	r3, r0, r2, lsl #11
    8e6c:	000003ec 	andeq	r0, r0, ip, ror #7
    8e70:	00000bf8 	strdeq	r0, [r0], -r8
    8e74:	00000000 	andeq	r0, r0, r0
    8e78:	00002aef 	andeq	r2, r0, pc, ror #21
    8e7c:	2d050402 	cfstrscs	mvf0, [r5, #-8]
    8e80:	02000008 	andeq	r0, r0, #8
    8e84:	07ff0502 	ldrbeq	r0, [pc, r2, lsl #10]!
    8e88:	01020000 	mrseq	r0, (UNDEF: 2)
    8e8c:	0009de06 	andeq	sp, r9, r6, lsl #28
    8e90:	07040200 	streq	r0, [r4, -r0, lsl #4]
    8e94:	0000093a 	andeq	r0, r0, sl, lsr r9
    8e98:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    8e9c:	4c280200 	sfmmi	f0, 4, [r8], #-0
    8ea0:	02000000 	andeq	r0, r0, #0
    8ea4:	0bd70702 	bleq	ff5caab4 <SCS_BASE+0x1f5bcab4>
    8ea8:	75030000 	strvc	r0, [r3, #-0]
    8eac:	29020038 	stmdbcs	r2, {r3, r4, r5}
    8eb0:	0000005d 	andeq	r0, r0, sp, asr r0
    8eb4:	dc080102 	stfles	f0, [r8], {2}
    8eb8:	02000009 	andeq	r0, r0, #9
    8ebc:	09310704 	ldmdbeq	r1!, {r2, r8, r9, sl}
    8ec0:	04040000 	streq	r0, [r4], #-0
    8ec4:	00000053 	andeq	r0, r0, r3, asr r0
    8ec8:	0013f305 	andseq	pc, r3, r5, lsl #6
    8ecc:	30030100 	andcc	r0, r3, r0, lsl #2
    8ed0:	00000096 	muleq	r0, r6, r0
    8ed4:	00140706 	andseq	r0, r4, r6, lsl #14
    8ed8:	9d060000 	stcls	0, cr0, [r6, #-0]
    8edc:	01000014 	tsteq	r0, r4, lsl r0
    8ee0:	00143006 	andseq	r3, r4, r6
    8ee4:	8f060200 	svchi	0x00060200
    8ee8:	03000014 	movweq	r0, #20
    8eec:	13f40700 	mvnsne	r0, #0, 14
    8ef0:	37030000 	strcc	r0, [r3, -r0]
    8ef4:	00000071 	andeq	r0, r0, r1, ror r0
    8ef8:	00184508 	andseq	r4, r8, r8, lsl #10
    8efc:	3b030c00 	blcc	cbf04 <__Stack_Size+0xcbb04>
    8f00:	000000de 	ldrdeq	r0, [r0], -lr
    8f04:	0015bb09 	andseq	fp, r5, r9, lsl #22
    8f08:	41530300 	cmpmi	r3, r0, lsl #6
    8f0c:	00000000 	andeq	r0, r0, r0
    8f10:	00199109 	andseq	r9, r9, r9, lsl #2
    8f14:	41540300 	cmpmi	r4, r0, lsl #6
    8f18:	02000000 	andeq	r0, r0, #0
    8f1c:	00374d09 	eorseq	r4, r7, r9, lsl #26
    8f20:	41550300 	cmpmi	r5, r0, lsl #6
    8f24:	04000000 	streq	r0, [r0], #-0
    8f28:	0018b409 	andseq	fp, r8, r9, lsl #8
    8f2c:	ed560300 	ldcl	3, cr0, [r6, #-0]
    8f30:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8f34:	006b0a00 	rsbeq	r0, fp, r0, lsl #20
    8f38:	00ed0000 	rsceq	r0, sp, r0
    8f3c:	410b0000 	mrsmi	r0, (UNDEF: 11)
    8f40:	00000000 	andeq	r0, r0, r0
    8f44:	00de0404 	sbcseq	r0, lr, r4, lsl #8
    8f48:	46070000 	strmi	r0, [r7], -r0
    8f4c:	03000018 	movweq	r0, #24
    8f50:	0000a157 	andeq	sl, r0, r7, asr r1
    8f54:	57420c00 	strbpl	r0, [r2, -r0, lsl #24]
    8f58:	65030200 	strvs	r0, [r3, #-512]	; 0x200
    8f5c:	00000122 	andeq	r0, r0, r2, lsr #2
    8f60:	3162620d 	cmncc	r2, sp, lsl #4
    8f64:	53670300 	cmnpl	r7, #0, 6
    8f68:	00000000 	andeq	r0, r0, r0
    8f6c:	3062620d 	rsbcc	r6, r2, sp, lsl #4
    8f70:	53680300 	cmnpl	r8, #0, 6
    8f74:	01000000 	mrseq	r0, (UNDEF: 0)
    8f78:	03020e00 	movweq	r0, #11776	; 0x2e00
    8f7c:	00013e62 	andeq	r3, r1, r2, ror #28
    8f80:	00770f00 	rsbseq	r0, r7, r0, lsl #30
    8f84:	00416403 	subeq	r6, r1, r3, lsl #8
    8f88:	620f0000 	andvs	r0, pc, #0
    8f8c:	6a030077 	bvs	c9170 <__Stack_Size+0xc8d70>
    8f90:	000000fe 	strdeq	r0, [r0], -lr
    8f94:	1a060700 	bne	18ab9c <__Stack_Size+0x18a79c>
    8f98:	6b030000 	blvs	c8fa0 <__Stack_Size+0xc8ba0>
    8f9c:	00000122 	andeq	r0, r0, r2, lsr #2
    8fa0:	00153808 	andseq	r3, r5, r8, lsl #16
    8fa4:	6d031c00 	stcvs	12, cr1, [r3, #-0]
    8fa8:	000001da 	ldrdeq	r0, [r0], -sl
    8fac:	0018f409 	andseq	pc, r8, r9, lsl #8
    8fb0:	536f0300 	cmnpl	pc, #0, 6
    8fb4:	00000000 	andeq	r0, r0, r0
    8fb8:	0014a709 	andseq	sl, r4, r9, lsl #14
    8fbc:	53700300 	cmnpl	r0, #0, 6
    8fc0:	01000000 	mrseq	r0, (UNDEF: 0)
    8fc4:	00168309 	andseq	r8, r6, r9, lsl #6
    8fc8:	3e710300 	cdpcc	3, 7, cr0, cr1, cr0, {0}
    8fcc:	02000001 	andeq	r0, r0, #1
    8fd0:	00155e09 	andseq	r5, r5, r9, lsl #28
    8fd4:	3e720300 	cdpcc	3, 7, cr0, cr2, cr0, {0}
    8fd8:	04000001 	streq	r0, [r0], #-1
    8fdc:	00176309 	andseq	r6, r7, r9, lsl #6
    8fe0:	3e730300 	cdpcc	3, 7, cr0, cr3, cr0, {0}
    8fe4:	06000001 	streq	r0, [r0], -r1
    8fe8:	00189309 	andseq	r9, r8, r9, lsl #6
    8fec:	53750300 	cmnpl	r5, #0, 6
    8ff0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8ff4:	00198109 	andseq	r8, r9, r9, lsl #2
    8ff8:	53760300 	cmnpl	r6, #0, 6
    8ffc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9000:	00176f09 	andseq	r6, r7, r9, lsl #30
    9004:	53770300 	cmnpl	r7, #0, 6
    9008:	0a000000 	beq	9010 <__Stack_Size+0x8c10>
    900c:	0017bd09 	andseq	fp, r7, r9, lsl #26
    9010:	53780300 	cmnpl	r8, #0, 6
    9014:	0b000000 	bleq	901c <__Stack_Size+0x8c1c>
    9018:	00182c09 	andseq	r2, r8, r9, lsl #24
    901c:	53790300 	cmnpl	r9, #0, 6
    9020:	0c000000 	stceq	0, cr0, [r0], {-0}
    9024:	00196509 	andseq	r6, r9, r9, lsl #10
    9028:	f37c0300 	vcgt.u<illegal width 64>	d16, d12, d0
    902c:	10000000 	andne	r0, r0, r0
    9030:	15390700 	ldrne	r0, [r9, #-1792]!	; 0x700
    9034:	7d030000 	stcvc	0, cr0, [r3, #-0]
    9038:	00000149 	andeq	r0, r0, r9, asr #2
    903c:	0013a608 	andseq	sl, r3, r8, lsl #12
    9040:	7f033000 	svcvc	0x00033000
    9044:	00000282 	andeq	r0, r0, r2, lsl #5
    9048:	00298209 	eoreq	r8, r9, r9, lsl #4
    904c:	83810300 	orrhi	r0, r1, #0, 6
    9050:	00000002 	andeq	r0, r0, r2
    9054:	0016d309 	andseq	sp, r6, r9, lsl #6
    9058:	83820300 	orrhi	r0, r2, #0, 6
    905c:	04000002 	streq	r0, [r0], #-2
    9060:	00147609 	andseq	r7, r4, r9, lsl #12
    9064:	83850300 	orrhi	r0, r5, #0, 6
    9068:	08000002 	stmdaeq	r0, {r1}
    906c:	00141309 	andseq	r1, r4, r9, lsl #6
    9070:	83860300 	orrhi	r0, r6, #0, 6
    9074:	0c000002 	stceq	0, cr0, [r0], {2}
    9078:	00144909 	andseq	r4, r4, r9, lsl #18
    907c:	98980300 	ldmls	r8, {r8, r9}
    9080:	10000002 	andne	r0, r0, r2
    9084:	0013ca09 	andseq	ip, r3, r9, lsl #20
    9088:	98a30300 	stmials	r3!, {r8, r9}
    908c:	14000002 	strne	r0, [r0], #-2
    9090:	00145a09 	andseq	r5, r4, r9, lsl #20
    9094:	b2ad0300 	adclt	r0, sp, #0, 6
    9098:	18000002 	stmdane	r0, {r1}
    909c:	00169f09 	andseq	r9, r6, r9, lsl #30
    90a0:	edaf0300 	stc	3, cr0, [pc]	; 90a8 <__Stack_Size+0x8ca8>
    90a4:	1c000000 	stcne	0, cr0, [r0], {-0}
    90a8:	0019e209 	andseq	lr, r9, r9, lsl #4
    90ac:	edb00300 	ldc	3, cr0, [r0]
    90b0:	20000000 	andcs	r0, r0, r0
    90b4:	0018e009 	andseq	lr, r8, r9
    90b8:	edb10300 	ldc	3, cr0, [r1]
    90bc:	24000000 	strcs	r0, [r0], #-0
    90c0:	0013b309 	andseq	fp, r3, r9, lsl #6
    90c4:	b8b50300 	ldmlt	r5!, {r8, r9}
    90c8:	28000002 	stmdacs	r0, {r1}
    90cc:	00374a09 	eorseq	r4, r7, r9, lsl #20
    90d0:	53b70300 			; <UNDEFINED> instruction: 0x53b70300
    90d4:	2c000000 	stccs	0, cr0, [r0], {-0}
    90d8:	04041000 	streq	r1, [r4], #-0
    90dc:	00000282 	andeq	r0, r0, r2, lsl #5
    90e0:	0000960a 	andeq	r9, r0, sl, lsl #12
    90e4:	00029800 	andeq	r9, r2, r0, lsl #16
    90e8:	00530b00 	subseq	r0, r3, r0, lsl #22
    90ec:	04000000 	streq	r0, [r0], #-0
    90f0:	00028904 	andeq	r8, r2, r4, lsl #18
    90f4:	00960a00 	addseq	r0, r6, r0, lsl #20
    90f8:	02b20000 	adcseq	r0, r2, #0
    90fc:	530b0000 	movwpl	r0, #45056	; 0xb000
    9100:	0b000000 	bleq	9108 <__Stack_Size+0x8d08>
    9104:	00000053 	andeq	r0, r0, r3, asr r0
    9108:	9e040400 	cfcpysls	mvf0, mvf4
    910c:	11000002 	tstne	r0, r2
    9110:	13a70704 			; <UNDEFINED> instruction: 0x13a70704
    9114:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
    9118:	000001e5 	andeq	r0, r0, r5, ror #3
    911c:	0014f908 	andseq	pc, r4, r8, lsl #18
    9120:	bb032400 	bllt	d2128 <__Stack_Size+0xd1d28>
    9124:	0000033e 	andeq	r0, r0, lr, lsr r3
    9128:	0017fb09 	andseq	pc, r7, r9, lsl #22
    912c:	83bd0300 			; <UNDEFINED> instruction: 0x83bd0300
    9130:	00000002 	andeq	r0, r0, r2
    9134:	0016f709 	andseq	pc, r6, r9, lsl #14
    9138:	83be0300 			; <UNDEFINED> instruction: 0x83be0300
    913c:	04000002 	streq	r0, [r0], #-2
    9140:	00165b09 	andseq	r5, r6, r9, lsl #22
    9144:	83bf0300 			; <UNDEFINED> instruction: 0x83bf0300
    9148:	08000002 	stmdaeq	r0, {r1}
    914c:	00170d09 	andseq	r0, r7, r9, lsl #26
    9150:	83c00300 	bichi	r0, r0, #0, 6
    9154:	0c000002 	stceq	0, cr0, [r0], {2}
    9158:	00151109 	andseq	r1, r5, r9, lsl #2
    915c:	83c10300 	bichi	r0, r1, #0, 6
    9160:	10000002 	andne	r0, r0, r2
    9164:	0018bd09 	andseq	fp, r8, r9, lsl #26
    9168:	83c20300 	bichi	r0, r2, #0, 6
    916c:	14000002 	strne	r0, [r0], #-2
    9170:	00199d09 	andseq	r9, r9, r9, lsl #26
    9174:	83c30300 	bichi	r0, r3, #0, 6
    9178:	18000002 	stmdane	r0, {r1}
    917c:	0015a509 	andseq	sl, r5, r9, lsl #10
    9180:	83c40300 	bichi	r0, r4, #0, 6
    9184:	1c000002 	stcne	0, cr0, [r0], {2}
    9188:	00166d09 	andseq	r6, r6, r9, lsl #26
    918c:	83c50300 	bichi	r0, r5, #0, 6
    9190:	20000002 	andcs	r0, r0, r2
    9194:	14fa0700 	ldrbtne	r0, [sl], #1792	; 0x700
    9198:	c7030000 	strgt	r0, [r3, -r0]
    919c:	000002c5 	andeq	r0, r0, r5, asr #5
    91a0:	00037012 	andeq	r7, r3, r2, lsl r0
    91a4:	90350100 	eorsls	r0, r5, r0, lsl #2
    91a8:	34080019 	strcc	r0, [r8], #-25
    91ac:	01000000 	mrseq	r0, (UNDEF: 0)
    91b0:	13dd139c 	bicsne	r1, sp, #156, 6	; 0x70000002
    91b4:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    91b8:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
    91bc:	00356b13 	eorseq	r6, r5, r3, lsl fp
    91c0:	3eef0300 	cdpcc	3, 14, cr0, cr15, cr0, {0}
    91c4:	14000003 	strne	r0, [r0], #-3
    91c8:	00001959 	andeq	r1, r0, r9, asr r9
    91cc:	01da2701 	bicseq	r2, sl, r1, lsl #14
    91d0:	03050000 	movweq	r0, #20480	; 0x5000
    91d4:	200006f4 	strdcs	r0, [r0], -r4
    91d8:	00359d14 	eorseq	r9, r5, r4, lsl sp
    91dc:	53180100 	tstpl	r8, #0, 2
    91e0:	05000000 	streq	r0, [r0, #-0]
    91e4:	0006f003 	andeq	pc, r6, r3
    91e8:	15c71420 	strbne	r1, [r7, #1056]	; 0x420
    91ec:	1d010000 	stcne	0, cr0, [r1, #-0]
    91f0:	000003a3 	andeq	r0, r0, r3, lsr #7
    91f4:	07140305 	ldreq	r0, [r4, -r5, lsl #6]
    91f8:	04042000 	streq	r2, [r4], #-0
    91fc:	000001da 	ldrdeq	r0, [r0], -sl
    9200:	0035a514 	eorseq	sl, r5, r4, lsl r5
    9204:	ba200100 	blt	80960c <__Stack_Size+0x80920c>
    9208:	05000003 	streq	r0, [r0, #-3]
    920c:	0006ec03 	andeq	lr, r6, r3, lsl #24
    9210:	ba040420 	blt	10a298 <__Stack_Size+0x109e98>
    9214:	14000002 	strne	r0, [r0], #-2
    9218:	0000356a 	andeq	r3, r0, sl, ror #10
    921c:	03d12801 	bicseq	r2, r1, #65536	; 0x10000
    9220:	03050000 	movweq	r0, #20480	; 0x5000
    9224:	20000710 	andcs	r0, r0, r0, lsl r7
    9228:	033e0404 	teqeq	lr, #4, 8	; 0x4000000
    922c:	60140000 	andsvs	r0, r4, r0
    9230:	01000035 	tsteq	r0, r5, lsr r0
    9234:	00004125 	andeq	r4, r0, r5, lsr #2
    9238:	e8030500 	stmda	r3, {r8, sl}
    923c:	14200006 	strtne	r0, [r0], #-6
    9240:	00001a92 	muleq	r0, r2, sl
    9244:	00412601 	subeq	r2, r1, r1, lsl #12
    9248:	03050000 	movweq	r0, #20480	; 0x5000
    924c:	20000718 	andcs	r0, r0, r8, lsl r7
    9250:	000e2500 	andeq	r2, lr, r0, lsl #10
    9254:	99000400 	stmdbls	r0, {sl}
    9258:	0400001f 	streq	r0, [r0], #-31
    925c:	0002f401 	andeq	pc, r2, r1, lsl #8
    9260:	35cf0100 	strbcc	r0, [pc, #256]	; 9368 <__Stack_Size+0x8f68>
    9264:	03ec0000 	mvneq	r0, #0
    9268:	0c780000 	ldcleq	0, cr0, [r8], #-0
    926c:	00000000 	andeq	r0, r0, r0
    9270:	2b7e0000 	blcs	1f89278 <__Stack_Size+0x1f88e78>
    9274:	04020000 	streq	r0, [r2], #-0
    9278:	00082d05 	andeq	r2, r8, r5, lsl #26
    927c:	05020200 	streq	r0, [r2, #-512]	; 0x200
    9280:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    9284:	de060102 	adfles	f0, f6, f2
    9288:	03000009 	movweq	r0, #9
    928c:	00323375 	eorseq	r3, r2, r5, ror r3
    9290:	00452702 	subeq	r2, r5, r2, lsl #14
    9294:	04020000 	streq	r0, [r2], #-0
    9298:	00093a07 	andeq	r3, r9, r7, lsl #20
    929c:	31750300 	cmncc	r5, r0, lsl #6
    92a0:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    92a4:	00000057 	andeq	r0, r0, r7, asr r0
    92a8:	d7070202 	strle	r0, [r7, -r2, lsl #4]
    92ac:	0300000b 	movweq	r0, #11
    92b0:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    92b4:	00006829 	andeq	r6, r0, r9, lsr #16
    92b8:	08010200 	stmdaeq	r1, {r9}
    92bc:	000009dc 	ldrdeq	r0, [r0], -ip
    92c0:	3a020104 	bcc	896d8 <__Stack_Size+0x892d8>
    92c4:	00000084 	andeq	r0, r0, r4, lsl #1
    92c8:	00087505 	andeq	r7, r8, r5, lsl #10
    92cc:	1b050000 	blne	1492d4 <__Stack_Size+0x148ed4>
    92d0:	01000002 	tsteq	r0, r2
    92d4:	06030600 	streq	r0, [r3], -r0, lsl #12
    92d8:	3a020000 	bcc	892e0 <__Stack_Size+0x88ee0>
    92dc:	0000006f 	andeq	r0, r0, pc, rrx
    92e0:	31070402 	tstcc	r7, r2, lsl #8
    92e4:	07000009 	streq	r0, [r0, -r9]
    92e8:	00001607 	andeq	r1, r0, r7, lsl #12
    92ec:	bb160301 	bllt	589ef8 <__Stack_Size+0x589af8>
    92f0:	05000000 	streq	r0, [r0, #-0]
    92f4:	00001785 	andeq	r1, r0, r5, lsl #15
    92f8:	18a00500 	stmiane	r0!, {r8, sl}
    92fc:	05010000 	streq	r0, [r1, #-0]
    9300:	00001592 	muleq	r0, r2, r5
    9304:	19f60502 	ldmibne	r6!, {r1, r8, sl}^
    9308:	00030000 	andeq	r0, r3, r0
    930c:	0014fe07 	andseq	pc, r4, r7, lsl #28
    9310:	1f030100 	svcne	0x00030100
    9314:	0000011c 	andeq	r0, r0, ip, lsl r1
    9318:	00390f05 	eorseq	r0, r9, r5, lsl #30
    931c:	dd050000 	stcle	0, cr0, [r5, #-0]
    9320:	01000037 	tsteq	r0, r7, lsr r0
    9324:	0007c305 	andeq	ip, r7, r5, lsl #6
    9328:	76050200 	strvc	r0, [r5], -r0, lsl #4
    932c:	03000036 	movweq	r0, #54	; 0x36
    9330:	0007cd05 	andeq	ip, r7, r5, lsl #26
    9334:	d8050400 	stmdale	r5, {sl}
    9338:	05000036 	streq	r0, [r0, #-54]	; 0x36
    933c:	00383505 	eorseq	r3, r8, r5, lsl #10
    9340:	32050600 	andcc	r0, r5, #0, 12
    9344:	07000037 	smladxeq	r0, r7, r0, r0
    9348:	00395a05 	eorseq	r5, r9, r5, lsl #20
    934c:	b6050800 	strlt	r0, [r5], -r0, lsl #16
    9350:	09000039 	stmdbeq	r0, {r0, r3, r4, r5}
    9354:	0037a405 	eorseq	sl, r7, r5, lsl #8
    9358:	00050a00 	andeq	r0, r5, r0, lsl #20
    935c:	0b000038 	bleq	9444 <__Stack_Size+0x9044>
    9360:	0036fb05 	eorseq	pc, r6, r5, lsl #22
    9364:	e9050c00 	stmdb	r5, {sl, fp}
    9368:	0c000038 	stceq	0, cr0, [r0], {56}	; 0x38
    936c:	35be0700 	ldrcc	r0, [lr, #1792]!	; 0x700
    9370:	03010000 	movweq	r0, #4096	; 0x1000
    9374:	00014732 	andeq	r4, r1, r2, lsr r7
    9378:	396c0500 	stmdbcc	ip!, {r8, sl}^
    937c:	05010000 	streq	r0, [r1, #-0]
    9380:	0000364f 	andeq	r3, r0, pc, asr #12
    9384:	38440502 	stmdacc	r4, {r1, r8, sl}^
    9388:	05030000 	streq	r0, [r3, #-0]
    938c:	00003940 	andeq	r3, r0, r0, asr #18
    9390:	391a0504 	ldmdbcc	sl, {r2, r8, sl}
    9394:	00050000 	andeq	r0, r5, r0
    9398:	00368207 	eorseq	r8, r6, r7, lsl #4
    939c:	3c030100 	stfccs	f0, [r3], {-0}
    93a0:	00000160 	andeq	r0, r0, r0, ror #2
    93a4:	00379505 	eorseq	r9, r7, r5, lsl #10
    93a8:	94050000 	strls	r0, [r5], #-0
    93ac:	01000036 	tsteq	r0, r6, lsr r0
    93b0:	35af0700 	strcc	r0, [pc, #1792]!	; 9ab8 <__Stack_Size+0x96b8>
    93b4:	04010000 	streq	r0, [r1], #-0
    93b8:	0001a919 	andeq	sl, r1, r9, lsl r9
    93bc:	36b90500 	ldrtcc	r0, [r9], r0, lsl #10
    93c0:	05000000 	streq	r0, [r0, #-0]
    93c4:	00003760 	andeq	r3, r0, r0, ror #14
    93c8:	36d00501 	ldrbcc	r0, [r0], r1, lsl #10
    93cc:	05020000 	streq	r0, [r2, #-0]
    93d0:	00003605 	andeq	r3, r0, r5, lsl #12
    93d4:	36cb0503 	strbcc	r0, [fp], r3, lsl #10
    93d8:	05040000 	streq	r0, [r4, #-0]
    93dc:	00003600 	andeq	r3, r0, r0, lsl #12
    93e0:	38990505 	ldmcc	r9, {r0, r2, r8, sl}
    93e4:	05060000 	streq	r0, [r6, #-0]
    93e8:	000036a9 	andeq	r3, r0, r9, lsr #13
    93ec:	37eb0507 	strbcc	r0, [fp, r7, lsl #10]!
    93f0:	05080000 	streq	r0, [r8, #-0]
    93f4:	000038a8 	andeq	r3, r0, r8, lsr #17
    93f8:	df080009 	svcle	0x00080009
    93fc:	08000014 	stmdaeq	r0, {r2, r4}
    9400:	01ce2704 	biceq	r2, lr, r4, lsl #14
    9404:	4e090000 	cdpmi	0, 0, cr0, cr9, cr0, {0}
    9408:	04000017 	streq	r0, [r0], #-23
    940c:	0001ce29 	andeq	ip, r1, r9, lsr #28
    9410:	d9090000 	stmdble	r9, {}	; <UNPREDICTABLE>
    9414:	04000016 	streq	r0, [r0], #-22
    9418:	00004c2a 	andeq	r4, r0, sl, lsr #24
    941c:	0a000400 	beq	a424 <__Stack_Size+0xa024>
    9420:	00005e04 	andeq	r5, r0, r4, lsl #28
    9424:	17d00600 	ldrbne	r0, [r0, r0, lsl #12]
    9428:	2c040000 	stccs	0, cr0, [r4], {-0}
    942c:	000001a9 	andeq	r0, r0, r9, lsr #3
    9430:	0013f307 	andseq	pc, r3, r7, lsl #6
    9434:	30040100 	andcc	r0, r4, r0, lsl #2
    9438:	00000204 	andeq	r0, r0, r4, lsl #4
    943c:	00140705 	andseq	r0, r4, r5, lsl #14
    9440:	9d050000 	stcls	0, cr0, [r5, #-0]
    9444:	01000014 	tsteq	r0, r4, lsl r0
    9448:	00143005 	andseq	r3, r4, r5
    944c:	8f050200 	svchi	0x00050200
    9450:	03000014 	movweq	r0, #20
    9454:	13f40600 	mvnsne	r0, #0, 12
    9458:	37040000 	strcc	r0, [r4, -r0]
    945c:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    9460:	00184508 	andseq	r4, r8, r8, lsl #10
    9464:	3b040c00 	blcc	10c46c <__Stack_Size+0x10c06c>
    9468:	0000024c 	andeq	r0, r0, ip, asr #4
    946c:	0015bb09 	andseq	fp, r5, r9, lsl #22
    9470:	4c530400 	cfldrdmi	mvd0, [r3], {-0}
    9474:	00000000 	andeq	r0, r0, r0
    9478:	00199109 	andseq	r9, r9, r9, lsl #2
    947c:	4c540400 	cfldrdmi	mvd0, [r4], {-0}
    9480:	02000000 	andeq	r0, r0, #0
    9484:	00374d09 	eorseq	r4, r7, r9, lsl #26
    9488:	4c550400 	cfldrdmi	mvd0, [r5], {-0}
    948c:	04000000 	streq	r0, [r0], #-0
    9490:	0018b409 	andseq	fp, r8, r9, lsl #8
    9494:	5b560400 	blpl	158a49c <__Stack_Size+0x158a09c>
    9498:	08000002 	stmdaeq	r0, {r1}
    949c:	01ce0b00 	biceq	r0, lr, r0, lsl #22
    94a0:	025b0000 	subseq	r0, fp, #0
    94a4:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    94a8:	00000000 	andeq	r0, r0, r0
    94ac:	024c040a 	subeq	r0, ip, #167772160	; 0xa000000
    94b0:	46060000 	strmi	r0, [r6], -r0
    94b4:	04000018 	streq	r0, [r0], #-24
    94b8:	00020f57 	andeq	r0, r2, r7, asr pc
    94bc:	188b0800 	stmne	fp, {fp}
    94c0:	04020000 	streq	r0, [r2], #-0
    94c4:	0002915b 	andeq	r9, r2, fp, asr r1
    94c8:	16b30900 	ldrtne	r0, [r3], r0, lsl #18
    94cc:	5d040000 	stcpl	0, cr0, [r4, #-0]
    94d0:	0000005e 	andeq	r0, r0, lr, asr r0
    94d4:	17df0900 	ldrbne	r0, [pc, r0, lsl #18]
    94d8:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
    94dc:	0000005e 	andeq	r0, r0, lr, asr r0
    94e0:	8c060001 	stchi	0, cr0, [r6], {1}
    94e4:	04000018 	streq	r0, [r0], #-24
    94e8:	00026c60 	andeq	r6, r2, r0, ror #24
    94ec:	57420d00 	strbpl	r0, [r2, -r0, lsl #26]
    94f0:	65040200 	strvs	r0, [r4, #-512]	; 0x200
    94f4:	000002c0 	andeq	r0, r0, r0, asr #5
    94f8:	3162620e 	cmncc	r2, lr, lsl #4
    94fc:	5e670400 	cdppl	4, 6, cr0, cr7, cr0, {0}
    9500:	00000000 	andeq	r0, r0, r0
    9504:	3062620e 	rsbcc	r6, r2, lr, lsl #4
    9508:	5e680400 	cdppl	4, 6, cr0, cr8, cr0, {0}
    950c:	01000000 	mrseq	r0, (UNDEF: 0)
    9510:	04020f00 	streq	r0, [r2], #-3840	; 0xf00
    9514:	0002dc62 	andeq	sp, r2, r2, ror #24
    9518:	00771000 	rsbseq	r1, r7, r0
    951c:	004c6404 	subeq	r6, ip, r4, lsl #8
    9520:	62100000 	andsvs	r0, r0, #0
    9524:	6a040077 	bvs	109708 <__Stack_Size+0x109308>
    9528:	0000029c 	muleq	r0, ip, r2
    952c:	1a060600 	bne	18ad34 <__Stack_Size+0x18a934>
    9530:	6b040000 	blvs	109538 <__Stack_Size+0x109138>
    9534:	000002c0 	andeq	r0, r0, r0, asr #5
    9538:	00153808 	andseq	r3, r5, r8, lsl #16
    953c:	6d041c00 	stcvs	12, cr1, [r4, #-0]
    9540:	00000378 	andeq	r0, r0, r8, ror r3
    9544:	0018f409 	andseq	pc, r8, r9, lsl #8
    9548:	5e6f0400 	cdppl	4, 6, cr0, cr15, cr0, {0}
    954c:	00000000 	andeq	r0, r0, r0
    9550:	0014a709 	andseq	sl, r4, r9, lsl #14
    9554:	5e700400 	cdppl	4, 7, cr0, cr0, cr0, {0}
    9558:	01000000 	mrseq	r0, (UNDEF: 0)
    955c:	00168309 	andseq	r8, r6, r9, lsl #6
    9560:	dc710400 	cfldrdle	mvd0, [r1], #-0
    9564:	02000002 	andeq	r0, r0, #2
    9568:	00155e09 	andseq	r5, r5, r9, lsl #28
    956c:	dc720400 	cfldrdle	mvd0, [r2], #-0
    9570:	04000002 	streq	r0, [r0], #-2
    9574:	00176309 	andseq	r6, r7, r9, lsl #6
    9578:	dc730400 	cfldrdle	mvd0, [r3], #-0
    957c:	06000002 	streq	r0, [r0], -r2
    9580:	00189309 	andseq	r9, r8, r9, lsl #6
    9584:	5e750400 	cdppl	4, 7, cr0, cr5, cr0, {0}
    9588:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    958c:	00198109 	andseq	r8, r9, r9, lsl #2
    9590:	5e760400 	cdppl	4, 7, cr0, cr6, cr0, {0}
    9594:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9598:	00176f09 	andseq	r6, r7, r9, lsl #30
    959c:	5e770400 	cdppl	4, 7, cr0, cr7, cr0, {0}
    95a0:	0a000000 	beq	95a8 <__Stack_Size+0x91a8>
    95a4:	0017bd09 	andseq	fp, r7, r9, lsl #26
    95a8:	5e780400 	cdppl	4, 7, cr0, cr8, cr0, {0}
    95ac:	0b000000 	bleq	95b4 <__Stack_Size+0x91b4>
    95b0:	00182c09 	andseq	r2, r8, r9, lsl #24
    95b4:	5e790400 	cdppl	4, 7, cr0, cr9, cr0, {0}
    95b8:	0c000000 	stceq	0, cr0, [r0], {-0}
    95bc:	00196509 	andseq	r6, r9, r9, lsl #10
    95c0:	617c0400 	cmnvs	ip, r0, lsl #8
    95c4:	10000002 	andne	r0, r0, r2
    95c8:	15390600 	ldrne	r0, [r9, #-1536]!	; 0x600
    95cc:	7d040000 	stcvc	0, cr0, [r4, #-0]
    95d0:	000002e7 	andeq	r0, r0, r7, ror #5
    95d4:	0013a608 	andseq	sl, r3, r8, lsl #12
    95d8:	7f043000 	svcvc	0x00043000
    95dc:	00000420 	andeq	r0, r0, r0, lsr #8
    95e0:	00298209 	eoreq	r8, r9, r9, lsl #4
    95e4:	21810400 	orrcs	r0, r1, r0, lsl #8
    95e8:	00000004 	andeq	r0, r0, r4
    95ec:	0016d309 	andseq	sp, r6, r9, lsl #6
    95f0:	21820400 	orrcs	r0, r2, r0, lsl #8
    95f4:	04000004 	streq	r0, [r0], #-4
    95f8:	00147609 	andseq	r7, r4, r9, lsl #12
    95fc:	21850400 	orrcs	r0, r5, r0, lsl #8
    9600:	08000004 	stmdaeq	r0, {r2}
    9604:	00141309 	andseq	r1, r4, r9, lsl #6
    9608:	21860400 	orrcs	r0, r6, r0, lsl #8
    960c:	0c000004 	stceq	0, cr0, [r0], {4}
    9610:	00144909 	andseq	r4, r4, r9, lsl #18
    9614:	36980400 	ldrcc	r0, [r8], r0, lsl #8
    9618:	10000004 	andne	r0, r0, r4
    961c:	0013ca09 	andseq	ip, r3, r9, lsl #20
    9620:	36a30400 	strtcc	r0, [r3], r0, lsl #8
    9624:	14000004 	strne	r0, [r0], #-4
    9628:	00145a09 	andseq	r5, r4, r9, lsl #20
    962c:	50ad0400 	adcpl	r0, sp, r0, lsl #8
    9630:	18000004 	stmdane	r0, {r2}
    9634:	00169f09 	andseq	r9, r6, r9, lsl #30
    9638:	5baf0400 	blpl	febca640 <SCS_BASE+0x1ebbc640>
    963c:	1c000002 	stcne	0, cr0, [r0], {2}
    9640:	0019e209 	andseq	lr, r9, r9, lsl #4
    9644:	5bb00400 	blpl	fec0a64c <SCS_BASE+0x1ebfc64c>
    9648:	20000002 	andcs	r0, r0, r2
    964c:	0018e009 	andseq	lr, r8, r9
    9650:	5bb10400 	blpl	fec4a658 <SCS_BASE+0x1ec3c658>
    9654:	24000002 	strcs	r0, [r0], #-2
    9658:	0013b309 	andseq	fp, r3, r9, lsl #6
    965c:	56b50400 	ldrtpl	r0, [r5], r0, lsl #8
    9660:	28000004 	stmdacs	r0, {r2}
    9664:	00374a09 	eorseq	r4, r7, r9, lsl #20
    9668:	5eb70400 	cdppl	4, 11, cr0, cr7, cr0, {0}
    966c:	2c000000 	stccs	0, cr0, [r0], {-0}
    9670:	040a1100 	streq	r1, [sl], #-256	; 0x100
    9674:	00000420 	andeq	r0, r0, r0, lsr #8
    9678:	0002040b 	andeq	r0, r2, fp, lsl #8
    967c:	00043600 	andeq	r3, r4, r0, lsl #12
    9680:	005e0c00 	subseq	r0, lr, r0, lsl #24
    9684:	0a000000 	beq	968c <__Stack_Size+0x928c>
    9688:	00042704 	andeq	r2, r4, r4, lsl #14
    968c:	02040b00 	andeq	r0, r4, #0, 22
    9690:	04500000 	ldrbeq	r0, [r0], #-0
    9694:	5e0c0000 	cdppl	0, 0, cr0, cr12, cr0, {0}
    9698:	0c000000 	stceq	0, cr0, [r0], {-0}
    969c:	0000005e 	andeq	r0, r0, lr, asr r0
    96a0:	3c040a00 	stccc	10, cr0, [r4], {-0}
    96a4:	12000004 	andne	r0, r0, #4
    96a8:	13a70604 			; <UNDEFINED> instruction: 0x13a70604
    96ac:	b9040000 	stmdblt	r4, {}	; <UNPREDICTABLE>
    96b0:	00000383 	andeq	r0, r0, r3, lsl #7
    96b4:	0014f908 	andseq	pc, r4, r8, lsl #18
    96b8:	bb042400 	bllt	1126c0 <__Stack_Size+0x1122c0>
    96bc:	000004dc 	ldrdeq	r0, [r0], -ip
    96c0:	0017fb09 	andseq	pc, r7, r9, lsl #22
    96c4:	21bd0400 			; <UNDEFINED> instruction: 0x21bd0400
    96c8:	00000004 	andeq	r0, r0, r4
    96cc:	0016f709 	andseq	pc, r6, r9, lsl #14
    96d0:	21be0400 			; <UNDEFINED> instruction: 0x21be0400
    96d4:	04000004 	streq	r0, [r0], #-4
    96d8:	00165b09 	andseq	r5, r6, r9, lsl #22
    96dc:	21bf0400 			; <UNDEFINED> instruction: 0x21bf0400
    96e0:	08000004 	stmdaeq	r0, {r2}
    96e4:	00170d09 	andseq	r0, r7, r9, lsl #26
    96e8:	21c00400 	biccs	r0, r0, r0, lsl #8
    96ec:	0c000004 	stceq	0, cr0, [r0], {4}
    96f0:	00151109 	andseq	r1, r5, r9, lsl #2
    96f4:	21c10400 	biccs	r0, r1, r0, lsl #8
    96f8:	10000004 	andne	r0, r0, r4
    96fc:	0018bd09 	andseq	fp, r8, r9, lsl #26
    9700:	21c20400 	biccs	r0, r2, r0, lsl #8
    9704:	14000004 	strne	r0, [r0], #-4
    9708:	00199d09 	andseq	r9, r9, r9, lsl #26
    970c:	21c30400 	biccs	r0, r3, r0, lsl #8
    9710:	18000004 	stmdane	r0, {r2}
    9714:	0015a509 	andseq	sl, r5, r9, lsl #10
    9718:	21c40400 	biccs	r0, r4, r0, lsl #8
    971c:	1c000004 	stcne	0, cr0, [r0], {4}
    9720:	00166d09 	andseq	r6, r6, r9, lsl #26
    9724:	21c50400 	biccs	r0, r5, r0, lsl #8
    9728:	20000004 	andcs	r0, r0, r4
    972c:	14fa0600 	ldrbtne	r0, [sl], #1536	; 0x600
    9730:	c7040000 	strgt	r0, [r4, -r0]
    9734:	00000463 	andeq	r0, r0, r3, ror #8
    9738:	0038ae13 	eorseq	sl, r8, r3, lsl lr
    973c:	04800100 	streq	r0, [r0], #256	; 0x100
    9740:	01000002 	tsteq	r0, r2
    9744:	00000502 	andeq	r0, r0, r2, lsl #10
    9748:	00655214 	rsbeq	r5, r5, r4, lsl r2
    974c:	02048201 	andeq	r8, r4, #268435456	; 0x10000000
    9750:	15000000 	strne	r0, [r0, #-0]
    9754:	00003635 	andeq	r3, r0, r5, lsr r6
    9758:	01ce3d01 	biceq	r3, lr, r1, lsl #26
    975c:	19c40000 	stmibne	r4, {}^	; <UNPREDICTABLE>
    9760:	00240800 	eoreq	r0, r4, r0, lsl #16
    9764:	9c010000 	stcls	0, cr0, [r1], {-0}
    9768:	0000052b 	andeq	r0, r0, fp, lsr #10
    976c:	003d3916 	eorseq	r3, sp, r6, lsl r9
    9770:	4c3d0100 	ldfmis	f0, [sp], #-0
    9774:	b6000000 	strlt	r0, [r0], -r0
    9778:	00000049 	andeq	r0, r0, r9, asr #32
    977c:	00380e15 	eorseq	r0, r8, r5, lsl lr
    9780:	ce6b0100 	powgte	f0, f3, f0
    9784:	e8000001 	stmda	r0, {r0}
    9788:	24080019 	strcs	r0, [r8], #-25
    978c:	01000000 	mrseq	r0, (UNDEF: 0)
    9790:	0005549c 	muleq	r5, ip, r4
    9794:	3d391600 	ldccc	6, cr1, [r9, #-0]
    9798:	6b010000 	blvs	497a0 <__Stack_Size+0x493a0>
    979c:	0000004c 	andeq	r0, r0, ip, asr #32
    97a0:	000049d7 	ldrdeq	r4, [r0], -r7
    97a4:	397e1500 	ldmdbcc	lr!, {r8, sl, ip}^
    97a8:	a3010000 	movwge	r0, #4096	; 0x1000
    97ac:	000001ce 	andeq	r0, r0, lr, asr #3
    97b0:	08001a0c 	stmdaeq	r0, {r2, r3, r9, fp, ip}
    97b4:	00000090 	muleq	r0, r0, r0
    97b8:	05c29c01 	strbeq	r9, [r2, #3073]	; 0xc01
    97bc:	39160000 	ldmdbcc	r6, {}	; <UNPREDICTABLE>
    97c0:	0100003d 	tsteq	r0, sp, lsr r0
    97c4:	00004ca3 	andeq	r4, r0, r3, lsr #25
    97c8:	0049f800 	subeq	pc, r9, r0, lsl #16
    97cc:	1a2c1700 	bne	b0f3d4 <__Stack_Size+0xb0efd4>
    97d0:	001c0800 	andseq	r0, ip, r0, lsl #16
    97d4:	05990000 	ldreq	r0, [r9]
    97d8:	89180000 	ldmdbhi	r8, {}	; <UNPREDICTABLE>
    97dc:	01000019 	tsteq	r0, r9, lsl r0
    97e0:	00005eb1 			; <UNDEFINED> instruction: 0x00005eb1
    97e4:	004a1900 	subeq	r1, sl, r0, lsl #18
    97e8:	50190000 	andspl	r0, r9, r0
    97ec:	3008001a 	andcc	r0, r8, sl, lsl r0
    97f0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    97f4:	00003824 	andeq	r3, r0, r4, lsr #16
    97f8:	005ecf01 	subseq	ip, lr, r1, lsl #30
    97fc:	4a380000 	bmi	e09804 <__Stack_Size+0xe09404>
    9800:	0a180000 	beq	609808 <__Stack_Size+0x609408>
    9804:	01000037 	tsteq	r0, r7, lsr r0
    9808:	00005ed0 	ldrdeq	r5, [r0], -r0
    980c:	004a6900 	subeq	r6, sl, r0, lsl #18
    9810:	1a000000 	bne	9818 <__Stack_Size+0x9418>
    9814:	00003856 	andeq	r3, r0, r6, asr r8
    9818:	9c01f401 	cfstrsls	mvf15, [r1], {1}
    981c:	ac08001a 	stcge	0, cr0, [r8], {26}
    9820:	01000000 	mrseq	r0, (UNDEF: 0)
    9824:	0006879c 	muleq	r6, ip, r7
    9828:	37581b00 	ldrbcc	r1, [r8, -r0, lsl #22]
    982c:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    9830:	00068701 	andeq	r8, r6, r1, lsl #14
    9834:	004a8700 	subeq	r8, sl, r0, lsl #14
    9838:	37121b00 	ldrcc	r1, [r2, -r0, lsl #22]
    983c:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    9840:	00003a01 	andeq	r3, r0, r1, lsl #20
    9844:	004a9c00 	subeq	r9, sl, r0, lsl #24
    9848:	18931b00 	ldmne	r3, {r8, r9, fp, ip}
    984c:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    9850:	00003a01 	andeq	r3, r0, r1, lsl #20
    9854:	004ae000 	subeq	lr, sl, r0
    9858:	06eb1b00 	strbteq	r1, [fp], r0, lsl #22
    985c:	fa010000 	blx	49864 <__Stack_Size+0x49464>
    9860:	0001ce01 	andeq	ip, r1, r1, lsl #28
    9864:	004b2b00 	subeq	r2, fp, r0, lsl #22
    9868:	3d391b00 	vldmdbcc	r9!, {d1-d0}
    986c:	fb010000 	blx	49876 <__Stack_Size+0x49476>
    9870:	00003a01 	andeq	r3, r0, r1, lsl #20
    9874:	004b4900 	subeq	r4, fp, r0, lsl #18
    9878:	38871c00 	stmcc	r7, {sl, fp, ip}
    987c:	2f010000 	svccs	0x00010000
    9880:	001b2802 	andseq	r2, fp, r2, lsl #16
    9884:	1af41d08 	bne	ffd10cac <SCS_BASE+0x1fd02cac>
    9888:	06440800 	strbeq	r0, [r4], -r0, lsl #16
    988c:	011e0000 	tsteq	lr, r0
    9890:	00740250 	rsbseq	r0, r4, r0, asr r2
    9894:	1afc1f00 	bne	fff1149c <SCS_BASE+0x1ff0349c>
    9898:	0d4b0800 	stcleq	8, cr0, [fp, #-0]
    989c:	06570000 	ldrbeq	r0, [r7], -r0
    98a0:	011e0000 	tsteq	lr, r0
    98a4:	00300150 	eorseq	r0, r0, r0, asr r1
    98a8:	001b061f 	andseq	r0, fp, pc, lsl r6
    98ac:	000d6108 	andeq	r6, sp, r8, lsl #2
    98b0:	00067100 	andeq	r7, r6, r0, lsl #2
    98b4:	52011e00 	andpl	r1, r1, #0, 28
    98b8:	1e007402 	cdpne	4, 0, cr7, cr0, cr2, {0}
    98bc:	79025001 	stmdbvc	r2, {r0, ip, lr}
    98c0:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
    98c4:	7c08001b 	stcvc	0, cr0, [r8], {27}
    98c8:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    98cc:	74025101 	strvc	r5, [r2], #-257	; 0x101
    98d0:	50011e00 	andpl	r1, r1, r0, lsl #28
    98d4:	00003001 	andeq	r3, r0, r1
    98d8:	0261040a 	rsbeq	r0, r1, #167772160	; 0xa000000
    98dc:	9c210000 	stcls	0, cr0, [r1], #-0
    98e0:	01000039 	tsteq	r0, r9, lsr r0
    98e4:	00020452 	andeq	r0, r2, r2, asr r4
    98e8:	001b4800 	andseq	r4, fp, r0, lsl #16
    98ec:	00003808 	andeq	r3, r0, r8, lsl #16
    98f0:	229c0100 	addscs	r0, ip, #0, 2
    98f4:	000004e7 	andeq	r0, r0, r7, ror #9
    98f8:	08001b80 	stmdaeq	r0, {r7, r8, r9, fp, ip}
    98fc:	00000048 	andeq	r0, r0, r8, asr #32
    9900:	06ce9c01 	strbeq	r9, [lr], r1, lsl #24
    9904:	f7230000 			; <UNDEFINED> instruction: 0xf7230000
    9908:	ce000004 	cdpgt	0, 0, cr0, cr0, cr4, {0}
    990c:	1900004b 	stmdbne	r0, {r0, r1, r3, r6}
    9910:	08001ba2 	stmdaeq	r0, {r1, r5, r7, r8, r9, fp, ip}
    9914:	00000016 	andeq	r0, r0, r6, lsl r0
    9918:	0004f724 	andeq	pc, r4, r4, lsr #14
    991c:	15000000 	strne	r0, [r0, #-0]
    9920:	000035ea 	andeq	r3, r0, sl, ror #11
    9924:	0204f501 	andeq	pc, r4, #4194304	; 0x400000
    9928:	1bc80000 	blne	ff209930 <SCS_BASE+0x1f1fb930>
    992c:	00d80800 	sbcseq	r0, r8, r0, lsl #16
    9930:	9c010000 	stcls	0, cr0, [r1], {-0}
    9934:	000007aa 	andeq	r0, r0, sl, lsr #15
    9938:	00361b18 	eorseq	r1, r6, r8, lsl fp
    993c:	3af70100 	bcc	ffdc9d44 <SCS_BASE+0x1fdbbd44>
    9940:	ec000000 	stc	0, cr0, [r0], {-0}
    9944:	1800004b 	stmdane	r0, {r0, r1, r3, r6}
    9948:	000026b4 			; <UNDEFINED> instruction: 0x000026b4
    994c:	003af801 	eorseq	pc, sl, r1, lsl #16
    9950:	4c240000 	stcmi	0, cr0, [r4], #-0
    9954:	e4190000 	ldr	r0, [r9], #-0
    9958:	a808001b 	stmdage	r8, {r0, r1, r3, r4}
    995c:	25000000 	strcs	r0, [r0, #-0]
    9960:	00003955 	andeq	r3, r0, r5, asr r9
    9964:	aa010201 	bge	4a170 <__Stack_Size+0x49d70>
    9968:	1b000007 	blne	998c <__Stack_Size+0x958c>
    996c:	00003824 	andeq	r3, r0, r4, lsr #16
    9970:	3a010301 	bcc	4a57c <__Stack_Size+0x4a17c>
    9974:	37000000 	strcc	r0, [r0, -r0]
    9978:	1b00004c 	blne	9ab0 <__Stack_Size+0x96b0>
    997c:	0000370a 	andeq	r3, r0, sl, lsl #14
    9980:	3a010401 	bcc	4a98c <__Stack_Size+0x4a58c>
    9984:	71000000 	mrsvc	r0, (UNDEF: 0)
    9988:	2600004c 	strcs	r0, [r0], -ip, asr #32
    998c:	00504572 	subseq	r4, r0, r2, ror r5
    9990:	3a010501 	bcc	4ad9c <__Stack_Size+0x4a99c>
    9994:	37000000 	strcc	r0, [r0, -r0]
    9998:	1700004c 	strne	r0, [r0, -ip, asr #32]
    999c:	08001c66 	stmdaeq	r0, {r1, r2, r5, r6, sl, fp, ip}
    99a0:	0000001a 	andeq	r0, r0, sl, lsl r0
    99a4:	00000768 	andeq	r0, r0, r8, ror #14
    99a8:	00386f1b 	eorseq	r6, r8, fp, lsl pc
    99ac:	013f0100 	teqeq	pc, r0, lsl #2
    99b0:	0000004c 	andeq	r0, r0, ip, asr #32
    99b4:	00004ca9 	andeq	r4, r0, r9, lsr #25
    99b8:	1c401f00 	mcrrne	15, 0, r1, r0, cr0
    99bc:	0d930800 	ldceq	8, cr0, [r3]
    99c0:	077c0000 	ldrbeq	r0, [ip, -r0]!
    99c4:	011e0000 	tsteq	lr, r0
    99c8:	00740250 	rsbseq	r0, r4, r0, asr r2
    99cc:	1c481f00 	mcrrne	15, 0, r1, r8, cr0
    99d0:	0da50800 	stceq	8, cr0, [r5]
    99d4:	07960000 	ldreq	r0, [r6, r0]
    99d8:	011e0000 	tsteq	lr, r0
    99dc:	30080251 	andcc	r0, r8, r1, asr r2
    99e0:	0250011e 	subseq	r0, r0, #-2147483641	; 0x80000007
    99e4:	27000074 	smlsdxcs	r0, r4, r0, r0
    99e8:	08001c60 	stmdaeq	r0, {r5, r6, sl, fp, ip}
    99ec:	00000dbc 			; <UNDEFINED> instruction: 0x00000dbc
    99f0:	001c6627 	andseq	r6, ip, r7, lsr #12
    99f4:	000dd308 	andeq	sp, sp, r8, lsl #6
    99f8:	0a000000 	beq	9a00 <__Stack_Size+0x9600>
    99fc:	00029104 	andeq	r9, r2, r4, lsl #2
    9a00:	376b2800 	strbcc	r2, [fp, -r0, lsl #16]!
    9a04:	52010000 	andpl	r0, r1, #0
    9a08:	00020401 	andeq	r0, r2, r1, lsl #8
    9a0c:	001ca000 	andseq	sl, ip, r0
    9a10:	00008c08 	andeq	r8, r0, r8, lsl #24
    9a14:	379c0100 	ldrcc	r0, [ip, r0, lsl #2]
    9a18:	1b000008 	blne	9a40 <__Stack_Size+0x9640>
    9a1c:	0000370a 	andeq	r3, r0, sl, lsl #14
    9a20:	3a015401 	bcc	5ea2c <__Stack_Size+0x5e62c>
    9a24:	d7000000 	strle	r0, [r0, -r0]
    9a28:	1b00004c 	blne	9b60 <__Stack_Size+0x9760>
    9a2c:	00003824 	andeq	r3, r0, r4, lsr #16
    9a30:	3a015501 	bcc	5ee3c <__Stack_Size+0x5ea3c>
    9a34:	11000000 	mrsne	r0, (UNDEF: 0)
    9a38:	2600004d 	strcs	r0, [r0], -sp, asr #32
    9a3c:	00504572 	subseq	r4, r0, r2, ror r5
    9a40:	3a015601 	bcc	5f24c <__Stack_Size+0x5ee4c>
    9a44:	11000000 	mrsne	r0, (UNDEF: 0)
    9a48:	1b00004d 	blne	9b84 <__Stack_Size+0x9784>
    9a4c:	000026b4 			; <UNDEFINED> instruction: 0x000026b4
    9a50:	3a015701 	bcc	5f65c <__Stack_Size+0x5f25c>
    9a54:	5c000000 	stcpl	0, cr0, [r0], {-0}
    9a58:	2900004d 	stmdbcs	r0, {r0, r2, r3, r6}
    9a5c:	00000c08 	andeq	r0, r0, r8, lsl #24
    9a60:	00000820 	andeq	r0, r0, r0, lsr #16
    9a64:	00386f25 	eorseq	r6, r8, r5, lsr #30
    9a68:	01730100 	cmneq	r3, r0, lsl #2
    9a6c:	0000004c 	andeq	r0, r0, ip, asr #32
    9a70:	0c382a00 	ldceq	10, cr2, [r8], #-0
    9a74:	6f1b0000 	svcvs	0x001b0000
    9a78:	01000038 	tsteq	r0, r8, lsr r0
    9a7c:	004c0179 	subeq	r0, ip, r9, ror r1
    9a80:	4d6f0000 	stclmi	0, cr0, [pc, #-0]	; 9a88 <__Stack_Size+0x9688>
    9a84:	00000000 	andeq	r0, r0, r0
    9a88:	0038cf2b 	eorseq	ip, r8, fp, lsr #30
    9a8c:	01880100 	orreq	r0, r8, r0, lsl #2
    9a90:	00000204 	andeq	r0, r0, r4, lsl #4
    9a94:	08001d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp, ip}
    9a98:	00000024 	andeq	r0, r0, r4, lsr #32
    9a9c:	172c9c01 	strne	r9, [ip, -r1, lsl #24]!
    9aa0:	01000016 	tsteq	r0, r6, lsl r0
    9aa4:	01ce01a2 	biceq	r0, lr, r2, lsr #3
    9aa8:	1d500000 	ldclne	0, cr0, [r0, #-0]
    9aac:	001c0800 	andseq	r0, ip, r0, lsl #16
    9ab0:	9c010000 	stcls	0, cr0, [r1], {-0}
    9ab4:	00000894 	muleq	r0, r4, r8
    9ab8:	003d392d 	eorseq	r3, sp, sp, lsr #18
    9abc:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    9ac0:	0000004c 	andeq	r0, r0, ip, asr #32
    9ac4:	00004d88 	andeq	r4, r0, r8, lsl #27
    9ac8:	0039092e 	eorseq	r0, r9, lr, lsr #18
    9acc:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    9ad0:	00000894 	muleq	r0, r4, r8
    9ad4:	952f5101 	strls	r5, [pc, #-257]!	; 99db <__Stack_Size+0x95db>
    9ad8:	01000019 	tsteq	r0, r9, lsl r0
    9adc:	003a01a4 	eorseq	r0, sl, r4, lsr #3
    9ae0:	52010000 	andpl	r0, r1, #0
    9ae4:	d4040a00 	strle	r0, [r4], #-2560	; 0xa00
    9ae8:	2c000001 	stccs	0, cr0, [r0], {1}
    9aec:	00003787 	andeq	r3, r0, r7, lsl #15
    9af0:	5e03f601 	cfmadd32pl	mvax0, mvfx15, mvfx3, mvfx1
    9af4:	6c000000 	stcvs	0, cr0, [r0], {-0}
    9af8:	4408001d 	strmi	r0, [r8], #-29
    9afc:	01000000 	mrseq	r0, (UNDEF: 0)
    9b00:	0008c49c 	muleq	r8, ip, r4
    9b04:	1d7a2000 	ldclne	0, cr2, [sl, #-0]
    9b08:	0dbc0800 	ldceq	8, cr0, [ip]
    9b0c:	011e0000 	tsteq	lr, r0
    9b10:	00300150 	eorseq	r0, r0, r0, asr r1
    9b14:	37243000 	strcc	r3, [r4, -r0]!
    9b18:	3a010000 	bcc	49b20 <__Stack_Size+0x49720>
    9b1c:	08fe0102 	ldmeq	lr!, {r1, r8}^
    9b20:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    9b24:	01000039 	tsteq	r0, r9, lsr r0
    9b28:	0204023c 	andeq	r0, r4, #60, 4	; 0xc0000003
    9b2c:	59250000 	stmdbpl	r5!, {}	; <UNPREDICTABLE>
    9b30:	01000017 	tsteq	r0, r7, lsl r0
    9b34:	003a023d 	eorseq	r0, sl, sp, lsr r2
    9b38:	93250000 	teqls	r5, #0
    9b3c:	01000018 	tsteq	r0, r8, lsl r0
    9b40:	003a023e 	eorseq	r0, sl, lr, lsr r2
    9b44:	1f310000 	svcne	0x00310000
    9b48:	01000037 	tsteq	r0, r7, lsr r0
    9b4c:	300002ae 	andcc	r0, r0, lr, lsr #5
    9b50:	00003726 	andeq	r3, r0, r6, lsr #14
    9b54:	0102ba01 	tsteq	r2, r1, lsl #20
    9b58:	00000980 	andeq	r0, r0, r0, lsl #19
    9b5c:	00187625 	andseq	r7, r8, r5, lsr #12
    9b60:	02bc0100 	adcseq	r0, ip, #0, 2
    9b64:	0000025b 	andeq	r0, r0, fp, asr r2
    9b68:	00392e25 	eorseq	r2, r9, r5, lsr #28
    9b6c:	02bd0100 	adcseq	r0, sp, #0, 2
    9b70:	00000204 	andeq	r0, r0, r4, lsl #4
    9b74:	0038c425 	eorseq	ip, r8, r5, lsr #8
    9b78:	02be0100 	adcseq	r0, lr, #0, 2
    9b7c:	0000003a 	andeq	r0, r0, sl, lsr r0
    9b80:	00382425 	eorseq	r2, r8, r5, lsr #8
    9b84:	02c00100 	sbceq	r0, r0, #0, 2
    9b88:	0000003a 	andeq	r0, r0, sl, lsr r0
    9b8c:	00366125 	eorseq	r6, r6, r5, lsr #2
    9b90:	02c00100 	sbceq	r0, r0, #0, 2
    9b94:	0000003a 	andeq	r0, r0, sl, lsr r0
    9b98:	00199525 	andseq	r9, r9, r5, lsr #10
    9b9c:	02c10100 	sbceq	r0, r1, #0, 2
    9ba0:	0000003a 	andeq	r0, r0, sl, lsr r0
    9ba4:	0026b425 	eoreq	fp, r6, r5, lsr #8
    9ba8:	02c10100 	sbceq	r0, r1, #0, 2
    9bac:	0000003a 	andeq	r0, r0, sl, lsr r0
    9bb0:	00097132 	andeq	r7, r9, r2, lsr r1
    9bb4:	37b22500 	ldrcc	r2, [r2, r0, lsl #10]!
    9bb8:	cd010000 	stcgt	0, cr0, [r1, #-0]
    9bbc:	00005e02 	andeq	r5, r0, r2, lsl #28
    9bc0:	25330000 	ldrcs	r0, [r3, #-0]!
    9bc4:	000015bf 			; <UNDEFINED> instruction: 0x000015bf
    9bc8:	80034601 	andhi	r4, r3, r1, lsl #12
    9bcc:	00000009 	andeq	r0, r0, r9
    9bd0:	003a3400 	eorseq	r3, sl, r0, lsl #8
    9bd4:	78280000 	stmdavc	r8!, {}	; <UNPREDICTABLE>
    9bd8:	01000038 	tsteq	r0, r8, lsr r0
    9bdc:	005e036d 	subseq	r0, lr, sp, ror #6
    9be0:	1db00000 	ldcne	0, cr0, [r0]
    9be4:	02dc0800 	sbcseq	r0, ip, #0, 16
    9be8:	9c010000 	stcls	0, cr0, [r1], {-0}
    9bec:	00000b12 	andeq	r0, r0, r2, lsl fp
    9bf0:	70010435 	andvc	r0, r1, r5, lsr r4
    9bf4:	0009bd03 	andeq	fp, r9, r3, lsl #26
    9bf8:	00623600 	rsbeq	r3, r2, r0, lsl #12
    9bfc:	ce037201 	cdpgt	2, 0, cr7, cr3, cr1, {0}
    9c00:	36000001 	strcc	r0, [r0], -r1
    9c04:	73010077 	movwvc	r0, #4215	; 0x1077
    9c08:	000b1203 	andeq	r1, fp, r3, lsl #4
    9c0c:	241b0000 	ldrcs	r0, [fp], #-0
    9c10:	01000036 	tsteq	r0, r6, lsr r0
    9c14:	099f0374 	ldmibeq	pc, {r2, r4, r5, r6, r8, r9}	; <UNPREDICTABLE>
    9c18:	4da90000 	stcmi	0, cr0, [r9]
    9c1c:	c4370000 	ldrtgt	r0, [r7], #-0
    9c20:	01000036 	tsteq	r0, r6, lsr r0
    9c24:	004c037d 	subeq	r0, ip, sp, ror r3
    9c28:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    9c2c:	000008c4 	andeq	r0, r0, r4, asr #17
    9c30:	08001e04 	stmdaeq	r0, {r2, r9, sl, fp, ip}
    9c34:	000000c6 	andeq	r0, r0, r6, asr #1
    9c38:	5a039201 	bpl	ee444 <__Stack_Size+0xee044>
    9c3c:	1900000a 	stmdbne	r0, {r1, r3}
    9c40:	08001e04 	stmdaeq	r0, {r2, r9, sl, fp, ip}
    9c44:	000000c6 	andeq	r0, r0, r6, asr #1
    9c48:	0008d123 	andeq	sp, r8, r3, lsr #2
    9c4c:	004dcc00 	subeq	ip, sp, r0, lsl #24
    9c50:	08dd2300 	ldmeq	sp, {r8, r9, sp}^
    9c54:	4e750000 	cdpmi	0, 7, cr0, cr5, cr0, {0}
    9c58:	e9230000 	stmdb	r3!, {}	; <UNPREDICTABLE>
    9c5c:	88000008 	stmdahi	r0, {r3}
    9c60:	3900004e 	stmdbcc	r0, {r1, r2, r3, r6}
    9c64:	000008f5 	strdeq	r0, [r0], -r5
    9c68:	08001ec4 	stmdaeq	r0, {r2, r6, r7, r9, sl, fp, ip}
    9c6c:	001e1427 	andseq	r1, lr, r7, lsr #8
    9c70:	00068d08 	andeq	r8, r6, r8, lsl #26
    9c74:	1e4e1d00 	cdpne	13, 4, cr1, cr14, cr0, {0}
    9c78:	0a340800 	beq	d0bc80 <__Stack_Size+0xd0b880>
    9c7c:	011e0000 	tsteq	lr, r0
    9c80:	00740250 	rsbseq	r0, r4, r0, asr r2
    9c84:	1e642700 	cdpne	7, 6, cr2, cr4, cr0, {0}
    9c88:	08370800 	ldmdaeq	r7!, {fp}
    9c8c:	80270000 	eorhi	r0, r7, r0
    9c90:	ce08001e 	mcrgt	0, 0, r0, cr8, cr14, {0}
    9c94:	27000006 	strcs	r0, [r0, -r6]
    9c98:	08001e8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl, fp, ip}
    9c9c:	000004e7 	andeq	r0, r0, r7, ror #9
    9ca0:	001ea027 	andseq	sl, lr, r7, lsr #32
    9ca4:	0007b008 	andeq	fp, r7, r8
    9ca8:	3a000000 	bcc	9cb0 <__Stack_Size+0x98b0>
    9cac:	000008fe 	strdeq	r0, [r0], -lr
    9cb0:	08001eca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, fp, ip}
    9cb4:	00000c60 	andeq	r0, r0, r0, ror #24
    9cb8:	f6039701 			; <UNDEFINED> instruction: 0xf6039701
    9cbc:	2a00000a 	bcs	9cec <__Stack_Size+0x98ec>
    9cc0:	00000c60 	andeq	r0, r0, r0, ror #24
    9cc4:	00090b23 	andeq	r0, r9, r3, lsr #22
    9cc8:	004ea700 	subeq	sl, lr, r0, lsl #14
    9ccc:	09172300 	ldmdbeq	r7, {r8, r9, sp}
    9cd0:	4f270000 	svcmi	0x00270000
    9cd4:	23230000 	teqcs	r3, #0
    9cd8:	51000009 	tstpl	r0, r9
    9cdc:	2300004f 	movwcs	r0, #79	; 0x4f
    9ce0:	0000092f 	andeq	r0, r0, pc, lsr #18
    9ce4:	00004f7a 	andeq	r4, r0, sl, ror pc
    9ce8:	00093b23 	andeq	r3, r9, r3, lsr #22
    9cec:	004f8d00 	subeq	r8, pc, r0, lsl #26
    9cf0:	09472300 	stmdbeq	r7, {r8, r9, sp}^
    9cf4:	4fa80000 	svcmi	0x00a80000
    9cf8:	53230000 	teqpl	r3, #0
    9cfc:	c8000009 	stmdagt	r0, {r0, r3}
    9d00:	1700004f 	strne	r0, [r0, -pc, asr #32]
    9d04:	08001ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp, ip}
    9d08:	00000022 	andeq	r0, r0, r2, lsr #32
    9d0c:	00000ac9 	andeq	r0, r0, r9, asr #21
    9d10:	00096423 	andeq	r6, r9, r3, lsr #8
    9d14:	004fdb00 	subeq	sp, pc, r0, lsl #22
    9d18:	fa170000 	blx	5c9d20 <__Stack_Size+0x5c9920>
    9d1c:	5e08001f 	mcrpl	0, 0, r0, cr8, cr15, {0}
    9d20:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    9d24:	3b00000a 	blcc	9d54 <__Stack_Size+0x9954>
    9d28:	00000972 	andeq	r0, r0, r2, ror r9
    9d2c:	27649102 	strbcs	r9, [r4, -r2, lsl #2]!
    9d30:	08002056 	stmdaeq	r0, {r1, r2, r4, r6, sp}
    9d34:	000005c2 	andeq	r0, r0, r2, asr #11
    9d38:	1fbc3c00 	svcne	0x00bc3c00
    9d3c:	011e0800 	tsteq	lr, r0, lsl #16
    9d40:	00740250 	rsbseq	r0, r4, r0, asr r2
    9d44:	27000000 	strcs	r0, [r0, -r0]
    9d48:	08001de4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl, fp, ip}
    9d4c:	00000de5 	andeq	r0, r0, r5, ror #27
    9d50:	001dee27 	andseq	lr, sp, r7, lsr #28
    9d54:	000de508 	andeq	lr, sp, r8, lsl #10
    9d58:	20682700 	rsbcs	r2, r8, r0, lsl #14
    9d5c:	089a0800 	ldmeq	sl, {fp}
    9d60:	0a000000 	beq	9d68 <__Stack_Size+0x9968>
    9d64:	00004c04 	andeq	r4, r0, r4, lsl #24
    9d68:	37f33000 	ldrbcc	r3, [r3, r0]!
    9d6c:	b7010000 	strlt	r0, [r1, -r0]
    9d70:	0b580101 	bleq	160a17c <__Stack_Size+0x1609d7c>
    9d74:	58250000 	stmdapl	r5!, {}	; <UNPREDICTABLE>
    9d78:	01000037 	tsteq	r0, r7, lsr r0
    9d7c:	068701b9 			; <UNDEFINED> instruction: 0x068701b9
    9d80:	d0250000 	eorle	r0, r5, r0
    9d84:	01000037 	tsteq	r0, r7, lsr r0
    9d88:	003a01ba 	ldrhteq	r0, [sl], -sl
    9d8c:	25330000 	ldrcs	r0, [r3, #-0]!
    9d90:	00000031 	andeq	r0, r0, r1, lsr r0
    9d94:	ce01c001 	cdpgt	0, 0, cr12, cr1, cr1, {0}
    9d98:	25000001 	strcs	r0, [r0, #-1]
    9d9c:	00003d39 	andeq	r3, r0, r9, lsr sp
    9da0:	3a01c101 	bcc	7a1ac <__Stack_Size+0x79dac>
    9da4:	00000000 	andeq	r0, r0, r0
    9da8:	360e2800 	strcc	r2, [lr], -r0, lsl #16
    9dac:	cb010000 	blgt	49db4 <__Stack_Size+0x499b4>
    9db0:	00005e03 	andeq	r5, r0, r3, lsl #28
    9db4:	00208c00 	eoreq	r8, r0, r0, lsl #24
    9db8:	0000cc08 	andeq	ip, r0, r8, lsl #24
    9dbc:	2a9c0100 	bcs	fe70a1c4 <SCS_BASE+0x1e6fc1c4>
    9dc0:	1b00000c 	blne	9df8 <__Stack_Size+0x99f8>
    9dc4:	00001893 	muleq	r0, r3, r8
    9dc8:	3a03cd01 	bcc	fd1d4 <__Stack_Size+0xfcdd4>
    9dcc:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    9dd0:	3800004f 	stmdacc	r0, {r0, r1, r2, r3, r6}
    9dd4:	00000b18 	andeq	r0, r0, r8, lsl fp
    9dd8:	080020a4 	stmdaeq	r0, {r2, r5, r7, sp}
    9ddc:	0000007c 	andeq	r0, r0, ip, ror r0
    9de0:	2003d601 	andcs	sp, r3, r1, lsl #12
    9de4:	1900000c 	stmdbne	r0, {r2, r3}
    9de8:	080020a4 	stmdaeq	r0, {r2, r5, r7, sp}
    9dec:	0000007c 	andeq	r0, r0, ip, ror r0
    9df0:	000b2523 	andeq	r2, fp, r3, lsr #10
    9df4:	00504600 	subseq	r4, r0, r0, lsl #12
    9df8:	0b312300 	bleq	c52a00 <__Stack_Size+0xc52600>
    9dfc:	505b0000 	subspl	r0, fp, r0
    9e00:	ac170000 	ldcge	0, cr0, [r7], {-0}
    9e04:	2a080020 	bcs	209e8c <__Stack_Size+0x209a8c>
    9e08:	0a000000 	beq	9e10 <__Stack_Size+0x9a10>
    9e0c:	2300000c 	movwcs	r0, #12
    9e10:	00000b3e 	andeq	r0, r0, lr, lsr fp
    9e14:	0000506e 	andeq	r5, r0, lr, rrx
    9e18:	000b4a23 	andeq	r4, fp, r3, lsr #20
    9e1c:	00508c00 	subseq	r8, r0, r0, lsl #24
    9e20:	20b81d00 	adcscs	r1, r8, r0, lsl #26
    9e24:	0be00800 	bleq	ff80be2c <SCS_BASE+0x1f7fde2c>
    9e28:	011e0000 	tsteq	lr, r0
    9e2c:	00760250 	rsbseq	r0, r6, r0, asr r2
    9e30:	20cc1f00 	sbccs	r1, ip, r0, lsl #30
    9e34:	0dfb0800 	ldcleq	8, cr0, [fp]
    9e38:	0bf30000 	bleq	ffcc9e40 <SCS_BASE+0x1fcbbe40>
    9e3c:	011e0000 	tsteq	lr, r0
    9e40:	00300150 	eorseq	r0, r0, r0, asr r1
    9e44:	0020d620 	eoreq	sp, r0, r0, lsr #12
    9e48:	000e1108 	andeq	r1, lr, r8, lsl #2
    9e4c:	52011e00 	andpl	r1, r1, #0, 28
    9e50:	1e007602 	cfmadd32ne	mvax0, mvfx7, mvfx0, mvfx2
    9e54:	77025001 	strvc	r5, [r2, -r1]
    9e58:	20000000 	andcs	r0, r0, r0
    9e5c:	080020ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, sp}
    9e60:	00000d7c 	andeq	r0, r0, ip, ror sp
    9e64:	0151011e 	cmpeq	r1, lr, lsl r1
    9e68:	50011e30 	andpl	r1, r1, r0, lsr lr
    9e6c:	00003001 	andeq	r3, r0, r1
    9e70:	21403d00 	cmpcs	r0, r0, lsl #26
    9e74:	089a0800 	ldmeq	sl, {fp}
    9e78:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    9e7c:	00001672 	andeq	r1, r0, r2, ror r6
    9e80:	58042201 	stmdapl	r4, {r0, r9, sp}
    9e84:	40080021 	andmi	r0, r8, r1, lsr #32
    9e88:	01000000 	mrseq	r0, (UNDEF: 0)
    9e8c:	000c6d9c 	muleq	ip, ip, sp
    9e90:	61563f00 	cmpvs	r6, r0, lsl #30
    9e94:	2201006c 	andcs	r0, r1, #108	; 0x6c
    9e98:	00005e04 	andeq	r5, r0, r4, lsl #28
    9e9c:	0050da00 	subseq	sp, r0, r0, lsl #20
    9ea0:	00694000 	rsbeq	r4, r9, r0
    9ea4:	3a042701 	bcc	113ab0 <__Stack_Size+0x1136b0>
    9ea8:	01000000 	mrseq	r0, (UNDEF: 0)
    9eac:	456e2652 	strbmi	r2, [lr, #-1618]!	; 0x652
    9eb0:	28010050 	stmdacs	r1, {r4, r6}
    9eb4:	00003a04 	andeq	r3, r0, r4, lsl #20
    9eb8:	0050fb00 	subseq	pc, r0, r0, lsl #22
    9ebc:	6a280000 	bvs	a09ec4 <__Stack_Size+0xa09ac4>
    9ec0:	01000036 	tsteq	r0, r6, lsr r0
    9ec4:	005e03a3 	subseq	r0, lr, r3, lsr #7
    9ec8:	21980000 	orrscs	r0, r8, r0
    9ecc:	005c0800 	subseq	r0, ip, r0, lsl #16
    9ed0:	9c010000 	stcls	0, cr0, [r1], {-0}
    9ed4:	00000cb3 			; <UNDEFINED> instruction: 0x00000cb3
    9ed8:	0018931b 	andseq	r9, r8, fp, lsl r3
    9edc:	03a50100 			; <UNDEFINED> instruction: 0x03a50100
    9ee0:	0000003a 	andeq	r0, r0, sl, lsr r0
    9ee4:	0000510e 	andeq	r5, r0, lr, lsl #2
    9ee8:	0021ac27 	eoreq	sl, r1, r7, lsr #24
    9eec:	0005c208 	andeq	ip, r5, r8, lsl #4
    9ef0:	21c82700 	biccs	r2, r8, r0, lsl #14
    9ef4:	0c2a0800 	stceq	8, cr0, [sl], #-0
    9ef8:	e63d0000 	ldrt	r0, [sp], -r0
    9efc:	9a080021 	bls	209f88 <__Stack_Size+0x209b88>
    9f00:	00000008 	andeq	r0, r0, r8
    9f04:	0039c841 	eorseq	ip, r9, r1, asr #16
    9f08:	043a0100 	ldrteq	r0, [sl], #-256	; 0x100
    9f0c:	080021f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sp}
    9f10:	00000002 	andeq	r0, r0, r2
    9f14:	dd429c01 	stclle	12, cr9, [r2, #-4]
    9f18:	04000013 	streq	r0, [r0], #-19
    9f1c:	000458ee 	andeq	r5, r4, lr, ror #17
    9f20:	15ee4200 	strbne	r4, [lr, #512]!	; 0x200
    9f24:	f0040000 			; <UNDEFINED> instruction: 0xf0040000
    9f28:	00000291 	muleq	r0, r1, r2
    9f2c:	00393542 	eorseq	r3, r9, r2, asr #10
    9f30:	e6f40400 	ldrbt	r0, [r4], r0, lsl #8
    9f34:	3400000c 	strcc	r0, [r0], #-12
    9f38:	0000004c 	andeq	r0, r0, ip, asr #32
    9f3c:	00399142 	eorseq	r9, r9, r2, asr #2
    9f40:	e6f50400 	ldrbt	r0, [r5], r0, lsl #8
    9f44:	4200000c 	andmi	r0, r0, #12
    9f48:	000015c7 	andeq	r1, r0, r7, asr #11
    9f4c:	0d012205 	sfmeq	f2, 4, [r1, #-20]	; 0xffffffec
    9f50:	040a0000 	streq	r0, [sl], #-0
    9f54:	00000378 	andeq	r0, r0, r8, ror r3
    9f58:	0035a542 	eorseq	sl, r5, r2, asr #10
    9f5c:	12250500 	eorne	r0, r5, #0, 10
    9f60:	0a00000d 	beq	9f9c <__Stack_Size+0x9b9c>
    9f64:	00045804 	andeq	r5, r4, r4, lsl #16
    9f68:	356a4200 	strbcc	r4, [sl, #-512]!	; 0x200
    9f6c:	2a050000 	bcs	149f74 <__Stack_Size+0x149b74>
    9f70:	00000d23 	andeq	r0, r0, r3, lsr #26
    9f74:	04dc040a 	ldrbeq	r0, [ip], #1034	; 0x40a
    9f78:	f0430000 			; <UNDEFINED> instruction: 0xf0430000
    9f7c:	01000036 	tsteq	r0, r6, lsr r0
    9f80:	0002dc2b 	andeq	sp, r2, fp, lsr #24
    9f84:	1a030500 	bne	cb38c <__Stack_Size+0xcaf8c>
    9f88:	43200007 	teqmi	r0, #7
    9f8c:	00003741 	andeq	r3, r0, r1, asr #14
    9f90:	00842d01 	addeq	r2, r4, r1, lsl #26
    9f94:	03050000 	movweq	r0, #20480	; 0x5000
    9f98:	20000130 	andcs	r0, r0, r0, lsr r1
    9f9c:	0036e444 	eorseq	lr, r6, r4, asr #8
    9fa0:	02850600 	addeq	r0, r5, #0, 12
    9fa4:	0000004c 	andeq	r0, r0, ip, asr #32
    9fa8:	00000d61 	andeq	r0, r0, r1, ror #26
    9fac:	00005e0c 	andeq	r5, r0, ip, lsl #28
    9fb0:	ec450000 	mar	acc0, r0, r5
    9fb4:	0700001a 	smladeq	r0, sl, r0, r0
    9fb8:	000d7c19 	andeq	r7, sp, r9, lsl ip
    9fbc:	01ce0c00 	biceq	r0, lr, r0, lsl #24
    9fc0:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    9fc4:	0c000000 	stceq	0, cr0, [r0], {-0}
    9fc8:	0000004c 	andeq	r0, r0, ip, asr #32
    9fcc:	1a7c4600 	bne	1f1b7d4 <__Stack_Size+0x1f1b3d4>
    9fd0:	88060000 	stmdahi	r6, {}	; <UNPREDICTABLE>
    9fd4:	000d9302 	andeq	r9, sp, r2, lsl #6
    9fd8:	005e0c00 	subseq	r0, lr, r0, lsl #24
    9fdc:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    9fe0:	00000000 	andeq	r0, r0, r0
    9fe4:	00386246 	eorseq	r6, r8, r6, asr #4
    9fe8:	02800600 	addeq	r0, r0, #0, 12
    9fec:	00000da5 	andeq	r0, r0, r5, lsr #27
    9ff0:	00005e0c 	andeq	r5, r0, ip, lsl #28
    9ff4:	c7460000 	strbgt	r0, [r6, -r0]
    9ff8:	06000014 			; <UNDEFINED> instruction: 0x06000014
    9ffc:	0dbc026c 	lfmeq	f0, 4, [ip, #432]!	; 0x1b0
    a000:	5e0c0000 	cdppl	0, 0, cr0, cr12, cr0, {0}
    a004:	0c000000 	stceq	0, cr0, [r0], {-0}
    a008:	0000004c 	andeq	r0, r0, ip, asr #32
    a00c:	1a2f4600 	bne	bdb814 <__Stack_Size+0xbdb414>
    a010:	89060000 	stmdbhi	r6, {}	; <UNPREDICTABLE>
    a014:	000dd302 	andeq	sp, sp, r2, lsl #6
    a018:	005e0c00 	subseq	r0, lr, r0, lsl #24
    a01c:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    a020:	00000000 	andeq	r0, r0, r0
    a024:	0037c346 	eorseq	ip, r7, r6, asr #6
    a028:	027f0600 	rsbseq	r0, pc, #0, 12
    a02c:	00000de5 	andeq	r0, r0, r5, ror #27
    a030:	00005e0c 	andeq	r5, r0, ip, lsl #28
    a034:	ba440000 	blt	110a03c <__Stack_Size+0x1109c3c>
    a038:	06000037 			; <UNDEFINED> instruction: 0x06000037
    a03c:	004c0299 	umaaleq	r0, ip, r9, r2
    a040:	0dfb0000 	ldcleq	0, cr0, [fp]
    a044:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    a048:	00000000 	andeq	r0, r0, r0
    a04c:	00362944 	eorseq	r2, r6, r4, asr #18
    a050:	02860600 	addeq	r0, r6, #0, 12
    a054:	0000004c 	andeq	r0, r0, ip, asr #32
    a058:	00000e11 	andeq	r0, r0, r1, lsl lr
    a05c:	00005e0c 	andeq	r5, r0, ip, lsl #28
    a060:	f5470000 			; <UNDEFINED> instruction: 0xf5470000
    a064:	07000038 	smladxeq	r0, r8, r0, r0
    a068:	01ce0c1a 	biceq	r0, lr, sl, lsl ip
    a06c:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    a070:	0c000000 	stceq	0, cr0, [r0], {-0}
    a074:	0000004c 	andeq	r0, r0, ip, asr #32
    a078:	01770000 	cmneq	r7, r0
    a07c:	00040000 	andeq	r0, r4, r0
    a080:	0000239c 	muleq	r0, ip, r3
    a084:	02f40104 	rscseq	r0, r4, #4, 2
    a088:	04010000 	streq	r0, [r1], #-0
    a08c:	ec00003a 	stc	0, cr0, [r0], {58}	; 0x3a
    a090:	00000003 	andeq	r0, r0, r3
    a094:	0000000d 	andeq	r0, r0, sp
    a098:	12000000 	andne	r0, r0, #0
    a09c:	0200002f 	andeq	r0, r0, #47	; 0x2f
    a0a0:	082d0504 	stmdaeq	sp!, {r2, r8, sl}
    a0a4:	02020000 	andeq	r0, r2, #0
    a0a8:	0007ff05 	andeq	pc, r7, r5, lsl #30
    a0ac:	06010200 	streq	r0, [r1], -r0, lsl #4
    a0b0:	000009de 	ldrdeq	r0, [r0], -lr
    a0b4:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    a0b8:	45270200 	strmi	r0, [r7, #-512]!	; 0x200
    a0bc:	02000000 	andeq	r0, r0, #0
    a0c0:	093a0704 	ldmdbeq	sl!, {r2, r8, r9, sl}
    a0c4:	75030000 	strvc	r0, [r3, #-0]
    a0c8:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    a0cc:	00005728 	andeq	r5, r0, r8, lsr #14
    a0d0:	07020200 	streq	r0, [r2, -r0, lsl #4]
    a0d4:	00000bd7 	ldrdeq	r0, [r0], -r7
    a0d8:	00387503 	eorseq	r7, r8, r3, lsl #10
    a0dc:	00682902 	rsbeq	r2, r8, r2, lsl #18
    a0e0:	01020000 	mrseq	r0, (UNDEF: 2)
    a0e4:	0009dc08 	andeq	sp, r9, r8, lsl #24
    a0e8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    a0ec:	00000931 	andeq	r0, r0, r1, lsr r9
    a0f0:	005e0404 	subseq	r0, lr, r4, lsl #8
    a0f4:	ec050000 	stc	0, cr0, [r5], {-0}
    a0f8:	0100001a 	tsteq	r0, sl, lsl r0
    a0fc:	0021f624 	eoreq	pc, r1, r4, lsr #12
    a100:	00003008 	andeq	r3, r0, r8
    a104:	049c0100 	ldreq	r0, [ip], #256	; 0x100
    a108:	06000001 	streq	r0, [r0], -r1
    a10c:	000039d4 	ldrdeq	r3, [r0], -r4
    a110:	00762401 	rsbseq	r2, r6, r1, lsl #8
    a114:	51540000 	cmppl	r4, r0
    a118:	f1060000 	cps	#0
    a11c:	01000039 	tsteq	r0, r9, lsr r0
    a120:	00004c24 	andeq	r4, r0, r4, lsr #24
    a124:	00519900 	subseq	r9, r1, r0, lsl #18
    a128:	39dd0600 	ldmibcc	sp, {r9, sl}^
    a12c:	24010000 	strcs	r0, [r1], #-0
    a130:	0000004c 	andeq	r0, r0, ip, asr #32
    a134:	000051ba 			; <UNDEFINED> instruction: 0x000051ba
    a138:	01006e07 	tsteq	r0, r7, lsl #28
    a13c:	00003a26 	andeq	r3, r0, r6, lsr #20
    a140:	08520100 	ldmdaeq	r2, {r8}^
    a144:	27010069 	strcs	r0, [r1, -r9, rrx]
    a148:	0000003a 	andeq	r0, r0, sl, lsr r0
    a14c:	000051db 	ldrdeq	r5, [r0], -fp
    a150:	0039e509 	eorseq	lr, r9, r9, lsl #10
    a154:	3a270100 	bcc	9ca55c <__Stack_Size+0x9ca15c>
    a158:	3a000000 	bcc	a160 <__Stack_Size+0x9d60>
    a15c:	09000052 	stmdbeq	r0, {r1, r4, r6}
    a160:	000039eb 	andeq	r3, r0, fp, ror #19
    a164:	003a2701 	eorseq	r2, sl, r1, lsl #14
    a168:	52710000 	rsbspl	r0, r1, #0
    a16c:	fd090000 	stc2	0, cr0, [r9, #-0]
    a170:	01000039 	tsteq	r0, r9, lsr r0
    a174:	00010428 	andeq	r0, r1, r8, lsr #8
    a178:	00529500 	subseq	r9, r2, r0, lsl #10
    a17c:	04040000 	streq	r0, [r4], #-0
    a180:	0000004c 	andeq	r0, r0, ip, asr #32
    a184:	0038f505 	eorseq	pc, r8, r5, lsl #10
    a188:	263d0100 	ldrtcs	r0, [sp], -r0, lsl #2
    a18c:	24080022 	strcs	r0, [r8], #-34	; 0x22
    a190:	01000000 	mrseq	r0, (UNDEF: 0)
    a194:	0001749c 	muleq	r1, ip, r4
    a198:	39d40600 	ldmibcc	r4, {r9, sl}^
    a19c:	3d010000 	stccc	0, cr0, [r1, #-0]
    a1a0:	00000076 	andeq	r0, r0, r6, ror r0
    a1a4:	000052d0 	ldrdeq	r5, [r0], -r0
    a1a8:	0039f106 	eorseq	pc, r9, r6, lsl #2
    a1ac:	4c3d0100 	ldfmis	f0, [sp], #-0
    a1b0:	07000000 	streq	r0, [r0, -r0]
    a1b4:	06000053 			; <UNDEFINED> instruction: 0x06000053
    a1b8:	000039dd 	ldrdeq	r3, [r0], -sp
    a1bc:	004c3d01 	subeq	r3, ip, r1, lsl #26
    a1c0:	53280000 	teqpl	r8, #0
    a1c4:	6e070000 	cdpvs	0, 0, cr0, cr7, cr0, {0}
    a1c8:	3a3f0100 	bcc	fca5d0 <__Stack_Size+0xfca1d0>
    a1cc:	01000000 	mrseq	r0, (UNDEF: 0)
    a1d0:	00690852 	rsbeq	r0, r9, r2, asr r8
    a1d4:	003a4001 	eorseq	r4, sl, r1
    a1d8:	53490000 	movtpl	r0, #36864	; 0x9000
    a1dc:	fd090000 	stc2	0, cr0, [r9, #-0]
    a1e0:	01000039 	tsteq	r0, r9, lsr r0
    a1e4:	00017441 	andeq	r7, r1, r1, asr #8
    a1e8:	0053a800 	subseq	sl, r3, r0, lsl #16
    a1ec:	04040000 	streq	r0, [r4], #-0
    a1f0:	0000003a 	andeq	r0, r0, sl, lsr r0
    a1f4:	000c9300 	andeq	r9, ip, r0, lsl #6
    a1f8:	27000400 	strcs	r0, [r0, -r0, lsl #8]
    a1fc:	04000024 	streq	r0, [r0], #-36	; 0x24
    a200:	0002f401 	andeq	pc, r2, r1, lsl #8
    a204:	3b510100 	blcc	144a60c <__Stack_Size+0x144a20c>
    a208:	03ec0000 	mvneq	r0, #0
    a20c:	0dc80000 	stcleq	0, cr0, [r8]
    a210:	00000000 	andeq	r0, r0, r0
    a214:	2fbb0000 	svccs	0x00bb0000
    a218:	04020000 	streq	r0, [r2], #-0
    a21c:	00082d05 	andeq	r2, r8, r5, lsl #26
    a220:	05020200 	streq	r0, [r2, #-512]	; 0x200
    a224:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    a228:	de060102 	adfles	f0, f6, f2
    a22c:	03000009 	movweq	r0, #9
    a230:	00323375 	eorseq	r3, r2, r5, ror r3
    a234:	00452702 	subeq	r2, r5, r2, lsl #14
    a238:	04020000 	streq	r0, [r2], #-0
    a23c:	00093a07 	andeq	r3, r9, r7, lsl #20
    a240:	31750300 	cmncc	r5, r0, lsl #6
    a244:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    a248:	00000057 	andeq	r0, r0, r7, asr r0
    a24c:	d7070202 	strle	r0, [r7, -r2, lsl #4]
    a250:	0300000b 	movweq	r0, #11
    a254:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    a258:	00006829 	andeq	r6, r0, r9, lsr #16
    a25c:	08010200 	stmdaeq	r1, {r9}
    a260:	000009dc 	ldrdeq	r0, [r0], -ip
    a264:	31070402 	tstcc	r7, r2, lsl #8
    a268:	04000009 	streq	r0, [r0], #-9
    a26c:	00003a84 	andeq	r3, r0, r4, lsl #21
    a270:	95180301 	ldrls	r0, [r8, #-769]	; 0x301
    a274:	05000000 	streq	r0, [r0, #-0]
    a278:	00003a1e 	andeq	r3, r0, lr, lsl sl
    a27c:	3c1d0500 	cfldr32cc	mvfx0, [sp], {-0}
    a280:	05010000 	streq	r0, [r1, #-0]
    a284:	00003ac0 	andeq	r3, r0, r0, asr #21
    a288:	85060002 	strhi	r0, [r6, #-2]
    a28c:	0300003a 	movweq	r0, #58	; 0x3a
    a290:	0000761e 	andeq	r7, r0, lr, lsl r6
    a294:	3cc00700 	stclcc	7, cr0, [r0], {0}
    a298:	9c010000 	stcls	0, cr0, [r1], {-0}
    a29c:	0000004c 	andeq	r0, r0, ip, asr #32
    a2a0:	0000bc01 	andeq	fp, r0, r1, lsl #24
    a2a4:	3b990800 	blcc	fe64c2ac <SCS_BASE+0x1e63e2ac>
    a2a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    a2ac:	0000005e 	andeq	r0, r0, lr, asr r0
    a2b0:	3a910900 	bcc	fe44c6b8 <SCS_BASE+0x1e43e6b8>
    a2b4:	23010000 	movwcs	r0, #4096	; 0x1000
    a2b8:	00000000 	andeq	r0, r0, r0
    a2bc:	0000000c 	andeq	r0, r0, ip
    a2c0:	00df9c01 	sbcseq	r9, pc, r1, lsl #24
    a2c4:	b60a0000 	strlt	r0, [sl], -r0
    a2c8:	0100003c 	tsteq	r0, ip, lsr r0
    a2cc:	00004c23 	andeq	r4, r0, r3, lsr #24
    a2d0:	00500100 	subseq	r0, r0, r0, lsl #2
    a2d4:	003aed0b 	eorseq	lr, sl, fp, lsl #26
    a2d8:	4c2f0100 	stfmis	f0, [pc], #-0	; a2e0 <__Stack_Size+0x9ee0>
    a2dc:	00000000 	andeq	r0, r0, r0
    a2e0:	0c000000 	stceq	0, cr0, [r0], {-0}
    a2e4:	01000000 	mrseq	r0, (UNDEF: 0)
    a2e8:	3a5a099c 	bcc	168c960 <__Stack_Size+0x168c560>
    a2ec:	3b010000 	blcc	4a2f4 <__Stack_Size+0x49ef4>
    a2f0:	00000000 	andeq	r0, r0, r0
    a2f4:	0000000c 	andeq	r0, r0, ip
    a2f8:	01179c01 	tsteq	r7, r1, lsl #24
    a2fc:	b60a0000 	strlt	r0, [sl], -r0
    a300:	0100003c 	tsteq	r0, ip, lsr r0
    a304:	00004c3b 	andeq	r4, r0, fp, lsr ip
    a308:	00500100 	subseq	r0, r0, r0, lsl #2
    a30c:	003c690b 	eorseq	r6, ip, fp, lsl #18
    a310:	4c470100 	stfmie	f0, [r7], {-0}
    a314:	00000000 	andeq	r0, r0, r0
    a318:	0c000000 	stceq	0, cr0, [r0], {-0}
    a31c:	01000000 	mrseq	r0, (UNDEF: 0)
    a320:	3afc0b9c 	bcc	fff0d198 <SCS_BASE+0x1feff198>
    a324:	53010000 	movwpl	r0, #4096	; 0x1000
    a328:	0000004c 	andeq	r0, r0, ip, asr #32
    a32c:	00000000 	andeq	r0, r0, r0
    a330:	0000000c 	andeq	r0, r0, ip
    a334:	90099c01 	andls	r9, r9, r1, lsl #24
    a338:	0100003b 	tsteq	r0, fp, lsr r0
    a33c:	0000005f 	andeq	r0, r0, pc, asr r0
    a340:	00000c00 	andeq	r0, r0, r0, lsl #24
    a344:	649c0100 	ldrvs	r0, [ip], #256	; 0x100
    a348:	0a000001 	beq	a354 <__Stack_Size+0x9f54>
    a34c:	00003cb6 			; <UNDEFINED> instruction: 0x00003cb6
    a350:	004c5f01 	subeq	r5, ip, r1, lsl #30
    a354:	50010000 	andpl	r0, r1, r0
    a358:	3b090b00 	blcc	24cf60 <__Stack_Size+0x24cb60>
    a35c:	6b010000 	blvs	4a364 <__Stack_Size+0x49f64>
    a360:	0000004c 	andeq	r0, r0, ip, asr #32
    a364:	00000000 	andeq	r0, r0, r0
    a368:	0000000c 	andeq	r0, r0, ip
    a36c:	51099c01 	tstpl	r9, r1, lsl #24
    a370:	01000016 	tsteq	r0, r6, lsl r0
    a374:	00224c77 	eoreq	r4, r2, r7, ror ip
    a378:	00001008 	andeq	r1, r0, r8
    a37c:	9c9c0100 	ldflss	f0, [ip], {0}
    a380:	0a000001 	beq	a38c <__Stack_Size+0x9f8c>
    a384:	00003cb6 			; <UNDEFINED> instruction: 0x00003cb6
    a388:	004c7701 	subeq	r7, ip, r1, lsl #14
    a38c:	50010000 	andpl	r0, r1, r0
    a390:	3a500b00 	bcc	140cf98 <__Stack_Size+0x140cb98>
    a394:	83010000 	movwhi	r0, #4096	; 0x1000
    a398:	0000004c 	andeq	r0, r0, ip, asr #32
    a39c:	00000000 	andeq	r0, r0, r0
    a3a0:	0000000c 	andeq	r0, r0, ip
    a3a4:	b4099c01 	strlt	r9, [r9], #-3073	; 0xc01
    a3a8:	0100003a 	tsteq	r0, sl, lsr r0
    a3ac:	00000090 	muleq	r0, r0, r0
    a3b0:	00000e00 	andeq	r0, r0, r0, lsl #28
    a3b4:	e39c0100 	orrs	r0, ip, #0, 2
    a3b8:	0c000001 	stceq	0, cr0, [r0], {1}
    a3bc:	00003b99 	muleq	r0, r9, fp
    a3c0:	005e9001 	subseq	r9, lr, r1
    a3c4:	53e30000 	mvnpl	r0, #0
    a3c8:	b60a0000 	strlt	r0, [sl], -r0
    a3cc:	0100003c 	tsteq	r0, ip, lsr r0
    a3d0:	00004c90 	muleq	r0, r0, ip
    a3d4:	00510100 	subseq	r0, r1, r0, lsl #2
    a3d8:	0000a00d 	andeq	sl, r0, sp
    a3dc:	00000000 	andeq	r0, r0, r0
    a3e0:	00001000 	andeq	r1, r0, r0
    a3e4:	009c0100 	addseq	r0, ip, r0, lsl #2
    a3e8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    a3ec:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    a3f0:	00005404 	andeq	r5, r0, r4, lsl #8
    a3f4:	14d50900 	ldrbne	r0, [r5], #2304	; 0x900
    a3f8:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    a3fc:	0800225c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sp}
    a400:	0000001c 	andeq	r0, r0, ip, lsl r0
    a404:	02349c01 	eorseq	r9, r4, #256	; 0x100
    a408:	990c0000 	stmdbls	ip, {}	; <UNPREDICTABLE>
    a40c:	0100003b 	tsteq	r0, fp, lsr r0
    a410:	00005ea9 	andeq	r5, r0, r9, lsr #29
    a414:	00542500 	subseq	r2, r4, r0, lsl #10
    a418:	3b030c00 	blcc	cd420 <__Stack_Size+0xcd020>
    a41c:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    a420:	0000004c 	andeq	r0, r0, ip, asr #32
    a424:	00005446 	andeq	r5, r0, r6, asr #8
    a428:	3d230f00 	stccc	15, cr0, [r3, #-0]
    a42c:	b5010000 	strlt	r0, [r1, #-0]
    a430:	0000004c 	andeq	r0, r0, ip, asr #32
    a434:	00000000 	andeq	r0, r0, r0
    a438:	00000012 	andeq	r0, r0, r2, lsl r0
    a43c:	025d9c01 	subseq	r9, sp, #256	; 0x100
    a440:	990c0000 	stmdbls	ip, {}	; <UNPREDICTABLE>
    a444:	0100003b 	tsteq	r0, fp, lsr r0
    a448:	00005eb5 			; <UNDEFINED> instruction: 0x00005eb5
    a44c:	00546700 	subseq	r6, r4, r0, lsl #14
    a450:	c7090000 	strgt	r0, [r9, -r0]
    a454:	01000014 	tsteq	r0, r4, lsl r0
    a458:	002278c2 	eoreq	r7, r2, r2, asr #17
    a45c:	00003208 	andeq	r3, r0, r8, lsl #4
    a460:	a89c0100 	ldmge	ip, {r8}
    a464:	0c000002 	stceq	0, cr0, [r0], {2}
    a468:	00003b99 	muleq	r0, r9, fp
    a46c:	005ec201 	subseq	ip, lr, r1, lsl #4
    a470:	54880000 	strpl	r0, [r8], #0
    a474:	8b0a0000 	blhi	28a47c <__Stack_Size+0x28a07c>
    a478:	0100001a 	tsteq	r0, sl, lsl r0
    a47c:	00004cc2 	andeq	r4, r0, r2, asr #25
    a480:	10510100 	subsne	r0, r1, r0, lsl #2
    a484:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
    a488:	00000032 	andeq	r0, r0, r2, lsr r0
    a48c:	00386f11 	eorseq	r6, r8, r1, lsl pc
    a490:	4cc40100 	stfmie	f0, [r4], {0}
    a494:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
    a498:	00000054 	andeq	r0, r0, r4, asr r0
    a49c:	16e90900 	strbtne	r0, [r9], r0, lsl #18
    a4a0:	cf010000 	svcgt	0x00010000
    a4a4:	080022aa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sp}
    a4a8:	00000032 	andeq	r0, r0, r2, lsr r0
    a4ac:	02f39c01 	rscseq	r9, r3, #256	; 0x100
    a4b0:	990c0000 	stmdbls	ip, {}	; <UNPREDICTABLE>
    a4b4:	0100003b 	tsteq	r0, fp, lsr r0
    a4b8:	00005ecf 	andeq	r5, r0, pc, asr #29
    a4bc:	0054bc00 	subseq	fp, r4, r0, lsl #24
    a4c0:	1a8b0a00 	bne	fe2cccc8 <SCS_BASE+0x1e2becc8>
    a4c4:	cf010000 	svcgt	0x00010000
    a4c8:	0000004c 	andeq	r0, r0, ip, asr #32
    a4cc:	aa105101 	bge	41e8d8 <__Stack_Size+0x41e4d8>
    a4d0:	32080022 	andcc	r0, r8, #34	; 0x22
    a4d4:	11000000 	mrsne	r0, (UNDEF: 0)
    a4d8:	0000386f 	andeq	r3, r0, pc, ror #16
    a4dc:	004cd101 	subeq	sp, ip, r1, lsl #2
    a4e0:	54dd0000 	ldrbpl	r0, [sp], #0
    a4e4:	00000000 	andeq	r0, r0, r0
    a4e8:	003ca109 	eorseq	sl, ip, r9, lsl #2
    a4ec:	00dc0100 	sbcseq	r0, ip, r0, lsl #2
    a4f0:	24000000 	strcs	r0, [r0], #-0
    a4f4:	01000000 	mrseq	r0, (UNDEF: 0)
    a4f8:	0003499c 	muleq	r3, ip, r9
    a4fc:	3b990c00 	blcc	fe64d504 <SCS_BASE+0x1e63f504>
    a500:	dc010000 	stcle	0, cr0, [r1], {-0}
    a504:	0000005e 	andeq	r0, r0, lr, asr r0
    a508:	000054f0 	strdeq	r5, [r0], -r0
    a50c:	003c290a 	eorseq	r2, ip, sl, lsl #18
    a510:	5edc0100 	cdppl	1, 13, cr0, cr12, cr0, {0}
    a514:	01000000 	mrseq	r0, (UNDEF: 0)
    a518:	3a6f1251 	bcc	1bcee64 <__Stack_Size+0x1bcea64>
    a51c:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    a520:	0000004c 	andeq	r0, r0, ip, asr #32
    a524:	0000a013 	andeq	sl, r0, r3, lsl r0
    a528:	00000000 	andeq	r0, r0, r0
    a52c:	000d1800 	andeq	r1, sp, r0, lsl #16
    a530:	0edf0100 	cdpeq	1, 13, cr0, cr15, cr0, {0}
    a534:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    a538:	000054f0 	strdeq	r5, [r0], -r0
    a53c:	230f0000 	movwcs	r0, #61440	; 0xf000
    a540:	0100003b 	tsteq	r0, fp, lsr r0
    a544:	00004cf1 	strdeq	r4, [r0], -r1
    a548:	00000000 	andeq	r0, r0, r0
    a54c:	00001200 	andeq	r1, r0, r0, lsl #4
    a550:	729c0100 	addsvc	r0, ip, #0, 2
    a554:	0c000003 	stceq	0, cr0, [r0], {3}
    a558:	00003b99 	muleq	r0, r9, fp
    a55c:	005ef101 	subseq	pc, lr, r1, lsl #2
    a560:	55110000 	ldrpl	r0, [r1, #-0]
    a564:	0f000000 	svceq	0x00000000
    a568:	00003b71 	andeq	r3, r0, r1, ror fp
    a56c:	004cfd01 	subeq	pc, ip, r1, lsl #26
    a570:	00000000 	andeq	r0, r0, r0
    a574:	00120000 	andseq	r0, r2, r0
    a578:	9c010000 	stcls	0, cr0, [r1], {-0}
    a57c:	0000039b 	muleq	r0, fp, r3
    a580:	003b990c 	eorseq	r9, fp, ip, lsl #18
    a584:	5efd0100 	cdppl	1, 15, cr0, cr13, cr0, {0}
    a588:	32000000 	andcc	r0, r0, #0
    a58c:	00000055 	andeq	r0, r0, r5, asr r0
    a590:	001b0014 	andseq	r0, fp, r4, lsl r0
    a594:	01090100 	mrseq	r0, (UNDEF: 25)
    a598:	080022dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sp}
    a59c:	00000026 	andeq	r0, r0, r6, lsr #32
    a5a0:	03dc9c01 	bicseq	r9, ip, #256	; 0x100
    a5a4:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    a5a8:	0100003b 	tsteq	r0, fp, lsr r0
    a5ac:	005e0109 	subseq	r0, lr, r9, lsl #2
    a5b0:	55530000 	ldrbpl	r0, [r3, #-0]
    a5b4:	dc100000 	ldcle	0, cr0, [r0], {-0}
    a5b8:	26080022 	strcs	r0, [r8], -r2, lsr #32
    a5bc:	16000000 	strne	r0, [r0], -r0
    a5c0:	0000386f 	andeq	r3, r0, pc, ror #16
    a5c4:	4c010b01 	stcmi	11, cr0, [r1], {1}
    a5c8:	74000000 	strvc	r0, [r0], #-0
    a5cc:	00000055 	andeq	r0, r0, r5, asr r0
    a5d0:	138b1400 	orrne	r1, fp, #0, 8
    a5d4:	15010000 	strne	r0, [r1, #-0]
    a5d8:	00230201 	eoreq	r0, r3, r1, lsl #4
    a5dc:	00002608 	andeq	r2, r0, r8, lsl #12
    a5e0:	1d9c0100 	ldfnes	f0, [ip]
    a5e4:	15000004 	strne	r0, [r0, #-4]
    a5e8:	00003b99 	muleq	r0, r9, fp
    a5ec:	5e011501 	cfsh32pl	mvfx1, mvfx1, #1
    a5f0:	9f000000 	svcls	0x00000000
    a5f4:	10000055 	andne	r0, r0, r5, asr r0
    a5f8:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    a5fc:	00000026 	andeq	r0, r0, r6, lsr #32
    a600:	00386f16 	eorseq	r6, r8, r6, lsl pc
    a604:	01170100 	tsteq	r7, r0, lsl #2
    a608:	0000004c 	andeq	r0, r0, ip, asr #32
    a60c:	000055c0 	andeq	r5, r0, r0, asr #11
    a610:	ea140000 	b	50a618 <__Stack_Size+0x50a218>
    a614:	0100003c 	tsteq	r0, ip, lsr r0
    a618:	00000121 	andeq	r0, r0, r1, lsr #2
    a61c:	00200000 	eoreq	r0, r0, r0
    a620:	9c010000 	stcls	0, cr0, [r1], {-0}
    a624:	00000444 	andeq	r0, r0, r4, asr #8
    a628:	003b9915 	eorseq	r9, fp, r5, lsl r9
    a62c:	01210100 	teqeq	r1, r0, lsl #2
    a630:	0000005e 	andeq	r0, r0, lr, asr r0
    a634:	000055ee 	andeq	r5, r0, lr, ror #11
    a638:	3acb1400 	bcc	ff2cf640 <SCS_BASE+0x1f2c1640>
    a63c:	2d010000 	stccs	0, cr0, [r1, #-0]
    a640:	00000001 	andeq	r0, r0, r1
    a644:	00002000 	andeq	r2, r0, r0
    a648:	6b9c0100 	blvs	fe70aa50 <SCS_BASE+0x1e6fca50>
    a64c:	15000004 	strne	r0, [r0, #-4]
    a650:	00003b99 	muleq	r0, r9, fp
    a654:	5e012d01 	cdppl	13, 0, cr2, cr1, cr1, {0}
    a658:	0f000000 	svceq	0x00000000
    a65c:	00000056 	andeq	r0, r0, r6, asr r0
    a660:	00192114 	andseq	r2, r9, r4, lsl r1
    a664:	01380100 	teqeq	r8, r0, lsl #2
    a668:	08002328 	stmdaeq	r0, {r3, r5, r8, r9, sp}
    a66c:	00000020 	andeq	r0, r0, r0, lsr #32
    a670:	04929c01 	ldreq	r9, [r2], #3073	; 0xc01
    a674:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    a678:	0100003b 	tsteq	r0, fp, lsr r0
    a67c:	005e0138 	subseq	r0, lr, r8, lsr r1
    a680:	56300000 	ldrtpl	r0, [r0], -r0
    a684:	14000000 	strne	r0, [r0], #-0
    a688:	00003c54 	andeq	r3, r0, r4, asr ip
    a68c:	00014301 	andeq	r4, r1, r1, lsl #6
    a690:	20000000 	andcs	r0, r0, r0
    a694:	01000000 	mrseq	r0, (UNDEF: 0)
    a698:	0004b99c 	muleq	r4, ip, r9
    a69c:	3b991500 	blcc	fe64faa4 <SCS_BASE+0x1e641aa4>
    a6a0:	43010000 	movwmi	r0, #4096	; 0x1000
    a6a4:	00005e01 	andeq	r5, r0, r1, lsl #28
    a6a8:	00565100 	subseq	r5, r6, r0, lsl #2
    a6ac:	f5140000 			; <UNDEFINED> instruction: 0xf5140000
    a6b0:	0100003c 	tsteq	r0, ip, lsr r0
    a6b4:	0000014e 	andeq	r0, r0, lr, asr #2
    a6b8:	00200000 	eoreq	r0, r0, r0
    a6bc:	9c010000 	stcls	0, cr0, [r1], {-0}
    a6c0:	000004e0 	andeq	r0, r0, r0, ror #9
    a6c4:	003b9915 	eorseq	r9, fp, r5, lsl r9
    a6c8:	014e0100 	mrseq	r0, (UNDEF: 94)
    a6cc:	0000005e 	andeq	r0, r0, lr, asr r0
    a6d0:	00005672 	andeq	r5, r0, r2, ror r6
    a6d4:	3a3e1400 	bcc	f8f6dc <__Stack_Size+0xf8f2dc>
    a6d8:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    a6dc:	00000001 	andeq	r0, r0, r1
    a6e0:	00002000 	andeq	r2, r0, r0
    a6e4:	079c0100 	ldreq	r0, [ip, r0, lsl #2]
    a6e8:	15000005 	strne	r0, [r0, #-5]
    a6ec:	00003b99 	muleq	r0, r9, fp
    a6f0:	5e015901 	cdppl	9, 0, cr5, cr1, cr1, {0}
    a6f4:	93000000 	movwls	r0, #0
    a6f8:	00000056 	andeq	r0, r0, r6, asr r0
    a6fc:	003c0c17 	eorseq	r0, ip, r7, lsl ip
    a700:	01640100 	cmneq	r4, r0, lsl #2
    a704:	0000004c 	andeq	r0, r0, ip, asr #32
    a708:	00000000 	andeq	r0, r0, r0
    a70c:	0000001a 	andeq	r0, r0, sl, lsl r0
    a710:	05329c01 	ldreq	r9, [r2, #-3073]!	; 0xc01
    a714:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    a718:	0100003b 	tsteq	r0, fp, lsr r0
    a71c:	005e0164 	subseq	r0, lr, r4, ror #2
    a720:	56b40000 	ldrtpl	r0, [r4], r0
    a724:	17000000 	strne	r0, [r0, -r0]
    a728:	00003bd7 	ldrdeq	r3, [r0], -r7
    a72c:	4c016f01 	stcmi	15, cr6, [r1], {1}
    a730:	00000000 	andeq	r0, r0, r0
    a734:	1a000000 	bne	a73c <__Stack_Size+0xa33c>
    a738:	01000000 	mrseq	r0, (UNDEF: 0)
    a73c:	00055d9c 	muleq	r5, ip, sp
    a740:	3b991500 	blcc	fe64fb48 <SCS_BASE+0x1e641b48>
    a744:	6f010000 	svcvs	0x00010000
    a748:	00005e01 	andeq	r5, r0, r1, lsl #28
    a74c:	0056d500 	subseq	sp, r6, r0, lsl #10
    a750:	a0140000 	andsge	r0, r4, r0
    a754:	0100003b 	tsteq	r0, fp, lsr r0
    a758:	0000017a 	andeq	r0, r0, sl, ror r1
    a75c:	00180000 	andseq	r0, r8, r0
    a760:	9c010000 	stcls	0, cr0, [r1], {-0}
    a764:	00000584 	andeq	r0, r0, r4, lsl #11
    a768:	003b9915 	eorseq	r9, fp, r5, lsl r9
    a76c:	017a0100 	cmneq	sl, r0, lsl #2
    a770:	0000005e 	andeq	r0, r0, lr, asr r0
    a774:	000056f6 	strdeq	r5, [r0], -r6
    a778:	3ad81400 	bcc	ff60f780 <SCS_BASE+0x1f601780>
    a77c:	85010000 	strhi	r0, [r1, #-0]
    a780:	00000001 	andeq	r0, r0, r1
    a784:	00001c00 	andeq	r1, r0, r0, lsl #24
    a788:	ab9c0100 	blge	fe70ab90 <SCS_BASE+0x1e6fcb90>
    a78c:	15000005 	strne	r0, [r0, #-5]
    a790:	00003b99 	muleq	r0, r9, fp
    a794:	5e018501 	cfsh32pl	mvfx8, mvfx1, #1
    a798:	17000000 	strne	r0, [r0, -r0]
    a79c:	00000057 	andeq	r0, r0, r7, asr r0
    a7a0:	003a3014 	eorseq	r3, sl, r4, lsl r0
    a7a4:	01900100 	orrseq	r0, r0, r0, lsl #2
    a7a8:	00000000 	andeq	r0, r0, r0
    a7ac:	00000020 	andeq	r0, r0, r0, lsr #32
    a7b0:	05d29c01 	ldrbeq	r9, [r2, #3073]	; 0xc01
    a7b4:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    a7b8:	0100003b 	tsteq	r0, fp, lsr r0
    a7bc:	005e0190 			; <UNDEFINED> instruction: 0x005e0190
    a7c0:	57380000 	ldrpl	r0, [r8, -r0]!
    a7c4:	14000000 	strne	r0, [r0], #-0
    a7c8:	00003bbf 			; <UNDEFINED> instruction: 0x00003bbf
    a7cc:	00019b01 	andeq	r9, r1, r1, lsl #22
    a7d0:	20000000 	andcs	r0, r0, r0
    a7d4:	01000000 	mrseq	r0, (UNDEF: 0)
    a7d8:	0005f99c 	muleq	r5, ip, r9
    a7dc:	3b991500 	blcc	fe64fbe4 <SCS_BASE+0x1e641be4>
    a7e0:	9b010000 	blls	4a7e8 <__Stack_Size+0x4a3e8>
    a7e4:	00005e01 	andeq	r5, r0, r1, lsl #28
    a7e8:	00575900 	subseq	r5, r7, r0, lsl #18
    a7ec:	c3140000 	tstgt	r4, #0
    a7f0:	01000037 	tsteq	r0, r7, lsr r0
    a7f4:	234801a6 	movtcs	r0, #33190	; 0x81a6
    a7f8:	00260800 	eoreq	r0, r6, r0, lsl #16
    a7fc:	9c010000 	stcls	0, cr0, [r1], {-0}
    a800:	00000620 	andeq	r0, r0, r0, lsr #12
    a804:	003b9915 	eorseq	r9, fp, r5, lsl r9
    a808:	01a60100 			; <UNDEFINED> instruction: 0x01a60100
    a80c:	0000005e 	andeq	r0, r0, lr, asr r0
    a810:	0000577a 	andeq	r5, r0, sl, ror r7
    a814:	38621400 	stmdacc	r2!, {sl, ip}^
    a818:	b1010000 	mrslt	r0, (UNDEF: 1)
    a81c:	00236e01 	eoreq	r6, r3, r1, lsl #28
    a820:	00002608 	andeq	r2, r0, r8, lsl #12
    a824:	479c0100 	ldrmi	r0, [ip, r0, lsl #2]
    a828:	15000006 	strne	r0, [r0, #-6]
    a82c:	00003b99 	muleq	r0, r9, fp
    a830:	5e01b101 	mvfpls	f3, f1
    a834:	9b000000 	blls	a83c <__Stack_Size+0xa43c>
    a838:	00000057 	andeq	r0, r0, r7, asr r0
    a83c:	003a6214 	eorseq	r6, sl, r4, lsl r2
    a840:	01bd0100 			; <UNDEFINED> instruction: 0x01bd0100
    a844:	00000000 	andeq	r0, r0, r0
    a848:	00000022 	andeq	r0, r0, r2, lsr #32
    a84c:	067e9c01 	ldrbteq	r9, [lr], -r1, lsl #24
    a850:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    a854:	0100003b 	tsteq	r0, fp, lsr r0
    a858:	005e01bd 	ldrheq	r0, [lr], #-29	; 0xffffffe3
    a85c:	57bc0000 	ldrpl	r0, [ip, r0]!
    a860:	e7150000 	ldr	r0, [r5, -r0]
    a864:	0100003a 	tsteq	r0, sl, lsr r0
    a868:	005e01bd 	ldrheq	r0, [lr], #-29	; 0xffffffe3
    a86c:	57dd0000 	ldrbpl	r0, [sp, r0]
    a870:	17000000 	strne	r0, [r0, -r0]
    a874:	00003c40 	andeq	r3, r0, r0, asr #24
    a878:	5e01c801 	cdppl	8, 0, cr12, cr1, cr1, {0}
    a87c:	00000000 	andeq	r0, r0, r0
    a880:	12000000 	andne	r0, r0, #0
    a884:	01000000 	mrseq	r0, (UNDEF: 0)
    a888:	0006a99c 	muleq	r6, ip, r9
    a88c:	3b991500 	blcc	fe64fc94 <SCS_BASE+0x1e641c94>
    a890:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    a894:	00005e01 	andeq	r5, r0, r1, lsl #28
    a898:	0057fe00 	subseq	pc, r7, r0, lsl #28
    a89c:	fb140000 	blx	50a8a6 <__Stack_Size+0x50a4a6>
    a8a0:	01000015 	tsteq	r0, r5, lsl r0
    a8a4:	239401d4 	orrscs	r0, r4, #212, 2	; 0x35
    a8a8:	00200800 	eoreq	r0, r0, r0, lsl #16
    a8ac:	9c010000 	stcls	0, cr0, [r1], {-0}
    a8b0:	000006e0 	andeq	r0, r0, r0, ror #13
    a8b4:	003b9915 	eorseq	r9, fp, r5, lsl r9
    a8b8:	01d40100 	bicseq	r0, r4, r0, lsl #2
    a8bc:	0000005e 	andeq	r0, r0, lr, asr r0
    a8c0:	0000581f 	andeq	r5, r0, pc, lsl r8
    a8c4:	003c6315 	eorseq	r6, ip, r5, lsl r3
    a8c8:	01d40100 	bicseq	r0, r4, r0, lsl #2
    a8cc:	0000004c 	andeq	r0, r0, ip, asr #32
    a8d0:	00005840 	andeq	r5, r0, r0, asr #16
    a8d4:	14ed1400 	strbtne	r1, [sp], #1024	; 0x400
    a8d8:	e0010000 	and	r0, r1, r0
    a8dc:	0023b401 	eoreq	fp, r3, r1, lsl #8
    a8e0:	00002008 	andeq	r2, r0, r8
    a8e4:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
    a8e8:	15000007 	strne	r0, [r0, #-7]
    a8ec:	00003b99 	muleq	r0, r9, fp
    a8f0:	5e01e001 	cdppl	0, 0, cr14, cr1, cr1, {0}
    a8f4:	61000000 	mrsvs	r0, (UNDEF: 0)
    a8f8:	15000058 	strne	r0, [r0, #-88]	; 0x58
    a8fc:	00003c63 	andeq	r3, r0, r3, ror #24
    a900:	4c01e001 	stcmi	0, cr14, [r1], {1}
    a904:	82000000 	andhi	r0, r0, #0
    a908:	00000058 	andeq	r0, r0, r8, asr r0
    a90c:	0036e417 	eorseq	lr, r6, r7, lsl r4
    a910:	01eb0100 	mvneq	r0, r0, lsl #2
    a914:	0000004c 	andeq	r0, r0, ip, asr #32
    a918:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
    a91c:	00000020 	andeq	r0, r0, r0, lsr #32
    a920:	07429c01 	strbeq	r9, [r2, -r1, lsl #24]
    a924:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    a928:	0100003b 	tsteq	r0, fp, lsr r0
    a92c:	005e01eb 	subseq	r0, lr, fp, ror #3
    a930:	58a30000 	stmiapl	r3!, {}	; <UNPREDICTABLE>
    a934:	17000000 	strne	r0, [r0, -r0]
    a938:	00003629 	andeq	r3, r0, r9, lsr #12
    a93c:	4c01f601 	stcmi	6, cr15, [r1], {1}
    a940:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    a944:	20080023 	andcs	r0, r8, r3, lsr #32
    a948:	01000000 	mrseq	r0, (UNDEF: 0)
    a94c:	00076d9c 	muleq	r7, ip, sp
    a950:	3b991500 	blcc	fe64fd58 <SCS_BASE+0x1e641d58>
    a954:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    a958:	00005e01 	andeq	r5, r0, r1, lsl #28
    a95c:	0058c400 	subseq	ip, r8, r0, lsl #8
    a960:	7c140000 	ldcvc	0, cr0, [r4], {-0}
    a964:	0100001a 	tsteq	r0, sl, lsl r0
    a968:	24140202 	ldrcs	r0, [r4], #-514	; 0x202
    a96c:	001c0800 	andseq	r0, ip, r0, lsl #16
    a970:	9c010000 	stcls	0, cr0, [r1], {-0}
    a974:	000007a2 	andeq	r0, r0, r2, lsr #15
    a978:	003b9915 	eorseq	r9, fp, r5, lsl r9
    a97c:	02020100 	andeq	r0, r2, #0, 2
    a980:	0000005e 	andeq	r0, r0, lr, asr r0
    a984:	000058e5 	andeq	r5, r0, r5, ror #17
    a988:	00001118 	andeq	r1, r0, r8, lsl r1
    a98c:	02020100 	andeq	r0, r2, #0, 2
    a990:	0000004c 	andeq	r0, r0, ip, asr #32
    a994:	14005101 	strne	r5, [r0], #-257	; 0x101
    a998:	00003baf 	andeq	r3, r0, pc, lsr #23
    a99c:	00020e01 	andeq	r0, r2, r1, lsl #28
    a9a0:	26000000 	strcs	r0, [r0], -r0
    a9a4:	01000000 	mrseq	r0, (UNDEF: 0)
    a9a8:	0007f19c 	muleq	r7, ip, r1
    a9ac:	3af51800 	bcc	ffd509b4 <SCS_BASE+0x1fd429b4>
    a9b0:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    a9b4:	0007f102 	andeq	pc, r7, r2, lsl #2
    a9b8:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    a9bc:	00000011 	andeq	r0, r0, r1, lsl r0
    a9c0:	4c020e01 	stcmi	14, cr0, [r2], {1}
    a9c4:	06000000 	streq	r0, [r0], -r0
    a9c8:	10000059 	andne	r0, r0, r9, asr r0
    a9cc:	00000000 	andeq	r0, r0, r0
    a9d0:	00000026 	andeq	r0, r0, r6, lsr #32
    a9d4:	003aab16 	eorseq	sl, sl, r6, lsl fp
    a9d8:	02100100 	andseq	r0, r0, #0, 2
    a9dc:	0000004c 	andeq	r0, r0, ip, asr #32
    a9e0:	00005940 	andeq	r5, r0, r0, asr #18
    a9e4:	04190000 	ldreq	r0, [r9], #-0
    a9e8:	0000003a 	andeq	r0, r0, sl, lsr r0
    a9ec:	001a2f14 	andseq	r2, sl, r4, lsl pc
    a9f0:	021a0100 	andseq	r0, sl, #0, 2
    a9f4:	08002430 	stmdaeq	r0, {r4, r5, sl, sp}
    a9f8:	00000040 	andeq	r0, r0, r0, asr #32
    a9fc:	085c9c01 	ldmdaeq	ip, {r0, sl, fp, ip, pc}^
    aa00:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    aa04:	0100003b 	tsteq	r0, fp, lsr r0
    aa08:	005e021a 	subseq	r0, lr, sl, lsl r2
    aa0c:	59690000 	stmdbpl	r9!, {}^	; <UNPREDICTABLE>
    aa10:	11150000 	tstne	r5, r0
    aa14:	01000000 	mrseq	r0, (UNDEF: 0)
    aa18:	004c021a 	subeq	r0, ip, sl, lsl r2
    aa1c:	598a0000 	stmibpl	sl, {}	; <UNPREDICTABLE>
    aa20:	30100000 	andscc	r0, r0, r0
    aa24:	40080024 	andmi	r0, r8, r4, lsr #32
    aa28:	1a000000 	bne	aa30 <__Stack_Size+0xa630>
    aa2c:	00003af5 	strdeq	r3, [r0], -r5
    aa30:	f1021c01 			; <UNDEFINED> instruction: 0xf1021c01
    aa34:	01000007 	tsteq	r0, r7
    aa38:	0d301b52 	vldmdbeq	r0!, {d1-<overflow reg d41>}
    aa3c:	ab160000 	blge	58aa44 <__Stack_Size+0x58a644>
    aa40:	0100003a 	tsteq	r0, sl, lsr r0
    aa44:	004c021c 	subeq	r0, ip, ip, lsl r2
    aa48:	59ab0000 	stmibpl	fp!, {}	; <UNPREDICTABLE>
    aa4c:	00000000 	andeq	r0, r0, r0
    aa50:	3ccc1700 	stclcc	7, cr1, [ip], {0}
    aa54:	25010000 	strcs	r0, [r1, #-0]
    aa58:	00004c02 	andeq	r4, r0, r2, lsl #24
    aa5c:	00000000 	andeq	r0, r0, r0
    aa60:	00002000 	andeq	r2, r0, r0
    aa64:	879c0100 	ldrhi	r0, [ip, r0, lsl #2]
    aa68:	15000008 	strne	r0, [r0, #-8]
    aa6c:	00003b99 	muleq	r0, r9, fp
    aa70:	5e022501 	cfsh32pl	mvfx2, mvfx2, #1
    aa74:	e3000000 	movw	r0, #0
    aa78:	00000059 	andeq	r0, r0, r9, asr r0
    aa7c:	003c7117 	eorseq	r7, ip, r7, lsl r1
    aa80:	02300100 	eorseq	r0, r0, #0, 2
    aa84:	0000004c 	andeq	r0, r0, ip, asr #32
    aa88:	08002470 	stmdaeq	r0, {r4, r5, r6, sl, sp}
    aa8c:	00000020 	andeq	r0, r0, r0, lsr #32
    aa90:	08b29c01 	ldmeq	r2!, {r0, sl, fp, ip, pc}
    aa94:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    aa98:	0100003b 	tsteq	r0, fp, lsr r0
    aa9c:	005e0230 	subseq	r0, lr, r0, lsr r2
    aaa0:	5a040000 	bpl	10aaa8 <__Stack_Size+0x10a6a8>
    aaa4:	14000000 	strne	r0, [r0], #-0
    aaa8:	00003b31 	andeq	r3, r0, r1, lsr fp
    aaac:	00023d01 	andeq	r3, r2, r1, lsl #26
    aab0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    aab4:	01000000 	mrseq	r0, (UNDEF: 0)
    aab8:	0008f99c 	muleq	r8, ip, r9
    aabc:	3b991500 	blcc	fe64fec4 <SCS_BASE+0x1e641ec4>
    aac0:	3d010000 	stccc	0, cr0, [r1, #-0]
    aac4:	00005e02 	andeq	r5, r0, r2, lsl #28
    aac8:	005a2500 	subseq	r2, sl, r0, lsl #10
    aacc:	3bcd1500 	blcc	ff34fed4 <SCS_BASE+0x1f341ed4>
    aad0:	3d010000 	stccc	0, cr0, [r1, #-0]
    aad4:	00004c02 	andeq	r4, r0, r2, lsl #24
    aad8:	005a4600 	subseq	r4, sl, r0, lsl #12
    aadc:	3d0a1500 	cfstr32cc	mvfx1, [sl, #-0]
    aae0:	3d010000 	stccc	0, cr0, [r1, #-0]
    aae4:	00004c02 	andeq	r4, r0, r2, lsl #24
    aae8:	005a6700 	subseq	r6, sl, r0, lsl #14
    aaec:	7f140000 	svcvc	0x00140000
    aaf0:	0100003b 	tsteq	r0, fp, lsr r0
    aaf4:	00000249 	andeq	r0, r0, r9, asr #4
    aaf8:	00200000 	eoreq	r0, r0, r0
    aafc:	9c010000 	stcls	0, cr0, [r1], {-0}
    ab00:	00000930 	andeq	r0, r0, r0, lsr r9
    ab04:	003b9915 	eorseq	r9, fp, r5, lsl r9
    ab08:	02490100 	subeq	r0, r9, #0, 2
    ab0c:	0000005e 	andeq	r0, r0, lr, asr r0
    ab10:	00005a88 	andeq	r5, r0, r8, lsl #21
    ab14:	003bcd15 	eorseq	ip, fp, r5, lsl sp
    ab18:	02490100 	subeq	r0, r9, #0, 2
    ab1c:	0000004c 	andeq	r0, r0, ip, asr #32
    ab20:	00005aa9 	andeq	r5, r0, r9, lsr #21
    ab24:	3cd91400 	cfldrdcc	mvd1, [r9], {0}
    ab28:	55010000 	strpl	r0, [r1, #-0]
    ab2c:	00000002 	andeq	r0, r0, r2
    ab30:	00002000 	andeq	r2, r0, r0
    ab34:	679c0100 	ldrvs	r0, [ip, r0, lsl #2]
    ab38:	15000009 	strne	r0, [r0, #-9]
    ab3c:	00003b99 	muleq	r0, r9, fp
    ab40:	5e025501 	cfsh32pl	mvfx5, mvfx2, #1
    ab44:	ca000000 	bgt	ab4c <__Stack_Size+0xa74c>
    ab48:	1500005a 	strne	r0, [r0, #-90]	; 0x5a
    ab4c:	00003d0a 	andeq	r3, r0, sl, lsl #26
    ab50:	4c025501 	cfstr32mi	mvfx5, [r2], {1}
    ab54:	eb000000 	bl	ab5c <__Stack_Size+0xa75c>
    ab58:	0000005a 	andeq	r0, r0, sl, asr r0
    ab5c:	003b1217 	eorseq	r1, fp, r7, lsl r2
    ab60:	02600100 	rsbeq	r0, r0, #0, 2
    ab64:	0000004c 	andeq	r0, r0, ip, asr #32
    ab68:	00000000 	andeq	r0, r0, r0
    ab6c:	00000020 	andeq	r0, r0, r0, lsr #32
    ab70:	09929c01 	ldmibeq	r2, {r0, sl, fp, ip, pc}
    ab74:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    ab78:	0100003b 	tsteq	r0, fp, lsr r0
    ab7c:	005e0260 	subseq	r0, lr, r0, ror #4
    ab80:	5b0c0000 	blpl	30ab88 <__Stack_Size+0x30a788>
    ab84:	17000000 	strne	r0, [r0, -r0]
    ab88:	00003c7e 	andeq	r3, r0, lr, ror ip
    ab8c:	4c026b01 	stcmi	11, cr6, [r2], {1}
    ab90:	00000000 	andeq	r0, r0, r0
    ab94:	20000000 	andcs	r0, r0, r0
    ab98:	01000000 	mrseq	r0, (UNDEF: 0)
    ab9c:	0009bd9c 	muleq	r9, ip, sp
    aba0:	3b991500 	blcc	fe64ffa8 <SCS_BASE+0x1e641fa8>
    aba4:	6b010000 	blvs	4abac <__Stack_Size+0x4a7ac>
    aba8:	00005e02 	andeq	r5, r0, r2, lsl #28
    abac:	005b2d00 	subseq	r2, fp, r0, lsl #26
    abb0:	8f140000 	svchi	0x00140000
    abb4:	0100003c 	tsteq	r0, ip, lsr r0
    abb8:	00000277 	andeq	r0, r0, r7, ror r2
    abbc:	00a80000 	adceq	r0, r8, r0
    abc0:	9c010000 	stcls	0, cr0, [r1], {-0}
    abc4:	00000a64 	andeq	r0, r0, r4, ror #20
    abc8:	003b9915 	eorseq	r9, fp, r5, lsl r9
    abcc:	02770100 	rsbseq	r0, r7, #0, 2
    abd0:	0000005e 	andeq	r0, r0, lr, asr r0
    abd4:	00005b4e 	andeq	r5, r0, lr, asr #22
    abd8:	003c2915 	eorseq	r2, ip, r5, lsl r9
    abdc:	02770100 	rsbseq	r0, r7, #0, 2
    abe0:	0000005e 	andeq	r0, r0, lr, asr r0
    abe4:	00005b93 	muleq	r0, r3, fp
    abe8:	00001115 	andeq	r1, r0, r5, lsl r1
    abec:	02770100 	rsbseq	r0, r7, #0, 2
    abf0:	0000004c 	andeq	r0, r0, ip, asr #32
    abf4:	00005bd8 	ldrdeq	r5, [r0], -r8
    abf8:	0000001c 	andeq	r0, r0, ip, lsl r0
    abfc:	00003a00 	andeq	r3, r0, r0, lsl #20
    ac00:	000a3700 	andeq	r3, sl, r0, lsl #14
    ac04:	3af51600 	bcc	ffd5040c <SCS_BASE+0x1fd4240c>
    ac08:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    ac0c:	0007f102 	andeq	pc, r7, r2, lsl #2
    ac10:	005c0400 	subseq	r0, ip, r0, lsl #8
    ac14:	0d481b00 	vstreq	d17, [r8, #-0]
    ac18:	ab160000 	blge	58ac20 <__Stack_Size+0x58a820>
    ac1c:	0100003a 	tsteq	r0, sl, lsr r0
    ac20:	004c0279 	subeq	r0, ip, r9, ror r2
    ac24:	5c170000 	ldcpl	0, cr0, [r7], {-0}
    ac28:	00000000 	andeq	r0, r0, r0
    ac2c:	000d601b 	andeq	r6, sp, fp, lsl r0
    ac30:	3af51600 	bcc	ffd50438 <SCS_BASE+0x1fd42438>
    ac34:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    ac38:	0007f102 	andeq	pc, r7, r2, lsl #2
    ac3c:	005c4f00 	subseq	r4, ip, r0, lsl #30
    ac40:	0d781b00 	vldmdbeq	r8!, {d17-d16}
    ac44:	ab160000 	blge	58ac4c <__Stack_Size+0x58a84c>
    ac48:	0100003a 	tsteq	r0, sl, lsr r0
    ac4c:	004c0279 	subeq	r0, ip, r9, ror r2
    ac50:	5c6d0000 	stclpl	0, cr0, [sp], #-0
    ac54:	00000000 	andeq	r0, r0, r0
    ac58:	3bfa1400 	blcc	ffe8fc60 <SCS_BASE+0x1fe81c60>
    ac5c:	83010000 	movwhi	r0, #4096	; 0x1000
    ac60:	00000002 	andeq	r0, r0, r2
    ac64:	00005c00 	andeq	r5, r0, r0, lsl #24
    ac68:	db9c0100 	blle	fe70b070 <SCS_BASE+0x1e6fd070>
    ac6c:	1500000a 	strne	r0, [r0, #-10]
    ac70:	00003b99 	muleq	r0, r9, fp
    ac74:	5e028301 	cdppl	3, 0, cr8, cr2, cr1, {0}
    ac78:	a5000000 	strge	r0, [r0, #-0]
    ac7c:	1500005c 	strne	r0, [r0, #-92]	; 0x5c
    ac80:	00003c29 	andeq	r3, r0, r9, lsr #24
    ac84:	5e028301 	cdppl	3, 0, cr8, cr2, cr1, {0}
    ac88:	df000000 	svcle	0x00000000
    ac8c:	1500005c 	strne	r0, [r0, #-92]	; 0x5c
    ac90:	00000011 	andeq	r0, r0, r1, lsl r0
    ac94:	4c028301 	stcmi	3, cr8, [r2], {1}
    ac98:	0b000000 	bleq	aca0 <__Stack_Size+0xa8a0>
    ac9c:	1000005d 	andne	r0, r0, sp, asr r0
    aca0:	00000000 	andeq	r0, r0, r0
    aca4:	00000038 	andeq	r0, r0, r8, lsr r0
    aca8:	003af516 	eorseq	pc, sl, r6, lsl r5	; <UNPREDICTABLE>
    acac:	02850100 	addeq	r0, r5, #0, 2
    acb0:	000007f1 	strdeq	r0, [r0], -r1
    acb4:	00005d37 	andeq	r5, r0, r7, lsr sp
    acb8:	000d981b 	andeq	r9, sp, fp, lsl r8
    acbc:	3aab1600 	bcc	fead04c4 <SCS_BASE+0x1eac24c4>
    acc0:	85010000 	strhi	r0, [r1, #-0]
    acc4:	00004c02 	andeq	r4, r0, r2, lsl #24
    acc8:	005d4a00 	subseq	r4, sp, r0, lsl #20
    accc:	00000000 	andeq	r0, r0, r0
    acd0:	003a9914 	eorseq	r9, sl, r4, lsl r9
    acd4:	028f0100 	addeq	r0, pc, #0, 2
    acd8:	00000000 	andeq	r0, r0, r0
    acdc:	0000005c 	andeq	r0, r0, ip, asr r0
    ace0:	0b529c01 	bleq	14b1cec <__Stack_Size+0x14b18ec>
    ace4:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    ace8:	0100003b 	tsteq	r0, fp, lsr r0
    acec:	005e028f 	subseq	r0, lr, pc, lsl #5
    acf0:	5d820000 	stcpl	0, cr0, [r2]
    acf4:	29150000 	ldmdbcs	r5, {}	; <UNPREDICTABLE>
    acf8:	0100003c 	tsteq	r0, ip, lsr r0
    acfc:	005e028f 	subseq	r0, lr, pc, lsl #5
    ad00:	5dbc0000 	ldcpl	0, cr0, [ip]
    ad04:	11150000 	tstne	r5, r0
    ad08:	01000000 	mrseq	r0, (UNDEF: 0)
    ad0c:	004c028f 	subeq	r0, ip, pc, lsl #5
    ad10:	5de80000 	stclpl	0, cr0, [r8]
    ad14:	00100000 	andseq	r0, r0, r0
    ad18:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    ad1c:	16000000 	strne	r0, [r0], -r0
    ad20:	00003af5 	strdeq	r3, [r0], -r5
    ad24:	f1029101 			; <UNDEFINED> instruction: 0xf1029101
    ad28:	14000007 	strne	r0, [r0], #-7
    ad2c:	1b00005e 	blne	aeac <__Stack_Size+0xaaac>
    ad30:	00000db0 			; <UNDEFINED> instruction: 0x00000db0
    ad34:	003aab16 	eorseq	sl, sl, r6, lsl fp
    ad38:	02910100 	addseq	r0, r1, #0, 2
    ad3c:	0000004c 	andeq	r0, r0, ip, asr #32
    ad40:	00005e27 	andeq	r5, r0, r7, lsr #28
    ad44:	17000000 	strne	r0, [r0, -r0]
    ad48:	00003be8 	andeq	r3, r0, r8, ror #23
    ad4c:	4c029b01 	stcmi	11, cr9, [r2], {1}
    ad50:	00000000 	andeq	r0, r0, r0
    ad54:	20000000 	andcs	r0, r0, r0
    ad58:	01000000 	mrseq	r0, (UNDEF: 0)
    ad5c:	000b7d9c 	muleq	fp, ip, sp
    ad60:	3b991500 	blcc	fe650168 <SCS_BASE+0x1e642168>
    ad64:	9b010000 	blls	4ad6c <__Stack_Size+0x4a96c>
    ad68:	00005e02 	andeq	r5, r0, r2, lsl #28
    ad6c:	005e5f00 	subseq	r5, lr, r0, lsl #30
    ad70:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
    ad74:	0100003c 	tsteq	r0, ip, lsr r0
    ad78:	004c02a7 	subeq	r0, ip, r7, lsr #5
    ad7c:	00000000 	andeq	r0, r0, r0
    ad80:	00200000 	eoreq	r0, r0, r0
    ad84:	9c010000 	stcls	0, cr0, [r1], {-0}
    ad88:	00000ba8 	andeq	r0, r0, r8, lsr #23
    ad8c:	003b9915 	eorseq	r9, fp, r5, lsl r9
    ad90:	02a70100 	adceq	r0, r7, #0, 2
    ad94:	0000005e 	andeq	r0, r0, lr, asr r0
    ad98:	00005e80 	andeq	r5, r0, r0, lsl #29
    ad9c:	3b421700 	blcc	10909a4 <__Stack_Size+0x10905a4>
    ada0:	b3010000 	movwlt	r0, #4096	; 0x1000
    ada4:	00009502 	andeq	r9, r0, r2, lsl #10
    ada8:	00000000 	andeq	r0, r0, r0
    adac:	00004400 	andeq	r4, r0, r0, lsl #8
    adb0:	d39c0100 	orrsle	r0, ip, #0, 2
    adb4:	1500000b 	strne	r0, [r0, #-11]
    adb8:	00003b99 	muleq	r0, r9, fp
    adbc:	5e02b301 	cdppl	3, 0, cr11, cr2, cr1, {0}
    adc0:	a1000000 	mrsge	r0, (UNDEF: 0)
    adc4:	0000005e 	andeq	r0, r0, lr, asr r0
    adc8:	003d1414 	eorseq	r1, sp, r4, lsl r4
    adcc:	02c40100 	sbceq	r0, r4, #0, 2
    add0:	00000000 	andeq	r0, r0, r0
    add4:	00000042 	andeq	r0, r0, r2, asr #32
    add8:	0c089c01 	stceq	12, cr9, [r8], {1}
    addc:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    ade0:	0100003b 	tsteq	r0, fp, lsr r0
    ade4:	005e02c4 	subseq	r0, lr, r4, asr #5
    ade8:	5ec20000 	cdppl	0, 12, cr0, cr2, cr0, {0}
    adec:	29180000 	ldmdbcs	r8, {}	; <UNPREDICTABLE>
    adf0:	0100003c 	tsteq	r0, ip, lsr r0
    adf4:	005e02c4 	subseq	r0, lr, r4, asr #5
    adf8:	51010000 	mrspl	r0, (UNDEF: 1)
    adfc:	3c4d1700 	mcrrcc	7, 0, r1, sp, cr0
    ae00:	d7010000 	strle	r0, [r1, -r0]
    ae04:	00004c02 	andeq	r4, r0, r2, lsl #24
    ae08:	00000000 	andeq	r0, r0, r0
    ae0c:	00000600 	andeq	r0, r0, r0, lsl #12
    ae10:	4f9c0100 	svcmi	0x009c0100
    ae14:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
    ae18:	01006862 	tsteq	r0, r2, ror #16
    ae1c:	005e02d7 	ldrsbeq	r0, [lr], #-39	; 0xffffffd9
    ae20:	5efc0000 	cdppl	0, 15, cr0, cr12, cr0, {0}
    ae24:	621e0000 	andsvs	r0, lr, #0
    ae28:	d701006c 	strle	r0, [r1, -ip, rrx]
    ae2c:	00005e02 	andeq	r5, r0, r2, lsl #28
    ae30:	16510100 	ldrbne	r0, [r1], -r0, lsl #2
    ae34:	00003d05 	andeq	r3, r0, r5, lsl #26
    ae38:	4c02d901 	stcmi	9, cr13, [r2], {1}
    ae3c:	1d000000 	stcne	0, cr0, [r0, #-0]
    ae40:	0000005f 	andeq	r0, r0, pc, asr r0
    ae44:	0037ba1f 	eorseq	fp, r7, pc, lsl sl
    ae48:	02e40100 	rsceq	r0, r4, #0, 2
    ae4c:	0000004c 	andeq	r0, r0, ip, asr #32
    ae50:	08002490 	stmdaeq	r0, {r4, r7, sl, sp}
    ae54:	0000000a 	andeq	r0, r0, sl
    ae58:	6c159c01 	ldcvs	12, cr9, [r5], {1}
    ae5c:	0100003b 	tsteq	r0, fp, lsr r0
    ae60:	004c02e4 	subeq	r0, ip, r4, ror #5
    ae64:	5f560000 	svcpl	0x00560000
    ae68:	2a160000 	bcs	58ae70 <__Stack_Size+0x58aa70>
    ae6c:	0100003a 	tsteq	r0, sl, lsr r0
    ae70:	005e02e6 	subseq	r0, lr, r6, ror #5
    ae74:	5f770000 	svcpl	0x00770000
    ae78:	05160000 	ldreq	r0, [r6, #-0]
    ae7c:	0100003d 	tsteq	r0, sp, lsr r0
    ae80:	004c02e7 	subeq	r0, ip, r7, ror #5
    ae84:	5f950000 	svcpl	0x00950000
    ae88:	00000000 	andeq	r0, r0, r0
    ae8c:	00000161 	andeq	r0, r0, r1, ror #2
    ae90:	261c0004 	ldrcs	r0, [ip], -r4
    ae94:	01040000 	mrseq	r0, (UNDEF: 4)
    ae98:	000002f4 	strdeq	r0, [r0], -r4
    ae9c:	003d4f01 	eorseq	r4, sp, r1, lsl #30
    aea0:	0003ec00 	andeq	lr, r3, r0, lsl #24
    aea4:	000fa800 	andeq	sl, pc, r0, lsl #16
    aea8:	00000000 	andeq	r0, r0, r0
    aeac:	0034d500 	eorseq	sp, r4, r0, lsl #10
    aeb0:	05040200 	streq	r0, [r4, #-512]	; 0x200
    aeb4:	0000082d 	andeq	r0, r0, sp, lsr #16
    aeb8:	ff050202 			; <UNDEFINED> instruction: 0xff050202
    aebc:	02000007 	andeq	r0, r0, #7
    aec0:	09de0601 	ldmibeq	lr, {r0, r9, sl}^
    aec4:	75030000 	strvc	r0, [r3, #-0]
    aec8:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
    aecc:	00004527 	andeq	r4, r0, r7, lsr #10
    aed0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    aed4:	0000093a 	andeq	r0, r0, sl, lsr r9
    aed8:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    aedc:	57280200 	strpl	r0, [r8, -r0, lsl #4]!
    aee0:	02000000 	andeq	r0, r0, #0
    aee4:	0bd70702 	bleq	ff5ccaf4 <SCS_BASE+0x1f5beaf4>
    aee8:	75030000 	strvc	r0, [r3, #-0]
    aeec:	29020038 	stmdbcs	r2, {r3, r4, r5}
    aef0:	00000068 	andeq	r0, r0, r8, rrx
    aef4:	dc080102 	stfles	f0, [r8], {2}
    aef8:	02000009 	andeq	r0, r0, #9
    aefc:	09310704 	ldmdbeq	r1!, {r2, r8, r9, sl}
    af00:	04040000 	streq	r0, [r4], #-0
    af04:	0000005e 	andeq	r0, r0, lr, asr r0
    af08:	00152b05 	andseq	r2, r5, r5, lsl #22
    af0c:	3a230100 	bcc	8cb314 <__Stack_Size+0x8caf14>
    af10:	9c000000 	stcls	0, cr0, [r0], {-0}
    af14:	20080024 	andcs	r0, r8, r4, lsr #32
    af18:	01000000 	mrseq	r0, (UNDEF: 0)
    af1c:	1356069c 	cmpne	r6, #156, 12	; 0x9c00000
    af20:	5f010000 	svcpl	0x00010000
    af24:	0000003a 	andeq	r0, r0, sl, lsr r0
    af28:	080024bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, sp}
    af2c:	00000024 	andeq	r0, r0, r4, lsr #32
    af30:	01169c01 	tsteq	r6, r1, lsl #24
    af34:	2d070000 	stccs	0, cr0, [r7, #-0]
    af38:	0100003d 	tsteq	r0, sp, lsr r0
    af3c:	00005e5f 	andeq	r5, r0, pc, asr lr
    af40:	005fcc00 	subseq	ip, pc, r0, lsl #24
    af44:	3d400700 	stclcc	7, cr0, [r0, #-0]
    af48:	5f010000 	svcpl	0x00010000
    af4c:	00000076 	andeq	r0, r0, r6, ror r0
    af50:	00005fed 	andeq	r5, r0, sp, ror #31
    af54:	003d3508 	eorseq	r3, sp, r8, lsl #10
    af58:	3a610100 	bcc	184b360 <__Stack_Size+0x184af60>
    af5c:	0b000000 	bleq	af64 <__Stack_Size+0xab64>
    af60:	09000060 	stmdbeq	r0, {r5, r6}
    af64:	080024ca 	stmdaeq	r0, {r1, r3, r6, r7, sl, sp}
    af68:	00000121 	andeq	r0, r0, r1, lsr #2
    af6c:	000000eb 	andeq	r0, r0, fp, ror #1
    af70:	0250010a 	subseq	r0, r0, #-2147483646	; 0x80000002
    af74:	09000075 	stmdbeq	r0, {r0, r2, r4, r5, r6}
    af78:	080024d2 	stmdaeq	r0, {r1, r4, r6, r7, sl, sp}
    af7c:	00000137 	andeq	r0, r0, r7, lsr r1
    af80:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    af84:	0250010a 	subseq	r0, r0, #-2147483646	; 0x80000002
    af88:	0b000075 	bleq	b164 <__Stack_Size+0xad64>
    af8c:	080024dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, sp}
    af90:	0000014d 	andeq	r0, r0, sp, asr #2
    af94:	0252010a 	subseq	r0, r2, #-2147483646	; 0x80000002
    af98:	010a0074 	tsteq	sl, r4, ror r0
    af9c:	00760250 	rsbseq	r0, r6, r0, asr r2
    afa0:	920c0000 	andls	r0, ip, #0
    afa4:	0400001a 	streq	r0, [r0], #-26
    afa8:	00004c2d 	andeq	r4, r0, sp, lsr #24
    afac:	3c710d00 	ldclcc	13, cr0, [r1], #-0
    afb0:	8b030000 	blhi	cafb8 <__Stack_Size+0xcabb8>
    afb4:	00004c02 	andeq	r4, r0, r2, lsl #24
    afb8:	00013700 	andeq	r3, r1, r0, lsl #14
    afbc:	005e0e00 	subseq	r0, lr, r0, lsl #28
    afc0:	0d000000 	stceq	0, cr0, [r0, #-0]
    afc4:	00003629 	andeq	r3, r0, r9, lsr #12
    afc8:	4c028603 	stcmi	6, cr8, [r2], {3}
    afcc:	4d000000 	stcmi	0, cr0, [r0, #-0]
    afd0:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    afd4:	0000005e 	andeq	r0, r0, lr, asr r0
    afd8:	38f50f00 	ldmcc	r5!, {r8, r9, sl, fp}^
    afdc:	1a050000 	bne	14afe4 <__Stack_Size+0x14abe4>
    afe0:	0000760e 	andeq	r7, r0, lr, lsl #12
    afe4:	004c0e00 	subeq	r0, ip, r0, lsl #28
    afe8:	4c0e0000 	stcmi	0, cr0, [lr], {-0}
    afec:	00000000 	andeq	r0, r0, r0
    aff0:	00019d00 	andeq	r9, r1, r0, lsl #26
    aff4:	07000400 	streq	r0, [r0, -r0, lsl #8]
    aff8:	04000027 	streq	r0, [r0], #-39	; 0x27
    affc:	0002f401 	andeq	pc, r2, r1, lsl #8
    b000:	3d770100 	ldfcce	f0, [r7, #-0]
    b004:	03ec0000 	mvneq	r0, #0
    b008:	0fc00000 	svceq	0x00c00000
    b00c:	00000000 	andeq	r0, r0, r0
    b010:	35960000 	ldrcc	r0, [r6]
    b014:	04020000 	streq	r0, [r2], #-0
    b018:	00082d05 	andeq	r2, r8, r5, lsl #26
    b01c:	05020200 	streq	r0, [r2, #-512]	; 0x200
    b020:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    b024:	de060102 	adfles	f0, f6, f2
    b028:	03000009 	movweq	r0, #9
    b02c:	00323375 	eorseq	r3, r2, r5, ror r3
    b030:	00452702 	subeq	r2, r5, r2, lsl #14
    b034:	04020000 	streq	r0, [r2], #-0
    b038:	00093a07 	andeq	r3, r9, r7, lsl #20
    b03c:	31750300 	cmncc	r5, r0, lsl #6
    b040:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    b044:	00000057 	andeq	r0, r0, r7, asr r0
    b048:	d7070202 	strle	r0, [r7, -r2, lsl #4]
    b04c:	0300000b 	movweq	r0, #11
    b050:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    b054:	00006829 	andeq	r6, r0, r9, lsr #16
    b058:	08010200 	stmdaeq	r1, {r9}
    b05c:	000009dc 	ldrdeq	r0, [r0], -ip
    b060:	31070402 	tstcc	r7, r2, lsl #8
    b064:	04000009 	streq	r0, [r0], #-9
    b068:	00760405 	rsbseq	r0, r6, r5, lsl #8
    b06c:	88060000 	stmdahi	r6, {}	; <UNPREDICTABLE>
    b070:	01000014 	tsteq	r0, r4, lsl r0
    b074:	0024e02a 	eoreq	lr, r4, sl, lsr #32
    b078:	00016c08 	andeq	r6, r1, r8, lsl #24
    b07c:	f69c0100 			; <UNDEFINED> instruction: 0xf69c0100
    b080:	07000000 	streq	r0, [r0, -r0]
    b084:	00003d70 	andeq	r3, r0, r0, ror sp
    b088:	00f62c01 	rscseq	r2, r6, r1, lsl #24
    b08c:	91020000 	mrsls	r0, (UNDEF: 2)
    b090:	2522086e 	strcs	r0, [r2, #-2158]!	; 0x86e
    b094:	001a0800 	andseq	r0, sl, r0, lsl #16
    b098:	00bd0000 	adcseq	r0, sp, r0
    b09c:	6f090000 	svcvs	0x00090000
    b0a0:	01000038 	tsteq	r0, r8, lsr r0
    b0a4:	00003a40 	andeq	r3, r0, r0, asr #20
    b0a8:	00603000 	rsbeq	r3, r0, r0
    b0ac:	8a080000 	bhi	20b0b4 <__Stack_Size+0x20acb4>
    b0b0:	3e080025 	cdpcc	0, 0, cr0, cr8, cr5, {1}
    b0b4:	da000000 	ble	b0bc <__Stack_Size+0xacbc>
    b0b8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    b0bc:	0000386f 	andeq	r3, r0, pc, ror #16
    b0c0:	003a6d01 	eorseq	r6, sl, r1, lsl #26
    b0c4:	608e0000 	addvs	r0, lr, r0
    b0c8:	0a000000 	beq	b0d0 <__Stack_Size+0xacd0>
    b0cc:	08002550 	stmdaeq	r0, {r4, r6, r8, sl, sp}
    b0d0:	0000017f 	andeq	r0, r0, pc, ror r1
    b0d4:	0025700a 	eoreq	r7, r5, sl
    b0d8:	00018a08 	andeq	r8, r1, r8, lsl #20
    b0dc:	258a0a00 	strcs	r0, [sl, #2560]	; 0xa00
    b0e0:	01950800 	orrseq	r0, r5, r0, lsl #16
    b0e4:	0b000000 	bleq	b0ec <__Stack_Size+0xacec>
    b0e8:	0000004c 	andeq	r0, r0, ip, asr #32
    b0ec:	003d6906 	eorseq	r6, sp, r6, lsl #18
    b0f0:	00980100 	addseq	r0, r8, r0, lsl #2
    b0f4:	70000000 	andvc	r0, r0, r0
    b0f8:	01000000 	mrseq	r0, (UNDEF: 0)
    b0fc:	0001209c 	muleq	r1, ip, r0
    b100:	3d700900 	ldclcc	9, cr0, [r0, #-0]
    b104:	9a010000 	bls	4b10c <__Stack_Size+0x4ad0c>
    b108:	0000003a 	andeq	r0, r0, sl, lsr r0
    b10c:	000060a1 	andeq	r6, r0, r1, lsr #1
    b110:	13ed0c00 	mvnne	r0, #0, 24
    b114:	5b030000 	blpl	cb11c <__Stack_Size+0xcad1c>
    b118:	0000f602 	andeq	pc, r0, r2, lsl #12
    b11c:	39350d00 	ldmdbcc	r5!, {r8, sl, fp}
    b120:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    b124:	000000f6 	strdeq	r0, [r0], -r6
    b128:	071c0305 	ldreq	r0, [ip, -r5, lsl #6]
    b12c:	910d2000 	mrsls	r2, (UNDEF: 13)
    b130:	01000039 	tsteq	r0, r9, lsr r0
    b134:	0000f619 	andeq	pc, r0, r9, lsl r6	; <UNPREDICTABLE>
    b138:	1e030500 	cfsh32ne	mvfx0, mvfx3, #0
    b13c:	0e200007 	cdpeq	0, 2, cr0, cr0, cr7, {0}
    b140:	0000359d 	muleq	r0, sp, r5
    b144:	005e1d04 	subseq	r1, lr, r4, lsl #26
    b148:	770f0000 	strvc	r0, [pc, -r0]
    b14c:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    b150:	10000001 	andne	r0, r0, r1
    b154:	0000006f 	andeq	r0, r0, pc, rrx
    b158:	260e0006 	strcs	r0, [lr], -r6
    b15c:	01000014 	tsteq	r0, r4, lsl r0
    b160:	0001591c 	andeq	r5, r1, ip, lsl r9
    b164:	13bf0e00 			; <UNDEFINED> instruction: 0x13bf0e00
    b168:	1d010000 	stcne	0, cr0, [r1, #-0]
    b16c:	00000159 	andeq	r0, r0, r9, asr r1
    b170:	00366a11 	eorseq	r6, r6, r1, lsl sl
    b174:	5ede0500 	cdppl	5, 13, cr0, cr14, cr0, {0}
    b178:	11000000 	mrsne	r0, (UNDEF: 0)
    b17c:	00003878 	andeq	r3, r0, r8, ror r8
    b180:	005edb05 	subseq	sp, lr, r5, lsl #22
    b184:	0e110000 	cdpeq	0, 1, cr0, cr1, cr0, {0}
    b188:	05000036 	streq	r0, [r0, #-54]	; 0x36
    b18c:	00005edd 	ldrdeq	r5, [r0], -sp
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_HP(void)
{
       0:	25011101 	strcs	r1, [r1, #-257]	; 0x101
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
       c:	10011117 	andne	r1, r1, r7, lsl r1
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
      10:	02000017 	andeq	r0, r0, #23
      14:	0b0b0024 	bleq	2c00ac <__Stack_Size+0x2bfcac>
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
      18:	0e030b3e 	vmoveq.16	d3[0], r0
      1c:	16030000 	strne	r0, [r3], -r0
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
      20:	3a080300 	bcc	200c28 <__Stack_Size+0x200828>
      24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      28:	04000013 	streq	r0, [r0], #-19
    if ((wEPVal & EP_CTR_RX) != 0)
      2c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      30:	0b3b0b3a 	bleq	ec2d20 <__Stack_Size+0xec2920>
      34:	00001349 	andeq	r1, r0, r9, asr #6
      38:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	06000013 			; <UNDEFINED> instruction: 0x06000013

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	0b0b0104 	bleq	2c0458 <__Stack_Size+0x2c0058>
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	0b3b0b3a 	bleq	ec2d34 <__Stack_Size+0xec2934>
      48:	00001301 	andeq	r1, r0, r1, lsl #6
      4c:	03002807 	movweq	r2, #2055	; 0x807

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	000d1c0e 	andeq	r1, sp, lr, lsl #24
      54:	00280800 	eoreq	r0, r8, r0, lsl #16
      58:	0d1c0803 	ldceq	8, cr0, [ip, #-12]


    } /* if((wEPVal & EP_CTR_TX) != 0) */

  }/* while(...) */
}
      5c:	13090000 	movwne	r0, #36864	; 0x9000
      60:	3a0b0b01 	bcc	2c2c6c <__Stack_Size+0x2c286c>
      64:	01053b0b 	tsteq	r5, fp, lsl #22
      68:	0a000013 	beq	bc <_Minimum_Stack_Size-0x44>
      6c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
      70:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
      74:	0b381349 	bleq	e04da0 <__Stack_Size+0xe049a0>
      78:	0d0b0000 	stceq	0, cr0, [fp, #-0]
      7c:	3a0e0300 	bcc	380c84 <__Stack_Size+0x380884>
      80:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      84:	000b3813 	andeq	r3, fp, r3, lsl r8
      88:	00160c00 	andseq	r0, r6, r0, lsl #24
      8c:	0b3a0e03 	bleq	e838a0 <__Stack_Size+0xe834a0>
      90:	1349053b 	movtne	r0, #38203	; 0x953b
      94:	130d0000 	movwne	r0, #53248	; 0xd000
      98:	3a0b0b01 	bcc	2c2ca4 <__Stack_Size+0x2c28a4>
      9c:	010b3b0b 	tsteq	fp, fp, lsl #22
      a0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
      a4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	0b3b0b3a 	bleq	ec2d98 <__Stack_Size+0xec2998>
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	0b381349 	bleq	e04dd8 <__Stack_Size+0xe049d8>
      b0:	150f0000 	strne	r0, [pc, #-0]	; b8 <_Minimum_Stack_Size-0x48>
      break; 
      
    default:
      break;
  }
}
      b4:	00192700 	andseq	r2, r9, r0, lsl #14
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	000f1000 	andeq	r1, pc, r0
      bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
      c0:	04110000 	ldreq	r0, [r1], #-0
      c4:	0b0e0301 	bleq	380cd0 <__Stack_Size+0x3808d0>
      c8:	3b0b3a0b 	blcc	2ce8fc <__Stack_Size+0x2ce4fc>
      cc:	0013010b 	andseq	r0, r3, fp, lsl #2
      d0:	012e1200 	teqeq	lr, r0, lsl #4
      d4:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
      d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
      dc:	13491927 	movtne	r1, #39207	; 0x9927
      e0:	13010b20 	movwne	r0, #6944	; 0x1b20
      e4:	05130000 	ldreq	r0, [r3, #-0]
      e8:	3a0e0300 	bcc	380cf0 <__Stack_Size+0x3808f0>
      ec:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      f0:	14000013 	strne	r0, [r0], #-19
      f4:	0b0b0024 	bleq	2c018c <__Stack_Size+0x2bfd8c>
      f8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      fc:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     100:	03193f00 	tsteq	r9, #0, 30
     104:	3b0b3a0e 	blcc	2ce944 <__Stack_Size+0x2ce544>
     108:	2019270b 	andscs	r2, r9, fp, lsl #14
     10c:	1600000b 	strne	r0, [r0], -fp
     110:	1331002e 	teqne	r1, #46	; 0x2e
     114:	06120111 			; <UNDEFINED> instruction: 0x06120111
     118:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     11c:	17000019 	smladne	r0, r9, r0, r0
     120:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     124:	0b3a0e03 	bleq	e83938 <__Stack_Size+0xe83538>
     128:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     12c:	01111349 	tsteq	r1, r9, asr #6
     130:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     134:	00194297 	mulseq	r9, r7, r2
     138:	002e1800 	eoreq	r1, lr, r0, lsl #16
     13c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     140:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     144:	01111927 	tsteq	r1, r7, lsr #18
     148:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     14c:	00194297 	mulseq	r9, r7, r2
     150:	012e1900 	teqeq	lr, r0, lsl #18
     154:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     158:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     15c:	01111927 	tsteq	r1, r7, lsr #18
     160:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     164:	01194297 			; <UNDEFINED> instruction: 0x01194297
     168:	1a000013 	bne	1bc <_Minimum_Stack_Size+0xbc>
     16c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     170:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     174:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     178:	891b0000 	ldmdbhi	fp, {}	; <UNPREDICTABLE>
     17c:	11010182 	smlabbne	r1, r2, r1, r0
     180:	01133101 	tsteq	r3, r1, lsl #2
     184:	1c000013 	stcne	0, cr0, [r0], {19}
     188:	0001828a 	andeq	r8, r1, sl, lsl #5
     18c:	42911802 	addsmi	r1, r1, #131072	; 0x20000
     190:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
     194:	01018289 	smlabbeq	r1, r9, r2, r8
     198:	13310111 	teqne	r1, #1073741828	; 0x40000004
     19c:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
     1a0:	11133101 	tstne	r3, r1, lsl #2
     1a4:	40061201 	andmi	r1, r6, r1, lsl #4
     1a8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     1ac:	00001301 	andeq	r1, r0, r1, lsl #6
     1b0:	3100051f 	tstcc	r0, pc, lsl r5
     1b4:	00170213 	andseq	r0, r7, r3, lsl r2
     1b8:	00052000 	andeq	r2, r5, r0
     1bc:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
     1c0:	0b210000 	bleq	8401c8 <__Stack_Size+0x83fdc8>
     1c4:	00175501 	andseq	r5, r7, r1, lsl #10
     1c8:	00052200 	andeq	r2, r5, r0, lsl #4
     1cc:	0b3a0803 	bleq	e821e0 <__Stack_Size+0xe81de0>
     1d0:	1349053b 	movtne	r0, #38203	; 0x953b
     1d4:	00001702 	andeq	r1, r0, r2, lsl #14
     1d8:	03000523 	movweq	r0, #1315	; 0x523
     1dc:	3b0b3a0e 	blcc	2cea1c <__Stack_Size+0x2ce61c>
     1e0:	02134905 	andseq	r4, r3, #81920	; 0x14000
     1e4:	24000017 	strcs	r0, [r0], #-23
     1e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     1ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     1f0:	17021349 	strne	r1, [r2, -r9, asr #6]
     1f4:	89250000 	stmdbhi	r5!, {}	; <UNPREDICTABLE>
     1f8:	11000182 	smlabbne	r0, r2, r1, r0
     1fc:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     200:	00001331 	andeq	r1, r0, r1, lsr r3
     204:	03003426 	movweq	r3, #1062	; 0x426
     208:	3b0b3a08 	blcc	2cea30 <__Stack_Size+0x2ce630>
     20c:	02134905 	andseq	r4, r3, #81920	; 0x14000
     210:	27000017 	smladcs	r0, r7, r0, r0
     214:	00018289 	andeq	r8, r1, r9, lsl #5
     218:	13310111 	teqne	r1, #1073741828	; 0x40000004
     21c:	89280000 	stmdbhi	r8!, {}	; <UNPREDICTABLE>
     220:	11010182 	smlabbne	r1, r2, r1, r0
     224:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     228:	00001331 	andeq	r1, r0, r1, lsr r3
     22c:	3f002e29 	svccc	0x00002e29
     230:	3a0e0319 	bcc	380e9c <__Stack_Size+0x380a9c>
     234:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     238:	11134919 	tstne	r3, r9, lsl r9
     23c:	40061201 	andmi	r1, r6, r1, lsl #4
     240:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     244:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
     248:	03193f01 	tsteq	r9, #1, 30
     24c:	3b0b3a0e 	blcc	2cea8c <__Stack_Size+0x2ce68c>
     250:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
     254:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     258:	97184006 	ldrls	r4, [r8, -r6]
     25c:	13011942 	movwne	r1, #6466	; 0x1942
     260:	052b0000 	streq	r0, [fp, #-0]!
     264:	3a0e0300 	bcc	380e6c <__Stack_Size+0x380a6c>
     268:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     26c:	00180213 	andseq	r0, r8, r3, lsl r2
     270:	00342c00 	eorseq	r2, r4, r0, lsl #24
     274:	0b3a0e03 	bleq	e83a88 <__Stack_Size+0xe83688>
     278:	1349053b 	movtne	r0, #38203	; 0x953b
     27c:	00000b1c 	andeq	r0, r0, ip, lsl fp
     280:	11010b2d 	tstne	r1, sp, lsr #22
     284:	01061201 	tsteq	r6, r1, lsl #4
     288:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     28c:	1331001d 	teqne	r1, #29
     290:	06120111 			; <UNDEFINED> instruction: 0x06120111
     294:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xb58
     298:	892f0000 	stmdbhi	pc!, {}	; <UNPREDICTABLE>
     29c:	11000182 	smlabbne	r0, r2, r1, r0
     2a0:	18429301 	stmdane	r2, {r0, r8, r9, ip, pc}^
     2a4:	1d300000 	ldcne	0, cr0, [r0, #-0]
     2a8:	11133101 	tstne	r3, r1, lsl #2
     2ac:	58061201 	stmdapl	r6, {r0, r9, ip}
     2b0:	0105590b 	tsteq	r5, fp, lsl #18
     2b4:	31000013 	tstcc	r0, r3, lsl r0
     2b8:	13490101 	movtne	r0, #37121	; 0x9101
     2bc:	00001301 	andeq	r1, r0, r1, lsl #6
     2c0:	49002132 	stmdbmi	r0, {r1, r4, r5, r8, sp}
     2c4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     2c8:	82893300 	addhi	r3, r9, #0, 6
     2cc:	01110101 	tsteq	r1, r1, lsl #2
     2d0:	31194295 			; <UNDEFINED> instruction: 0x31194295
     2d4:	00130113 	andseq	r0, r3, r3, lsl r1
     2d8:	012e3400 	teqeq	lr, r0, lsl #8
     2dc:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     2e0:	0b3b0b3a 	bleq	ec2fd0 <__Stack_Size+0xec2bd0>
     2e4:	13491927 	movtne	r1, #39207	; 0x9927
     2e8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     2ec:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     2f0:	00130119 	andseq	r0, r3, r9, lsl r1
     2f4:	00343500 	eorseq	r3, r4, r0, lsl #10
     2f8:	0b3a0e03 	bleq	e83b0c <__Stack_Size+0xe8370c>
     2fc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     300:	00001702 	andeq	r1, r0, r2, lsl #14
     304:	03003436 	movweq	r3, #1078	; 0x436
     308:	3b0b3a0e 	blcc	2ceb48 <__Stack_Size+0x2ce748>
     30c:	3f13490b 	svccc	0x0013490b
     310:	00180219 	andseq	r0, r8, r9, lsl r2
     314:	00213700 	eoreq	r3, r1, r0, lsl #14
     318:	052f1349 	streq	r1, [pc, #-841]!	; ffffffd7 <SCS_BASE+0x1fff1fd7>
     31c:	34380000 	ldrtcc	r0, [r8], #-0
     320:	3a0e0300 	bcc	380f28 <__Stack_Size+0x380b28>
     324:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     328:	3c193f13 	ldccc	15, cr3, [r9], {19}
     32c:	39000019 	stmdbcc	r0, {r0, r3, r4}
     330:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     334:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     338:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     33c:	00001802 	andeq	r1, r0, r2, lsl #16
     340:	0300343a 	movweq	r3, #1082	; 0x43a
     344:	3b0b3a0e 	blcc	2ceb84 <__Stack_Size+0x2ce784>
     348:	3f134905 	svccc	0x00134905
     34c:	00193c19 	andseq	r3, r9, r9, lsl ip
     350:	012e3b00 	teqeq	lr, r0, lsl #22
     354:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     358:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     35c:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
     360:	00001301 	andeq	r1, r0, r1, lsl #6
     364:	4900053c 	stmdbmi	r0, {r2, r3, r4, r5, r8, sl}
     368:	3d000013 	stccc	0, cr0, [r0, #-76]	; 0xffffffb4
     36c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     370:	0b3a0e03 	bleq	e83b84 <__Stack_Size+0xe83784>
     374:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     378:	1301193c 	movwne	r1, #6460	; 0x193c
     37c:	2e3e0000 	cdpcs	0, 3, cr0, cr14, cr0, {0}
     380:	03193f01 	tsteq	r9, #1, 30
     384:	3b0b3a0e 	blcc	2cebc4 <__Stack_Size+0x2ce7c4>
     388:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     38c:	01193c13 	tsteq	r9, r3, lsl ip
     390:	3f000013 	svccc	0x00000013
     394:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     398:	0b3a0e03 	bleq	e83bac <__Stack_Size+0xe837ac>
     39c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     3a0:	0000193c 	andeq	r1, r0, ip, lsr r9
     3a4:	3f002e40 	svccc	0x00002e40
     3a8:	3a0e0319 	bcc	381014 <__Stack_Size+0x380c14>
     3ac:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     3b0:	00193c19 	andseq	r3, r9, r9, lsl ip
     3b4:	002e4100 	eoreq	r4, lr, r0, lsl #2
     3b8:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     3bc:	0b3b0b3a 	bleq	ec30ac <__Stack_Size+0xec2cac>
     3c0:	13491927 	movtne	r1, #39207	; 0x9927
     3c4:	0000193c 	andeq	r1, r0, ip, lsr r9
     3c8:	3f012e42 	svccc	0x00012e42
     3cc:	3a0e0319 	bcc	381038 <__Stack_Size+0x380c38>
     3d0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     3d4:	3c134919 	ldccc	9, cr4, [r3], {25}
     3d8:	00130119 	andseq	r0, r3, r9, lsl r1
     3dc:	002e4300 	eoreq	r4, lr, r0, lsl #6
     3e0:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     3e4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     3e8:	13491927 	movtne	r1, #39207	; 0x9927
     3ec:	0000193c 	andeq	r1, r0, ip, lsr r9
     3f0:	01110100 	tsteq	r1, r0, lsl #2
     3f4:	0b130e25 	bleq	4c3c90 <__Stack_Size+0x4c3890>
     3f8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     3fc:	01111755 	tsteq	r1, r5, asr r7
     400:	00001710 	andeq	r1, r0, r0, lsl r7
     404:	0b002402 	bleq	9414 <__Stack_Size+0x9014>
     408:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     40c:	0300000e 	movweq	r0, #14
     410:	08030016 	stmdaeq	r3, {r1, r2, r4}
     414:	0b3b0b3a 	bleq	ec3104 <__Stack_Size+0xec2d04>
     418:	00001349 	andeq	r1, r0, r9, asr #6
     41c:	03001604 	movweq	r1, #1540	; 0x604
     420:	3b0b3a0e 	blcc	2cec60 <__Stack_Size+0x2ce860>
     424:	0013490b 	andseq	r4, r3, fp, lsl #18
     428:	00350500 	eorseq	r0, r5, r0, lsl #10
     42c:	00001349 	andeq	r1, r0, r9, asr #6
     430:	0b010406 	bleq	41450 <__Stack_Size+0x41050>
     434:	3b0b3a0b 	blcc	2cec68 <__Stack_Size+0x2ce868>
     438:	0013010b 	andseq	r0, r3, fp, lsl #2
     43c:	00280700 	eoreq	r0, r8, r0, lsl #14
     440:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     444:	28080000 	stmdacs	r8, {}	; <UNPREDICTABLE>
     448:	1c080300 	stcne	3, cr0, [r8], {-0}
     44c:	0900000d 	stmdbeq	r0, {r0, r2, r3}
     450:	0b0b0113 	bleq	2c08a4 <__Stack_Size+0x2c04a4>
     454:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     458:	00001301 	andeq	r1, r0, r1, lsl #6
     45c:	03000d0a 	movweq	r0, #3338	; 0xd0a
     460:	3b0b3a08 	blcc	2cec88 <__Stack_Size+0x2ce888>
     464:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     468:	0b00000b 	bleq	49c <__Stack_Size+0x9c>
     46c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     470:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     474:	0b381349 	bleq	e051a0 <__Stack_Size+0xe04da0>
     478:	160c0000 	strne	r0, [ip], -r0
     47c:	3a0e0300 	bcc	381084 <__Stack_Size+0x380c84>
     480:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     484:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     488:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     48c:	0b3a0e03 	bleq	e83ca0 <__Stack_Size+0xe838a0>
     490:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     494:	06120111 			; <UNDEFINED> instruction: 0x06120111
     498:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     49c:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     4a0:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     4a4:	0b3a0e03 	bleq	e83cb8 <__Stack_Size+0xe838b8>
     4a8:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     4ac:	06120111 			; <UNDEFINED> instruction: 0x06120111
     4b0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     4b4:	0f000019 	svceq	0x00000019
     4b8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     4bc:	0b3a0e03 	bleq	e83cd0 <__Stack_Size+0xe838d0>
     4c0:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     4c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     4c8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     4cc:	00130119 	andseq	r0, r3, r9, lsl r1
     4d0:	82891000 	addhi	r1, r9, #0
     4d4:	01110001 	tsteq	r1, r1
     4d8:	31194295 			; <UNDEFINED> instruction: 0x31194295
     4dc:	11000013 	tstne	r0, r3, lsl r0
     4e0:	01018289 	smlabbeq	r1, r9, r2, r8
     4e4:	13310111 	teqne	r1, #1073741828	; 0x40000004
     4e8:	00001301 	andeq	r1, r0, r1, lsl #6
     4ec:	01828a12 	orreq	r8, r2, r2, lsl sl
     4f0:	91180200 	tstls	r8, r0, lsl #4
     4f4:	00001842 	andeq	r1, r0, r2, asr #16
     4f8:	01828913 	orreq	r8, r2, r3, lsl r9
     4fc:	31011101 	tstcc	r1, r1, lsl #2
     500:	14000013 	strne	r0, [r0], #-19
     504:	08030034 	stmdaeq	r3, {r2, r4, r5}
     508:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     50c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     510:	34150000 	ldrcc	r0, [r5], #-0
     514:	3a0e0300 	bcc	38111c <__Stack_Size+0x380d1c>
     518:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     51c:	3c193f13 	ldccc	15, cr3, [r9], {19}
     520:	16000019 			; <UNDEFINED> instruction: 0x16000019
     524:	13490101 	movtne	r0, #37121	; 0x9101
     528:	00001301 	andeq	r1, r0, r1, lsl #6
     52c:	49002117 	stmdbmi	r0, {r0, r1, r2, r4, r8, sp}
     530:	00052f13 	andeq	r2, r5, r3, lsl pc
     534:	00341800 	eorseq	r1, r4, r0, lsl #16
     538:	0b3a0e03 	bleq	e83d4c <__Stack_Size+0xe8394c>
     53c:	1349053b 	movtne	r0, #38203	; 0x953b
     540:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     544:	21190000 	tstcs	r9, r0
     548:	2f134900 	svccs	0x00134900
     54c:	1a00000b 	bne	580 <__Stack_Size+0x180>
     550:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     554:	0b3a0e03 	bleq	e83d68 <__Stack_Size+0xe83968>
     558:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     55c:	0000193c 	andeq	r1, r0, ip, lsr r9
     560:	3f012e1b 	svccc	0x00012e1b
     564:	3a0e0319 	bcc	3811d0 <__Stack_Size+0x380dd0>
     568:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     56c:	01193c19 	tsteq	r9, r9, lsl ip
     570:	1c000013 	stcne	0, cr0, [r0], {19}
     574:	13490005 	movtne	r0, #36869	; 0x9005
     578:	0f1d0000 	svceq	0x001d0000
     57c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     580:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     584:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     588:	0b3a0e03 	bleq	e83d9c <__Stack_Size+0xe8399c>
     58c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     590:	0000193c 	andeq	r1, r0, ip, lsr r9
     594:	3f012e1f 	svccc	0x00012e1f
     598:	3a0e0319 	bcc	381204 <__Stack_Size+0x380e04>
     59c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     5a0:	3c134919 	ldccc	9, cr4, [r3], {25}
     5a4:	00130119 	andseq	r0, r3, r9, lsl r1
     5a8:	012e2000 	teqeq	lr, r0
     5ac:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     5b0:	0b3b0b3a 	bleq	ec32a0 <__Stack_Size+0xec2ea0>
     5b4:	13491927 	movtne	r1, #39207	; 0x9927
     5b8:	0000193c 	andeq	r1, r0, ip, lsr r9
     5bc:	01110100 	tsteq	r1, r0, lsl #2
     5c0:	0b130e25 	bleq	4c3e5c <__Stack_Size+0x4c3a5c>
     5c4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     5c8:	00001710 	andeq	r1, r0, r0, lsl r7
     5cc:	0b002402 	bleq	95dc <__Stack_Size+0x91dc>
     5d0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     5d4:	0300000e 	movweq	r0, #14
     5d8:	08030016 	stmdaeq	r3, {r1, r2, r4}
     5dc:	0b3b0b3a 	bleq	ec32cc <__Stack_Size+0xec2ecc>
     5e0:	00001349 	andeq	r1, r0, r9, asr #6
     5e4:	49010104 	stmdbmi	r1, {r2, r8}
     5e8:	00130113 	andseq	r0, r3, r3, lsl r1
     5ec:	00210500 	eoreq	r0, r1, r0, lsl #10
     5f0:	0b2f1349 	bleq	bc531c <__Stack_Size+0xbc4f1c>
     5f4:	34060000 	strcc	r0, [r6], #-0
     5f8:	3a0e0300 	bcc	381200 <__Stack_Size+0x380e00>
     5fc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     600:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     604:	07000018 	smladeq	r0, r8, r0, r0
     608:	13490026 	movtne	r0, #36902	; 0x9026
     60c:	01000000 	mrseq	r0, (UNDEF: 0)
     610:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     614:	0e030b13 	vmoveq.32	d3[0], r0
     618:	17550e1b 	smmlane	r5, fp, lr, r0
     61c:	17100111 			; <UNDEFINED> instruction: 0x17100111
     620:	24020000 	strcs	r0, [r2], #-0
     624:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     628:	000e030b 	andeq	r0, lr, fp, lsl #6
     62c:	00160300 	andseq	r0, r6, r0, lsl #6
     630:	0b3a0803 	bleq	e82644 <__Stack_Size+0xe82244>
     634:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     638:	16040000 	strne	r0, [r4], -r0
     63c:	3a0e0300 	bcc	381244 <__Stack_Size+0x380e44>
     640:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     644:	05000013 	streq	r0, [r0, #-19]
     648:	13490035 	movtne	r0, #36917	; 0x9035
     64c:	04060000 	streq	r0, [r6], #-0
     650:	3a0b0b01 	bcc	2c325c <__Stack_Size+0x2c2e5c>
     654:	010b3b0b 	tsteq	fp, fp, lsl #22
     658:	07000013 	smladeq	r0, r3, r0, r0
     65c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     660:	00000d1c 	andeq	r0, r0, ip, lsl sp
     664:	0b000f08 	bleq	428c <__Stack_Size+0x3e8c>
     668:	0013490b 	andseq	r4, r3, fp, lsl #18
     66c:	01040900 	tsteq	r4, r0, lsl #18
     670:	0b0b0e03 	bleq	2c3e84 <__Stack_Size+0x2c3a84>
     674:	0b3b0b3a 	bleq	ec3364 <__Stack_Size+0xec2f64>
     678:	00001301 	andeq	r1, r0, r1, lsl #6
     67c:	3f002e0a 	svccc	0x00002e0a
     680:	3a0e0319 	bcc	3812ec <__Stack_Size+0x380eec>
     684:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     688:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     68c:	97184006 	ldrls	r4, [r8, -r6]
     690:	00001942 	andeq	r1, r0, r2, asr #18
     694:	3f012e0b 	svccc	0x00012e0b
     698:	3a0e0319 	bcc	381304 <__Stack_Size+0x380f04>
     69c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     6a0:	11134919 	tstne	r3, r9, lsl r9
     6a4:	40061201 	andmi	r1, r6, r1, lsl #4
     6a8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     6ac:	00001301 	andeq	r1, r0, r1, lsl #6
     6b0:	0300050c 	movweq	r0, #1292	; 0x50c
     6b4:	3b0b3a0e 	blcc	2ceef4 <__Stack_Size+0x2ceaf4>
     6b8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     6bc:	0d000017 	stceq	0, cr0, [r0, #-92]	; 0xffffffa4
     6c0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     6c4:	0b3b0b3a 	bleq	ec33b4 <__Stack_Size+0xec2fb4>
     6c8:	17021349 	strne	r1, [r2, -r9, asr #6]
     6cc:	340e0000 	strcc	r0, [lr], #-0
     6d0:	3a0e0300 	bcc	3812d8 <__Stack_Size+0x380ed8>
     6d4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6d8:	00180213 	andseq	r0, r8, r3, lsl r2
     6dc:	010b0f00 	tsteq	fp, r0, lsl #30
     6e0:	00001755 	andeq	r1, r0, r5, asr r7
     6e4:	01828910 	orreq	r8, r2, r0, lsl r9
     6e8:	31011101 	tstcc	r1, r1, lsl #2
     6ec:	00130113 	andseq	r0, r3, r3, lsl r1
     6f0:	828a1100 	addhi	r1, sl, #0, 2
     6f4:	18020001 	stmdane	r2, {r0}
     6f8:	00184291 	mulseq	r8, r1, r2
     6fc:	82891200 	addhi	r1, r9, #0, 4
     700:	01110001 	tsteq	r1, r1
     704:	00001331 	andeq	r1, r0, r1, lsr r3
     708:	3f012e13 	svccc	0x00012e13
     70c:	3a0e0319 	bcc	381378 <__Stack_Size+0x380f78>
     710:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     714:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     718:	97184006 	ldrls	r4, [r8, -r6]
     71c:	13011942 	movwne	r1, #6466	; 0x1942
     720:	0b140000 	bleq	500728 <__Stack_Size+0x500328>
     724:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     728:	00130106 	andseq	r0, r3, r6, lsl #2
     72c:	012e1500 	teqeq	lr, r0, lsl #10
     730:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     734:	0b3b0b3a 	bleq	ec3424 <__Stack_Size+0xec3024>
     738:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     73c:	00001301 	andeq	r1, r0, r1, lsl #6
     740:	00001816 	andeq	r1, r0, r6, lsl r8
     744:	82891700 	addhi	r1, r9, #0, 14
     748:	01110101 	tsteq	r1, r1, lsl #2
     74c:	00001331 	andeq	r1, r0, r1, lsr r3
     750:	01828918 	orreq	r8, r2, r8, lsl r9
     754:	95011101 	strls	r1, [r1, #-257]	; 0x101
     758:	13311942 	teqne	r1, #1081344	; 0x108000
     75c:	24190000 	ldrcs	r0, [r9], #-0
     760:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     764:	0008030b 	andeq	r0, r8, fp, lsl #6
     768:	01011a00 	tsteq	r1, r0, lsl #20
     76c:	13011349 	movwne	r1, #4937	; 0x1349
     770:	211b0000 	tstcs	fp, r0
     774:	2f134900 	svccs	0x00134900
     778:	1c00000b 	stcne	0, cr0, [r0], {11}
     77c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     780:	0b3b0b3a 	bleq	ec3470 <__Stack_Size+0xec3070>
     784:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     788:	00001802 	andeq	r1, r0, r2, lsl #16
     78c:	0000211d 	andeq	r2, r0, sp, lsl r1
     790:	00341e00 	eorseq	r1, r4, r0, lsl #28
     794:	0b3a0e03 	bleq	e83fa8 <__Stack_Size+0xe83ba8>
     798:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     79c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     7a0:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     7a4:	03193f01 	tsteq	r9, #1, 30
     7a8:	3b0b3a0e 	blcc	2cefe8 <__Stack_Size+0x2cebe8>
     7ac:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     7b0:	01193c13 	tsteq	r9, r3, lsl ip
     7b4:	20000013 	andcs	r0, r0, r3, lsl r0
     7b8:	13490005 	movtne	r0, #36869	; 0x9005
     7bc:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     7c0:	03193f01 	tsteq	r9, #1, 30
     7c4:	3b0b3a0e 	blcc	2cf004 <__Stack_Size+0x2cec04>
     7c8:	3c19270b 	ldccc	7, cr2, [r9], {11}
     7cc:	00130119 	andseq	r0, r3, r9, lsl r1
     7d0:	012e2200 	teqeq	lr, r0, lsl #4
     7d4:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     7d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     7dc:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
     7e0:	01000000 	mrseq	r0, (UNDEF: 0)
     7e4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     7e8:	0e030b13 	vmoveq.32	d3[0], r0
     7ec:	17550e1b 	smmlane	r5, fp, lr, r0
     7f0:	17100111 			; <UNDEFINED> instruction: 0x17100111
     7f4:	24020000 	strcs	r0, [r2], #-0
     7f8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7fc:	000e030b 	andeq	r0, lr, fp, lsl #6
     800:	00160300 	andseq	r0, r6, r0, lsl #6
     804:	0b3a0803 	bleq	e82818 <__Stack_Size+0xe82418>
     808:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     80c:	0f040000 	svceq	0x00040000
     810:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     814:	05000013 	streq	r0, [r0, #-19]
     818:	0e030104 	adfeqs	f0, f3, f4
     81c:	0b3a0b0b 	bleq	e83450 <__Stack_Size+0xe83050>
     820:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     824:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
     828:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     82c:	0700000d 	streq	r0, [r0, -sp]
     830:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     834:	0b3b0b3a 	bleq	ec3524 <__Stack_Size+0xec3124>
     838:	00001349 	andeq	r1, r0, r9, asr #6
     83c:	27011508 	strcs	r1, [r1, -r8, lsl #10]
     840:	01134919 	tsteq	r3, r9, lsl r9
     844:	09000013 	stmdbeq	r0, {r0, r1, r4}
     848:	13490005 	movtne	r0, #36869	; 0x9005
     84c:	130a0000 	movwne	r0, #40960	; 0xa000
     850:	0b0e0301 	bleq	38145c <__Stack_Size+0x38105c>
     854:	3b0b3a0b 	blcc	2cf088 <__Stack_Size+0x2cec88>
     858:	0013010b 	andseq	r0, r3, fp, lsl #2
     85c:	000d0b00 	andeq	r0, sp, r0, lsl #22
     860:	0b3a0e03 	bleq	e84074 <__Stack_Size+0xe83c74>
     864:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     868:	00000b38 	andeq	r0, r0, r8, lsr fp
     86c:	2700150c 	strcs	r1, [r0, -ip, lsl #10]
     870:	0d000019 	stceq	0, cr0, [r0, #-100]	; 0xffffff9c
     874:	0b0b000f 	bleq	2c08b8 <__Stack_Size+0x2c04b8>
     878:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     87c:	03193f01 	tsteq	r9, #1, 30
     880:	3b0b3a0e 	blcc	2cf0c0 <__Stack_Size+0x2cecc0>
     884:	1119270b 	tstne	r9, fp, lsl #14
     888:	40061201 	andmi	r1, r6, r1, lsl #4
     88c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     890:	00001301 	andeq	r1, r0, r1, lsl #6
     894:	0182890f 	orreq	r8, r2, pc, lsl #18
     898:	31011100 	mrscc	r1, (UNDEF: 17)
     89c:	10000013 	andne	r0, r0, r3, lsl r0
     8a0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     8a4:	0b3b0b3a 	bleq	ec3594 <__Stack_Size+0xec3194>
     8a8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     8ac:	00001802 	andeq	r1, r0, r2, lsl #16
     8b0:	49003511 	stmdbmi	r0, {r0, r4, r8, sl, ip, sp}
     8b4:	12000013 	andne	r0, r0, #19
     8b8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     8bc:	0b3b0b3a 	bleq	ec35ac <__Stack_Size+0xec31ac>
     8c0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     8c4:	0000193c 	andeq	r1, r0, ip, lsr r9
     8c8:	49010113 	stmdbmi	r1, {r0, r1, r4, r8}
     8cc:	00130113 	andseq	r0, r3, r3, lsl r1
     8d0:	00211400 	eoreq	r1, r1, r0, lsl #8
     8d4:	0b2f1349 	bleq	bc5600 <__Stack_Size+0xbc5200>
     8d8:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     8dc:	03193f00 	tsteq	r9, #0, 30
     8e0:	3b0b3a0e 	blcc	2cf120 <__Stack_Size+0x2ced20>
     8e4:	3c19270b 	ldccc	7, cr2, [r9], {11}
     8e8:	00000019 	andeq	r0, r0, r9, lsl r0
     8ec:	25011101 	strcs	r1, [r1, #-257]	; 0x101
     8f0:	030b130e 	movweq	r1, #45838	; 0xb30e
     8f4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
     8f8:	10011117 	andne	r1, r1, r7, lsl r1
     8fc:	02000017 	andeq	r0, r0, #23
     900:	0b0b0024 	bleq	2c0998 <__Stack_Size+0x2c0598>
     904:	0e030b3e 	vmoveq.16	d3[0], r0
     908:	16030000 	strne	r0, [r3], -r0
     90c:	3a080300 	bcc	201514 <__Stack_Size+0x201114>
     910:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     914:	04000013 	streq	r0, [r0], #-19
     918:	0e030104 	adfeqs	f0, f3, f4
     91c:	0b3a0b0b 	bleq	e83550 <__Stack_Size+0xe83150>
     920:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     924:	28050000 	stmdacs	r5, {}	; <UNPREDICTABLE>
     928:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     92c:	0600000d 	streq	r0, [r0], -sp
     930:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     934:	0b3a0b0b 	bleq	e83568 <__Stack_Size+0xe83168>
     938:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     93c:	0d070000 	stceq	0, cr0, [r7, #-0]
     940:	3a0e0300 	bcc	381548 <__Stack_Size+0x381148>
     944:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     948:	000b3813 	andeq	r3, fp, r3, lsl r8
     94c:	000f0800 	andeq	r0, pc, r0, lsl #16
     950:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     954:	16090000 	strne	r0, [r9], -r0
     958:	3a0e0300 	bcc	381560 <__Stack_Size+0x381160>
     95c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     960:	0a000013 	beq	9b4 <__Stack_Size+0x5b4>
     964:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
     968:	13011349 	movwne	r1, #4937	; 0x1349
     96c:	050b0000 	streq	r0, [fp, #-0]
     970:	00134900 	andseq	r4, r3, r0, lsl #18
     974:	01130c00 	tsteq	r3, r0, lsl #24
     978:	0b0b0803 	bleq	2c298c <__Stack_Size+0x2c258c>
     97c:	0b3b0b3a 	bleq	ec366c <__Stack_Size+0xec326c>
     980:	00001301 	andeq	r1, r0, r1, lsl #6
     984:	03000d0d 	movweq	r0, #3341	; 0xd0d
     988:	3b0b3a08 	blcc	2cf1b0 <__Stack_Size+0x2cedb0>
     98c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     990:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     994:	0b0b0117 	bleq	2c0df8 <__Stack_Size+0x2c09f8>
     998:	0b3b0b3a 	bleq	ec3688 <__Stack_Size+0xec3288>
     99c:	00001301 	andeq	r1, r0, r1, lsl #6
     9a0:	03000d0f 	movweq	r0, #3343	; 0xd0f
     9a4:	3b0b3a08 	blcc	2cf1cc <__Stack_Size+0x2cedcc>
     9a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     9ac:	00151000 	andseq	r1, r5, r0
     9b0:	00001927 	andeq	r1, r0, r7, lsr #18
     9b4:	0b000f11 	bleq	4600 <__Stack_Size+0x4200>
     9b8:	1200000b 	andne	r0, r0, #11
     9bc:	0b0b0113 	bleq	2c0e10 <__Stack_Size+0x2c0a10>
     9c0:	0b3b0b3a 	bleq	ec36b0 <__Stack_Size+0xec32b0>
     9c4:	00001301 	andeq	r1, r0, r1, lsl #6
     9c8:	3f012e13 	svccc	0x00012e13
     9cc:	3a0e0319 	bcc	381638 <__Stack_Size+0x381238>
     9d0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     9d4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     9d8:	97184006 	ldrls	r4, [r8, -r6]
     9dc:	13011942 	movwne	r1, #6466	; 0x1942
     9e0:	34140000 	ldrcc	r0, [r4], #-0
     9e4:	3a0e0300 	bcc	3815ec <__Stack_Size+0x3811ec>
     9e8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9ec:	15000013 	strne	r0, [r0, #-19]
     9f0:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     9f4:	0b3a0e03 	bleq	e84208 <__Stack_Size+0xe83e08>
     9f8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     9fc:	06120111 			; <UNDEFINED> instruction: 0x06120111
     a00:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     a04:	16000019 			; <UNDEFINED> instruction: 0x16000019
     a08:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     a0c:	0b3a0e03 	bleq	e84220 <__Stack_Size+0xe83e20>
     a10:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     a14:	01111349 	tsteq	r1, r9, asr #6
     a18:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     a1c:	01194297 			; <UNDEFINED> instruction: 0x01194297
     a20:	17000013 	smladne	r0, r3, r0, r0
     a24:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     a28:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     a2c:	17021349 	strne	r1, [r2, -r9, asr #6]
     a30:	34180000 	ldrcc	r0, [r8], #-0
     a34:	3a0e0300 	bcc	38163c <__Stack_Size+0x38123c>
     a38:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a3c:	00170213 	andseq	r0, r7, r3, lsl r2
     a40:	82891900 	addhi	r1, r9, #0, 18
     a44:	01110101 	tsteq	r1, r1, lsl #2
     a48:	8a1a0000 	bhi	680a50 <__Stack_Size+0x680650>
     a4c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     a50:	18429118 	stmdane	r2, {r3, r4, r8, ip, pc}^
     a54:	051b0000 	ldreq	r0, [fp, #-0]
     a58:	3a0e0300 	bcc	381660 <__Stack_Size+0x381260>
     a5c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a60:	00180213 	andseq	r0, r8, r3, lsl r2
     a64:	82891c00 	addhi	r1, r9, #0, 24
     a68:	01110001 	tsteq	r1, r1
     a6c:	00001331 	andeq	r1, r0, r1, lsr r3
     a70:	0182891d 	orreq	r8, r2, sp, lsl r9
     a74:	31011101 	tstcc	r1, r1, lsl #2
     a78:	00130113 	andseq	r0, r3, r3, lsl r1
     a7c:	82891e00 	addhi	r1, r9, #0, 28
     a80:	01110101 	tsteq	r1, r1, lsl #2
     a84:	00001331 	andeq	r1, r0, r1, lsr r3
     a88:	0182891f 	orreq	r8, r2, pc, lsl r9
     a8c:	95011101 	strls	r1, [r1, #-257]	; 0x101
     a90:	13311942 	teqne	r1, #1081344	; 0x108000
     a94:	89200000 	stmdbhi	r0!, {}	; <UNPREDICTABLE>
     a98:	11000182 	smlabbne	r0, r2, r1, r0
     a9c:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     aa0:	00001331 	andeq	r1, r0, r1, lsr r3
     aa4:	03003421 	movweq	r3, #1057	; 0x421
     aa8:	3b0b3a0e 	blcc	2cf2e8 <__Stack_Size+0x2ceee8>
     aac:	3f13490b 	svccc	0x0013490b
     ab0:	00180219 	andseq	r0, r8, r9, lsl r2
     ab4:	00342200 	eorseq	r2, r4, r0, lsl #4
     ab8:	0b3a0e03 	bleq	e842cc <__Stack_Size+0xe83ecc>
     abc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     ac0:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     ac4:	01230000 	teqeq	r3, r0
     ac8:	01134901 	tsteq	r3, r1, lsl #18
     acc:	24000013 	strcs	r0, [r0], #-19
     ad0:	13490021 	movtne	r0, #36897	; 0x9021
     ad4:	00000b2f 	andeq	r0, r0, pc, lsr #22
     ad8:	49002625 	stmdbmi	r0, {r0, r2, r5, r9, sl, sp}
     adc:	26000013 			; <UNDEFINED> instruction: 0x26000013
     ae0:	13490035 	movtne	r0, #36917	; 0x9035
     ae4:	34270000 	strtcc	r0, [r7], #-0
     ae8:	3a0e0300 	bcc	3816f0 <__Stack_Size+0x3812f0>
     aec:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     af0:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     af4:	28000018 	stmdacs	r0, {r3, r4}
     af8:	0b0b0024 	bleq	2c0b90 <__Stack_Size+0x2c0790>
     afc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     b00:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
     b04:	03193f00 	tsteq	r9, #0, 30
     b08:	3b0b3a0e 	blcc	2cf348 <__Stack_Size+0x2cef48>
     b0c:	3c19270b 	ldccc	7, cr2, [r9], {11}
     b10:	2a000019 	bcs	b7c <__Stack_Size+0x77c>
     b14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     b18:	0b3a0e03 	bleq	e8432c <__Stack_Size+0xe83f2c>
     b1c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     b20:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     b24:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     b28:	03193f01 	tsteq	r9, #1, 30
     b2c:	3b0b3a0e 	blcc	2cf36c <__Stack_Size+0x2cef6c>
     b30:	3c192705 	ldccc	7, cr2, [r9], {5}
     b34:	00130119 	andseq	r0, r3, r9, lsl r1
     b38:	012e2c00 	teqeq	lr, r0, lsl #24
     b3c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     b40:	0b3b0b3a 	bleq	ec3830 <__Stack_Size+0xec3430>
     b44:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
     b48:	00001301 	andeq	r1, r0, r1, lsl #6
     b4c:	3f012e2d 	svccc	0x00012e2d
     b50:	3a0e0319 	bcc	3817bc <__Stack_Size+0x3813bc>
     b54:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     b58:	3c134919 	ldccc	9, cr4, [r3], {25}
     b5c:	00000019 	andeq	r0, r0, r9, lsl r0
     b60:	25011101 	strcs	r1, [r1, #-257]	; 0x101
     b64:	030b130e 	movweq	r1, #45838	; 0xb30e
     b68:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
     b6c:	10011117 	andne	r1, r1, r7, lsl r1
     b70:	02000017 	andeq	r0, r0, #23
     b74:	0b0b0024 	bleq	2c0c0c <__Stack_Size+0x2c080c>
     b78:	0e030b3e 	vmoveq.16	d3[0], r0
     b7c:	16030000 	strne	r0, [r3], -r0
     b80:	3a080300 	bcc	201788 <__Stack_Size+0x201388>
     b84:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b88:	04000013 	streq	r0, [r0], #-19
     b8c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     b90:	0b3b0b3a 	bleq	ec3880 <__Stack_Size+0xec3480>
     b94:	00001349 	andeq	r1, r0, r9, asr #6
     b98:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     b9c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     ba0:	0b0b0104 	bleq	2c0fb8 <__Stack_Size+0x2c0bb8>
     ba4:	0b3b0b3a 	bleq	ec3894 <__Stack_Size+0xec3494>
     ba8:	00001301 	andeq	r1, r0, r1, lsl #6
     bac:	03002807 	movweq	r2, #2055	; 0x807
     bb0:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     bb4:	01130800 	tsteq	r3, r0, lsl #16
     bb8:	0b3a0b0b 	bleq	e837ec <__Stack_Size+0xe833ec>
     bbc:	1301053b 	movwne	r0, #5435	; 0x153b
     bc0:	0d090000 	stceq	0, cr0, [r9, #-0]
     bc4:	3a080300 	bcc	2017cc <__Stack_Size+0x2013cc>
     bc8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     bcc:	000b3813 	andeq	r3, fp, r3, lsl r8
     bd0:	000d0a00 	andeq	r0, sp, r0, lsl #20
     bd4:	0b3a0e03 	bleq	e843e8 <__Stack_Size+0xe83fe8>
     bd8:	1349053b 	movtne	r0, #38203	; 0x953b
     bdc:	00000b38 	andeq	r0, r0, r8, lsr fp
     be0:	0300160b 	movweq	r1, #1547	; 0x60b
     be4:	3b0b3a0e 	blcc	2cf424 <__Stack_Size+0x2cf024>
     be8:	00134905 	andseq	r4, r3, r5, lsl #18
     bec:	000f0c00 	andeq	r0, pc, r0, lsl #24
     bf0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     bf4:	040d0000 	streq	r0, [sp], #-0
     bf8:	0b0e0301 	bleq	381804 <__Stack_Size+0x381404>
     bfc:	3b0b3a0b 	blcc	2cf430 <__Stack_Size+0x2cf030>
     c00:	0013010b 	andseq	r0, r3, fp, lsl #2
     c04:	012e0e00 	teqeq	lr, r0, lsl #28
     c08:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     c0c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     c10:	0b201927 	bleq	8070b4 <__Stack_Size+0x806cb4>
     c14:	00001301 	andeq	r1, r0, r1, lsl #6
     c18:	0300050f 	movweq	r0, #1295	; 0x50f
     c1c:	3b0b3a0e 	blcc	2cf45c <__Stack_Size+0x2cf05c>
     c20:	00134905 	andseq	r4, r3, r5, lsl #18
     c24:	012e1000 	teqeq	lr, r0
     c28:	0b3a0e03 	bleq	e8443c <__Stack_Size+0xe8403c>
     c2c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     c30:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c34:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     c38:	00130119 	andseq	r0, r3, r9, lsl r1
     c3c:	00051100 	andeq	r1, r5, r0, lsl #2
     c40:	0b3a0e03 	bleq	e84454 <__Stack_Size+0xe84054>
     c44:	1349053b 	movtne	r0, #38203	; 0x953b
     c48:	00001702 	andeq	r1, r0, r2, lsl #14
     c4c:	03000512 	movweq	r0, #1298	; 0x512
     c50:	3b0b3a0e 	blcc	2cf490 <__Stack_Size+0x2cf090>
     c54:	02134905 	andseq	r4, r3, #81920	; 0x14000
     c58:	13000018 	movwne	r0, #24
     c5c:	08030005 	stmdaeq	r3, {r0, r2}
     c60:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     c64:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     c68:	34140000 	ldrcc	r0, [r4], #-0
     c6c:	3a080300 	bcc	201874 <__Stack_Size+0x201474>
     c70:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c74:	00170213 	andseq	r0, r7, r3, lsl r2
     c78:	012e1500 	teqeq	lr, r0, lsl #10
     c7c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     c80:	0b3b0b3a 	bleq	ec3970 <__Stack_Size+0xec3570>
     c84:	13491927 	movtne	r1, #39207	; 0x9927
     c88:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c8c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     c90:	00130119 	andseq	r0, r3, r9, lsl r1
     c94:	00341600 	eorseq	r1, r4, r0, lsl #12
     c98:	0b3a0e03 	bleq	e844ac <__Stack_Size+0xe840ac>
     c9c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     ca0:	00000b1c 	andeq	r0, r0, ip, lsl fp
     ca4:	31011d17 	tstcc	r1, r7, lsl sp
     ca8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     cac:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     cb0:	1800000b 	stmdane	r0, {r0, r1, r3}
     cb4:	13310005 	teqne	r1, #5
     cb8:	00000b1c 	andeq	r0, r0, ip, lsl fp
     cbc:	11010b19 	tstne	r1, r9, lsl fp
     cc0:	00061201 	andeq	r1, r6, r1, lsl #4
     cc4:	82891a00 	addhi	r1, r9, #0, 20
     cc8:	01110101 	tsteq	r1, r1, lsl #2
     ccc:	00001331 	andeq	r1, r0, r1, lsr r3
     cd0:	01828a1b 	orreq	r8, r2, fp, lsl sl
     cd4:	91180200 	tstls	r8, r0, lsl #4
     cd8:	00001842 	andeq	r1, r0, r2, asr #16
     cdc:	3f012e1c 	svccc	0x00012e1c
     ce0:	3a0e0319 	bcc	38194c <__Stack_Size+0x38154c>
     ce4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     ce8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     cec:	97184006 	ldrls	r4, [r8, -r6]
     cf0:	13011942 	movwne	r1, #6466	; 0x1942
     cf4:	891d0000 	ldmdbhi	sp, {}	; <UNPREDICTABLE>
     cf8:	11000182 	smlabbne	r0, r2, r1, r0
     cfc:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     d00:	00001331 	andeq	r1, r0, r1, lsr r3
     d04:	31012e1e 	tstcc	r1, lr, lsl lr
     d08:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     d0c:	97184006 	ldrls	r4, [r8, -r6]
     d10:	13011942 	movwne	r1, #6466	; 0x1942
     d14:	051f0000 	ldreq	r0, [pc, #-0]	; d1c <__Stack_Size+0x91c>
     d18:	02133100 	andseq	r3, r3, #0, 2
     d1c:	20000017 	andcs	r0, r0, r7, lsl r0
     d20:	0111010b 	tsteq	r1, fp, lsl #2
     d24:	13010612 	movwne	r0, #5650	; 0x1612
     d28:	89210000 	stmdbhi	r1!, {}	; <UNPREDICTABLE>
     d2c:	11010182 	smlabbne	r1, r2, r1, r0
     d30:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     d34:	00001331 	andeq	r1, r0, r1, lsr r3
     d38:	3f012e22 	svccc	0x00012e22
     d3c:	3a0e0319 	bcc	3819a8 <__Stack_Size+0x3815a8>
     d40:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     d44:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     d48:	97184006 	ldrls	r4, [r8, -r6]
     d4c:	13011942 	movwne	r1, #6466	; 0x1942
     d50:	34230000 	strtcc	r0, [r3], #-0
     d54:	3a0e0300 	bcc	38195c <__Stack_Size+0x38155c>
     d58:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d5c:	00170213 	andseq	r0, r7, r3, lsl r2
     d60:	82892400 	addhi	r2, r9, #0, 8
     d64:	01110101 	tsteq	r1, r1, lsl #2
     d68:	13011331 	movwne	r1, #4913	; 0x1331
     d6c:	05250000 	streq	r0, [r5, #-0]!
     d70:	3a080300 	bcc	201978 <__Stack_Size+0x201578>
     d74:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d78:	00170213 	andseq	r0, r7, r3, lsl r2
     d7c:	00342600 	eorseq	r2, r4, r0, lsl #12
     d80:	0b3a0e03 	bleq	e84594 <__Stack_Size+0xe84194>
     d84:	1349053b 	movtne	r0, #38203	; 0x953b
     d88:	34270000 	strtcc	r0, [r7], #-0
     d8c:	3a0e0300 	bcc	381994 <__Stack_Size+0x381594>
     d90:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d94:	3c193f13 	ldccc	15, cr3, [r9], {19}
     d98:	28000019 	stmdacs	r0, {r0, r3, r4}
     d9c:	13490101 	movtne	r0, #37121	; 0x9101
     da0:	00001301 	andeq	r1, r0, r1, lsl #6
     da4:	49002129 	stmdbmi	r0, {r0, r3, r5, r8, sp}
     da8:	000b2f13 	andeq	r2, fp, r3, lsl pc
     dac:	00342a00 	eorseq	r2, r4, r0, lsl #20
     db0:	0b3a0e03 	bleq	e845c4 <__Stack_Size+0xe841c4>
     db4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     db8:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     dbc:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     dc0:	03193f01 	tsteq	r9, #1, 30
     dc4:	3b0b3a0e 	blcc	2cf604 <__Stack_Size+0x2cf204>
     dc8:	3c19270b 	ldccc	7, cr2, [r9], {11}
     dcc:	00130119 	andseq	r0, r3, r9, lsl r1
     dd0:	00052c00 	andeq	r2, r5, r0, lsl #24
     dd4:	00001349 	andeq	r1, r0, r9, asr #6
     dd8:	3f012e2d 	svccc	0x00012e2d
     ddc:	3a0e0319 	bcc	381a48 <__Stack_Size+0x381648>
     de0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     de4:	01193c19 	tsteq	r9, r9, lsl ip
     de8:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     dec:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     df0:	0b3a0e03 	bleq	e84604 <__Stack_Size+0xe84204>
     df4:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     df8:	0000193c 	andeq	r1, r0, ip, lsr r9
     dfc:	01110100 	tsteq	r1, r0, lsl #2
     e00:	0b130e25 	bleq	4c469c <__Stack_Size+0x4c429c>
     e04:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     e08:	01111755 	tsteq	r1, r5, asr r7
     e0c:	00001710 	andeq	r1, r0, r0, lsl r7
     e10:	0b002402 	bleq	9e20 <__Stack_Size+0x9a20>
     e14:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     e18:	0300000e 	movweq	r0, #14
     e1c:	08030016 	stmdaeq	r3, {r1, r2, r4}
     e20:	0b3b0b3a 	bleq	ec3b10 <__Stack_Size+0xec3710>
     e24:	00001349 	andeq	r1, r0, r9, asr #6
     e28:	03001604 	movweq	r1, #1540	; 0x604
     e2c:	3b0b3a0e 	blcc	2cf66c <__Stack_Size+0x2cf26c>
     e30:	0013490b 	andseq	r4, r3, fp, lsl #18
     e34:	00350500 	eorseq	r0, r5, r0, lsl #10
     e38:	00001349 	andeq	r1, r0, r9, asr #6
     e3c:	0b010406 	bleq	41e5c <__Stack_Size+0x41a5c>
     e40:	3b0b3a0b 	blcc	2cf674 <__Stack_Size+0x2cf274>
     e44:	0013010b 	andseq	r0, r3, fp, lsl #2
     e48:	00280700 	eoreq	r0, r8, r0, lsl #14
     e4c:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     e50:	28080000 	stmdacs	r8, {}	; <UNPREDICTABLE>
     e54:	1c080300 	stcne	3, cr0, [r8], {-0}
     e58:	0900000d 	stmdbeq	r0, {r0, r2, r3}
     e5c:	0b0b0113 	bleq	2c12b0 <__Stack_Size+0x2c0eb0>
     e60:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     e64:	00001301 	andeq	r1, r0, r1, lsl #6
     e68:	03000d0a 	movweq	r0, #3338	; 0xd0a
     e6c:	3b0b3a08 	blcc	2cf694 <__Stack_Size+0x2cf294>
     e70:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     e74:	0b00000b 	bleq	ea8 <__Stack_Size+0xaa8>
     e78:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e7c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     e80:	0b381349 	bleq	e05bac <__Stack_Size+0xe057ac>
     e84:	160c0000 	strne	r0, [ip], -r0
     e88:	3a0e0300 	bcc	381a90 <__Stack_Size+0x381690>
     e8c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e90:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     e94:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     e98:	0b3a0e03 	bleq	e846ac <__Stack_Size+0xe842ac>
     e9c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     ea0:	0b201349 	bleq	805bcc <__Stack_Size+0x8057cc>
     ea4:	00001301 	andeq	r1, r0, r1, lsl #6
     ea8:	0300340e 	movweq	r3, #1038	; 0x40e
     eac:	3b0b3a0e 	blcc	2cf6ec <__Stack_Size+0x2cf2ec>
     eb0:	00134905 	andseq	r4, r3, r5, lsl #18
     eb4:	012e0f00 	teqeq	lr, r0, lsl #30
     eb8:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     ebc:	0b3b0b3a 	bleq	ec3bac <__Stack_Size+0xec37ac>
     ec0:	01111927 	tsteq	r1, r7, lsr #18
     ec4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ec8:	01194297 			; <UNDEFINED> instruction: 0x01194297
     ecc:	10000013 	andne	r0, r0, r3, lsl r0
     ed0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     ed4:	0b3b0b3a 	bleq	ec3bc4 <__Stack_Size+0xec37c4>
     ed8:	17021349 	strne	r1, [r2, -r9, asr #6]
     edc:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     ee0:	03193f00 	tsteq	r9, #0, 30
     ee4:	3b0b3a0e 	blcc	2cf724 <__Stack_Size+0x2cf324>
     ee8:	1119270b 	tstne	r9, fp, lsl #14
     eec:	40061201 	andmi	r1, r6, r1, lsl #4
     ef0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     ef4:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     ef8:	03193f00 	tsteq	r9, #0, 30
     efc:	3b0b3a0e 	blcc	2cf73c <__Stack_Size+0x2cf33c>
     f00:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
     f04:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     f08:	97184006 	ldrls	r4, [r8, -r6]
     f0c:	00001942 	andeq	r1, r0, r2, asr #18
     f10:	3f012e13 	svccc	0x00012e13
     f14:	3a0e0319 	bcc	381b80 <__Stack_Size+0x381780>
     f18:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     f1c:	11134919 	tstne	r3, r9, lsl r9
     f20:	40061201 	andmi	r1, r6, r1, lsl #4
     f24:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     f28:	00001301 	andeq	r1, r0, r1, lsl #6
     f2c:	03003414 	movweq	r3, #1044	; 0x414
     f30:	3b0b3a0e 	blcc	2cf770 <__Stack_Size+0x2cf370>
     f34:	02134905 	andseq	r4, r3, #81920	; 0x14000
     f38:	15000017 	strne	r0, [r0, #-23]
     f3c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     f40:	0b3a0e03 	bleq	e84754 <__Stack_Size+0xe84354>
     f44:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     f48:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f4c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     f50:	00130119 	andseq	r0, r3, r9, lsl r1
     f54:	00051600 	andeq	r1, r5, r0, lsl #12
     f58:	0b3a0e03 	bleq	e8476c <__Stack_Size+0xe8436c>
     f5c:	1349053b 	movtne	r0, #38203	; 0x953b
     f60:	00001702 	andeq	r1, r0, r2, lsl #14
     f64:	03000517 	movweq	r0, #1303	; 0x517
     f68:	3b0b3a0e 	blcc	2cf7a8 <__Stack_Size+0x2cf3a8>
     f6c:	02134905 	andseq	r4, r3, #81920	; 0x14000
     f70:	18000018 	stmdane	r0, {r3, r4}
     f74:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     f78:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f7c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     f80:	00130119 	andseq	r0, r3, r9, lsl r1
     f84:	00341900 	eorseq	r1, r4, r0, lsl #18
     f88:	17021331 	smladxne	r2, r1, r3, r1
     f8c:	0b1a0000 	bleq	680f94 <__Stack_Size+0x680b94>
     f90:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     f94:	1b000006 	blne	fb4 <__Stack_Size+0xbb4>
     f98:	13310034 	teqne	r1, #52	; 0x34
     f9c:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
     fa0:	3a0e0301 	bcc	381bac <__Stack_Size+0x3817ac>
     fa4:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     fa8:	010b2019 	tsteq	fp, r9, lsl r0
     fac:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     fb0:	08030034 	stmdaeq	r3, {r2, r4, r5}
     fb4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     fb8:	00001349 	andeq	r1, r0, r9, asr #6
     fbc:	31011d1e 	tstcc	r1, lr, lsl sp
     fc0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     fc4:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     fc8:	00130105 	andseq	r0, r3, r5, lsl #2
     fcc:	00341f00 	eorseq	r1, r4, r0, lsl #30
     fd0:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
     fd4:	89200000 	stmdbhi	r0!, {}	; <UNPREDICTABLE>
     fd8:	11000182 	smlabbne	r0, r2, r1, r0
     fdc:	00133101 	andseq	r3, r3, r1, lsl #2
     fe0:	012e2100 	teqeq	lr, r0, lsl #2
     fe4:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     fe8:	0b3b0b3a 	bleq	ec3cd8 <__Stack_Size+0xec38d8>
     fec:	13491927 	movtne	r1, #39207	; 0x9927
     ff0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ff4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     ff8:	00130119 	andseq	r0, r3, r9, lsl r1
     ffc:	00342200 	eorseq	r2, r4, r0, lsl #4
    1000:	0b3a0e03 	bleq	e84814 <__Stack_Size+0xe84414>
    1004:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1008:	00001702 	andeq	r1, r0, r2, lsl #14
    100c:	01828923 	orreq	r8, r2, r3, lsr #18
    1010:	31011101 	tstcc	r1, r1, lsl #2
    1014:	00130113 	andseq	r0, r3, r3, lsl r1
    1018:	828a2400 	addhi	r2, sl, #0, 8
    101c:	18020001 	stmdane	r2, {r0}
    1020:	00184291 	mulseq	r8, r1, r2
    1024:	82892500 	addhi	r2, r9, #0, 10
    1028:	01110101 	tsteq	r1, r1, lsl #2
    102c:	00001331 	andeq	r1, r0, r1, lsr r3
    1030:	3f012e26 	svccc	0x00012e26
    1034:	3a0e0319 	bcc	381ca0 <__Stack_Size+0x3818a0>
    1038:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    103c:	11134919 	tstne	r3, r9, lsl r9
    1040:	40061201 	andmi	r1, r6, r1, lsl #4
    1044:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1048:	01000000 	mrseq	r0, (UNDEF: 0)
    104c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1050:	0e030b13 	vmoveq.32	d3[0], r0
    1054:	17550e1b 	smmlane	r5, fp, lr, r0
    1058:	17100111 			; <UNDEFINED> instruction: 0x17100111
    105c:	24020000 	strcs	r0, [r2], #-0
    1060:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1064:	000e030b 	andeq	r0, lr, fp, lsl #6
    1068:	00160300 	andseq	r0, r6, r0, lsl #6
    106c:	0b3a0803 	bleq	e83080 <__Stack_Size+0xe82c80>
    1070:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1074:	16040000 	strne	r0, [r4], -r0
    1078:	3a0e0300 	bcc	381c80 <__Stack_Size+0x381880>
    107c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1080:	05000013 	streq	r0, [r0, #-19]
    1084:	13490035 	movtne	r0, #36917	; 0x9035
    1088:	04060000 	streq	r0, [r6], #-0
    108c:	3a0b0b01 	bcc	2c3c98 <__Stack_Size+0x2c3898>
    1090:	010b3b0b 	tsteq	fp, fp, lsl #22
    1094:	07000013 	smladeq	r0, r3, r0, r0
    1098:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    109c:	00000d1c 	andeq	r0, r0, ip, lsl sp
    10a0:	03002808 	movweq	r2, #2056	; 0x808
    10a4:	000d1c08 	andeq	r1, sp, r8, lsl #24
    10a8:	01130900 	tsteq	r3, r0, lsl #18
    10ac:	0b3a0b0b 	bleq	e83ce0 <__Stack_Size+0xe838e0>
    10b0:	1301053b 	movwne	r0, #5435	; 0x153b
    10b4:	0d0a0000 	stceq	0, cr0, [sl, #-0]
    10b8:	3a080300 	bcc	201cc0 <__Stack_Size+0x2018c0>
    10bc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10c0:	000b3813 	andeq	r3, fp, r3, lsl r8
    10c4:	00160b00 	andseq	r0, r6, r0, lsl #22
    10c8:	0b3a0e03 	bleq	e848dc <__Stack_Size+0xe844dc>
    10cc:	1349053b 	movtne	r0, #38203	; 0x953b
    10d0:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    10d4:	03193f01 	tsteq	r9, #1, 30
    10d8:	3b0b3a0e 	blcc	2cf918 <__Stack_Size+0x2cf518>
    10dc:	1119270b 	tstne	r9, fp, lsl #14
    10e0:	40061201 	andmi	r1, r6, r1, lsl #4
    10e4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    10e8:	00001301 	andeq	r1, r0, r1, lsl #6
    10ec:	0300050d 	movweq	r0, #1293	; 0x50d
    10f0:	3b0b3a0e 	blcc	2cf930 <__Stack_Size+0x2cf530>
    10f4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    10f8:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    10fc:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    1100:	0b3a0e03 	bleq	e84914 <__Stack_Size+0xe84514>
    1104:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    1108:	06120111 			; <UNDEFINED> instruction: 0x06120111
    110c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1110:	0f000019 	svceq	0x00000019
    1114:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1118:	0b3a0e03 	bleq	e8492c <__Stack_Size+0xe8452c>
    111c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    1120:	01111349 	tsteq	r1, r9, asr #6
    1124:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1128:	00194297 	mulseq	r9, r7, r2
    112c:	00051000 	andeq	r1, r5, r0
    1130:	0b3a0e03 	bleq	e84944 <__Stack_Size+0xe84544>
    1134:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1138:	00001702 	andeq	r1, r0, r2, lsl #14
    113c:	03003411 	movweq	r3, #1041	; 0x411
    1140:	3b0b3a0e 	blcc	2cf980 <__Stack_Size+0x2cf580>
    1144:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1148:	00000017 	andeq	r0, r0, r7, lsl r0
    114c:	25011101 	strcs	r1, [r1, #-257]	; 0x101
    1150:	030b130e 	movweq	r1, #45838	; 0xb30e
    1154:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
    1158:	10011117 	andne	r1, r1, r7, lsl r1
    115c:	02000017 	andeq	r0, r0, #23
    1160:	0b0b0024 	bleq	2c11f8 <__Stack_Size+0x2c0df8>
    1164:	0e030b3e 	vmoveq.16	d3[0], r0
    1168:	16030000 	strne	r0, [r3], -r0
    116c:	3a080300 	bcc	201d74 <__Stack_Size+0x201974>
    1170:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1174:	04000013 	streq	r0, [r0], #-19
    1178:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    117c:	0b3b0b3a 	bleq	ec3e6c <__Stack_Size+0xec3a6c>
    1180:	00001349 	andeq	r1, r0, r9, asr #6
    1184:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    1188:	06000013 			; <UNDEFINED> instruction: 0x06000013
    118c:	0b0b0104 	bleq	2c15a4 <__Stack_Size+0x2c11a4>
    1190:	0b3b0b3a 	bleq	ec3e80 <__Stack_Size+0xec3a80>
    1194:	00001301 	andeq	r1, r0, r1, lsl #6
    1198:	03002807 	movweq	r2, #2055	; 0x807
    119c:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    11a0:	01130800 	tsteq	r3, r0, lsl #16
    11a4:	0b3a0b0b 	bleq	e83dd8 <__Stack_Size+0xe839d8>
    11a8:	1301053b 	movwne	r0, #5435	; 0x153b
    11ac:	0d090000 	stceq	0, cr0, [r9, #-0]
    11b0:	3a080300 	bcc	201db8 <__Stack_Size+0x2019b8>
    11b4:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11b8:	000b3813 	andeq	r3, fp, r3, lsl r8
    11bc:	000d0a00 	andeq	r0, sp, r0, lsl #20
    11c0:	0b3a0e03 	bleq	e849d4 <__Stack_Size+0xe845d4>
    11c4:	1349053b 	movtne	r0, #38203	; 0x953b
    11c8:	00000b38 	andeq	r0, r0, r8, lsr fp
    11cc:	0300160b 	movweq	r1, #1547	; 0x60b
    11d0:	3b0b3a0e 	blcc	2cfa10 <__Stack_Size+0x2cf610>
    11d4:	00134905 	andseq	r4, r3, r5, lsl #18
    11d8:	01010c00 	tsteq	r1, r0, lsl #24
    11dc:	13011349 	movwne	r1, #4937	; 0x1349
    11e0:	210d0000 	mrscs	r0, (UNDEF: 13)
    11e4:	2f134900 	svccs	0x00134900
    11e8:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    11ec:	0b0b0113 	bleq	2c1640 <__Stack_Size+0x2c1240>
    11f0:	0b3b0b3a 	bleq	ec3ee0 <__Stack_Size+0xec3ae0>
    11f4:	00001301 	andeq	r1, r0, r1, lsl #6
    11f8:	03000d0f 	movweq	r0, #3343	; 0xd0f
    11fc:	3b0b3a0e 	blcc	2cfa3c <__Stack_Size+0x2cf63c>
    1200:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1204:	1000000b 	andne	r0, r0, fp
    1208:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    120c:	0b3a0e03 	bleq	e84a20 <__Stack_Size+0xe84620>
    1210:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    1214:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1218:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    121c:	00130119 	andseq	r0, r3, r9, lsl r1
    1220:	00051100 	andeq	r1, r5, r0, lsl #2
    1224:	0b3a0e03 	bleq	e84a38 <__Stack_Size+0xe84638>
    1228:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    122c:	00001702 	andeq	r1, r0, r2, lsl #14
    1230:	01828912 	orreq	r8, r2, r2, lsl r9
    1234:	31011101 	tstcc	r1, r1, lsl #2
    1238:	00130113 	andseq	r0, r3, r3, lsl r1
    123c:	828a1300 	addhi	r1, sl, #0, 6
    1240:	18020001 	stmdane	r2, {r0}
    1244:	00184291 	mulseq	r8, r1, r2
    1248:	82891400 	addhi	r1, r9, #0, 8
    124c:	01110101 	tsteq	r1, r1, lsl #2
    1250:	31194295 			; <UNDEFINED> instruction: 0x31194295
    1254:	15000013 	strne	r0, [r0, #-19]
    1258:	0b0b000f 	bleq	2c129c <__Stack_Size+0x2c0e9c>
    125c:	00001349 	andeq	r1, r0, r9, asr #6
    1260:	03000516 	movweq	r0, #1302	; 0x516
    1264:	3b0b3a0e 	blcc	2cfaa4 <__Stack_Size+0x2cf6a4>
    1268:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    126c:	17000018 	smladne	r0, r8, r0, r0
    1270:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1274:	0b3b0b3a 	bleq	ec3f64 <__Stack_Size+0xec3b64>
    1278:	17021349 	strne	r1, [r2, -r9, asr #6]
    127c:	34180000 	ldrcc	r0, [r8], #-0
    1280:	3a080300 	bcc	201e88 <__Stack_Size+0x201a88>
    1284:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1288:	00170213 	andseq	r0, r7, r3, lsl r2
    128c:	012e1900 	teqeq	lr, r0, lsl #18
    1290:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1294:	0b3b0b3a 	bleq	ec3f84 <__Stack_Size+0xec3b84>
    1298:	13491927 	movtne	r1, #39207	; 0x9927
    129c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    12a0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    12a4:	00130119 	andseq	r0, r3, r9, lsl r1
    12a8:	012e1a00 	teqeq	lr, r0, lsl #20
    12ac:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    12b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    12b4:	13491927 	movtne	r1, #39207	; 0x9927
    12b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    12bc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    12c0:	00130119 	andseq	r0, r3, r9, lsl r1
    12c4:	00051b00 	andeq	r1, r5, r0, lsl #22
    12c8:	0b3a0e03 	bleq	e84adc <__Stack_Size+0xe846dc>
    12cc:	1349053b 	movtne	r0, #38203	; 0x953b
    12d0:	00001702 	andeq	r1, r0, r2, lsl #14
    12d4:	0300051c 	movweq	r0, #1308	; 0x51c
    12d8:	3b0b3a0e 	blcc	2cfb18 <__Stack_Size+0x2cf718>
    12dc:	02134905 	andseq	r4, r3, #81920	; 0x14000
    12e0:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
    12e4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    12e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    12ec:	17021349 	strne	r1, [r2, -r9, asr #6]
    12f0:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
    12f4:	03193f01 	tsteq	r9, #1, 30
    12f8:	3b0b3a0e 	blcc	2cfb38 <__Stack_Size+0x2cf738>
    12fc:	11192705 	tstne	r9, r5, lsl #14
    1300:	40061201 	andmi	r1, r6, r1, lsl #4
    1304:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1308:	00001301 	andeq	r1, r0, r1, lsl #6
    130c:	0300341f 	movweq	r3, #1055	; 0x41f
    1310:	3b0b3a08 	blcc	2cfb38 <__Stack_Size+0x2cf738>
    1314:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1318:	20000017 	andcs	r0, r0, r7, lsl r0
    131c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1320:	0b3a0e03 	bleq	e84b34 <__Stack_Size+0xe84734>
    1324:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    1328:	0000193c 	andeq	r1, r0, ip, lsr r9
    132c:	49000521 	stmdbmi	r0, {r0, r5, r8, sl}
    1330:	00000013 	andeq	r0, r0, r3, lsl r0
    1334:	25011101 	strcs	r1, [r1, #-257]	; 0x101
    1338:	030b130e 	movweq	r1, #45838	; 0xb30e
    133c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
    1340:	10011117 	andne	r1, r1, r7, lsl r1
    1344:	02000017 	andeq	r0, r0, #23
    1348:	0b0b0024 	bleq	2c13e0 <__Stack_Size+0x2c0fe0>
    134c:	0e030b3e 	vmoveq.16	d3[0], r0
    1350:	16030000 	strne	r0, [r3], -r0
    1354:	3a080300 	bcc	201f5c <__Stack_Size+0x201b5c>
    1358:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    135c:	04000013 	streq	r0, [r0], #-19
    1360:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1364:	0b3b0b3a 	bleq	ec4054 <__Stack_Size+0xec3c54>
    1368:	00001349 	andeq	r1, r0, r9, asr #6
    136c:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    1370:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1374:	13490026 	movtne	r0, #36902	; 0x9026
    1378:	04070000 	streq	r0, [r7], #-0
    137c:	3a0b0b01 	bcc	2c3f88 <__Stack_Size+0x2c3b88>
    1380:	010b3b0b 	tsteq	fp, fp, lsl #22
    1384:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1388:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    138c:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1390:	03002809 	movweq	r2, #2057	; 0x809
    1394:	000d1c08 	andeq	r1, sp, r8, lsl #24
    1398:	01130a00 	tsteq	r3, r0, lsl #20
    139c:	0b3a050b 	bleq	e827d0 <__Stack_Size+0xe823d0>
    13a0:	1301053b 	movwne	r0, #5435	; 0x153b
    13a4:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    13a8:	3a0e0300 	bcc	381fb0 <__Stack_Size+0x381bb0>
    13ac:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13b0:	000b3813 	andeq	r3, fp, r3, lsl r8
    13b4:	000d0c00 	andeq	r0, sp, r0, lsl #24
    13b8:	0b3a0e03 	bleq	e84bcc <__Stack_Size+0xe847cc>
    13bc:	1349053b 	movtne	r0, #38203	; 0x953b
    13c0:	00000538 	andeq	r0, r0, r8, lsr r5
    13c4:	03000d0d 	movweq	r0, #3341	; 0xd0d
    13c8:	3b0b3a08 	blcc	2cfbf0 <__Stack_Size+0x2cf7f0>
    13cc:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
    13d0:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    13d4:	13490101 	movtne	r0, #37121	; 0x9101
    13d8:	00001301 	andeq	r1, r0, r1, lsl #6
    13dc:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    13e0:	000b2f13 	andeq	r2, fp, r3, lsl pc
    13e4:	00161000 	andseq	r1, r6, r0
    13e8:	0b3a0e03 	bleq	e84bfc <__Stack_Size+0xe847fc>
    13ec:	1349053b 	movtne	r0, #38203	; 0x953b
    13f0:	13110000 	tstne	r1, #0
    13f4:	3a0b0b01 	bcc	2c4000 <__Stack_Size+0x2c3c00>
    13f8:	01053b0b 	tsteq	r5, fp, lsl #22
    13fc:	12000013 	andne	r0, r0, #19
    1400:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1404:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1408:	0b381349 	bleq	e06134 <__Stack_Size+0xe05d34>
    140c:	13130000 	tstne	r3, #0
    1410:	3a0b0b01 	bcc	2c401c <__Stack_Size+0x2c3c1c>
    1414:	010b3b0b 	tsteq	fp, fp, lsl #22
    1418:	14000013 	strne	r0, [r0], #-19
    141c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1420:	0b3b0b3a 	bleq	ec4110 <__Stack_Size+0xec3d10>
    1424:	0b381349 	bleq	e06150 <__Stack_Size+0xe05d50>
    1428:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    142c:	03193f01 	tsteq	r9, #1, 30
    1430:	3b0b3a0e 	blcc	2cfc70 <__Stack_Size+0x2cf870>
    1434:	1119270b 	tstne	r9, fp, lsl #14
    1438:	40061201 	andmi	r1, r6, r1, lsl #4
    143c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1440:	00001301 	andeq	r1, r0, r1, lsl #6
    1444:	03003416 	movweq	r3, #1046	; 0x416
    1448:	3b0b3a0e 	blcc	2cfc88 <__Stack_Size+0x2cf888>
    144c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1450:	17000017 	smladne	r0, r7, r0, r0
    1454:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1458:	0b3b0b3a 	bleq	ec4148 <__Stack_Size+0xec3d48>
    145c:	17021349 	strne	r1, [r2, -r9, asr #6]
    1460:	05180000 	ldreq	r0, [r8, #-0]
    1464:	3a0e0300 	bcc	38206c <__Stack_Size+0x381c6c>
    1468:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    146c:	00180213 	andseq	r0, r8, r3, lsl r2
    1470:	000f1900 	andeq	r1, pc, r0, lsl #18
    1474:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1478:	891a0000 	ldmdbhi	sl, {}	; <UNPREDICTABLE>
    147c:	11000182 	smlabbne	r0, r2, r1, r0
    1480:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
    1484:	00001331 	andeq	r1, r0, r1, lsr r3
    1488:	0182891b 	orreq	r8, r2, fp, lsl r9
    148c:	95011101 	strls	r1, [r1, #-257]	; 0x101
    1490:	13311942 	teqne	r1, #1081344	; 0x108000
    1494:	8a1c0000 	bhi	70149c <__Stack_Size+0x70109c>
    1498:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    149c:	18429118 	stmdane	r2, {r3, r4, r8, ip, pc}^
    14a0:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    14a4:	03193f01 	tsteq	r9, #1, 30
    14a8:	3b0b3a0e 	blcc	2cfce8 <__Stack_Size+0x2cf8e8>
    14ac:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    14b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14b4:	97184006 	ldrls	r4, [r8, -r6]
    14b8:	13011942 	movwne	r1, #6466	; 0x1942
    14bc:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
    14c0:	03193f00 	tsteq	r9, #0, 30
    14c4:	3b0b3a0e 	blcc	2cfd04 <__Stack_Size+0x2cf904>
    14c8:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
    14cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14d0:	97184006 	ldrls	r4, [r8, -r6]
    14d4:	00001942 	andeq	r1, r0, r2, asr #18
    14d8:	3f012e1f 	svccc	0x00012e1f
    14dc:	3a0e0319 	bcc	382148 <__Stack_Size+0x381d48>
    14e0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    14e4:	11134919 	tstne	r3, r9, lsl r9
    14e8:	40061201 	andmi	r1, r6, r1, lsl #4
    14ec:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    14f0:	00001301 	andeq	r1, r0, r1, lsl #6
    14f4:	03000520 	movweq	r0, #1312	; 0x520
    14f8:	3b0b3a0e 	blcc	2cfd38 <__Stack_Size+0x2cf938>
    14fc:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1500:	21000017 	tstcs	r0, r7, lsl r0
    1504:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1508:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    150c:	17021349 	strne	r1, [r2, -r9, asr #6]
    1510:	34220000 	strtcc	r0, [r2], #-0
    1514:	3a080300 	bcc	20211c <__Stack_Size+0x201d1c>
    1518:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    151c:	00170213 	andseq	r0, r7, r3, lsl r2
    1520:	012e2300 	teqeq	lr, r0, lsl #6
    1524:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1528:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    152c:	01111927 	tsteq	r1, r7, lsr #18
    1530:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1534:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1538:	24000013 	strcs	r0, [r0], #-19
    153c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1540:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1544:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1548:	89250000 	stmdbhi	r5!, {}	; <UNPREDICTABLE>
    154c:	11000182 	smlabbne	r0, r2, r1, r0
    1550:	00133101 	andseq	r3, r3, r1, lsl #2
    1554:	002e2600 	eoreq	r2, lr, r0, lsl #12
    1558:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    155c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1560:	01111927 	tsteq	r1, r7, lsr #18
    1564:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1568:	00194297 	mulseq	r9, r7, r2
    156c:	002e2700 	eoreq	r2, lr, r0, lsl #14
    1570:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1574:	0b3b0b3a 	bleq	ec4264 <__Stack_Size+0xec3e64>
    1578:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
    157c:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    1580:	03193f01 	tsteq	r9, #1, 30
    1584:	3b0b3a0e 	blcc	2cfdc4 <__Stack_Size+0x2cf9c4>
    1588:	3c19270b 	ldccc	7, cr2, [r9], {11}
    158c:	00130119 	andseq	r0, r3, r9, lsl r1
    1590:	00052900 	andeq	r2, r5, r0, lsl #18
    1594:	00001349 	andeq	r1, r0, r9, asr #6
    1598:	3f002e2a 	svccc	0x00002e2a
    159c:	3a0e0319 	bcc	382208 <__Stack_Size+0x381e08>
    15a0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    15a4:	3c134919 	ldccc	9, cr4, [r3], {25}
    15a8:	00000019 	andeq	r0, r0, r9, lsl r0
    15ac:	25011101 	strcs	r1, [r1, #-257]	; 0x101
    15b0:	030b130e 	movweq	r1, #45838	; 0xb30e
    15b4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
    15b8:	10011117 	andne	r1, r1, r7, lsl r1
    15bc:	02000017 	andeq	r0, r0, #23
    15c0:	0b0b0024 	bleq	2c1658 <__Stack_Size+0x2c1258>
    15c4:	0e030b3e 	vmoveq.16	d3[0], r0
    15c8:	16030000 	strne	r0, [r3], -r0
    15cc:	3a080300 	bcc	2021d4 <__Stack_Size+0x201dd4>
    15d0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15d4:	04000013 	streq	r0, [r0], #-19
    15d8:	13490026 	movtne	r0, #36902	; 0x9026
    15dc:	16050000 	strne	r0, [r5], -r0
    15e0:	3a0e0300 	bcc	3821e8 <__Stack_Size+0x381de8>
    15e4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15e8:	06000013 			; <UNDEFINED> instruction: 0x06000013
    15ec:	13490035 	movtne	r0, #36917	; 0x9035
    15f0:	04070000 	streq	r0, [r7], #-0
    15f4:	3a0b0b01 	bcc	2c4200 <__Stack_Size+0x2c3e00>
    15f8:	010b3b0b 	tsteq	fp, fp, lsl #22
    15fc:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1600:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1604:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1608:	03002809 	movweq	r2, #2057	; 0x809
    160c:	000d1c08 	andeq	r1, sp, r8, lsl #24
    1610:	01130a00 	tsteq	r3, r0, lsl #20
    1614:	0b3a0b0b 	bleq	e84248 <__Stack_Size+0xe83e48>
    1618:	1301053b 	movwne	r0, #5435	; 0x153b
    161c:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    1620:	3a080300 	bcc	202228 <__Stack_Size+0x201e28>
    1624:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1628:	000b3813 	andeq	r3, fp, r3, lsl r8
    162c:	000d0c00 	andeq	r0, sp, r0, lsl #24
    1630:	0b3a0e03 	bleq	e84e44 <__Stack_Size+0xe84a44>
    1634:	1349053b 	movtne	r0, #38203	; 0x953b
    1638:	00000b38 	andeq	r0, r0, r8, lsr fp
    163c:	0300160d 	movweq	r1, #1549	; 0x60d
    1640:	3b0b3a0e 	blcc	2cfe80 <__Stack_Size+0x2cfa80>
    1644:	00134905 	andseq	r4, r3, r5, lsl #18
    1648:	01130e00 	tsteq	r3, r0, lsl #28
    164c:	0b3a0b0b 	bleq	e84280 <__Stack_Size+0xe83e80>
    1650:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1654:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 165c <__Stack_Size+0x125c>
    1658:	3a0e0300 	bcc	382260 <__Stack_Size+0x381e60>
    165c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1660:	000b3813 	andeq	r3, fp, r3, lsl r8
    1664:	002e1000 	eoreq	r1, lr, r0
    1668:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    166c:	0b3b0b3a 	bleq	ec435c <__Stack_Size+0xec3f5c>
    1670:	01111927 	tsteq	r1, r7, lsr #18
    1674:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1678:	00194297 	mulseq	r9, r7, r2
    167c:	012e1100 	teqeq	lr, r0, lsl #2
    1680:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1684:	0b3b0b3a 	bleq	ec4374 <__Stack_Size+0xec3f74>
    1688:	01111927 	tsteq	r1, r7, lsr #18
    168c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1690:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1694:	12000013 	andne	r0, r0, #19
    1698:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    169c:	0b3b0b3a 	bleq	ec438c <__Stack_Size+0xec3f8c>
    16a0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    16a4:	05130000 	ldreq	r0, [r3, #-0]
    16a8:	3a0e0300 	bcc	3822b0 <__Stack_Size+0x381eb0>
    16ac:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16b0:	00170213 	andseq	r0, r7, r3, lsl r2
    16b4:	00341400 	eorseq	r1, r4, r0, lsl #8
    16b8:	0b3a0e03 	bleq	e84ecc <__Stack_Size+0xe84acc>
    16bc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    16c0:	00001702 	andeq	r1, r0, r2, lsl #14
    16c4:	3f012e15 	svccc	0x00012e15
    16c8:	3a0e0319 	bcc	382334 <__Stack_Size+0x381f34>
    16cc:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    16d0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    16d4:	97184006 	ldrls	r4, [r8, -r6]
    16d8:	13011942 	movwne	r1, #6466	; 0x1942
    16dc:	05160000 	ldreq	r0, [r6, #-0]
    16e0:	3a0e0300 	bcc	3822e8 <__Stack_Size+0x381ee8>
    16e4:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    16e8:	00180213 	andseq	r0, r8, r3, lsl r2
    16ec:	00051700 	andeq	r1, r5, r0, lsl #14
    16f0:	0b3a0e03 	bleq	e84f04 <__Stack_Size+0xe84b04>
    16f4:	1349053b 	movtne	r0, #38203	; 0x953b
    16f8:	00001702 	andeq	r1, r0, r2, lsl #14
    16fc:	03003418 	movweq	r3, #1048	; 0x418
    1700:	3b0b3a0e 	blcc	2cff40 <__Stack_Size+0x2cfb40>
    1704:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1708:	19000017 	stmdbne	r0, {r0, r1, r2, r4}
    170c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    1710:	0b3a0e03 	bleq	e84f24 <__Stack_Size+0xe84b24>
    1714:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    1718:	01111349 	tsteq	r1, r9, asr #6
    171c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1720:	00194297 	mulseq	r9, r7, r2
    1724:	00341a00 	eorseq	r1, r4, r0, lsl #20
    1728:	0b3a0803 	bleq	e8373c <__Stack_Size+0xe8333c>
    172c:	1349053b 	movtne	r0, #38203	; 0x953b
    1730:	00001702 	andeq	r1, r0, r2, lsl #14
    1734:	0b000f1b 	bleq	53a8 <__Stack_Size+0x4fa8>
    1738:	0013490b 	andseq	r4, r3, fp, lsl #18
    173c:	012e1c00 	teqeq	lr, r0, lsl #24
    1740:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1744:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1748:	13491927 	movtne	r1, #39207	; 0x9927
    174c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1750:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1754:	00130119 	andseq	r0, r3, r9, lsl r1
    1758:	012e1d00 	teqeq	lr, r0, lsl #26
    175c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1760:	0b3b0b3a 	bleq	ec4450 <__Stack_Size+0xec4050>
    1764:	13491927 	movtne	r1, #39207	; 0x9927
    1768:	06120111 			; <UNDEFINED> instruction: 0x06120111
    176c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1770:	00130119 	andseq	r0, r3, r9, lsl r1
    1774:	00341e00 	eorseq	r1, r4, r0, lsl #28
    1778:	0b3a0e03 	bleq	e84f8c <__Stack_Size+0xe84b8c>
    177c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1780:	00001802 	andeq	r1, r0, r2, lsl #16
    1784:	0182891f 	orreq	r8, r2, pc, lsl r9
    1788:	31011101 	tstcc	r1, r1, lsl #2
    178c:	00130113 	andseq	r0, r3, r3, lsl r1
    1790:	828a2000 	addhi	r2, sl, #0
    1794:	18020001 	stmdane	r2, {r0}
    1798:	00184291 	mulseq	r8, r1, r2
    179c:	82892100 	addhi	r2, r9, #0, 2
    17a0:	01110101 	tsteq	r1, r1, lsl #2
    17a4:	00001331 	andeq	r1, r0, r1, lsr r3
    17a8:	3f002e22 	svccc	0x00002e22
    17ac:	3a0e0319 	bcc	382418 <__Stack_Size+0x382018>
    17b0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    17b4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    17b8:	97184006 	ldrls	r4, [r8, -r6]
    17bc:	00001942 	andeq	r1, r0, r2, asr #18
    17c0:	49010123 	stmdbmi	r1, {r0, r1, r5, r8}
    17c4:	00130113 	andseq	r0, r3, r3, lsl r1
    17c8:	00212400 	eoreq	r2, r1, r0, lsl #8
    17cc:	0b2f1349 	bleq	bc64f8 <__Stack_Size+0xbc60f8>
    17d0:	01000000 	mrseq	r0, (UNDEF: 0)
    17d4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    17d8:	0e030b13 	vmoveq.32	d3[0], r0
    17dc:	17550e1b 	smmlane	r5, fp, lr, r0
    17e0:	17100111 			; <UNDEFINED> instruction: 0x17100111
    17e4:	24020000 	strcs	r0, [r2], #-0
    17e8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    17ec:	000e030b 	andeq	r0, lr, fp, lsl #6
    17f0:	00160300 	andseq	r0, r6, r0, lsl #6
    17f4:	0b3a0803 	bleq	e83808 <__Stack_Size+0xe83408>
    17f8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    17fc:	16040000 	strne	r0, [r4], -r0
    1800:	3a0e0300 	bcc	382408 <__Stack_Size+0x382008>
    1804:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1808:	05000013 	streq	r0, [r0, #-19]
    180c:	13490035 	movtne	r0, #36917	; 0x9035
    1810:	04060000 	streq	r0, [r6], #-0
    1814:	3a0b0b01 	bcc	2c4420 <__Stack_Size+0x2c4020>
    1818:	010b3b0b 	tsteq	fp, fp, lsl #22
    181c:	07000013 	smladeq	r0, r3, r0, r0
    1820:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1824:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1828:	03002808 	movweq	r2, #2056	; 0x808
    182c:	000d1c08 	andeq	r1, sp, r8, lsl #24
    1830:	01130900 	tsteq	r3, r0, lsl #18
    1834:	0b3a0b0b 	bleq	e84468 <__Stack_Size+0xe84068>
    1838:	1301053b 	movwne	r0, #5435	; 0x153b
    183c:	0d0a0000 	stceq	0, cr0, [sl, #-0]
    1840:	3a080300 	bcc	202448 <__Stack_Size+0x202048>
    1844:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1848:	000b3813 	andeq	r3, fp, r3, lsl r8
    184c:	000d0b00 	andeq	r0, sp, r0, lsl #22
    1850:	0b3a0e03 	bleq	e85064 <__Stack_Size+0xe84c64>
    1854:	1349053b 	movtne	r0, #38203	; 0x953b
    1858:	00000b38 	andeq	r0, r0, r8, lsr fp
    185c:	0300160c 	movweq	r1, #1548	; 0x60c
    1860:	3b0b3a0e 	blcc	2d00a0 <__Stack_Size+0x2cfca0>
    1864:	00134905 	andseq	r4, r3, r5, lsl #18
    1868:	01130d00 	tsteq	r3, r0, lsl #26
    186c:	0b3a0b0b 	bleq	e844a0 <__Stack_Size+0xe840a0>
    1870:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1874:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    1878:	3a0e0300 	bcc	382480 <__Stack_Size+0x382080>
    187c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1880:	000b3813 	andeq	r3, fp, r3, lsl r8
    1884:	012e0f00 	teqeq	lr, r0, lsl #30
    1888:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    188c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1890:	0b201927 	bleq	807d34 <__Stack_Size+0x807934>
    1894:	00001301 	andeq	r1, r0, r1, lsl #6
    1898:	03000510 	movweq	r0, #1296	; 0x510
    189c:	3b0b3a0e 	blcc	2d00dc <__Stack_Size+0x2cfcdc>
    18a0:	00134905 	andseq	r4, r3, r5, lsl #18
    18a4:	00341100 	eorseq	r1, r4, r0, lsl #2
    18a8:	0b3a0e03 	bleq	e850bc <__Stack_Size+0xe84cbc>
    18ac:	1349053b 	movtne	r0, #38203	; 0x953b
    18b0:	0f120000 	svceq	0x00120000
    18b4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    18b8:	13000013 	movwne	r0, #19
    18bc:	0e03012e 	adfeqsp	f0, f3, #0.5
    18c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    18c4:	01111927 	tsteq	r1, r7, lsr #18
    18c8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    18cc:	01194297 			; <UNDEFINED> instruction: 0x01194297
    18d0:	14000013 	strne	r0, [r0], #-19
    18d4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    18d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    18dc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    18e0:	05150000 	ldreq	r0, [r5, #-0]
    18e4:	3a0e0300 	bcc	3824ec <__Stack_Size+0x3820ec>
    18e8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    18ec:	00170213 	andseq	r0, r7, r3, lsl r2
    18f0:	00341600 	eorseq	r1, r4, r0, lsl #12
    18f4:	0b3a0e03 	bleq	e85108 <__Stack_Size+0xe84d08>
    18f8:	1349053b 	movtne	r0, #38203	; 0x953b
    18fc:	00001702 	andeq	r1, r0, r2, lsl #14
    1900:	03003417 	movweq	r3, #1047	; 0x417
    1904:	3b0b3a08 	blcc	2d012c <__Stack_Size+0x2cfd2c>
    1908:	02134905 	andseq	r4, r3, #81920	; 0x14000
    190c:	18000017 	stmdane	r0, {r0, r1, r2, r4}
    1910:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1914:	0b3a0e03 	bleq	e85128 <__Stack_Size+0xe84d28>
    1918:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    191c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1920:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1924:	00130119 	andseq	r0, r3, r9, lsl r1
    1928:	00051900 	andeq	r1, r5, r0, lsl #18
    192c:	0b3a0e03 	bleq	e85140 <__Stack_Size+0xe84d40>
    1930:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1934:	00001702 	andeq	r1, r0, r2, lsl #14
    1938:	0182891a 	orreq	r8, r2, sl, lsl r9
    193c:	31011101 	tstcc	r1, r1, lsl #2
    1940:	00130113 	andseq	r0, r3, r3, lsl r1
    1944:	828a1b00 	addhi	r1, sl, #0, 22
    1948:	18020001 	stmdane	r2, {r0}
    194c:	00184291 	mulseq	r8, r1, r2
    1950:	82891c00 	addhi	r1, r9, #0, 24
    1954:	01110101 	tsteq	r1, r1, lsl #2
    1958:	31194295 			; <UNDEFINED> instruction: 0x31194295
    195c:	00130113 	andseq	r0, r3, r3, lsl r1
    1960:	82891d00 	addhi	r1, r9, #0, 26
    1964:	01110101 	tsteq	r1, r1, lsl #2
    1968:	31194295 			; <UNDEFINED> instruction: 0x31194295
    196c:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1970:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1974:	0b3b0b3a 	bleq	ec4664 <__Stack_Size+0xec4264>
    1978:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    197c:	341f0000 	ldrcc	r0, [pc], #-0	; 1984 <__Stack_Size+0x1584>
    1980:	3a0e0300 	bcc	382588 <__Stack_Size+0x382188>
    1984:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1988:	00170213 	andseq	r0, r7, r3, lsl r2
    198c:	012e2000 	teqeq	lr, r0
    1990:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1994:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1998:	01111927 	tsteq	r1, r7, lsr #18
    199c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    19a0:	01194297 			; <UNDEFINED> instruction: 0x01194297
    19a4:	21000013 	tstcs	r0, r3, lsl r0
    19a8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    19ac:	06120111 			; <UNDEFINED> instruction: 0x06120111
    19b0:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xb58
    19b4:	05220000 	streq	r0, [r2, #-0]!
    19b8:	02133100 	andseq	r3, r3, #0, 2
    19bc:	23000017 	movwcs	r0, #23
    19c0:	13310005 	teqne	r1, #5
    19c4:	00001802 	andeq	r1, r0, r2, lsl #16
    19c8:	11010b24 	tstne	r1, r4, lsr #22
    19cc:	00061201 	andeq	r1, r6, r1, lsl #4
    19d0:	00342500 	eorseq	r2, r4, r0, lsl #10
    19d4:	17021331 	smladxne	r2, r1, r3, r1
    19d8:	1d260000 	stcne	0, cr0, [r6, #-0]
    19dc:	11133101 	tstne	r3, r1, lsl #2
    19e0:	58061201 	stmdapl	r6, {r0, r9, ip}
    19e4:	0105590b 	tsteq	r5, fp, lsl #18
    19e8:	27000013 	smladcs	r0, r3, r0, r0
    19ec:	00018289 	andeq	r8, r1, r9, lsl #5
    19f0:	13310111 	teqne	r1, #1073741828	; 0x40000004
    19f4:	89280000 	stmdbhi	r8!, {}	; <UNPREDICTABLE>
    19f8:	11010182 	smlabbne	r1, r2, r1, r0
    19fc:	00133101 	andseq	r3, r3, r1, lsl #2
    1a00:	012e2900 	teqeq	lr, r0, lsl #18
    1a04:	01111331 	tsteq	r1, r1, lsr r3
    1a08:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1a0c:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1a10:	2a000013 	bcs	1a64 <__Stack_Size+0x1664>
    1a14:	0e03012e 	adfeqsp	f0, f3, #0.5
    1a18:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1a1c:	0b201927 	bleq	807ec0 <__Stack_Size+0x807ac0>
    1a20:	00001301 	andeq	r1, r0, r1, lsl #6
    1a24:	0300342b 	movweq	r3, #1067	; 0x42b
    1a28:	3b0b3a08 	blcc	2d0250 <__Stack_Size+0x2cfe50>
    1a2c:	00134905 	andseq	r4, r3, r5, lsl #18
    1a30:	011d2c00 	tsteq	sp, r0, lsl #24
    1a34:	01521331 	cmpeq	r2, r1, lsr r3
    1a38:	0b581755 	bleq	1607794 <__Stack_Size+0x1607394>
    1a3c:	13010559 	movwne	r0, #5465	; 0x1559
    1a40:	0b2d0000 	bleq	b41a48 <__Stack_Size+0xb41648>
    1a44:	00175501 	andseq	r5, r7, r1, lsl #10
    1a48:	012e2e00 	teqeq	lr, r0, lsl #28
    1a4c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1a50:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1a54:	13491927 	movtne	r1, #39207	; 0x9927
    1a58:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1a5c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1a60:	00130119 	andseq	r0, r3, r9, lsl r1
    1a64:	012e2f00 	teqeq	lr, r0, lsl #30
    1a68:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1a6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1a70:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
    1a74:	00001301 	andeq	r1, r0, r1, lsl #6
    1a78:	49000530 	stmdbmi	r0, {r4, r5, r8, sl}
    1a7c:	31000013 	tstcc	r0, r3, lsl r0
    1a80:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1a84:	0b3a0e03 	bleq	e85298 <__Stack_Size+0xe84e98>
    1a88:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    1a8c:	0000193c 	andeq	r1, r0, ip, lsr r9
    1a90:	01110100 	tsteq	r1, r0, lsl #2
    1a94:	0b130e25 	bleq	4c5330 <__Stack_Size+0x4c4f30>
    1a98:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1a9c:	01111755 	tsteq	r1, r5, asr r7
    1aa0:	00001710 	andeq	r1, r0, r0, lsl r7
    1aa4:	0b002402 	bleq	aab4 <__Stack_Size+0xa6b4>
    1aa8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1aac:	0300000e 	movweq	r0, #14
    1ab0:	08030016 	stmdaeq	r3, {r1, r2, r4}
    1ab4:	0b3b0b3a 	bleq	ec47a4 <__Stack_Size+0xec43a4>
    1ab8:	00001349 	andeq	r1, r0, r9, asr #6
    1abc:	03001604 	movweq	r1, #1540	; 0x604
    1ac0:	3b0b3a0e 	blcc	2d0300 <__Stack_Size+0x2cff00>
    1ac4:	0013490b 	andseq	r4, r3, fp, lsl #18
    1ac8:	00350500 	eorseq	r0, r5, r0, lsl #10
    1acc:	00001349 	andeq	r1, r0, r9, asr #6
    1ad0:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
    1ad4:	07000013 	smladeq	r0, r3, r0, r0
    1ad8:	0b0b0104 	bleq	2c1ef0 <__Stack_Size+0x2c1af0>
    1adc:	0b3b0b3a 	bleq	ec47cc <__Stack_Size+0xec43cc>
    1ae0:	00001301 	andeq	r1, r0, r1, lsl #6
    1ae4:	03002808 	movweq	r2, #2056	; 0x808
    1ae8:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    1aec:	00280900 	eoreq	r0, r8, r0, lsl #18
    1af0:	0d1c0803 	ldceq	8, cr0, [ip, #-12]
    1af4:	130a0000 	movwne	r0, #40960	; 0xa000
    1af8:	3a0b0b01 	bcc	2c4704 <__Stack_Size+0x2c4304>
    1afc:	01053b0b 	tsteq	r5, fp, lsl #22
    1b00:	0b000013 	bleq	1b54 <__Stack_Size+0x1754>
    1b04:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1b08:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1b0c:	0b381349 	bleq	e06838 <__Stack_Size+0xe06438>
    1b10:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    1b14:	3a080300 	bcc	20271c <__Stack_Size+0x20231c>
    1b18:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b1c:	000b3813 	andeq	r3, fp, r3, lsl r8
    1b20:	00160d00 	andseq	r0, r6, r0, lsl #26
    1b24:	0b3a0e03 	bleq	e85338 <__Stack_Size+0xe84f38>
    1b28:	1349053b 	movtne	r0, #38203	; 0x953b
    1b2c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
    1b30:	03193f01 	tsteq	r9, #1, 30
    1b34:	3b0b3a0e 	blcc	2d0374 <__Stack_Size+0x2cff74>
    1b38:	1119270b 	tstne	r9, fp, lsl #14
    1b3c:	40061201 	andmi	r1, r6, r1, lsl #4
    1b40:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1b44:	00001301 	andeq	r1, r0, r1, lsl #6
    1b48:	0300050f 	movweq	r0, #1295	; 0x50f
    1b4c:	3b0b3a0e 	blcc	2d038c <__Stack_Size+0x2cff8c>
    1b50:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1b54:	10000018 	andne	r0, r0, r8, lsl r0
    1b58:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1b5c:	0b3b0b3a 	bleq	ec484c <__Stack_Size+0xec444c>
    1b60:	17021349 	strne	r1, [r2, -r9, asr #6]
    1b64:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    1b68:	03193f00 	tsteq	r9, #0, 30
    1b6c:	3b0b3a0e 	blcc	2d03ac <__Stack_Size+0x2cffac>
    1b70:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1b74:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1b78:	97184006 	ldrls	r4, [r8, -r6]
    1b7c:	00001942 	andeq	r1, r0, r2, asr #18
    1b80:	3f012e12 	svccc	0x00012e12
    1b84:	3a0e0319 	bcc	3827f0 <__Stack_Size+0x3823f0>
    1b88:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    1b8c:	11134919 	tstne	r3, r9, lsl r9
    1b90:	40061201 	andmi	r1, r6, r1, lsl #4
    1b94:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1b98:	34130000 	ldrcc	r0, [r3], #-0
    1b9c:	3a0e0300 	bcc	3827a4 <__Stack_Size+0x3823a4>
    1ba0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ba4:	00170213 	andseq	r0, r7, r3, lsl r2
    1ba8:	00341400 	eorseq	r1, r4, r0, lsl #8
    1bac:	0b3a0803 	bleq	e83bc0 <__Stack_Size+0xe837c0>
    1bb0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1bb4:	00001702 	andeq	r1, r0, r2, lsl #14
    1bb8:	01110100 	tsteq	r1, r0, lsl #2
    1bbc:	0b130e25 	bleq	4c5458 <__Stack_Size+0x4c5058>
    1bc0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1bc4:	01111755 	tsteq	r1, r5, asr r7
    1bc8:	00001710 	andeq	r1, r0, r0, lsl r7
    1bcc:	0b002402 	bleq	abdc <__Stack_Size+0xa7dc>
    1bd0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1bd4:	0300000e 	movweq	r0, #14
    1bd8:	08030016 	stmdaeq	r3, {r1, r2, r4}
    1bdc:	0b3b0b3a 	bleq	ec48cc <__Stack_Size+0xec44cc>
    1be0:	00001349 	andeq	r1, r0, r9, asr #6
    1be4:	03001604 	movweq	r1, #1540	; 0x604
    1be8:	3b0b3a0e 	blcc	2d0428 <__Stack_Size+0x2d0028>
    1bec:	0013490b 	andseq	r4, r3, fp, lsl #18
    1bf0:	00350500 	eorseq	r0, r5, r0, lsl #10
    1bf4:	00001349 	andeq	r1, r0, r9, asr #6
    1bf8:	0b010406 	bleq	42c18 <__Stack_Size+0x42818>
    1bfc:	3b0b3a0b 	blcc	2d0430 <__Stack_Size+0x2d0030>
    1c00:	0013010b 	andseq	r0, r3, fp, lsl #2
    1c04:	00280700 	eoreq	r0, r8, r0, lsl #14
    1c08:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
    1c0c:	28080000 	stmdacs	r8, {}	; <UNPREDICTABLE>
    1c10:	1c080300 	stcne	3, cr0, [r8], {-0}
    1c14:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1c18:	0b0b0113 	bleq	2c206c <__Stack_Size+0x2c1c6c>
    1c1c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1c20:	00001301 	andeq	r1, r0, r1, lsl #6
    1c24:	03000d0a 	movweq	r0, #3338	; 0xd0a
    1c28:	3b0b3a08 	blcc	2d0450 <__Stack_Size+0x2d0050>
    1c2c:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
    1c30:	0b00000b 	bleq	1c64 <__Stack_Size+0x1864>
    1c34:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1c38:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1c3c:	0b381349 	bleq	e06968 <__Stack_Size+0xe06568>
    1c40:	160c0000 	strne	r0, [ip], -r0
    1c44:	3a0e0300 	bcc	38284c <__Stack_Size+0x38244c>
    1c48:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c4c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1c50:	0b0b0113 	bleq	2c20a4 <__Stack_Size+0x2c1ca4>
    1c54:	0b3b0b3a 	bleq	ec4944 <__Stack_Size+0xec4544>
    1c58:	00001301 	andeq	r1, r0, r1, lsl #6
    1c5c:	03000d0e 	movweq	r0, #3342	; 0xd0e
    1c60:	3b0b3a0e 	blcc	2d04a0 <__Stack_Size+0x2d00a0>
    1c64:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1c68:	0f00000b 	svceq	0x0000000b
    1c6c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1c70:	0b3a0e03 	bleq	e85484 <__Stack_Size+0xe85084>
    1c74:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    1c78:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1c7c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1c80:	00130119 	andseq	r0, r3, r9, lsl r1
    1c84:	00051000 	andeq	r1, r5, r0
    1c88:	0b3a0e03 	bleq	e8549c <__Stack_Size+0xe8509c>
    1c8c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1c90:	00001702 	andeq	r1, r0, r2, lsl #14
    1c94:	01828911 	orreq	r8, r2, r1, lsl r9
    1c98:	31011101 	tstcc	r1, r1, lsl #2
    1c9c:	00130113 	andseq	r0, r3, r3, lsl r1
    1ca0:	828a1200 	addhi	r1, sl, #0, 4
    1ca4:	18020001 	stmdane	r2, {r0}
    1ca8:	00184291 	mulseq	r8, r1, r2
    1cac:	82891300 	addhi	r1, r9, #0, 6
    1cb0:	01110101 	tsteq	r1, r1, lsl #2
    1cb4:	31194295 			; <UNDEFINED> instruction: 0x31194295
    1cb8:	00130113 	andseq	r0, r3, r3, lsl r1
    1cbc:	82891400 	addhi	r1, r9, #0, 8
    1cc0:	01110101 	tsteq	r1, r1, lsl #2
    1cc4:	31194295 			; <UNDEFINED> instruction: 0x31194295
    1cc8:	15000013 	strne	r0, [r0, #-19]
    1ccc:	0b0b000f 	bleq	2c1d10 <__Stack_Size+0x2c1910>
    1cd0:	00001349 	andeq	r1, r0, r9, asr #6
    1cd4:	03003416 	movweq	r3, #1046	; 0x416
    1cd8:	3b0b3a0e 	blcc	2d0518 <__Stack_Size+0x2d0118>
    1cdc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1ce0:	17000017 	smladne	r0, r7, r0, r0
    1ce4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1ce8:	0b3b0b3a 	bleq	ec49d8 <__Stack_Size+0xec45d8>
    1cec:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1cf0:	89180000 	ldmdbhi	r8, {}	; <UNPREDICTABLE>
    1cf4:	11010182 	smlabbne	r1, r2, r1, r0
    1cf8:	00133101 	andseq	r3, r3, r1, lsl #2
    1cfc:	00051900 	andeq	r1, r5, r0, lsl #18
    1d00:	0b3a0e03 	bleq	e85514 <__Stack_Size+0xe85114>
    1d04:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1d08:	00001802 	andeq	r1, r0, r2, lsl #16
    1d0c:	0300341a 	movweq	r3, #1050	; 0x41a
    1d10:	3b0b3a0e 	blcc	2d0550 <__Stack_Size+0x2d0150>
    1d14:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1d18:	1b000017 	blne	1d7c <__Stack_Size+0x197c>
    1d1c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1d20:	0b3a0e03 	bleq	e85534 <__Stack_Size+0xe85134>
    1d24:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    1d28:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1d2c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1d30:	00130119 	andseq	r0, r3, r9, lsl r1
    1d34:	00051c00 	andeq	r1, r5, r0, lsl #24
    1d38:	0b3a0e03 	bleq	e8554c <__Stack_Size+0xe8514c>
    1d3c:	1349053b 	movtne	r0, #38203	; 0x953b
    1d40:	00001802 	andeq	r1, r0, r2, lsl #16
    1d44:	0300051d 	movweq	r0, #1309	; 0x51d
    1d48:	3b0b3a0e 	blcc	2d0588 <__Stack_Size+0x2d0188>
    1d4c:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1d50:	1e000017 	mcrne	0, 0, r0, cr0, cr7, {0}
    1d54:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1d58:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1d5c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1d60:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    1d64:	03193f01 	tsteq	r9, #1, 30
    1d68:	3b0b3a0e 	blcc	2d05a8 <__Stack_Size+0x2d01a8>
    1d6c:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
    1d70:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1d74:	97184006 	ldrls	r4, [r8, -r6]
    1d78:	13011942 	movwne	r1, #6466	; 0x1942
    1d7c:	34200000 	strtcc	r0, [r0], #-0
    1d80:	3a0e0300 	bcc	382988 <__Stack_Size+0x382588>
    1d84:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d88:	21000013 	tstcs	r0, r3, lsl r0
    1d8c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1d90:	0b3a0e03 	bleq	e855a4 <__Stack_Size+0xe851a4>
    1d94:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    1d98:	1301193c 	movwne	r1, #6460	; 0x193c
    1d9c:	05220000 	streq	r0, [r2, #-0]!
    1da0:	00134900 	andseq	r4, r3, r0, lsl #18
    1da4:	11010000 	mrsne	r0, (UNDEF: 1)
    1da8:	11061000 	mrsne	r1, (UNDEF: 6)
    1dac:	03011201 	movweq	r1, #4609	; 0x1201
    1db0:	25081b08 	strcs	r1, [r8, #-2824]	; 0xb08
    1db4:	00051308 	andeq	r1, r5, r8, lsl #6
    1db8:	11010000 	mrsne	r0, (UNDEF: 1)
    1dbc:	130e2501 	movwne	r2, #58625	; 0xe501
    1dc0:	1b0e030b 	blne	3829f4 <__Stack_Size+0x3825f4>
    1dc4:	1117550e 	tstne	r7, lr, lsl #10
    1dc8:	00171001 	andseq	r1, r7, r1
    1dcc:	012e0200 	teqeq	lr, r0, lsl #4
    1dd0:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1dd4:	0b3b0b3a 	bleq	ec4ac4 <__Stack_Size+0xec46c4>
    1dd8:	01111927 	tsteq	r1, r7, lsr #18
    1ddc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1de0:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1de4:	03000013 	movweq	r0, #19
    1de8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1dec:	0b3b0b3a 	bleq	ec4adc <__Stack_Size+0xec46dc>
    1df0:	00001349 	andeq	r1, r0, r9, asr #6
    1df4:	03003404 	movweq	r3, #1028	; 0x404
    1df8:	3b0b3a0e 	blcc	2d0638 <__Stack_Size+0x2d0238>
    1dfc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1e00:	05000017 	streq	r0, [r0, #-23]
    1e04:	00018289 	andeq	r8, r1, r9, lsl #5
    1e08:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1e0c:	0f060000 	svceq	0x00060000
    1e10:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1e14:	07000013 	smladeq	r0, r3, r0, r0
    1e18:	0b0b0024 	bleq	2c1eb0 <__Stack_Size+0x2c1ab0>
    1e1c:	0e030b3e 	vmoveq.16	d3[0], r0
    1e20:	34080000 	strcc	r0, [r8], #-0
    1e24:	3a0e0300 	bcc	382a2c <__Stack_Size+0x38262c>
    1e28:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e2c:	3c193f13 	ldccc	15, cr3, [r9], {19}
    1e30:	09000019 	stmdbeq	r0, {r0, r3, r4}
    1e34:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1e38:	0b3b0b3a 	bleq	ec4b28 <__Stack_Size+0xec4728>
    1e3c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1e40:	010a0000 	mrseq	r0, (UNDEF: 10)
    1e44:	01134901 	tsteq	r3, r1, lsl #18
    1e48:	0b000013 	bleq	1e9c <__Stack_Size+0x1a9c>
    1e4c:	13490021 	movtne	r0, #36897	; 0x9021
    1e50:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1e54:	2700150c 	strcs	r1, [r0, -ip, lsl #10]
    1e58:	0d000019 	stceq	0, cr0, [r0, #-100]	; 0xffffff9c
    1e5c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1e60:	0b3b0b3a 	bleq	ec4b50 <__Stack_Size+0xec4750>
    1e64:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1e68:	00001802 	andeq	r1, r0, r2, lsl #16
    1e6c:	4900260e 	stmdbmi	r0, {r1, r2, r3, r9, sl, sp}
    1e70:	0f000013 	svceq	0x00000013
    1e74:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    1e78:	0b3a0e03 	bleq	e8568c <__Stack_Size+0xe8528c>
    1e7c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    1e80:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    1e84:	24100000 	ldrcs	r0, [r0], #-0
    1e88:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1e8c:	0008030b 	andeq	r0, r8, fp, lsl #6
    1e90:	11010000 	mrsne	r0, (UNDEF: 1)
    1e94:	130e2501 	movwne	r2, #58625	; 0xe501
    1e98:	1b0e030b 	blne	382acc <__Stack_Size+0x3826cc>
    1e9c:	1117550e 	tstne	r7, lr, lsl #10
    1ea0:	00171001 	andseq	r1, r7, r1
    1ea4:	00240200 	eoreq	r0, r4, r0, lsl #4
    1ea8:	0b3e0b0b 	bleq	f84adc <__Stack_Size+0xf846dc>
    1eac:	00000e03 	andeq	r0, r0, r3, lsl #28
    1eb0:	03001603 	movweq	r1, #1539	; 0x603
    1eb4:	3b0b3a08 	blcc	2d06dc <__Stack_Size+0x2d02dc>
    1eb8:	0013490b 	andseq	r4, r3, fp, lsl #18
    1ebc:	000f0400 	andeq	r0, pc, r0, lsl #8
    1ec0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1ec4:	04050000 	streq	r0, [r5], #-0
    1ec8:	0b0e0301 	bleq	382ad4 <__Stack_Size+0x3826d4>
    1ecc:	3b0b3a0b 	blcc	2d0700 <__Stack_Size+0x2d0300>
    1ed0:	0013010b 	andseq	r0, r3, fp, lsl #2
    1ed4:	00280600 	eoreq	r0, r8, r0, lsl #12
    1ed8:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
    1edc:	16070000 	strne	r0, [r7], -r0
    1ee0:	3a0e0300 	bcc	382ae8 <__Stack_Size+0x3826e8>
    1ee4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ee8:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1eec:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1ef0:	0b3a0b0b 	bleq	e84b24 <__Stack_Size+0xe84724>
    1ef4:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1ef8:	0d090000 	stceq	0, cr0, [r9, #-0]
    1efc:	3a0e0300 	bcc	382b04 <__Stack_Size+0x382704>
    1f00:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f04:	000b3813 	andeq	r3, fp, r3, lsl r8
    1f08:	01150a00 	tsteq	r5, r0, lsl #20
    1f0c:	13491927 	movtne	r1, #39207	; 0x9927
    1f10:	00001301 	andeq	r1, r0, r1, lsl #6
    1f14:	4900050b 	stmdbmi	r0, {r0, r1, r3, r8, sl}
    1f18:	0c000013 	stceq	0, cr0, [r0], {19}
    1f1c:	08030113 	stmdaeq	r3, {r0, r1, r4, r8}
    1f20:	0b3a0b0b 	bleq	e84b54 <__Stack_Size+0xe84754>
    1f24:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1f28:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    1f2c:	3a080300 	bcc	202b34 <__Stack_Size+0x202734>
    1f30:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f34:	000b3813 	andeq	r3, fp, r3, lsl r8
    1f38:	01170e00 	tsteq	r7, r0, lsl #28
    1f3c:	0b3a0b0b 	bleq	e84b70 <__Stack_Size+0xe84770>
    1f40:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1f44:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 1f4c <__Stack_Size+0x1b4c>
    1f48:	3a080300 	bcc	202b50 <__Stack_Size+0x202750>
    1f4c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f50:	10000013 	andne	r0, r0, r3, lsl r0
    1f54:	19270015 	stmdbne	r7!, {r0, r2, r4}
    1f58:	0f110000 	svceq	0x00110000
    1f5c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1f60:	002e1200 	eoreq	r1, lr, r0, lsl #4
    1f64:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1f68:	0b3b0b3a 	bleq	ec4c58 <__Stack_Size+0xec4858>
    1f6c:	01111927 	tsteq	r1, r7, lsr #18
    1f70:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1f74:	34130000 	ldrcc	r0, [r3], #-0
    1f78:	3a0e0300 	bcc	382b80 <__Stack_Size+0x382780>
    1f7c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f80:	3c193f13 	ldccc	15, cr3, [r9], {19}
    1f84:	14000019 	strne	r0, [r0], #-25
    1f88:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1f8c:	0b3b0b3a 	bleq	ec4c7c <__Stack_Size+0xec487c>
    1f90:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1f94:	00001802 	andeq	r1, r0, r2, lsl #16
    1f98:	01110100 	tsteq	r1, r0, lsl #2
    1f9c:	0b130e25 	bleq	4c5838 <__Stack_Size+0x4c5438>
    1fa0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1fa4:	01111755 	tsteq	r1, r5, asr r7
    1fa8:	00001710 	andeq	r1, r0, r0, lsl r7
    1fac:	0b002402 	bleq	afbc <__Stack_Size+0xabbc>
    1fb0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1fb4:	0300000e 	movweq	r0, #14
    1fb8:	08030016 	stmdaeq	r3, {r1, r2, r4}
    1fbc:	0b3b0b3a 	bleq	ec4cac <__Stack_Size+0xec48ac>
    1fc0:	00001349 	andeq	r1, r0, r9, asr #6
    1fc4:	0b010404 	bleq	42fdc <__Stack_Size+0x42bdc>
    1fc8:	3b0b3a0b 	blcc	2d07fc <__Stack_Size+0x2d03fc>
    1fcc:	0013010b 	andseq	r0, r3, fp, lsl #2
    1fd0:	00280500 	eoreq	r0, r8, r0, lsl #10
    1fd4:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
    1fd8:	16060000 	strne	r0, [r6], -r0
    1fdc:	3a0e0300 	bcc	382be4 <__Stack_Size+0x3827e4>
    1fe0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1fe4:	07000013 	smladeq	r0, r3, r0, r0
    1fe8:	0e030104 	adfeqs	f0, f3, f4
    1fec:	0b3a0b0b 	bleq	e84c20 <__Stack_Size+0xe84820>
    1ff0:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1ff4:	13080000 	movwne	r0, #32768	; 0x8000
    1ff8:	0b0e0301 	bleq	382c04 <__Stack_Size+0x382804>
    1ffc:	3b0b3a0b 	blcc	2d0830 <__Stack_Size+0x2d0430>
    2000:	0013010b 	andseq	r0, r3, fp, lsl #2
    2004:	000d0900 	andeq	r0, sp, r0, lsl #18
    2008:	0b3a0e03 	bleq	e8581c <__Stack_Size+0xe8541c>
    200c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    2010:	00000b38 	andeq	r0, r0, r8, lsr fp
    2014:	0b000f0a 	bleq	5c44 <__Stack_Size+0x5844>
    2018:	0013490b 	andseq	r4, r3, fp, lsl #18
    201c:	01150b00 	tsteq	r5, r0, lsl #22
    2020:	13491927 	movtne	r1, #39207	; 0x9927
    2024:	00001301 	andeq	r1, r0, r1, lsl #6
    2028:	4900050c 	stmdbmi	r0, {r2, r3, r8, sl}
    202c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    2030:	08030113 	stmdaeq	r3, {r0, r1, r4, r8}
    2034:	0b3a0b0b 	bleq	e84c68 <__Stack_Size+0xe84868>
    2038:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    203c:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    2040:	3a080300 	bcc	202c48 <__Stack_Size+0x202848>
    2044:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2048:	000b3813 	andeq	r3, fp, r3, lsl r8
    204c:	01170f00 	tsteq	r7, r0, lsl #30
    2050:	0b3a0b0b 	bleq	e84c84 <__Stack_Size+0xe84884>
    2054:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    2058:	0d100000 	ldceq	0, cr0, [r0, #-0]
    205c:	3a080300 	bcc	202c64 <__Stack_Size+0x202864>
    2060:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2064:	11000013 	tstne	r0, r3, lsl r0
    2068:	19270015 	stmdbne	r7!, {r0, r2, r4}
    206c:	0f120000 	svceq	0x00120000
    2070:	000b0b00 	andeq	r0, fp, r0, lsl #22
    2074:	012e1300 	teqeq	lr, r0, lsl #6
    2078:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    207c:	0b3b0b3a 	bleq	ec4d6c <__Stack_Size+0xec496c>
    2080:	13491927 	movtne	r1, #39207	; 0x9927
    2084:	13010b20 	movwne	r0, #6944	; 0x1b20
    2088:	34140000 	ldrcc	r0, [r4], #-0
    208c:	3a080300 	bcc	202c94 <__Stack_Size+0x202894>
    2090:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2094:	15000013 	strne	r0, [r0, #-19]
    2098:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    209c:	0b3a0e03 	bleq	e858b0 <__Stack_Size+0xe854b0>
    20a0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    20a4:	01111349 	tsteq	r1, r9, asr #6
    20a8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    20ac:	01194296 			; <UNDEFINED> instruction: 0x01194296
    20b0:	16000013 			; <UNDEFINED> instruction: 0x16000013
    20b4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    20b8:	0b3b0b3a 	bleq	ec4da8 <__Stack_Size+0xec49a8>
    20bc:	17021349 	strne	r1, [r2, -r9, asr #6]
    20c0:	0b170000 	bleq	5c20c8 <__Stack_Size+0x5c1cc8>
    20c4:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    20c8:	00130106 	andseq	r0, r3, r6, lsl #2
    20cc:	00341800 	eorseq	r1, r4, r0, lsl #16
    20d0:	0b3a0e03 	bleq	e858e4 <__Stack_Size+0xe854e4>
    20d4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    20d8:	00001702 	andeq	r1, r0, r2, lsl #14
    20dc:	11010b19 	tstne	r1, r9, lsl fp
    20e0:	00061201 	andeq	r1, r6, r1, lsl #4
    20e4:	012e1a00 	teqeq	lr, r0, lsl #20
    20e8:	0b3a0e03 	bleq	e858fc <__Stack_Size+0xe854fc>
    20ec:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    20f0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    20f4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    20f8:	00130119 	andseq	r0, r3, r9, lsl r1
    20fc:	00341b00 	eorseq	r1, r4, r0, lsl #22
    2100:	0b3a0e03 	bleq	e85914 <__Stack_Size+0xe85514>
    2104:	1349053b 	movtne	r0, #38203	; 0x953b
    2108:	00001702 	andeq	r1, r0, r2, lsl #14
    210c:	03000a1c 	movweq	r0, #2588	; 0xa1c
    2110:	3b0b3a0e 	blcc	2d0950 <__Stack_Size+0x2d0550>
    2114:	00011105 	andeq	r1, r1, r5, lsl #2
    2118:	82891d00 	addhi	r1, r9, #0, 26
    211c:	01110101 	tsteq	r1, r1, lsl #2
    2120:	00001301 	andeq	r1, r0, r1, lsl #6
    2124:	01828a1e 	orreq	r8, r2, lr, lsl sl
    2128:	91180200 	tstls	r8, r0, lsl #4
    212c:	00001842 	andeq	r1, r0, r2, asr #16
    2130:	0182891f 	orreq	r8, r2, pc, lsl r9
    2134:	31011101 	tstcc	r1, r1, lsl #2
    2138:	00130113 	andseq	r0, r3, r3, lsl r1
    213c:	82892000 	addhi	r2, r9, #0
    2140:	01110101 	tsteq	r1, r1, lsl #2
    2144:	00001331 	andeq	r1, r0, r1, lsr r3
    2148:	3f002e21 	svccc	0x00002e21
    214c:	3a0e0319 	bcc	382db8 <__Stack_Size+0x3829b8>
    2150:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    2154:	11134919 	tstne	r3, r9, lsl r9
    2158:	40061201 	andmi	r1, r6, r1, lsl #4
    215c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2160:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
    2164:	11133101 	tstne	r3, r1, lsl #2
    2168:	40061201 	andmi	r1, r6, r1, lsl #4
    216c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2170:	00001301 	andeq	r1, r0, r1, lsl #6
    2174:	31003423 	tstcc	r0, r3, lsr #8
    2178:	00170213 	andseq	r0, r7, r3, lsl r2
    217c:	00342400 	eorseq	r2, r4, r0, lsl #8
    2180:	00001331 	andeq	r1, r0, r1, lsr r3
    2184:	03003425 	movweq	r3, #1061	; 0x425
    2188:	3b0b3a0e 	blcc	2d09c8 <__Stack_Size+0x2d05c8>
    218c:	00134905 	andseq	r4, r3, r5, lsl #18
    2190:	00342600 	eorseq	r2, r4, r0, lsl #12
    2194:	0b3a0803 	bleq	e841a8 <__Stack_Size+0xe83da8>
    2198:	1349053b 	movtne	r0, #38203	; 0x953b
    219c:	00001702 	andeq	r1, r0, r2, lsl #14
    21a0:	01828927 	orreq	r8, r2, r7, lsr #18
    21a4:	31011100 	mrscc	r1, (UNDEF: 17)
    21a8:	28000013 	stmdacs	r0, {r0, r1, r4}
    21ac:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    21b0:	0b3a0e03 	bleq	e859c4 <__Stack_Size+0xe855c4>
    21b4:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    21b8:	01111349 	tsteq	r1, r9, asr #6
    21bc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    21c0:	01194296 			; <UNDEFINED> instruction: 0x01194296
    21c4:	29000013 	stmdbcs	r0, {r0, r1, r4}
    21c8:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
    21cc:	00001301 	andeq	r1, r0, r1, lsl #6
    21d0:	55010b2a 	strpl	r0, [r1, #-2858]	; 0xb2a
    21d4:	2b000017 	blcs	2238 <__Stack_Size+0x1e38>
    21d8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    21dc:	0b3a0e03 	bleq	e859f0 <__Stack_Size+0xe855f0>
    21e0:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    21e4:	01111349 	tsteq	r1, r9, asr #6
    21e8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    21ec:	00194296 	mulseq	r9, r6, r2
    21f0:	012e2c00 	teqeq	lr, r0, lsl #24
    21f4:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    21f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    21fc:	13491927 	movtne	r1, #39207	; 0x9927
    2200:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2204:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2208:	00130119 	andseq	r0, r3, r9, lsl r1
    220c:	00052d00 	andeq	r2, r5, r0, lsl #26
    2210:	0b3a0e03 	bleq	e85a24 <__Stack_Size+0xe85624>
    2214:	1349053b 	movtne	r0, #38203	; 0x953b
    2218:	00001702 	andeq	r1, r0, r2, lsl #14
    221c:	0300052e 	movweq	r0, #1326	; 0x52e
    2220:	3b0b3a0e 	blcc	2d0a60 <__Stack_Size+0x2d0660>
    2224:	02134905 	andseq	r4, r3, #81920	; 0x14000
    2228:	2f000018 	svccs	0x00000018
    222c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2230:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    2234:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2238:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    223c:	3a0e0301 	bcc	382e48 <__Stack_Size+0x382a48>
    2240:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    2244:	010b2019 	tsteq	fp, r9, lsl r0
    2248:	31000013 	tstcc	r0, r3, lsl r0
    224c:	0e03000a 	cdpeq	0, 0, cr0, cr3, cr10, {0}
    2250:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    2254:	0b320000 	bleq	c8225c <__Stack_Size+0xc81e5c>
    2258:	00130101 	andseq	r0, r3, r1, lsl #2
    225c:	010b3300 	mrseq	r3, (UNDEF: 59)
    2260:	35340000 	ldrcc	r0, [r4, #-0]!
    2264:	00134900 	andseq	r4, r3, r0, lsl #18
    2268:	01173500 	tsteq	r7, r0, lsl #10
    226c:	0b3a0b0b 	bleq	e84ea0 <__Stack_Size+0xe84aa0>
    2270:	1301053b 	movwne	r0, #5435	; 0x153b
    2274:	0d360000 	ldceq	0, cr0, [r6, #-0]
    2278:	3a080300 	bcc	202e80 <__Stack_Size+0x202a80>
    227c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2280:	37000013 	smladcc	r0, r3, r0, r0
    2284:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2288:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    228c:	0b1c1349 	bleq	706fb8 <__Stack_Size+0x706bb8>
    2290:	1d380000 	ldcne	0, cr0, [r8, #-0]
    2294:	11133101 	tstne	r3, r1, lsl #2
    2298:	58061201 	stmdapl	r6, {r0, r9, ip}
    229c:	0105590b 	tsteq	r5, fp, lsl #18
    22a0:	39000013 	stmdbcc	r0, {r0, r1, r4}
    22a4:	1331000a 	teqne	r1, #10
    22a8:	00000111 	andeq	r0, r0, r1, lsl r1
    22ac:	31011d3a 	tstcc	r1, sl, lsr sp
    22b0:	55015213 	strpl	r5, [r1, #-531]	; 0x213
    22b4:	590b5817 	stmdbpl	fp, {r0, r1, r2, r4, fp, ip, lr}
    22b8:	00130105 	andseq	r0, r3, r5, lsl #2
    22bc:	00343b00 	eorseq	r3, r4, r0, lsl #22
    22c0:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
    22c4:	893c0000 	ldmdbhi	ip!, {}	; <UNPREDICTABLE>
    22c8:	11010182 	smlabbne	r1, r2, r1, r0
    22cc:	3d000001 	stccc	0, cr0, [r0, #-4]
    22d0:	00018289 	andeq	r8, r1, r9, lsl #5
    22d4:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
    22d8:	00133119 	andseq	r3, r3, r9, lsl r1
    22dc:	012e3e00 	teqeq	lr, r0, lsl #28
    22e0:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    22e4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    22e8:	01111927 	tsteq	r1, r7, lsr #18
    22ec:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    22f0:	01194297 			; <UNDEFINED> instruction: 0x01194297
    22f4:	3f000013 	svccc	0x00000013
    22f8:	08030005 	stmdaeq	r3, {r0, r2}
    22fc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    2300:	17021349 	strne	r1, [r2, -r9, asr #6]
    2304:	34400000 	strbcc	r0, [r0], #-0
    2308:	3a080300 	bcc	202f10 <__Stack_Size+0x202b10>
    230c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2310:	00180213 	andseq	r0, r8, r3, lsl r2
    2314:	002e4100 	eoreq	r4, lr, r0, lsl #2
    2318:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    231c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    2320:	01111927 	tsteq	r1, r7, lsr #18
    2324:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2328:	00194297 	mulseq	r9, r7, r2
    232c:	00344200 	eorseq	r4, r4, r0, lsl #4
    2330:	0b3a0e03 	bleq	e85b44 <__Stack_Size+0xe85744>
    2334:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    2338:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    233c:	34430000 	strbcc	r0, [r3], #-0
    2340:	3a0e0300 	bcc	382f48 <__Stack_Size+0x382b48>
    2344:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2348:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    234c:	44000018 	strmi	r0, [r0], #-24
    2350:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2354:	0b3a0e03 	bleq	e85b68 <__Stack_Size+0xe85768>
    2358:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    235c:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    2360:	00001301 	andeq	r1, r0, r1, lsl #6
    2364:	3f012e45 	svccc	0x00012e45
    2368:	3a0e0319 	bcc	382fd4 <__Stack_Size+0x382bd4>
    236c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    2370:	01193c19 	tsteq	r9, r9, lsl ip
    2374:	46000013 			; <UNDEFINED> instruction: 0x46000013
    2378:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    237c:	0b3a0e03 	bleq	e85b90 <__Stack_Size+0xe85790>
    2380:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    2384:	1301193c 	movwne	r1, #6460	; 0x193c
    2388:	2e470000 	cdpcs	0, 4, cr0, cr7, cr0, {0}
    238c:	03193f01 	tsteq	r9, #1, 30
    2390:	3b0b3a0e 	blcc	2d0bd0 <__Stack_Size+0x2d07d0>
    2394:	3c19270b 	ldccc	7, cr2, [r9], {11}
    2398:	00000019 	andeq	r0, r0, r9, lsl r0
    239c:	25011101 	strcs	r1, [r1, #-257]	; 0x101
    23a0:	030b130e 	movweq	r1, #45838	; 0xb30e
    23a4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
    23a8:	10011117 	andne	r1, r1, r7, lsl r1
    23ac:	02000017 	andeq	r0, r0, #23
    23b0:	0b0b0024 	bleq	2c2448 <__Stack_Size+0x2c2048>
    23b4:	0e030b3e 	vmoveq.16	d3[0], r0
    23b8:	16030000 	strne	r0, [r3], -r0
    23bc:	3a080300 	bcc	202fc4 <__Stack_Size+0x202bc4>
    23c0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    23c4:	04000013 	streq	r0, [r0], #-19
    23c8:	0b0b000f 	bleq	2c240c <__Stack_Size+0x2c200c>
    23cc:	00001349 	andeq	r1, r0, r9, asr #6
    23d0:	3f012e05 	svccc	0x00012e05
    23d4:	3a0e0319 	bcc	383040 <__Stack_Size+0x382c40>
    23d8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    23dc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    23e0:	97184006 	ldrls	r4, [r8, -r6]
    23e4:	13011942 	movwne	r1, #6466	; 0x1942
    23e8:	05060000 	streq	r0, [r6, #-0]
    23ec:	3a0e0300 	bcc	382ff4 <__Stack_Size+0x382bf4>
    23f0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    23f4:	00170213 	andseq	r0, r7, r3, lsl r2
    23f8:	00340700 	eorseq	r0, r4, r0, lsl #14
    23fc:	0b3a0803 	bleq	e84410 <__Stack_Size+0xe84010>
    2400:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    2404:	00001802 	andeq	r1, r0, r2, lsl #16
    2408:	03003408 	movweq	r3, #1032	; 0x408
    240c:	3b0b3a08 	blcc	2d0c34 <__Stack_Size+0x2d0834>
    2410:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2414:	09000017 	stmdbeq	r0, {r0, r1, r2, r4}
    2418:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    241c:	0b3b0b3a 	bleq	ec510c <__Stack_Size+0xec4d0c>
    2420:	17021349 	strne	r1, [r2, -r9, asr #6]
    2424:	01000000 	mrseq	r0, (UNDEF: 0)
    2428:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    242c:	0e030b13 	vmoveq.32	d3[0], r0
    2430:	17550e1b 	smmlane	r5, fp, lr, r0
    2434:	17100111 			; <UNDEFINED> instruction: 0x17100111
    2438:	24020000 	strcs	r0, [r2], #-0
    243c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2440:	000e030b 	andeq	r0, lr, fp, lsl #6
    2444:	00160300 	andseq	r0, r6, r0, lsl #6
    2448:	0b3a0803 	bleq	e8445c <__Stack_Size+0xe8405c>
    244c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    2450:	04040000 	streq	r0, [r4], #-0
    2454:	0b0e0301 	bleq	383060 <__Stack_Size+0x382c60>
    2458:	3b0b3a0b 	blcc	2d0c8c <__Stack_Size+0x2d088c>
    245c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2460:	00280500 	eoreq	r0, r8, r0, lsl #10
    2464:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
    2468:	16060000 	strne	r0, [r6], -r0
    246c:	3a0e0300 	bcc	383074 <__Stack_Size+0x382c74>
    2470:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2474:	07000013 	smladeq	r0, r3, r0, r0
    2478:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    247c:	0b3a0e03 	bleq	e85c90 <__Stack_Size+0xe85890>
    2480:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    2484:	0b201349 	bleq	8071b0 <__Stack_Size+0x806db0>
    2488:	00001301 	andeq	r1, r0, r1, lsl #6
    248c:	03000508 	movweq	r0, #1288	; 0x508
    2490:	3b0b3a0e 	blcc	2d0cd0 <__Stack_Size+0x2d08d0>
    2494:	0013490b 	andseq	r4, r3, fp, lsl #18
    2498:	012e0900 	teqeq	lr, r0, lsl #18
    249c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    24a0:	0b3b0b3a 	bleq	ec5190 <__Stack_Size+0xec4d90>
    24a4:	01111927 	tsteq	r1, r7, lsr #18
    24a8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    24ac:	01194297 			; <UNDEFINED> instruction: 0x01194297
    24b0:	0a000013 	beq	2504 <__Stack_Size+0x2104>
    24b4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    24b8:	0b3b0b3a 	bleq	ec51a8 <__Stack_Size+0xec4da8>
    24bc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    24c0:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
    24c4:	03193f00 	tsteq	r9, #0, 30
    24c8:	3b0b3a0e 	blcc	2d0d08 <__Stack_Size+0x2d0908>
    24cc:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    24d0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    24d4:	97184006 	ldrls	r4, [r8, -r6]
    24d8:	00001942 	andeq	r1, r0, r2, asr #18
    24dc:	0300050c 	movweq	r0, #1292	; 0x50c
    24e0:	3b0b3a0e 	blcc	2d0d20 <__Stack_Size+0x2d0920>
    24e4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    24e8:	0d000017 	stceq	0, cr0, [r0, #-92]	; 0xffffffa4
    24ec:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    24f0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    24f4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    24f8:	00130119 	andseq	r0, r3, r9, lsl r1
    24fc:	00050e00 	andeq	r0, r5, r0, lsl #28
    2500:	17021331 	smladxne	r2, r1, r3, r1
    2504:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    2508:	03193f01 	tsteq	r9, #1, 30
    250c:	3b0b3a0e 	blcc	2d0d4c <__Stack_Size+0x2d094c>
    2510:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    2514:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2518:	97184006 	ldrls	r4, [r8, -r6]
    251c:	13011942 	movwne	r1, #6466	; 0x1942
    2520:	0b100000 	bleq	402528 <__Stack_Size+0x402128>
    2524:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    2528:	11000006 	tstne	r0, r6
    252c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2530:	0b3b0b3a 	bleq	ec5220 <__Stack_Size+0xec4e20>
    2534:	17021349 	strne	r1, [r2, -r9, asr #6]
    2538:	34120000 	ldrcc	r0, [r2], #-0
    253c:	3a0e0300 	bcc	383144 <__Stack_Size+0x382d44>
    2540:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2544:	13000013 	movwne	r0, #19
    2548:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    254c:	17550152 			; <UNDEFINED> instruction: 0x17550152
    2550:	0b590b58 	bleq	16452b8 <__Stack_Size+0x1644eb8>
    2554:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
    2558:	03193f01 	tsteq	r9, #1, 30
    255c:	3b0b3a0e 	blcc	2d0d9c <__Stack_Size+0x2d099c>
    2560:	11192705 	tstne	r9, r5, lsl #14
    2564:	40061201 	andmi	r1, r6, r1, lsl #4
    2568:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    256c:	00001301 	andeq	r1, r0, r1, lsl #6
    2570:	03000515 	movweq	r0, #1301	; 0x515
    2574:	3b0b3a0e 	blcc	2d0db4 <__Stack_Size+0x2d09b4>
    2578:	02134905 	andseq	r4, r3, #81920	; 0x14000
    257c:	16000017 			; <UNDEFINED> instruction: 0x16000017
    2580:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2584:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    2588:	17021349 	strne	r1, [r2, -r9, asr #6]
    258c:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
    2590:	03193f01 	tsteq	r9, #1, 30
    2594:	3b0b3a0e 	blcc	2d0dd4 <__Stack_Size+0x2d09d4>
    2598:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
    259c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    25a0:	97184006 	ldrls	r4, [r8, -r6]
    25a4:	13011942 	movwne	r1, #6466	; 0x1942
    25a8:	05180000 	ldreq	r0, [r8, #-0]
    25ac:	3a0e0300 	bcc	3831b4 <__Stack_Size+0x382db4>
    25b0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    25b4:	00180213 	andseq	r0, r8, r3, lsl r2
    25b8:	000f1900 	andeq	r1, pc, r0, lsl #18
    25bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    25c0:	341a0000 	ldrcc	r0, [sl], #-0
    25c4:	3a0e0300 	bcc	3831cc <__Stack_Size+0x382dcc>
    25c8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    25cc:	00180213 	andseq	r0, r8, r3, lsl r2
    25d0:	010b1b00 	tsteq	fp, r0, lsl #22
    25d4:	00001755 	andeq	r1, r0, r5, asr r7
    25d8:	11010b1c 	tstne	r1, ip, lsl fp
    25dc:	01061201 	tsteq	r6, r1, lsl #4
    25e0:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    25e4:	08030005 	stmdaeq	r3, {r0, r2}
    25e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    25ec:	17021349 	strne	r1, [r2, -r9, asr #6]
    25f0:	051e0000 	ldreq	r0, [lr, #-0]
    25f4:	3a080300 	bcc	2031fc <__Stack_Size+0x202dfc>
    25f8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    25fc:	00180213 	andseq	r0, r8, r3, lsl r2
    2600:	012e1f00 	teqeq	lr, r0, lsl #30
    2604:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    2608:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    260c:	13491927 	movtne	r1, #39207	; 0x9927
    2610:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2614:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2618:	00000019 	andeq	r0, r0, r9, lsl r0
    261c:	25011101 	strcs	r1, [r1, #-257]	; 0x101
    2620:	030b130e 	movweq	r1, #45838	; 0xb30e
    2624:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
    2628:	10011117 	andne	r1, r1, r7, lsl r1
    262c:	02000017 	andeq	r0, r0, #23
    2630:	0b0b0024 	bleq	2c26c8 <__Stack_Size+0x2c22c8>
    2634:	0e030b3e 	vmoveq.16	d3[0], r0
    2638:	16030000 	strne	r0, [r3], -r0
    263c:	3a080300 	bcc	203244 <__Stack_Size+0x202e44>
    2640:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2644:	04000013 	streq	r0, [r0], #-19
    2648:	0b0b000f 	bleq	2c268c <__Stack_Size+0x2c228c>
    264c:	00001349 	andeq	r1, r0, r9, asr #6
    2650:	3f002e05 	svccc	0x00002e05
    2654:	3a0e0319 	bcc	3832c0 <__Stack_Size+0x382ec0>
    2658:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    265c:	11134919 	tstne	r3, r9, lsl r9
    2660:	40061201 	andmi	r1, r6, r1, lsl #4
    2664:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2668:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
    266c:	03193f01 	tsteq	r9, #1, 30
    2670:	3b0b3a0e 	blcc	2d0eb0 <__Stack_Size+0x2d0ab0>
    2674:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    2678:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    267c:	97184006 	ldrls	r4, [r8, -r6]
    2680:	13011942 	movwne	r1, #6466	; 0x1942
    2684:	05070000 	streq	r0, [r7, #-0]
    2688:	3a0e0300 	bcc	383290 <__Stack_Size+0x382e90>
    268c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2690:	00170213 	andseq	r0, r7, r3, lsl r2
    2694:	00340800 	eorseq	r0, r4, r0, lsl #16
    2698:	0b3a0e03 	bleq	e85eac <__Stack_Size+0xe85aac>
    269c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    26a0:	00001702 	andeq	r1, r0, r2, lsl #14
    26a4:	01828909 	orreq	r8, r2, r9, lsl #18
    26a8:	31011101 	tstcc	r1, r1, lsl #2
    26ac:	00130113 	andseq	r0, r3, r3, lsl r1
    26b0:	828a0a00 	addhi	r0, sl, #0, 20
    26b4:	18020001 	stmdane	r2, {r0}
    26b8:	00184291 	mulseq	r8, r1, r2
    26bc:	82890b00 	addhi	r0, r9, #0, 22
    26c0:	01110101 	tsteq	r1, r1, lsl #2
    26c4:	00001331 	andeq	r1, r0, r1, lsr r3
    26c8:	0300340c 	movweq	r3, #1036	; 0x40c
    26cc:	3b0b3a0e 	blcc	2d0f0c <__Stack_Size+0x2d0b0c>
    26d0:	3f13490b 	svccc	0x0013490b
    26d4:	00193c19 	andseq	r3, r9, r9, lsl ip
    26d8:	012e0d00 	teqeq	lr, r0, lsl #26
    26dc:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    26e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    26e4:	13491927 	movtne	r1, #39207	; 0x9927
    26e8:	1301193c 	movwne	r1, #6460	; 0x193c
    26ec:	050e0000 	streq	r0, [lr, #-0]
    26f0:	00134900 	andseq	r4, r3, r0, lsl #18
    26f4:	012e0f00 	teqeq	lr, r0, lsl #30
    26f8:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    26fc:	0b3b0b3a 	bleq	ec53ec <__Stack_Size+0xec4fec>
    2700:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
    2704:	01000000 	mrseq	r0, (UNDEF: 0)
    2708:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    270c:	0e030b13 	vmoveq.32	d3[0], r0
    2710:	17550e1b 	smmlane	r5, fp, lr, r0
    2714:	17100111 			; <UNDEFINED> instruction: 0x17100111
    2718:	24020000 	strcs	r0, [r2], #-0
    271c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2720:	000e030b 	andeq	r0, lr, fp, lsl #6
    2724:	00160300 	andseq	r0, r6, r0, lsl #6
    2728:	0b3a0803 	bleq	e8473c <__Stack_Size+0xe8433c>
    272c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    2730:	15040000 	strne	r0, [r4, #-0]
    2734:	00192700 	andseq	r2, r9, r0, lsl #14
    2738:	000f0500 	andeq	r0, pc, r0, lsl #10
    273c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2740:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
    2744:	03193f01 	tsteq	r9, #1, 30
    2748:	3b0b3a0e 	blcc	2d0f88 <__Stack_Size+0x2d0b88>
    274c:	1119270b 	tstne	r9, fp, lsl #14
    2750:	40061201 	andmi	r1, r6, r1, lsl #4
    2754:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2758:	00001301 	andeq	r1, r0, r1, lsl #6
    275c:	03003407 	movweq	r3, #1031	; 0x407
    2760:	3b0b3a0e 	blcc	2d0fa0 <__Stack_Size+0x2d0ba0>
    2764:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2768:	08000018 	stmdaeq	r0, {r3, r4}
    276c:	0111010b 	tsteq	r1, fp, lsl #2
    2770:	13010612 	movwne	r0, #5650	; 0x1612
    2774:	34090000 	strcc	r0, [r9], #-0
    2778:	3a0e0300 	bcc	383380 <__Stack_Size+0x382f80>
    277c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2780:	00170213 	andseq	r0, r7, r3, lsl r2
    2784:	82890a00 	addhi	r0, r9, #0, 20
    2788:	01110001 	tsteq	r1, r1
    278c:	00001331 	andeq	r1, r0, r1, lsr r3
    2790:	4900350b 	stmdbmi	r0, {r0, r1, r3, r8, sl, ip, sp}
    2794:	0c000013 	stceq	0, cr0, [r0], {19}
    2798:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    279c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    27a0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    27a4:	0000193c 	andeq	r1, r0, ip, lsr r9
    27a8:	0300340d 	movweq	r3, #1037	; 0x40d
    27ac:	3b0b3a0e 	blcc	2d0fec <__Stack_Size+0x2d0bec>
    27b0:	3f13490b 	svccc	0x0013490b
    27b4:	00180219 	andseq	r0, r8, r9, lsl r2
    27b8:	00340e00 	eorseq	r0, r4, r0, lsl #28
    27bc:	0b3a0e03 	bleq	e85fd0 <__Stack_Size+0xe85bd0>
    27c0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    27c4:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    27c8:	010f0000 	mrseq	r0, CPSR
    27cc:	01134901 	tsteq	r3, r1, lsl #18
    27d0:	10000013 	andne	r0, r0, r3, lsl r0
    27d4:	13490021 	movtne	r0, #36897	; 0x9021
    27d8:	00000b2f 	andeq	r0, r0, pc, lsr #22
    27dc:	3f002e11 	svccc	0x00002e11
    27e0:	3a0e0319 	bcc	38344c <__Stack_Size+0x38304c>
    27e4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    27e8:	3c134919 	ldccc	9, cr4, [r3], {25}
    27ec:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_line:

00000000 <.debug_line>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_HP(void)
{
       0:	00000594 	muleq	r0, r4, r5
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
       4:	011a0002 	tsteq	sl, r2
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
      18:	6c010000 	stcvs	0, cr0, [r1], {-0}
      1c:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
      20:	6c00636e 	stcvs	3, cr6, [r0], {110}	; 0x6e
      24:	552f6269 	strpl	r6, [pc, #-617]!	; fffffdc3 <SCS_BASE+0x1fff1dc3>
      28:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    if ((wEPVal & EP_CTR_RX) != 0)
      2c:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      30:	0000636e 	andeq	r6, r0, lr, ror #6
      34:	6e69616d 	powvsez	f6, f1, #5.0
      38:	0000632e 	andeq	r6, r0, lr, lsr #6

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	74730000 	ldrbtvc	r0, [r3], #-0

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	5f783031 	svcpl	0x00783031
      48:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
      4c:	0100682e 	tsteq	r0, lr, lsr #16

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	74730000 	ldrbtvc	r0, [r3], #-0
      54:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      58:	5f783031 	svcpl	0x00783031


    } /* if((wEPVal & EP_CTR_TX) != 0) */

  }/* while(...) */
}
      5c:	2e70616d 	rpwcssz	f6, f0, #5.0
      60:	00010068 	andeq	r0, r1, r8, rrx
      64:	6d747300 	ldclvs	3, cr7, [r4, #-0]
      68:	31663233 	cmncc	r6, r3, lsr r2
      6c:	665f7830 			; <UNDEFINED> instruction: 0x665f7830
      70:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
      74:	0100682e 	tsteq	r0, lr, lsr #16
      78:	74730000 	ldrbtvc	r0, [r3], #-0
      7c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      80:	5f783031 	svcpl	0x00783031
      84:	6f697067 	svcvs	0x00697067
      88:	0100682e 	tsteq	r0, lr, lsr #16
      8c:	74730000 	ldrbtvc	r0, [r3], #-0
      90:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      94:	5f783031 	svcpl	0x00783031
      98:	6369766e 	cmnvs	r9, #115343360	; 0x6e00000
      9c:	0100682e 	tsteq	r0, lr, lsr #16
      a0:	74730000 	ldrbtvc	r0, [r3], #-0
      a4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	5f783031 	svcpl	0x00783031
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	2e6d6974 	mcrcs	9, 3, r6, cr13, cr4, {3}
      b0:	00010068 	andeq	r0, r1, r8, rrx
      break; 
      
    default:
      break;
  }
}
      b4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	31663233 	cmncc	r6, r3, lsr r2
      bc:	755f7830 	ldrbvc	r7, [pc, #-2096]	; fffff894 <SCS_BASE+0x1fff1894>
      c0:	74726173 	ldrbtvc	r6, [r2], #-371	; 0x173
      c4:	0100682e 	tsteq	r0, lr, lsr #16
      c8:	74730000 	ldrbtvc	r0, [r3], #-0
      cc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      d0:	5f783031 	svcpl	0x00783031
      d4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0x973
      d8:	2e6b6369 	cdpcs	3, 6, cr6, cr11, cr9, {3}
      dc:	00010068 	andeq	r0, r1, r8, rrx
      e0:	42535500 	subsmi	r5, r3, #0, 10
      e4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
      e8:	0000682e 	andeq	r6, r0, lr, lsr #16
      ec:	74730000 	ldrbtvc	r0, [r3], #-0
      f0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      f4:	5f783031 	svcpl	0x00783031
      f8:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
      fc:	00010068 	andeq	r0, r1, r8, rrx
     100:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     104:	31663233 	cmncc	r6, r3, lsr r2
     108:	695f7830 	ldmdbvs	pc, {r4, r5, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     10c:	2e676477 	mcrcs	4, 3, r6, cr7, cr7, {3}
     110:	00010068 	andeq	r0, r1, r8, rrx
     114:	62737500 	rsbsvs	r7, r3, #0, 10
     118:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     11c:	00682e74 	rsbeq	r2, r8, r4, ror lr
     120:	00000002 	andeq	r0, r0, r2
     124:	a4020500 	strge	r0, [r2], #-1280	; 0x500
     128:	03080001 	movweq	r0, #32769	; 0x8001
     12c:	140101ef 	strne	r0, [r1], #-495	; 0x1ef
     130:	01000602 	tsteq	r0, r2, lsl #12
     134:	02050001 	andeq	r0, r5, #1
     138:	080001b0 	stmdaeq	r0, {r4, r5, r7, r8}
     13c:	0101f403 	tsteq	r1, r3, lsl #8
     140:	08023316 	stmdaeq	r2, {r1, r2, r4, r8, r9, ip, sp}
     144:	00010100 	andeq	r0, r1, r0, lsl #2
     148:	01c40205 	biceq	r0, r4, r5, lsl #4
     14c:	81030800 	tsthi	r3, r0, lsl #16
     150:	4b130102 	blmi	4c0560 <__Stack_Size+0x4c0160>
     154:	01000602 	tsteq	r0, r2, lsl #12
     158:	02050001 	andeq	r0, r5, #1
     15c:	080001d8 	stmdaeq	r0, {r3, r4, r6, r7, r8}
     160:	01028703 	tsteq	r2, r3, lsl #14
     164:	251b4324 	ldrcs	r4, [fp, #-804]	; 0x324
     168:	2f2f2f29 	svccs	0x002f2f29
     16c:	5d773330 	ldclpl	3, cr3, [r7, #-192]!	; 0xffffff40
     170:	0003026d 	andeq	r0, r3, sp, ror #4
     174:	05000101 	streq	r0, [r0, #-257]	; 0x101
     178:	00000002 	andeq	r0, r0, r2
     17c:	02a80300 	adceq	r0, r8, #0, 6
     180:	0a021301 	beq	84d8c <__Stack_Size+0x8498c>
     184:	00010100 	andeq	r0, r1, r0, lsl #2
     188:	00000205 	andeq	r0, r0, r5, lsl #4
     18c:	ad030000 	stcge	0, cr0, [r3, #-0]
     190:	2f130102 	svccs	0x00130102
     194:	03901c03 	orrseq	r1, r0, #768	; 0x300
     198:	1e035864 	cdpne	8, 0, cr5, cr3, cr4, {3}
     19c:	0006022e 	andeq	r0, r6, lr, lsr #4
     1a0:	05000101 	streq	r0, [r0, #-257]	; 0x101
     1a4:	00022802 	andeq	r2, r2, r2, lsl #16
     1a8:	02fb0308 	rscseq	r0, fp, #8, 6	; 0x20000000
     1ac:	4b212001 	blmi	8481b8 <__Stack_Size+0x847db8>
     1b0:	01040200 	mrseq	r0, R12_usr
     1b4:	0402674b 	streq	r6, [r2], #-1867	; 0x74b
     1b8:	00010100 	andeq	r0, r1, r0, lsl #2
     1bc:	00000205 	andeq	r0, r0, r5, lsl #4
     1c0:	81030000 	mrshi	r0, (UNDEF: 3)
     1c4:	3a220103 	bcc	8805d8 <__Stack_Size+0x8801d8>
     1c8:	3d755923 	ldclcc	9, cr5, [r5, #-140]!	; 0xffffff74
     1cc:	2d3d5959 	ldccs	9, cr5, [sp, #-356]!	; 0xfffffe9c
     1d0:	01000202 	tsteq	r0, r2, lsl #4
     1d4:	02050001 	andeq	r0, r5, #1
     1d8:	08000250 	stmdaeq	r0, {r4, r6, r9}
     1dc:	01038d03 	tsteq	r3, r3, lsl #26
     1e0:	01040200 	mrseq	r0, R12_usr
     1e4:	04020030 	streq	r0, [r2], #-48	; 0x30
     1e8:	023e3e03 	eorseq	r3, lr, #3, 28	; 0x30
     1ec:	01010001 	tsteq	r1, r1
     1f0:	62020500 	andvs	r0, r2, #0, 10
     1f4:	03080002 	movweq	r0, #32770	; 0x8002
     1f8:	20010396 	mulcs	r1, r6, r3
     1fc:	2c4d4b23 	mcrrcs	11, 2, r4, sp, cr3
     200:	214b2f3e 	cmpcs	fp, lr, lsr pc
     204:	0002022d 	andeq	r0, r2, sp, lsr #4
     208:	05000101 	streq	r0, [r0, #-257]	; 0x101
     20c:	00029602 	andeq	r9, r2, r2, lsl #12
     210:	03a30308 			; <UNDEFINED> instruction: 0x03a30308
     214:	3d212001 	stccc	0, cr2, [r1, #-4]!
     218:	02022d21 	andeq	r2, r2, #2112	; 0x840
     21c:	00010100 	andeq	r0, r1, r0, lsl #2
     220:	02aa0205 	adceq	r0, sl, #1342177280	; 0x50000000
     224:	a9030800 	stmdbge	r3, {fp}
     228:	21200103 	teqcs	r0, r3, lsl #2
     22c:	022d213d 	eoreq	r2, sp, #1073741839	; 0x4000000f
     230:	01010002 	tsteq	r1, r2
     234:	00020500 	andeq	r0, r2, r0, lsl #10
     238:	03000000 	movweq	r0, #0
     23c:	220103b0 	andcs	r0, r1, #176, 6	; 0xc0000002
     240:	7559233a 	ldrbvc	r2, [r9, #-826]	; 0x33a
     244:	3d59593d 	ldclcc	9, cr5, [r9, #-244]	; 0xffffff0c
     248:	0002022d 	andeq	r0, r2, sp, lsr #4
     24c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     250:	0002be02 	andeq	fp, r2, r2, lsl #28
     254:	03bd0308 			; <UNDEFINED> instruction: 0x03bd0308
     258:	04020001 	streq	r0, [r2], #-1
     25c:	02003001 	andeq	r3, r0, #1
     260:	3e3e0304 	cdpcc	3, 3, cr0, cr14, cr4, {0}
     264:	01000102 	tsteq	r0, r2, lsl #2
     268:	02050001 	andeq	r0, r5, #1
     26c:	00000000 	andeq	r0, r0, r0
     270:	0103c603 	tsteq	r3, r3, lsl #12
     274:	4d4b2320 	stclmi	3, cr2, [fp, #-128]	; 0xffffff80
     278:	4b2f3e2c 	blmi	bcfb30 <__Stack_Size+0xbcf730>
     27c:	02022d21 	andeq	r2, r2, #2112	; 0x840
     280:	00010100 	andeq	r0, r1, r0, lsl #2
     284:	00000205 	andeq	r0, r0, r5, lsl #4
     288:	d3030000 	movwle	r0, #12288	; 0x3000
     28c:	21200103 	teqcs	r0, r3, lsl #2
     290:	022d213d 	eoreq	r2, sp, #1073741839	; 0x4000000f
     294:	01010002 	tsteq	r1, r2
     298:	00020500 	andeq	r0, r2, r0, lsl #10
     29c:	03000000 	movweq	r0, #0
     2a0:	200103d9 	ldrdcs	r0, [r1], -r9
     2a4:	2d213d21 	stccs	13, cr3, [r1, #-132]!	; 0xffffff7c
     2a8:	01000202 	tsteq	r0, r2, lsl #4
     2ac:	02050001 	andeq	r0, r5, #1
     2b0:	00000000 	andeq	r0, r0, r0
     2b4:	0103e003 	tsteq	r3, r3
     2b8:	06029f13 			; <UNDEFINED> instruction: 0x06029f13
     2bc:	00010100 	andeq	r0, r1, r0, lsl #2
     2c0:	02d00205 	sbcseq	r0, r0, #1342177280	; 0x50000000
     2c4:	ec030800 	stc	8, cr0, [r3], {-0}
     2c8:	22200103 	eorcs	r0, r0, #-1073741824	; 0xc0000000
     2cc:	0402003e 	streq	r0, [r2], #-62	; 0x3e
     2d0:	4c3f3001 	ldcmi	0, cr3, [pc], #-4	; 2d4 <_Minimum_Stack_Size+0x1d4>
     2d4:	05022d21 	streq	r2, [r2, #-3361]	; 0xd21
     2d8:	00010100 	andeq	r0, r1, r0, lsl #2
     2dc:	02fc0205 	rscseq	r0, ip, #1342177280	; 0x50000000
     2e0:	c3030800 	movwgt	r0, #14336	; 0x3800
     2e4:	77310107 	ldrvc	r0, [r1, -r7, lsl #2]!
     2e8:	0022211f 	eoreq	r2, r2, pc, lsl r1
     2ec:	06010402 	streq	r0, [r1], -r2, lsl #8
     2f0:	0402002e 	streq	r0, [r2], #-46	; 0x2e
     2f4:	063c3c04 	ldrteq	r3, [ip], -r4, lsl #24
     2f8:	01022122 	tsteq	r2, r2, lsr #2
     2fc:	00010100 	andeq	r0, r1, r0, lsl #2
     300:	032a0205 	teqeq	sl, #1342177280	; 0x50000000
     304:	d1030800 	tstle	r3, r0, lsl #16
     308:	595c0107 	ldmdbpl	ip, {r0, r1, r2, r8}^
     30c:	02040200 	andeq	r0, r4, #0, 4
     310:	02024239 	andeq	r4, r2, #-1879048189	; 0x90000003
     314:	00010100 	andeq	r0, r1, r0, lsl #2
     318:	03500205 	cmpeq	r0, #1342177280	; 0x50000000
     31c:	98030800 	stmdals	r3, {fp}
     320:	3f4d0108 	svccc	0x004d0108
     324:	312f2f3d 	teqcc	pc, sp, lsr pc	; <UNPREDICTABLE>
     328:	3025291e 	eorcc	r2, r5, lr, lsl r9
     32c:	4d3e3d22 	ldcmi	13, cr3, [lr, #-136]!	; 0xffffff78
     330:	3d303f6a 	ldccc	15, cr3, [r0, #-424]!	; 0xfffffe58
     334:	31694d3e 	cmncc	r9, lr, lsr sp
     338:	4d3e3d31 	ldcmi	13, cr3, [lr, #-196]!	; 0xffffff3c
     33c:	08024c6a 	stmdaeq	r2, {r1, r3, r5, r6, sl, fp, lr}
     340:	00010100 	andeq	r0, r1, r0, lsl #2
     344:	04080205 	streq	r0, [r8], #-517	; 0x205
     348:	ff030800 			; <UNDEFINED> instruction: 0xff030800
     34c:	1b330103 	blne	cc0760 <__Stack_Size+0xcc0360>
     350:	03040200 	movweq	r0, #16896	; 0x4200
     354:	04020026 	streq	r0, [r2], #-38	; 0x26
     358:	03393b03 	teqeq	r9, #3072	; 0xc00
     35c:	2c30200a 	ldccs	0, cr2, [r0], #-40	; 0xffffffd8
     360:	251b592f 	ldrcs	r5, [fp, #-2351]	; 0x92f
     364:	01040200 	mrseq	r0, R12_usr
     368:	03200d03 	teqeq	r0, #3, 26	; 0xc0
     36c:	4b496617 	blmi	1259bd0 <__Stack_Size+0x12597d0>
     370:	00331b33 	eorseq	r1, r3, r3, lsr fp
     374:	30030402 	andcc	r0, r3, r2, lsl #8
     378:	03040200 	movweq	r0, #16896	; 0x4200
     37c:	02005157 	andeq	r5, r0, #-1073741803	; 0xc0000015
     380:	58060104 	stmdapl	r6, {r2, r8}
     384:	02040200 	andeq	r0, r4, #0, 4
     388:	035b063c 	cmpeq	fp, #60, 12	; 0x3c00000
     38c:	7803820c 	stmdavc	r3, {r2, r3, r9, pc}
     390:	3e2f3620 	cfmadda32cc	mvax1, mvax3, mvfx15, mvfx0
     394:	03201d03 	teqeq	r0, #3, 26	; 0xc0
     398:	03212e63 	teqeq	r1, #1584	; 0x630
     39c:	4e303c15 	mrcmi	12, 1, r3, cr0, cr5, {0}
     3a0:	2b1b3332 	blcs	6cd070 <__Stack_Size+0x6ccc70>
     3a4:	02002531 	andeq	r2, r0, #205520896	; 0xc400000
     3a8:	00340104 	eorseq	r0, r4, r4, lsl #2
     3ac:	06030402 	streq	r0, [r3], -r2, lsl #8
     3b0:	004d063c 	subeq	r0, sp, ip, lsr r6
     3b4:	92020402 	andls	r0, r2, #33554432	; 0x2000000
     3b8:	02040200 	andeq	r0, r4, #0, 4
     3bc:	04020067 	streq	r0, [r2], #-103	; 0x67
     3c0:	02001f02 	andeq	r1, r0, #2, 30
     3c4:	002f0204 	eoreq	r0, pc, r4, lsl #4
     3c8:	03020402 	movweq	r0, #9218	; 0x2402
     3cc:	02002e7a 	andeq	r2, r0, #1952	; 0x7a0
     3d0:	03340204 	teqeq	r4, #4, 4	; 0x40000000
     3d4:	2f4c4a0a 	svccs	0x004c4a0a
     3d8:	2d213d23 	stccs	13, cr3, [r1, #-140]!	; 0xffffff74
     3dc:	4b422f21 	blmi	108c068 <__Stack_Size+0x108bc68>
     3e0:	3a304b4b 	bcc	c13114 <__Stack_Size+0xc12d14>
     3e4:	2e7cd403 	cdpcs	4, 7, cr13, cr12, cr3, {0}
     3e8:	2e03ae03 	cdpcs	14, 0, cr10, cr3, cr3, {0}
     3ec:	032e0b03 	teqeq	lr, #3072	; 0xc00
     3f0:	09035877 	stmdbeq	r3, {r0, r1, r2, r4, r5, r6, fp, ip, lr}
     3f4:	2f50214a 	svccs	0x0050214a
     3f8:	0402003f 	streq	r0, [r2], #-63	; 0x3f
     3fc:	06580601 	ldrbeq	r0, [r8], -r1, lsl #12
     400:	4d3e314b 	ldfmis	f3, [lr, #-300]!	; 0xfffffed4
     404:	24660c03 	strbtcs	r0, [r6], #-3075	; 0xc03
     408:	2e0b0336 	mcrcs	3, 0, r0, cr11, cr6, {1}
     40c:	3e6a303d 	mcrcc	0, 3, r3, cr10, cr13, {1}
     410:	02003d86 	andeq	r3, r0, #8576	; 0x2180
     414:	4a060104 	bmi	18082c <__Stack_Size+0x18042c>
     418:	863d3e06 	ldrthi	r3, [sp], -r6, lsl #28
     41c:	0402002f 	streq	r0, [r2], #-47	; 0x2f
     420:	00660601 	rsbeq	r0, r6, r1, lsl #12
     424:	06010402 	streq	r0, [r1], -r2, lsl #8
     428:	74090359 	strvc	r0, [r9], #-857	; 0x359
     42c:	7cc80330 	stclvc	3, cr0, [r8], {48}	; 0x30
     430:	03b80320 			; <UNDEFINED> instruction: 0x03b80320
     434:	2350802e 	cmpcs	r0, #46	; 0x2e
     438:	4b3d3047 	blmi	f4c55c <__Stack_Size+0xf4c15c>
     43c:	02005e32 	andeq	r5, r0, #800	; 0x320
     440:	58060104 	stmdapl	r6, {r2, r8}
     444:	02040200 	andeq	r0, r4, #0, 4
     448:	1f3f063c 	svcne	0x003f063c
     44c:	224b213d 	subcs	r2, fp, #1073741839	; 0x4000000f
     450:	0402004b 	streq	r0, [r2], #-75	; 0x4b
     454:	062e0601 	strteq	r0, [lr], -r1, lsl #12
     458:	04020059 	streq	r0, [r2], #-89	; 0x59
     45c:	02006701 	andeq	r6, r0, #262144	; 0x40000
     460:	02640204 	rsbeq	r0, r4, #4, 4	; 0x40000000
     464:	2d211631 	stccs	6, cr1, [r1, #-196]!	; 0xffffff3c
     468:	68673221 	stmdavs	r7!, {r0, r5, r9, ip, sp}^
     46c:	31675e9f 			; <UNDEFINED> instruction: 0x31675e9f
     470:	0402004e 	streq	r0, [r2], #-78	; 0x4e
     474:	062e0601 	strteq	r0, [lr], -r1, lsl #12
     478:	02003f4b 	andeq	r3, r0, #300	; 0x12c
     47c:	00300304 	eorseq	r0, r0, r4, lsl #6
     480:	2d030402 	cfstrscs	mvf0, [r3, #-8]
     484:	0013023f 	andseq	r0, r3, pc, lsr r2
     488:	05000101 	streq	r0, [r0, #-257]	; 0x101
     48c:	0007fc02 	andeq	pc, r7, r2, lsl #24
     490:	08fd0308 	ldmeq	sp!, {r3, r8, r9}^
     494:	4d312201 	lfmmi	f2, 4, [r1, #-4]!
     498:	03301e3e 	teqeq	r0, #992	; 0x3e0
     49c:	13032028 	movwne	r2, #12328	; 0x3028
     4a0:	2e780358 	mrccs	3, 3, r0, cr8, cr8, {2}
     4a4:	3f4a5003 	svccc	0x004a5003
     4a8:	4d3f3f3f 	ldcmi	15, cr3, [pc, #-252]!	; 3b4 <_Minimum_Stack_Size+0x2b4>
     4ac:	04020069 	streq	r0, [r2], #-105	; 0x69
     4b0:	3e5c3f01 	cdpcc	15, 5, cr3, cr12, cr1, {0}
     4b4:	01040200 	mrseq	r0, R12_usr
     4b8:	0009023e 	andeq	r0, r9, lr, lsr r2
     4bc:	05000101 	streq	r0, [r0, #-257]	; 0x101
     4c0:	00088802 	andeq	r8, r8, r2, lsl #16
     4c4:	09ce0308 	stmibeq	lr, {r3, r8, r9}^
     4c8:	2e0c0301 	cdpcs	3, 0, cr0, cr12, cr1, {0}
     4cc:	28207403 	stmdacs	r0!, {r0, r1, sl, ip, sp, lr}
     4d0:	03332222 	teqeq	r3, #536870914	; 0x20000002
     4d4:	2f2c2079 	svccs	0x002c2079
     4d8:	2c223231 	sfmcs	f3, 4, [r2], #-196	; 0xffffff3c
     4dc:	7a032f34 	bvc	cc1b4 <__Stack_Size+0xcbdb4>
     4e0:	03342f2e 	teqeq	r4, #46, 30	; 0xb8
     4e4:	032d2e0c 	teqeq	sp, #12, 28	; 0xc0
     4e8:	2f2f2072 	svccs	0x002f2072
     4ec:	2e0c032f 	cdpcs	3, 0, cr0, cr12, cr15, {1}
     4f0:	2e7a0331 	mrccs	3, 3, r0, cr10, cr1, {1}
     4f4:	342f2f2f 	strtcc	r2, [pc], #-3887	; 4fc <__Stack_Size+0xfc>
     4f8:	2f2f2f2b 	svccs	0x002f2f2b
     4fc:	311d3e32 	tstcc	sp, r2, lsr lr
     500:	2f1f312b 	svccs	0x001f312b
     504:	2b315a30 	blcs	c56dcc <__Stack_Size+0xc569cc>
     508:	302f2f2f 	eorcc	r2, pc, pc, lsr #30
     50c:	2f2f2c22 	svccs	0x002f2c22
     510:	2f2b2330 	svccs	0x002b2330
     514:	4c302f2f 	ldcmi	15, cr2, [r0], #-188	; 0xffffff44
     518:	4d4c4d4b 	stclmi	13, cr4, [ip, #-300]	; 0xfffffed4
     51c:	01000902 	tsteq	r0, r2, lsl #18
     520:	02050001 	andeq	r0, r5, #1
     524:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
     528:	010aa503 	tsteq	sl, r3, lsl #10
     52c:	5d200b03 	fstmdbxpl	r0!, {d0}	;@ Deprecated
     530:	20790335 	rsbscs	r0, r9, r5, lsr r3
     534:	1c241f33 	stcne	15, cr1, [r4], #-204	; 0xffffff34
     538:	2f2f2f2f 	svccs	0x002f2f2f
     53c:	2f1c2431 	svccs	0x001c2431
     540:	312f2f2f 	teqcc	pc, pc, lsr #30
     544:	2f2f1c24 	svccs	0x002f1c24
     548:	24302f2f 	ldrtcs	r2, [r0], #-3887	; 0xf2f
     54c:	2f2f2f1c 	svccs	0x002f2f1c
     550:	0202302f 	andeq	r3, r2, #47	; 0x2f
     554:	00010100 	andeq	r0, r1, r0, lsl #2
     558:	0a280205 	beq	a00d74 <__Stack_Size+0xa00974>
     55c:	9b030800 	blls	c2564 <__Stack_Size+0xc2164>
     560:	31220101 	teqcc	r2, r1, lsl #2
     564:	4d313031 	ldcmi	0, cr3, [r1, #-196]!	; 0xffffff3c
     568:	033e4c3e 	teqeq	lr, #15872	; 0x3e00
     56c:	4b593c0c 	blmi	164f5a4 <__Stack_Size+0x164f1a4>
     570:	3131211f 	teqcc	r1, pc, lsl r1
     574:	1b254467 	blne	951718 <__Stack_Size+0x951318>
     578:	002f4e25 	eoreq	r4, pc, r5, lsr #28
     57c:	1b010402 	blne	4158c <__Stack_Size+0x4118c>
     580:	02040200 	andeq	r0, r4, #0, 4
     584:	03066606 	movweq	r6, #26118	; 0x6606
     588:	00302e19 	eorseq	r2, r0, r9, lsl lr
     58c:	03010402 	movweq	r0, #5122	; 0x1402
     590:	024e2e6a 	subeq	r2, lr, #1696	; 0x6a0
     594:	0101000e 	tsteq	r1, lr
     598:	000004e0 	andeq	r0, r0, r0, ror #9
     59c:	007c0002 	rsbseq	r0, ip, r2
     5a0:	01020000 	mrseq	r0, (UNDEF: 2)
     5a4:	000d0efb 	strdeq	r0, [sp], -fp
     5a8:	01010101 	tsteq	r1, r1, lsl #2
     5ac:	01000000 	mrseq	r0, (UNDEF: 0)
     5b0:	6c010000 	stcvs	0, cr0, [r1], {-0}
     5b4:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
     5b8:	0000636e 	andeq	r6, r0, lr, ror #6
     5bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     5c0:	30316632 	eorscc	r6, r1, r2, lsr r6
     5c4:	74695f78 	strbtvc	r5, [r9], #-3960	; 0xf78
     5c8:	0000632e 	andeq	r6, r0, lr, lsr #6
     5cc:	74730000 	ldrbtvc	r0, [r3], #-0
     5d0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     5d4:	5f783031 	svcpl	0x00783031
     5d8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
     5dc:	0100682e 	tsteq	r0, lr, lsr #16
     5e0:	74730000 	ldrbtvc	r0, [r3], #-0
     5e4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     5e8:	5f783031 	svcpl	0x00783031
     5ec:	2e70616d 	rpwcssz	f6, f0, #5.0
     5f0:	00010068 	andeq	r0, r1, r8, rrx
     5f4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     5f8:	31663233 	cmncc	r6, r3, lsr r2
     5fc:	745f7830 	ldrbvc	r7, [pc], #-2096	; 604 <__Stack_Size+0x204>
     600:	682e6d69 	stmdavs	lr!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}
     604:	00000100 	andeq	r0, r0, r0, lsl #2
     608:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     60c:	30316632 	eorscc	r6, r1, r2, lsr r6
     610:	73755f78 	cmnvc	r5, #120, 30	; 0x1e0
     614:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     618:	00010068 	andeq	r0, r1, r8, rrx
     61c:	05000000 	streq	r0, [r0, #-0]
     620:	000adc02 	andeq	sp, sl, r2, lsl #24
     624:	01290308 	teqeq	r9, r8, lsl #6
     628:	01000102 	tsteq	r0, r2, lsl #2
     62c:	02050001 	andeq	r0, r5, #1
     630:	08000ade 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, fp}
     634:	02013503 	andeq	r3, r1, #12582912	; 0xc00000
     638:	01010001 	tsteq	r1, r1
     63c:	e0020500 	and	r0, r2, r0, lsl #10
     640:	0308000a 	movweq	r0, #32778	; 0x800a
     644:	020100c4 	andeq	r0, r1, #196	; 0xc4
     648:	01010001 	tsteq	r1, r1
     64c:	e2020500 	and	r0, r2, #0, 10
     650:	0308000a 	movweq	r0, #32778	; 0x800a
     654:	020100d1 	andeq	r0, r1, #209	; 0xd1
     658:	01010001 	tsteq	r1, r1
     65c:	e4020500 	str	r0, [r2], #-1280	; 0x500
     660:	0308000a 	movweq	r0, #32778	; 0x800a
     664:	020100de 	andeq	r0, r1, #222	; 0xde
     668:	01010001 	tsteq	r1, r1
     66c:	e6020500 	str	r0, [r2], -r0, lsl #10
     670:	0308000a 	movweq	r0, #32778	; 0x800a
     674:	020100eb 	andeq	r0, r1, #235	; 0xeb
     678:	01010001 	tsteq	r1, r1
     67c:	e8020500 	stmda	r2, {r8, sl}
     680:	0308000a 	movweq	r0, #32778	; 0x800a
     684:	020100f6 	andeq	r0, r1, #246	; 0xf6
     688:	01010001 	tsteq	r1, r1
     68c:	ea020500 	b	81a94 <__Stack_Size+0x81694>
     690:	0308000a 	movweq	r0, #32778	; 0x800a
     694:	02010181 	andeq	r0, r1, #1073741856	; 0x40000020
     698:	01010001 	tsteq	r1, r1
     69c:	ec020500 	cfstr32	mvfx0, [r2], {-0}
     6a0:	0308000a 	movweq	r0, #32778	; 0x800a
     6a4:	1701018c 	strne	r0, [r1, -ip, lsl #3]
     6a8:	0007023e 	andeq	r0, r7, lr, lsr r2
     6ac:	05000101 	streq	r0, [r0, #-257]	; 0x101
     6b0:	000b0002 	andeq	r0, fp, r2
     6b4:	019f0308 	orrseq	r0, pc, r8, lsl #6
     6b8:	00010201 	andeq	r0, r1, r1, lsl #4
     6bc:	05000101 	streq	r0, [r0, #-257]	; 0x101
     6c0:	000b0202 	andeq	r0, fp, r2, lsl #4
     6c4:	01aa0308 			; <UNDEFINED> instruction: 0x01aa0308
     6c8:	00010201 	andeq	r0, r1, r1, lsl #4
     6cc:	05000101 	streq	r0, [r0, #-257]	; 0x101
     6d0:	000b0402 	andeq	r0, fp, r2, lsl #8
     6d4:	01b50308 			; <UNDEFINED> instruction: 0x01b50308
     6d8:	00010201 	andeq	r0, r1, r1, lsl #4
     6dc:	05000101 	streq	r0, [r0, #-257]	; 0x101
     6e0:	000b0602 	andeq	r0, fp, r2, lsl #12
     6e4:	01c00308 	biceq	r0, r0, r8, lsl #6
     6e8:	00010201 	andeq	r0, r1, r1, lsl #4
     6ec:	05000101 	streq	r0, [r0, #-257]	; 0x101
     6f0:	000b0802 	andeq	r0, fp, r2, lsl #16
     6f4:	01cb0308 	biceq	r0, fp, r8, lsl #6
     6f8:	00010201 	andeq	r0, r1, r1, lsl #4
     6fc:	05000101 	streq	r0, [r0, #-257]	; 0x101
     700:	000b0a02 	andeq	r0, fp, r2, lsl #20
     704:	01d60308 	bicseq	r0, r6, r8, lsl #6
     708:	00010201 	andeq	r0, r1, r1, lsl #4
     70c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     710:	000b0c02 	andeq	r0, fp, r2, lsl #24
     714:	01e10308 	mvneq	r0, r8, lsl #6
     718:	00010201 	andeq	r0, r1, r1, lsl #4
     71c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     720:	000b0e02 	andeq	r0, fp, r2, lsl #28
     724:	01ec0308 	mvneq	r0, r8, lsl #6
     728:	00010201 	andeq	r0, r1, r1, lsl #4
     72c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     730:	000b1002 	andeq	r1, fp, r2
     734:	01f70308 	mvnseq	r0, r8, lsl #6
     738:	00010201 	andeq	r0, r1, r1, lsl #4
     73c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     740:	000b1202 	andeq	r1, fp, r2, lsl #4
     744:	02820308 	addeq	r0, r2, #8, 6	; 0x20000000
     748:	00010201 	andeq	r0, r1, r1, lsl #4
     74c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     750:	000b1402 	andeq	r1, fp, r2, lsl #8
     754:	028d0308 	addeq	r0, sp, #8, 6	; 0x20000000
     758:	00010201 	andeq	r0, r1, r1, lsl #4
     75c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     760:	00000002 	andeq	r0, r0, r2
     764:	02980300 	addseq	r0, r8, #0, 6
     768:	00010201 	andeq	r0, r1, r1, lsl #4
     76c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     770:	00000002 	andeq	r0, r0, r2
     774:	02a30300 	adceq	r0, r3, #0, 6
     778:	00010201 	andeq	r0, r1, r1, lsl #4
     77c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     780:	00000002 	andeq	r0, r0, r2
     784:	02ae0300 	adceq	r0, lr, #0, 6
     788:	00010201 	andeq	r0, r1, r1, lsl #4
     78c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     790:	00000002 	andeq	r0, r0, r2
     794:	02b90300 	adcseq	r0, r9, #0, 6
     798:	00010201 	andeq	r0, r1, r1, lsl #4
     79c:	05000101 	streq	r0, [r0, #-257]	; 0x101
     7a0:	00000002 	andeq	r0, r0, r2
     7a4:	02c40300 	sbceq	r0, r4, #0, 6
     7a8:	00010201 	andeq	r0, r1, r1, lsl #4
     7ac:	05000101 	streq	r0, [r0, #-257]	; 0x101
     7b0:	00000002 	andeq	r0, r0, r2
     7b4:	02cf0300 	sbceq	r0, pc, #0, 6
     7b8:	00010201 	andeq	r0, r1, r1, lsl #4
     7bc:	05000101 	streq	r0, [r0, #-257]	; 0x101
     7c0:	00000002 	andeq	r0, r0, r2
     7c4:	02da0300 	sbcseq	r0, sl, #0, 6
     7c8:	00010201 	andeq	r0, r1, r1, lsl #4
     7cc:	05000101 	streq	r0, [r0, #-257]	; 0x101
     7d0:	000b1602 	andeq	r1, fp, r2, lsl #12
     7d4:	02e50308 	rsceq	r0, r5, #8, 6	; 0x20000000
     7d8:	00010201 	andeq	r0, r1, r1, lsl #4
     7dc:	05000101 	streq	r0, [r0, #-257]	; 0x101
     7e0:	000b1802 	andeq	r1, fp, r2, lsl #16
     7e4:	02f10308 	rscseq	r0, r1, #8, 6	; 0x20000000
     7e8:	00010201 	andeq	r0, r1, r1, lsl #4
     7ec:	05000101 	streq	r0, [r0, #-257]	; 0x101
     7f0:	000b1a02 	andeq	r1, fp, r2, lsl #20
     7f4:	02fd0308 	rscseq	r0, sp, #8, 6	; 0x20000000
     7f8:	02021301 	andeq	r1, r2, #67108864	; 0x4000000
     7fc:	00010100 	andeq	r0, r1, r0, lsl #2
     800:	0b1e0205 	bleq	78101c <__Stack_Size+0x780c1c>
     804:	89030800 	stmdbhi	r3, {fp}
     808:	01020103 	tsteq	r2, r3, lsl #2
     80c:	00010100 	andeq	r0, r1, r0, lsl #2
     810:	0b200205 	bleq	80102c <__Stack_Size+0x800c2c>
     814:	94030800 	strls	r0, [r3], #-2048	; 0x800
     818:	01020103 	tsteq	r2, r3, lsl #2
     81c:	00010100 	andeq	r0, r1, r0, lsl #2
     820:	0b220205 	bleq	88103c <__Stack_Size+0x880c3c>
     824:	9f030800 	svcls	0x00030800
     828:	01020103 	tsteq	r2, r3, lsl #2
     82c:	00010100 	andeq	r0, r1, r0, lsl #2
     830:	0b240205 	bleq	90104c <__Stack_Size+0x900c4c>
     834:	aa030800 	bge	c283c <__Stack_Size+0xc243c>
     838:	01020103 	tsteq	r2, r3, lsl #2
     83c:	00010100 	andeq	r0, r1, r0, lsl #2
     840:	0b260205 	bleq	98105c <__Stack_Size+0x980c5c>
     844:	b6030800 	strlt	r0, [r3], -r0, lsl #16
     848:	01020103 	tsteq	r2, r3, lsl #2
     84c:	00010100 	andeq	r0, r1, r0, lsl #2
     850:	0b280205 	bleq	a0106c <__Stack_Size+0xa00c6c>
     854:	c2030800 	andgt	r0, r3, #0, 16
     858:	01020103 	tsteq	r2, r3, lsl #2
     85c:	00010100 	andeq	r0, r1, r0, lsl #2
     860:	0b2a0205 	bleq	a8107c <__Stack_Size+0xa80c7c>
     864:	cd030800 	stcgt	8, cr0, [r3, #-0]
     868:	01020103 	tsteq	r2, r3, lsl #2
     86c:	00010100 	andeq	r0, r1, r0, lsl #2
     870:	0b2c0205 	bleq	b0108c <__Stack_Size+0xb00c8c>
     874:	dc030800 	stcle	8, cr0, [r3], {-0}
     878:	23010103 	movwcs	r0, #4355	; 0x1103
     87c:	02022c5e 	andeq	r2, r2, #24064	; 0x5e00
     880:	00010100 	andeq	r0, r1, r0, lsl #2
     884:	0b400205 	bleq	10010a0 <__Stack_Size+0x1000ca0>
     888:	ef030800 	svc	0x00030800
     88c:	01020103 	tsteq	r2, r3, lsl #2
     890:	00010100 	andeq	r0, r1, r0, lsl #2
     894:	0b420205 	bleq	10810b0 <__Stack_Size+0x1080cb0>
     898:	fa030800 	blx	c28a0 <__Stack_Size+0xc24a0>
     89c:	01020103 	tsteq	r2, r3, lsl #2
     8a0:	00010100 	andeq	r0, r1, r0, lsl #2
     8a4:	0b440205 	bleq	11010c0 <__Stack_Size+0x1100cc0>
     8a8:	85030800 	strhi	r0, [r3, #-2048]	; 0x800
     8ac:	01020104 	tsteq	r2, r4, lsl #2
     8b0:	00010100 	andeq	r0, r1, r0, lsl #2
     8b4:	0b460205 	bleq	11810d0 <__Stack_Size+0x1180cd0>
     8b8:	90030800 	andls	r0, r3, r0, lsl #16
     8bc:	01020104 	tsteq	r2, r4, lsl #2
     8c0:	00010100 	andeq	r0, r1, r0, lsl #2
     8c4:	0b480205 	bleq	12010e0 <__Stack_Size+0x1200ce0>
     8c8:	9b030800 	blls	c28d0 <__Stack_Size+0xc24d0>
     8cc:	01020104 	tsteq	r2, r4, lsl #2
     8d0:	00010100 	andeq	r0, r1, r0, lsl #2
     8d4:	0b4a0205 	bleq	12810f0 <__Stack_Size+0x1280cf0>
     8d8:	a6030800 	strge	r0, [r3], -r0, lsl #16
     8dc:	01020104 	tsteq	r2, r4, lsl #2
     8e0:	00010100 	andeq	r0, r1, r0, lsl #2
     8e4:	0b4c0205 	bleq	1301100 <__Stack_Size+0x1300d00>
     8e8:	b1030800 	tstlt	r3, r0, lsl #16
     8ec:	01020104 	tsteq	r2, r4, lsl #2
     8f0:	00010100 	andeq	r0, r1, r0, lsl #2
     8f4:	0b4e0205 	bleq	1381110 <__Stack_Size+0x1380d10>
     8f8:	bc030800 	stclt	8, cr0, [r3], {-0}
     8fc:	01020104 	tsteq	r2, r4, lsl #2
     900:	00010100 	andeq	r0, r1, r0, lsl #2
     904:	0b500205 	bleq	1401120 <__Stack_Size+0x1400d20>
     908:	cd030800 	stcgt	8, cr0, [r3, #-0]
     90c:	21010104 	tstcs	r1, r4, lsl #2
     910:	00130267 	andseq	r0, r3, r7, ror #4
     914:	05000101 	streq	r0, [r0, #-257]	; 0x101
     918:	000b8402 	andeq	r8, fp, r2, lsl #8
     91c:	04dd0308 	ldrbeq	r0, [sp], #776	; 0x308
     920:	7a031801 	bvc	c692c <__Stack_Size+0xc652c>
     924:	02d72620 	sbcseq	r2, r7, #32, 12	; 0x2000000
     928:	0101000e 	tsteq	r1, lr
     92c:	c0020500 	andgt	r0, r2, r0, lsl #10
     930:	0308000b 	movweq	r0, #32779	; 0x800b
     934:	020104f3 	andeq	r0, r1, #-218103808	; 0xf3000000
     938:	01010001 	tsteq	r1, r1
     93c:	c2020500 	andgt	r0, r2, #0, 10
     940:	0308000b 	movweq	r0, #32779	; 0x800b
     944:	020104ff 	andeq	r0, r1, #-16777216	; 0xff000000
     948:	01010001 	tsteq	r1, r1
     94c:	c4020500 	strgt	r0, [r2], #-1280	; 0x500
     950:	0308000b 	movweq	r0, #32779	; 0x800b
     954:	0201058a 	andeq	r0, r1, #578813952	; 0x22800000
     958:	01010001 	tsteq	r1, r1
     95c:	c6020500 	strgt	r0, [r2], -r0, lsl #10
     960:	0308000b 	movweq	r0, #32779	; 0x800b
     964:	02010595 	andeq	r0, r1, #624951296	; 0x25400000
     968:	01010001 	tsteq	r1, r1
     96c:	c8020500 	stmdagt	r2, {r8, sl}
     970:	0308000b 	movweq	r0, #32779	; 0x800b
     974:	020105a0 	andeq	r0, r1, #160, 10	; 0x28000000
     978:	01010001 	tsteq	r1, r1
     97c:	ca020500 	bgt	81d84 <__Stack_Size+0x81984>
     980:	0308000b 	movweq	r0, #32779	; 0x800b
     984:	020105ac 	andeq	r0, r1, #172, 10	; 0x2b000000
     988:	01010001 	tsteq	r1, r1
     98c:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
     990:	0308000b 	movweq	r0, #32779	; 0x800b
     994:	020105b8 	andeq	r0, r1, #184, 10	; 0x2e000000
     998:	01010001 	tsteq	r1, r1
     99c:	ce020500 	cfsh32gt	mvfx0, mvfx2, #0
     9a0:	0308000b 	movweq	r0, #32779	; 0x800b
     9a4:	020105c3 	andeq	r0, r1, #817889280	; 0x30c00000
     9a8:	01010001 	tsteq	r1, r1
     9ac:	d0020500 	andle	r0, r2, r0, lsl #10
     9b0:	0308000b 	movweq	r0, #32779	; 0x800b
     9b4:	020105ce 	andeq	r0, r1, #864026624	; 0x33800000
     9b8:	01010001 	tsteq	r1, r1
     9bc:	d2020500 	andle	r0, r2, #0, 10
     9c0:	0308000b 	movweq	r0, #32779	; 0x800b
     9c4:	020105d9 	andeq	r0, r1, #910163968	; 0x36400000
     9c8:	01010001 	tsteq	r1, r1
     9cc:	d4020500 	strle	r0, [r2], #-1280	; 0x500
     9d0:	0308000b 	movweq	r0, #32779	; 0x800b
     9d4:	020105e4 	andeq	r0, r1, #228, 10	; 0x39000000
     9d8:	01010001 	tsteq	r1, r1
     9dc:	d6020500 	strle	r0, [r2], -r0, lsl #10
     9e0:	0308000b 	movweq	r0, #32779	; 0x800b
     9e4:	020105ef 	andeq	r0, r1, #1002438656	; 0x3bc00000
     9e8:	01010001 	tsteq	r1, r1
     9ec:	d8020500 	stmdale	r2, {r8, sl}
     9f0:	0308000b 	movweq	r0, #32779	; 0x800b
     9f4:	020105fa 	andeq	r0, r1, #1048576000	; 0x3e800000
     9f8:	01010001 	tsteq	r1, r1
     9fc:	da020500 	ble	81e04 <__Stack_Size+0x81a04>
     a00:	0308000b 	movweq	r0, #32779	; 0x800b
     a04:	02010685 	andeq	r0, r1, #139460608	; 0x8500000
     a08:	01010001 	tsteq	r1, r1
     a0c:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
     a10:	0308000b 	movweq	r0, #32779	; 0x800b
     a14:	02010690 	andeq	r0, r1, #144, 12	; 0x9000000
     a18:	01010001 	tsteq	r1, r1
     a1c:	de020500 	cfsh32le	mvfx0, mvfx2, #0
     a20:	0308000b 	movweq	r0, #32779	; 0x800b
     a24:	0201069b 	andeq	r0, r1, #162529280	; 0x9b00000
     a28:	01010001 	tsteq	r1, r1
     a2c:	e0020500 	and	r0, r2, r0, lsl #10
     a30:	0308000b 	movweq	r0, #32779	; 0x800b
     a34:	020106a6 	andeq	r0, r1, #174063616	; 0xa600000
     a38:	01010001 	tsteq	r1, r1
     a3c:	e2020500 	and	r0, r2, #0, 10
     a40:	0308000b 	movweq	r0, #32779	; 0x800b
     a44:	020106b1 	andeq	r0, r1, #185597952	; 0xb100000
     a48:	01010001 	tsteq	r1, r1
     a4c:	e4020500 	str	r0, [r2], #-1280	; 0x500
     a50:	0308000b 	movweq	r0, #32779	; 0x800b
     a54:	020106bc 	andeq	r0, r1, #188, 12	; 0xbc00000
     a58:	01010001 	tsteq	r1, r1
     a5c:	e6020500 	str	r0, [r2], -r0, lsl #10
     a60:	0308000b 	movweq	r0, #32779	; 0x800b
     a64:	020106c7 	andeq	r0, r1, #208666624	; 0xc700000
     a68:	01010001 	tsteq	r1, r1
     a6c:	e8020500 	stmda	r2, {r8, sl}
     a70:	0308000b 	movweq	r0, #32779	; 0x800b
     a74:	020106d3 	andeq	r0, r1, #221249536	; 0xd300000
     a78:	01010001 	tsteq	r1, r1
     a7c:	00000043 	andeq	r0, r0, r3, asr #32
     a80:	003d0002 	eorseq	r0, sp, r2
     a84:	01020000 	mrseq	r0, (UNDEF: 2)
     a88:	000d0efb 	strdeq	r0, [sp], -fp
     a8c:	01010101 	tsteq	r1, r1, lsl #2
     a90:	01000000 	mrseq	r0, (UNDEF: 0)
     a94:	6c010000 	stcvs	0, cr0, [r1], {-0}
     a98:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
     a9c:	0000636e 	andeq	r6, r0, lr, ror #6
     aa0:	5f627375 	svcpl	0x00627375
     aa4:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
     aa8:	0000632e 	andeq	r6, r0, lr, lsr #6
     aac:	74730000 	ldrbtvc	r0, [r3], #-0
     ab0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     ab4:	5f783031 	svcpl	0x00783031
     ab8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
     abc:	0100682e 	tsteq	r0, lr, lsr #16
     ac0:	61000000 	mrsvs	r0, (UNDEF: 0)
     ac4:	02000001 	andeq	r0, r0, #1
     ac8:	00008c00 	andeq	r8, r0, r0, lsl #24
     acc:	fb010200 	blx	412d6 <__Stack_Size+0x40ed6>
     ad0:	01000d0e 	tsteq	r0, lr, lsl #26
     ad4:	00010101 	andeq	r0, r1, r1, lsl #2
     ad8:	00010000 	andeq	r0, r1, r0
     adc:	696c0100 	stmdbvs	ip!, {r8}^
     ae0:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     ae4:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     ae8:	53552f62 	cmppl	r5, #392	; 0x188
     aec:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
     af0:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     af4:	002e0063 	eoreq	r0, lr, r3, rrx
     af8:	62737500 	rsbsvs	r7, r3, #0, 10
     afc:	646e655f 	strbtvs	r6, [lr], #-1375	; 0x55f
     b00:	00632e70 	rsbeq	r2, r3, r0, ror lr
     b04:	73000000 	movwvc	r0, #0
     b08:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     b0c:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
     b10:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     b14:	00682e65 	rsbeq	r2, r8, r5, ror #28
     b18:	73000001 	movwvc	r0, #1
     b1c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     b20:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
     b24:	616c665f 	cmnvs	ip, pc, asr r6
     b28:	682e6873 	stmdavs	lr!, {r0, r1, r4, r5, r6, fp, sp, lr}
     b2c:	00000100 	andeq	r0, r0, r0, lsl #2
     b30:	5f627375 	svcpl	0x00627375
     b34:	2e6c6973 	mcrcs	9, 3, r6, cr12, cr3, {3}
     b38:	00020068 	andeq	r0, r2, r8, rrx
     b3c:	42535500 	subsmi	r5, r3, #0, 10
     b40:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     b44:	0300682e 	movweq	r6, #2094	; 0x82e
     b48:	73750000 	cmnvc	r5, #0
     b4c:	65725f62 	ldrbvs	r5, [r2, #-3938]!	; 0xf62
     b50:	682e7367 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
     b54:	00000200 	andeq	r0, r0, r0, lsl #4
     b58:	02050000 	andeq	r0, r5, #0
     b5c:	08000bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp}
     b60:	0100c103 	tsteq	r0, r3, lsl #2
     b64:	00060214 	andeq	r0, r6, r4, lsl r2
     b68:	05000101 	streq	r0, [r0, #-257]	; 0x101
     b6c:	000bf802 	andeq	pc, fp, r2, lsl #16
     b70:	00f50308 	rscseq	r0, r5, r8, lsl #6
     b74:	7a033401 	bvc	cdb80 <__Stack_Size+0xcd780>
     b78:	7a032620 	bvc	ca400 <__Stack_Size+0xca000>
     b7c:	7a032620 	bvc	ca404 <__Stack_Size+0xca004>
     b80:	5a232620 	bpl	8ca408 <__Stack_Size+0x8ca008>
     b84:	01040200 	mrseq	r0, R12_usr
     b88:	36062006 	strcc	r2, [r6], -r6
     b8c:	1e764b08 	vaddne.f64	d20, d6, d8
     b90:	4c325a30 	ldcmi	10, cr5, [r2], #-192	; 0xffffff40
     b94:	004c233d 	subeq	r2, ip, sp, lsr r3
     b98:	31020402 	tstcc	r2, r2, lsl #8
     b9c:	02040200 	andeq	r0, r4, #0, 4
     ba0:	04020022 	streq	r0, [r2], #-34	; 0x22
     ba4:	02001e02 	andeq	r1, r0, #2, 28
     ba8:	00300204 	eorseq	r0, r0, r4, lsl #4
     bac:	03020402 	movweq	r0, #9218	; 0x2402
     bb0:	02008262 	andeq	r8, r0, #536870918	; 0x20000006
     bb4:	1e030204 	cdpne	2, 0, cr0, cr3, cr4, {0}
     bb8:	04020020 	streq	r0, [r2], #-32
     bbc:	3c620302 	stclcc	3, cr0, [r2], #-8
     bc0:	02040200 	andeq	r0, r4, #0, 4
     bc4:	00201e03 	eoreq	r1, r0, r3, lsl #28
     bc8:	30020402 	andcc	r0, r2, r2, lsl #8
     bcc:	02040200 	andeq	r0, r4, #0, 4
     bd0:	0402001e 	streq	r0, [r2], #-30
     bd4:	304e2202 	subcc	r2, lr, r2, lsl #4
     bd8:	1e1e4c4d 	cdpne	12, 1, cr4, cr14, cr13, {2}
     bdc:	09031e30 	stmdbeq	r3, {r4, r5, r9, sl, fp, ip}
     be0:	00140220 	andseq	r0, r4, r0, lsr #4
     be4:	05000101 	streq	r0, [r0, #-257]	; 0x101
     be8:	000cfc02 	andeq	pc, ip, r2, lsl #24
     bec:	00d90308 	sbcseq	r0, r9, r8, lsl #6
     bf0:	09032301 	stmdbeq	r3, {r0, r8, r9, sp}
     bf4:	2077034a 	rsbscs	r0, r7, sl, asr #6
     bf8:	03200903 	teqeq	r0, #49152	; 0xc000
     bfc:	09032077 	stmdbeq	r3, {r0, r1, r2, r4, r5, r6, sp}
     c00:	20770320 	rsbscs	r0, r7, r0, lsr #6
     c04:	212e0903 	teqcs	lr, r3, lsl #18
     c08:	03265b2f 	teqeq	r6, #48128	; 0xbc00
     c0c:	2ca6207a 	stccs	0, cr2, [r6], #488	; 0x1e8
     c10:	01000c02 	tsteq	r0, r2, lsl #24
     c14:	02050001 	andeq	r0, r5, #1
     c18:	00000000 	andeq	r0, r0, r0
     c1c:	0101be03 	tsteq	r1, r3, lsl #28
     c20:	025b4c15 	subseq	r4, fp, #5376	; 0x1500
     c24:	01010007 	tsteq	r1, r7
     c28:	0000008e 	andeq	r0, r0, lr, lsl #1
     c2c:	00680002 	rsbeq	r0, r8, r2
     c30:	01020000 	mrseq	r0, (UNDEF: 2)
     c34:	000d0efb 	strdeq	r0, [sp], -fp
     c38:	01010101 	tsteq	r1, r1, lsl #2
     c3c:	01000000 	mrseq	r0, (UNDEF: 0)
     c40:	6c010000 	stcvs	0, cr0, [r1], {-0}
     c44:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
     c48:	6c00636e 	stcvs	3, cr6, [r0], {110}	; 0x6e
     c4c:	552f6269 	strpl	r6, [pc, #-617]!	; 9eb <__Stack_Size+0x5eb>
     c50:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
     c54:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
     c58:	0000636e 	andeq	r6, r0, lr, ror #6
     c5c:	5f627375 	svcpl	0x00627375
     c60:	72747369 	rsbsvc	r7, r4, #-1543503871	; 0xa4000001
     c64:	0000632e 	andeq	r6, r0, lr, lsr #6
     c68:	74730000 	ldrbtvc	r0, [r3], #-0
     c6c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     c70:	5f783031 	svcpl	0x00783031
     c74:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
     c78:	0100682e 	tsteq	r0, lr, lsr #16
     c7c:	73750000 	cmnvc	r5, #0
     c80:	6f635f62 	svcvs	0x00635f62
     c84:	682e6572 	stmdavs	lr!, {r1, r4, r5, r6, r8, sl, sp, lr}
     c88:	00000200 	andeq	r0, r0, r0, lsl #4
     c8c:	5f627375 	svcpl	0x00627375
     c90:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     c94:	00020068 	andeq	r0, r2, r8, rrx
     c98:	05000000 	streq	r0, [r0, #-0]
     c9c:	000d5802 	andeq	r5, sp, r2, lsl #16
     ca0:	013e0308 	teqeq	lr, r8, lsl #6
     ca4:	2f435b22 	svccs	0x00435b22
     ca8:	0350211f 	cmpeq	r0, #-1073741817	; 0xc0000007
     cac:	44344a09 	ldrtmi	r4, [r4], #-2569	; 0xa09
     cb0:	5035433d 	eorspl	r4, r5, sp, lsr r3
     cb4:	000e0236 	andeq	r0, lr, r6, lsr r2
     cb8:	020f0101 	andeq	r0, pc, #1073741824	; 0x40000000
     cbc:	00020000 	andeq	r0, r2, r0
     cc0:	000000ba 	strheq	r0, [r0], -sl
     cc4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     cc8:	0101000d 	tsteq	r1, sp
     ccc:	00000101 	andeq	r0, r0, r1, lsl #2
     cd0:	00000100 	andeq	r0, r0, r0, lsl #2
     cd4:	62696c01 	rsbvs	r6, r9, #256	; 0x100
     cd8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     cdc:	62696c00 	rsbvs	r6, r9, #0, 24
     ce0:	4253552f 	subsmi	r5, r3, #197132288	; 0xbc00000
     ce4:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
     ce8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     cec:	73750000 	cmnvc	r5, #0
     cf0:	72705f62 	rsbsvc	r5, r0, #392	; 0x188
     cf4:	632e706f 	teqvs	lr, #111	; 0x6f
     cf8:	00000000 	andeq	r0, r0, r0
     cfc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     d00:	30316632 	eorscc	r6, r1, r2, lsr r6
     d04:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     d08:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
     d0c:	00000100 	andeq	r0, r0, r0, lsl #2
     d10:	5f627375 	svcpl	0x00627375
     d14:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xf63
     d18:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     d1c:	73750000 	cmnvc	r5, #0
     d20:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xf62
     d24:	00682e66 	rsbeq	r2, r8, r6, ror #28
     d28:	75000002 	strvc	r0, [r0, #-2]
     d2c:	705f6273 	subsvc	r6, pc, r3, ror r2	; <UNPREDICTABLE>
     d30:	2e706f72 	mrccs	15, 3, r6, cr0, cr2, {3}
     d34:	00000068 	andeq	r0, r0, r8, rrx
     d38:	42535500 	subsmi	r5, r3, #0, 10
     d3c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     d40:	0000682e 	andeq	r6, r0, lr, lsr #16
     d44:	73750000 	cmnvc	r5, #0
     d48:	6e695f62 	cdpvs	15, 6, cr5, cr9, cr2, {3}
     d4c:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
     d50:	00000200 	andeq	r0, r0, r0, lsl #4
     d54:	5f627375 	svcpl	0x00627375
     d58:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
     d5c:	0000682e 	andeq	r6, r0, lr, lsr #16
     d60:	73750000 	cmnvc	r5, #0
     d64:	69735f62 	ldmdbvs	r3!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     d68:	00682e6c 	rsbeq	r2, r8, ip, ror #28
     d6c:	75000002 	strvc	r0, [r0, #-2]
     d70:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
     d74:	2e736765 	cdpcs	7, 7, cr6, cr3, cr5, {3}
     d78:	00020068 	andeq	r0, r2, r8, rrx
     d7c:	05000000 	streq	r0, [r0, #-0]
     d80:	000dc402 	andeq	ip, sp, r2, lsl #8
     d84:	01c90308 	biceq	r0, r9, r8, lsl #6
     d88:	023f1501 	eorseq	r1, pc, #4194304	; 0x400000
     d8c:	01010009 	tsteq	r1, r9
     d90:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
     d94:	0308000d 	movweq	r0, #32781	; 0x800d
     d98:	130101db 	movwne	r0, #4571	; 0x11db
     d9c:	01000602 	tsteq	r0, r2, lsl #12
     da0:	02050001 	andeq	r0, r5, #1
     da4:	08000de8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, fp}
     da8:	0101e803 	tsteq	r1, r3, lsl #16
     dac:	07024113 	smladeq	r2, r3, r1, r4
     db0:	00010100 	andeq	r0, r1, r0, lsl #2
     db4:	0dfc0205 	lfmeq	f0, 2, [ip, #20]!
     db8:	fb030800 	blx	c2dc2 <__Stack_Size+0xc29c2>
     dbc:	01020101 	tsteq	r2, r1, lsl #2
     dc0:	00010100 	andeq	r0, r1, r0, lsl #2
     dc4:	0e000205 	cdpeq	2, 0, cr0, cr0, cr5, {0}
     dc8:	88030800 	stmdahi	r3, {fp}
     dcc:	03190102 	tsteq	r9, #-2147483648	; 0x80000000
     dd0:	22272079 	eorcs	r2, r7, #121	; 0x79
     dd4:	03741003 	cmneq	r4, #3
     dd8:	24302e75 	ldrtcs	r2, [r0], #-3701	; 0xe75
     ddc:	301c321c 	andscc	r3, ip, ip, lsl r2
     de0:	2e74034f 	cdpcs	3, 7, cr0, cr4, cr15, {2}
     de4:	21201103 	teqcs	r0, r3, lsl #2
     de8:	211e221f 	tstcs	lr, pc, lsl r2
     dec:	02212121 	eoreq	r2, r1, #1073741832	; 0x40000008
     df0:	0101000a 	tsteq	r1, sl
     df4:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
     df8:	0308000e 	movweq	r0, #32782	; 0x800e
     dfc:	030102b4 	movweq	r0, #4788	; 0x12b4
     e00:	3e760112 	mrccc	1, 3, r0, cr6, cr2, {0}
     e04:	03022152 	movweq	r2, #8530	; 0x2152
     e08:	00010100 	andeq	r0, r1, r0, lsl #2
     e0c:	0e800205 	cdpeq	2, 8, cr0, cr0, cr5, {0}
     e10:	8e030800 	cdphi	8, 0, cr0, cr3, cr0, {0}
     e14:	24140103 	ldrcs	r0, [r4], #-259	; 0x103
     e18:	4a7a0324 	bmi	1e81ab0 <__Stack_Size+0x1e816b0>
     e1c:	00010227 	andeq	r0, r1, r7, lsr #4
     e20:	05000101 	streq	r0, [r0, #-257]	; 0x101
     e24:	000e9002 	andeq	r9, lr, r2
     e28:	03a30308 			; <UNDEFINED> instruction: 0x03a30308
     e2c:	010e0301 	tsteq	lr, r1, lsl #6
     e30:	21224b22 	teqcs	r2, r2, lsr #22
     e34:	01000502 	tsteq	r0, r2, lsl #10
     e38:	02050001 	andeq	r0, r5, #1
     e3c:	08000ea8 	stmdaeq	r0, {r3, r5, r7, r9, sl, fp}
     e40:	0103c103 	tsteq	r3, r3, lsl #2
     e44:	224c4c16 	subcs	r4, ip, #5632	; 0x1600
     e48:	0221234b 	eoreq	r2, r1, #738197505	; 0x2c000001
     e4c:	01010007 	tsteq	r1, r7
     e50:	d4020500 	strle	r0, [r2], #-1280	; 0x500
     e54:	0308000e 	movweq	r0, #32782	; 0x800e
     e58:	240100ea 	strcs	r0, [r1], #-234	; 0xea
     e5c:	30314d30 	eorscc	r4, r1, r0, lsr sp
     e60:	01000702 	tsteq	r0, r2, lsl #14
     e64:	02050001 	andeq	r0, r5, #1
     e68:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
     e6c:	01018403 	tsteq	r1, r3, lsl #8
     e70:	231d2314 	tstcs	sp, #20, 6	; 0x50000000
     e74:	1d23221b 	sfmne	f2, 4, [r3, #-108]!	; 0xffffff94
     e78:	200f0326 	andcs	r0, pc, r6, lsr #6
     e7c:	4b4b593f 	blmi	12d7380 <__Stack_Size+0x12d6f80>
     e80:	3f673d4b 	svccc	0x00673d4b
     e84:	4d4b4b4b 	vstrmi	d20, [fp, #-300]	; 0xfffffed4
     e88:	4d4b5959 	stclmi	9, cr5, [fp, #-356]	; 0xfffffe9c
     e8c:	594b594b 	stmdbpl	fp, {r0, r1, r3, r6, r8, fp, ip, lr}^
     e90:	0c023f4d 	stceq	15, cr3, [r2], {77}	; 0x4d
     e94:	00010100 	andeq	r0, r1, r0, lsl #2
     e98:	0fd80205 	svceq	0x00d80205
     e9c:	dd030800 	stcle	8, cr0, [r3, #-0]
     ea0:	02140102 	andseq	r0, r4, #-2147483648	; 0x80000000
     ea4:	01010006 	tsteq	r1, r6
     ea8:	e4020500 	str	r0, [r2], #-1280	; 0x500
     eac:	0308000f 	movweq	r0, #32783	; 0x800f
     eb0:	140102ea 	strne	r0, [r1], #-746	; 0x2ea
     eb4:	01000602 	tsteq	r0, r2, lsl #12
     eb8:	02050001 	andeq	r0, r5, #1
     ebc:	08000ff0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, fp}
     ec0:	0102f703 	tsteq	r2, r3, lsl #14
     ec4:	5a343d14 	bpl	d1031c <__Stack_Size+0xd0ff1c>
     ec8:	01000602 	tsteq	r0, r2, lsl #12
     ecc:	00018301 	andeq	r8, r1, r1, lsl #6
     ed0:	c5000200 	strgt	r0, [r0, #-512]	; 0x200
     ed4:	02000000 	andeq	r0, r0, #0
     ed8:	0d0efb01 	vstreq	d15, [lr, #-4]
     edc:	01010100 	mrseq	r0, (UNDEF: 17)
     ee0:	00000001 	andeq	r0, r0, r1
     ee4:	01000001 	tsteq	r0, r1
     ee8:	2f62696c 	svccs	0x0062696c
     eec:	00636e69 	rsbeq	r6, r3, r9, ror #28
     ef0:	2f62696c 	svccs	0x0062696c
     ef4:	5f425355 	svcpl	0x00425355
     ef8:	2f62696c 	svccs	0x0062696c
     efc:	00636e69 	rsbeq	r6, r3, r9, ror #28
     f00:	42535500 	subsmi	r5, r3, #0, 10
     f04:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     f08:	0000632e 	andeq	r6, r0, lr, lsr #6
     f0c:	74730000 	ldrbtvc	r0, [r3], #-0
     f10:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     f14:	5f783031 	svcpl	0x00783031
     f18:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
     f1c:	0100682e 	tsteq	r0, lr, lsr #16
     f20:	74730000 	ldrbtvc	r0, [r3], #-0
     f24:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     f28:	5f783031 	svcpl	0x00783031
     f2c:	2e70616d 	rpwcssz	f6, f0, #5.0
     f30:	00010068 	andeq	r0, r1, r8, rrx
     f34:	62737500 	rsbsvs	r7, r3, #0, 10
     f38:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
     f3c:	00682e65 	rsbeq	r2, r8, r5, ror #28
     f40:	55000002 	strpl	r0, [r0, #-2]
     f44:	6e494253 	mcrvs	2, 2, r4, cr9, cr3, {2}
     f48:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
     f4c:	00000000 	andeq	r0, r0, r0
     f50:	5f627375 	svcpl	0x00627375
     f54:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xe69
     f58:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     f5c:	73750000 	cmnvc	r5, #0
     f60:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xf62
     f64:	682e6373 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}
     f68:	00000000 	andeq	r0, r0, r0
     f6c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     f70:	30316632 	eorscc	r6, r1, r2, lsr r6
     f74:	70675f78 	rsbvc	r5, r7, r8, ror pc
     f78:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     f7c:	00000100 	andeq	r0, r0, r0, lsl #2
     f80:	5f627375 	svcpl	0x00627375
     f84:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
     f88:	00020068 	andeq	r0, r2, r8, rrx
     f8c:	62737500 	rsbsvs	r7, r3, #0, 10
     f90:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
     f94:	00682e73 	rsbeq	r2, r8, r3, ror lr
     f98:	00000002 	andeq	r0, r0, r2
     f9c:	10020500 	andne	r0, r2, r0, lsl #10
     fa0:	03080010 	movweq	r0, #32784	; 0x8010
     fa4:	230102f3 	movwcs	r0, #4851	; 0x12f3
     fa8:	01040200 	mrseq	r0, R12_usr
     fac:	3e062006 	cdpcc	0, 0, cr2, cr6, cr6, {0}
     fb0:	3a413230 	bcc	104d878 <__Stack_Size+0x104d478>
     fb4:	01023e22 	tsteq	r2, r2, lsr #28
     fb8:	00010100 	andeq	r0, r1, r0, lsl #2
     fbc:	10380205 	eorsne	r0, r8, r5, lsl #4
     fc0:	27030800 	strcs	r0, [r3, -r0, lsl #16]
     fc4:	02830301 	addeq	r0, r3, #67108864	; 0x4000000
     fc8:	7e860320 	cdpvc	3, 8, cr0, cr6, cr0, {1}
     fcc:	241e4258 	ldrcs	r4, [lr], #-600	; 0x258
     fd0:	3d22221c 	sfmcc	f2, 4, [r2, #-112]!	; 0xffffff90
     fd4:	000a0224 	andeq	r0, sl, r4, lsr #4
     fd8:	05000101 	streq	r0, [r0, #-257]	; 0x101
     fdc:	00000002 	andeq	r0, r0, r2
     fe0:	00da0300 	sbcseq	r0, sl, r0, lsl #6
     fe4:	02021301 	andeq	r1, r2, #67108864	; 0x4000000
     fe8:	00010100 	andeq	r0, r1, r0, lsl #2
     fec:	10700205 	rsbsne	r0, r0, r5, lsl #4
     ff0:	a6030800 	strge	r0, [r3], -r0, lsl #16
     ff4:	23130102 	tstcs	r3, #-2147483648	; 0x80000000
     ff8:	0008025d 	andeq	r0, r8, sp, asr r2
     ffc:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1000:	00108c02 	andseq	r8, r0, r2, lsl #24
    1004:	00c70308 	sbceq	r0, r7, r8, lsl #6
    1008:	3e3e2301 	cdpcc	3, 3, cr2, cr14, cr1, {0}
    100c:	0602353e 			; <UNDEFINED> instruction: 0x0602353e
    1010:	00010100 	andeq	r0, r1, r0, lsl #2
    1014:	10b00205 	adcsne	r0, r0, r5, lsl #4
    1018:	df030800 	svcle	0x00030800
    101c:	02130100 	andseq	r0, r3, #0, 2
    1020:	01010002 	tsteq	r1, r2
    1024:	b4020500 	strlt	r0, [r2], #-1280	; 0x500
    1028:	03080010 	movweq	r0, #32784	; 0x8010
    102c:	150102bb 	strne	r0, [r1, #-699]	; 0x2bb
    1030:	2121231d 	teqcs	r1, sp, lsl r3
    1034:	234b3032 	movtcs	r3, #45106	; 0xb032
    1038:	000b022b 	andeq	r0, fp, fp, lsr #4
    103c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1040:	0010e802 	andseq	lr, r0, r2, lsl #16
    1044:	02dd0308 	sbcseq	r0, sp, #8, 6	; 0x20000000
    1048:	3e402001 	cdpcc	0, 4, cr2, cr0, cr1, {0}
    104c:	023e4b59 	eorseq	r4, lr, #91136	; 0x16400
    1050:	01010002 	tsteq	r1, r2
    1054:	0000030e 	andeq	r0, r0, lr, lsl #6
    1058:	00740002 	rsbseq	r0, r4, r2
    105c:	01020000 	mrseq	r0, (UNDEF: 2)
    1060:	000d0efb 	strdeq	r0, [sp], -fp
    1064:	01010101 	tsteq	r1, r1, lsl #2
    1068:	01000000 	mrseq	r0, (UNDEF: 0)
    106c:	6c010000 	stcvs	0, cr0, [r1], {-0}
    1070:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    1074:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
    1078:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    107c:	0000636e 	andeq	r6, r0, lr, ror #6
    1080:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1084:	30316632 	eorscc	r6, r1, r2, lsr r6
    1088:	6c665f78 	stclvs	15, cr5, [r6], #-480	; 0xfffffe20
    108c:	2e687361 	cdpcs	3, 6, cr7, cr8, cr1, {3}
    1090:	00010063 	andeq	r0, r1, r3, rrx
    1094:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1098:	31663233 	cmncc	r6, r3, lsr r2
    109c:	745f7830 	ldrbvc	r7, [pc], #-2096	; 10a4 <__Stack_Size+0xca4>
    10a0:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    10a4:	00020068 	andeq	r0, r2, r8, rrx
    10a8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    10ac:	31663233 	cmncc	r6, r3, lsr r2
    10b0:	6d5f7830 	ldclvs	8, cr7, [pc, #-192]	; ff8 <__Stack_Size+0xbf8>
    10b4:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    10b8:	00000200 	andeq	r0, r0, r0, lsl #4
    10bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    10c0:	30316632 	eorscc	r6, r1, r2, lsr r6
    10c4:	6c665f78 	stclvs	15, cr5, [r6], #-480	; 0xfffffe20
    10c8:	2e687361 	cdpcs	3, 6, cr7, cr8, cr1, {3}
    10cc:	00020068 	andeq	r0, r2, r8, rrx
    10d0:	05000000 	streq	r0, [r0, #-0]
    10d4:	00111402 	andseq	r1, r1, r2, lsl #8
    10d8:	00d60308 	sbcseq	r0, r6, r8, lsl #6
    10dc:	02591701 	subseq	r1, r9, #262144	; 0x40000
    10e0:	01010007 	tsteq	r1, r7
    10e4:	00020500 	andeq	r0, r2, r0, lsl #10
    10e8:	03000000 	movweq	r0, #0
    10ec:	170100ea 	strne	r0, [r1, -sl, ror #1]
    10f0:	00070259 	andeq	r0, r7, r9, asr r2
    10f4:	05000101 	streq	r0, [r0, #-257]	; 0x101
    10f8:	00112c02 	andseq	r2, r1, r2, lsl #24
    10fc:	00fe0308 	rscseq	r0, lr, r8, lsl #6
    1100:	02591701 	subseq	r1, r9, #262144	; 0x40000
    1104:	01010007 	tsteq	r1, r7
    1108:	44020500 	strmi	r0, [r2], #-1280	; 0x500
    110c:	03080011 	movweq	r0, #32785	; 0x8011
    1110:	14010190 	strne	r0, [r1], #-400	; 0x190
    1114:	0009023d 	andeq	r0, r9, sp, lsr r2
    1118:	05000101 	streq	r0, [r0, #-257]	; 0x101
    111c:	00115c02 	andseq	r5, r1, r2, lsl #24
    1120:	019e0308 	orrseq	r0, lr, r8, lsl #6
    1124:	08021401 	stmdaeq	r2, {r0, sl, ip}
    1128:	00010100 	andeq	r0, r1, r0, lsl #2
    112c:	00000205 	andeq	r0, r0, r5, lsl #4
    1130:	96030000 	strls	r0, [r3], -r0
    1134:	2f140105 	svccs	0x00140105
    1138:	01000402 	tsteq	r0, r2, lsl #8
    113c:	02050001 	andeq	r0, r5, #1
    1140:	00000000 	andeq	r0, r0, r0
    1144:	0105a303 	tsteq	r5, r3, lsl #6
    1148:	04022f14 	streq	r2, [r2], #-3860	; 0xf14
    114c:	00010100 	andeq	r0, r1, r0, lsl #2
    1150:	00000205 	andeq	r0, r0, r5, lsl #4
    1154:	b1030000 	mrslt	r0, (UNDEF: 3)
    1158:	03150105 	tsteq	r5, #1073741825	; 0x40000001
    115c:	06022e09 	streq	r2, [r2], -r9, lsl #28
    1160:	00010100 	andeq	r0, r1, r0, lsl #2
    1164:	00000205 	andeq	r0, r0, r5, lsl #4
    1168:	c7030000 	strgt	r0, [r3, -r0]
    116c:	03150105 	tsteq	r5, #1073741825	; 0x40000001
    1170:	06022e0a 	streq	r2, [r2], -sl, lsl #28
    1174:	00010100 	andeq	r0, r1, r0, lsl #2
    1178:	00000205 	andeq	r0, r0, r5, lsl #4
    117c:	e2030000 	and	r0, r3, #0
    1180:	1d280105 	stfnes	f0, [r8, #-20]!	; 0xffffffec
    1184:	07023323 	streq	r3, [r2, -r3, lsr #6]
    1188:	00010100 	andeq	r0, r1, r0, lsl #2
    118c:	00000205 	andeq	r0, r0, r5, lsl #4
    1190:	81030000 	mrshi	r0, (UNDEF: 3)
    1194:	3e180106 	mufcce	f0, f0, f6
    1198:	03294126 	teqeq	r9, #-2147483639	; 0x80000009
    119c:	04023c10 	streq	r3, [r2], #-3088	; 0xc10
    11a0:	00010100 	andeq	r0, r1, r0, lsl #2
    11a4:	116c0205 	cmnne	ip, r5, lsl #4
    11a8:	ae030800 	cdpge	8, 0, cr0, cr3, cr0, {0}
    11ac:	02170106 	andseq	r0, r7, #-2147483647	; 0x80000001
    11b0:	01010006 	tsteq	r1, r6
    11b4:	78020500 	stmdavc	r2, {r8, sl}
    11b8:	03080011 	movweq	r0, #32785	; 0x8011
    11bc:	150106bf 	strne	r0, [r1, #-1727]	; 0x6bf
    11c0:	03424250 	movteq	r4, #8784	; 0x2250
    11c4:	03344a70 	teqeq	r4, #112, 20	; 0x70000
    11c8:	03022010 	movweq	r2, #8208	; 0x2010
    11cc:	00010100 	andeq	r0, r1, r0, lsl #2
    11d0:	11a00205 	lslne	r0, r5, #4
    11d4:	e6030800 	str	r0, [r3], -r0, lsl #16
    11d8:	24200106 	strtcs	r0, [r0], #-262	; 0x106
    11dc:	04020031 	streq	r0, [r2], #-49	; 0x31
    11e0:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    11e4:	30201903 	eorcc	r1, r0, r3, lsl #18
    11e8:	2f746803 	svccs	0x00746803
    11ec:	02025d33 	andeq	r5, r2, #3264	; 0xcc0
    11f0:	00010100 	andeq	r0, r1, r0, lsl #2
    11f4:	11d80205 	bicsne	r0, r8, r5, lsl #4
    11f8:	ad030800 	stcge	8, cr0, [r3, #-0]
    11fc:	27200101 	strcs	r0, [r0, -r1, lsl #2]!
    1200:	2925314c 	stmdbcs	r5!, {r2, r3, r6, r8, ip, sp}
    1204:	304d214b 	subcc	r2, sp, fp, asr #2
    1208:	03026b23 	movweq	r6, #11043	; 0x2b23
    120c:	00010100 	andeq	r0, r1, r0, lsl #2
    1210:	00000205 	andeq	r0, r0, r5, lsl #4
    1214:	d4030000 	strle	r0, [r3], #-0
    1218:	4c240101 	stfmis	f0, [r4], #-4
    121c:	4b2a2431 	blmi	a8a2e8 <__Stack_Size+0xa89ee8>
    1220:	6b23304d 	blvs	8cd35c <__Stack_Size+0x8ccf5c>
    1224:	01000302 	tsteq	r0, r2, lsl #6
    1228:	02050001 	andeq	r0, r5, #1
    122c:	00000000 	andeq	r0, r0, r0
    1230:	0101f703 	tsteq	r1, r3, lsl #14
    1234:	36314c24 	ldrtcc	r4, [r1], -r4, lsr #24
    1238:	212e7803 	teqcs	lr, r3, lsl #16
    123c:	304d4b3f 	subcc	r4, sp, pc, lsr fp
    1240:	3c090331 	stccc	3, cr0, [r9], {49}	; 0x31
    1244:	31207703 	teqcc	r0, r3, lsl #14
    1248:	313f1d23 	teqcc	pc, r3, lsr #26
    124c:	232e0a03 	teqcs	lr, #12288	; 0x3000
    1250:	0007026c 	andeq	r0, r7, ip, ror #4
    1254:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1258:	00121802 	andseq	r1, r2, r2, lsl #16
    125c:	02b60308 	adcseq	r0, r6, #8, 6	; 0x20000000
    1260:	03272001 	teqeq	r7, #1
    1264:	30272079 	eorcc	r2, r7, r9, ror r0
    1268:	4c1b2532 	cfldr32mi	mvfx2, [fp], {50}	; 0x32
    126c:	31323031 	teqcc	r2, r1, lsr r0
    1270:	233c0a03 	teqcs	ip, #12288	; 0x3000
    1274:	0004026c 	andeq	r0, r4, ip, ror #4
    1278:	05000101 	streq	r0, [r0, #-257]	; 0x101
    127c:	00000002 	andeq	r0, r0, r2
    1280:	02f10300 	rscseq	r0, r1, #0, 6
    1284:	03272001 	teqeq	r7, #1
    1288:	30272079 	eorcc	r2, r7, r9, ror r0
    128c:	4c1c2431 	cfldrsmi	mvf2, [ip], {49}	; 0x31
    1290:	6b233022 	blvs	8cd320 <__Stack_Size+0x8ccf20>
    1294:	01000402 	tsteq	r0, r2, lsl #8
    1298:	02050001 	andeq	r0, r5, #1
    129c:	00000000 	andeq	r0, r0, r0
    12a0:	01039903 	tsteq	r3, r3, lsl #18
    12a4:	7a032620 	bvc	cab2c <__Stack_Size+0xca72c>
    12a8:	31302620 	teqcc	r0, r0, lsr #12
    12ac:	3f211b33 	svccc	0x00211b33
    12b0:	233d1c24 	teqcs	sp, #36, 24	; 0x2400
    12b4:	026b2330 	rsbeq	r2, fp, #48, 6	; 0xc0000000
    12b8:	01010006 	tsteq	r1, r6
    12bc:	00020500 	andeq	r0, r2, r0, lsl #10
    12c0:	03000000 	movweq	r0, #0
    12c4:	200103ca 	andcs	r0, r1, sl, asr #7
    12c8:	3e200f03 	cdpcc	15, 2, cr0, cr0, cr3, {0}
    12cc:	032e7703 	teqeq	lr, #786432	; 0xc0000
    12d0:	7503200c 	strvc	r2, [r3, #-12]
    12d4:	200b032e 	andcs	r0, fp, lr, lsr #6
    12d8:	1e223d21 	cdpne	13, 2, cr3, cr2, cr1, {1}
    12dc:	2072033e 	rsbscs	r0, r2, lr, lsr r3
    12e0:	372e1503 	strcc	r1, [lr, -r3, lsl #10]!
    12e4:	30231d23 	eorcc	r1, r3, r3, lsr #26
    12e8:	2069033e 	rsbcs	r0, r9, lr, lsr r3
    12ec:	23201703 	teqcs	r0, #786432	; 0xc0000
    12f0:	2e64033f 	mcrcs	3, 3, r0, cr4, cr15, {1}
    12f4:	302e1c03 	eorcc	r1, lr, r3, lsl #24
    12f8:	03206203 	teqeq	r0, #805306368	; 0x30000000
    12fc:	3f23201e 	svccc	0x0023201e
    1300:	032e5d03 	teqeq	lr, #3, 26	; 0xc0
    1304:	034c2023 	movteq	r2, #49187	; 0xc023
    1308:	2503205b 	strcs	r2, [r3, #-91]	; 0x5b
    130c:	313f2320 	teqcc	pc, r0, lsr #6
    1310:	0007026b 	andeq	r0, r7, fp, ror #4
    1314:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1318:	00000002 	andeq	r0, r0, r2
    131c:	04990300 	ldreq	r0, [r9], #768	; 0x300
    1320:	4c262001 	stcmi	0, cr2, [r6], #-4
    1324:	79033531 	stmdbvc	r3, {r0, r4, r5, r8, sl, ip, sp}
    1328:	4b3e212e 	blmi	f897e8 <__Stack_Size+0xf893e8>
    132c:	5b31304d 	blpl	c4d468 <__Stack_Size+0xc4d068>
    1330:	3232225a 	eorscc	r2, r2, #-1610612731	; 0xa0000005
    1334:	2379314c 	cmncs	r9, #76, 2
    1338:	0007026c 	andeq	r0, r7, ip, ror #4
    133c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1340:	00000002 	andeq	r0, r0, r2
    1344:	04ea0300 	strbteq	r0, [sl], #768	; 0x300
    1348:	20090301 	andcs	r0, r9, r1, lsl #6
    134c:	032e7703 	teqeq	lr, #786432	; 0xc0000
    1350:	3f212009 	svccc	0x00212009
    1354:	03207303 	teqeq	r0, #201326592	; 0xc000000
    1358:	31302e0d 	teqcc	r0, sp, lsl #28
    135c:	233e3f76 	teqcs	lr, #472	; 0x1d8
    1360:	0007026b 	andeq	r0, r7, fp, ror #4
    1364:	00cc0101 	sbceq	r0, ip, r1, lsl #2
    1368:	00020000 	andeq	r0, r2, r0
    136c:	0000005e 	andeq	r0, r0, lr, asr r0
    1370:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1374:	0101000d 	tsteq	r1, sp
    1378:	00000101 	andeq	r0, r0, r1, lsl #2
    137c:	00000100 	andeq	r0, r0, r0, lsl #2
    1380:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    1384:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1388:	62696c00 	rsbvs	r6, r9, #0, 24
    138c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1390:	74730000 	ldrbtvc	r0, [r3], #-0
    1394:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1398:	5f783031 	svcpl	0x00783031
    139c:	67647769 	strbvs	r7, [r4, -r9, ror #14]!
    13a0:	0100632e 	tsteq	r0, lr, lsr #6
    13a4:	74730000 	ldrbtvc	r0, [r3], #-0
    13a8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    13ac:	5f783031 	svcpl	0x00783031
    13b0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
    13b4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    13b8:	74730000 	ldrbtvc	r0, [r3], #-0
    13bc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    13c0:	5f783031 	svcpl	0x00783031
    13c4:	2e70616d 	rpwcssz	f6, f0, #5.0
    13c8:	00020068 	andeq	r0, r2, r8, rrx
    13cc:	05000000 	streq	r0, [r0, #-0]
    13d0:	00126002 	andseq	r6, r2, r2
    13d4:	012d0308 	teqeq	sp, r8, lsl #6
    13d8:	00060216 	andeq	r0, r6, r6, lsl r2
    13dc:	05000101 	streq	r0, [r0, #-257]	; 0x101
    13e0:	00126c02 	andseq	r6, r2, r2, lsl #24
    13e4:	00c40308 	sbceq	r0, r4, r8, lsl #6
    13e8:	06021601 	streq	r1, [r2], -r1, lsl #12
    13ec:	00010100 	andeq	r0, r1, r0, lsl #2
    13f0:	12780205 	rsbsne	r0, r8, #1342177280	; 0x50000000
    13f4:	d4030800 	strle	r0, [r3], #-2048	; 0x800
    13f8:	02160100 	andseq	r0, r6, #0, 2
    13fc:	01010006 	tsteq	r1, r6
    1400:	00020500 	andeq	r0, r2, r0, lsl #10
    1404:	03000000 	movweq	r0, #0
    1408:	130100e4 	movwne	r0, #4324	; 0x10e4
    140c:	01000802 	tsteq	r0, r2, lsl #16
    1410:	02050001 	andeq	r0, r5, #1
    1414:	00000000 	andeq	r0, r0, r0
    1418:	0100f103 	tsteq	r0, r3, lsl #2
    141c:	00080213 	andeq	r0, r8, r3, lsl r2
    1420:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1424:	00000002 	andeq	r0, r0, r2
    1428:	01800300 	orreq	r0, r0, r0, lsl #6
    142c:	0b031801 	bleq	c7438 <__Stack_Size+0xc7038>
    1430:	0007023c 	andeq	r0, r7, ip, lsr r2
    1434:	023a0101 	eorseq	r0, sl, #1073741824	; 0x40000000
    1438:	00020000 	andeq	r0, r2, r0
    143c:	00000085 	andeq	r0, r0, r5, lsl #1
    1440:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1444:	0101000d 	tsteq	r1, sp
    1448:	00000101 	andeq	r0, r0, r1, lsl #2
    144c:	00000100 	andeq	r0, r0, r0, lsl #2
    1450:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    1454:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1458:	62696c00 	rsbvs	r6, r9, #0, 24
    145c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1460:	74730000 	ldrbtvc	r0, [r3], #-0
    1464:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1468:	5f783031 	svcpl	0x00783031
    146c:	6f697067 	svcvs	0x00697067
    1470:	0100632e 	tsteq	r0, lr, lsr #6
    1474:	74730000 	ldrbtvc	r0, [r3], #-0
    1478:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    147c:	5f783031 	svcpl	0x00783031
    1480:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
    1484:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1488:	74730000 	ldrbtvc	r0, [r3], #-0
    148c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1490:	5f783031 	svcpl	0x00783031
    1494:	2e70616d 	rpwcssz	f6, f0, #5.0
    1498:	00020068 	andeq	r0, r2, r8, rrx
    149c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    14a0:	31663233 	cmncc	r6, r3, lsr r2
    14a4:	675f7830 	smmlarvs	pc, r0, r8, r7	; <UNPREDICTABLE>
    14a8:	2e6f6970 	mcrcs	9, 3, r6, cr15, cr0, {3}
    14ac:	00020068 	andeq	r0, r2, r8, rrx
    14b0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    14b4:	31663233 	cmncc	r6, r3, lsr r2
    14b8:	725f7830 	subsvc	r7, pc, #48, 16	; 0x300000
    14bc:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    14c0:	00000200 	andeq	r0, r0, r0, lsl #4
    14c4:	02050000 	andeq	r0, r5, #0
    14c8:	00000000 	andeq	r0, r0, r0
    14cc:	24013303 	strcs	r3, [r1], #-771	; 0x303
    14d0:	032a4bf5 	teqeq	sl, #250880	; 0x3d400
    14d4:	034bac17 	movteq	sl, #48151	; 0xbc17
    14d8:	324b2e70 	subcc	r2, fp, #112, 28	; 0x700
    14dc:	034b324b 	movteq	r3, #45643	; 0xb24b
    14e0:	324b2e09 	subcc	r2, fp, #9, 28	; 0x90
    14e4:	7a034259 	bvc	d1e50 <__Stack_Size+0xd1a50>
    14e8:	0008022e 	andeq	r0, r8, lr, lsr #4
    14ec:	05000101 	streq	r0, [r0, #-257]	; 0x101
    14f0:	00000002 	andeq	r0, r0, r2
    14f4:	00eb0300 	rsceq	r0, fp, r0, lsl #6
    14f8:	2d4c2101 	stfcse	f2, [ip, #-4]
    14fc:	01000402 	tsteq	r0, r2, lsl #8
    1500:	02050001 	andeq	r0, r5, #1
    1504:	08001284 	stmdaeq	r0, {r2, r7, r9, ip}
    1508:	0100fc03 	tsteq	r0, r3, lsl #24
    150c:	03010a03 	movweq	r0, #6659	; 0x1a03
    1510:	0c032076 	stceq	0, cr2, [r3], {118}	; 0x76
    1514:	03332520 	teqeq	r3, #32, 10	; 0x8000000
    1518:	33352074 	teqcc	r5, #116	; 0x74
    151c:	3022223e 	eorcc	r2, r2, lr, lsr r2
    1520:	3d303030 	ldccc	0, cr3, [r0, #-192]!	; 0xffffff40
    1524:	224d1d34 	subcs	r1, sp, #52, 26	; 0xd00
    1528:	02002233 	andeq	r2, r0, #805306371	; 0x30000003
    152c:	66030204 	strvs	r0, [r3], -r4, lsl #4
    1530:	3c1f032e 	ldccc	3, cr0, [pc], {46}	; 0x2e
    1534:	3e213025 	cdpcc	0, 2, cr3, cr1, cr5, {1}
    1538:	30302f30 	eorscc	r2, r0, r0, lsr pc
    153c:	4d1d343d 	cfldrsmi	mvf3, [sp, #-244]	; 0xffffff0c
    1540:	00223122 	eoreq	r3, r2, r2, lsr #2
    1544:	03020402 	movweq	r0, #9218	; 0x2402
    1548:	1b032e69 	blne	ccef4 <__Stack_Size+0xccaf4>
    154c:	0002023c 	andeq	r0, r2, ip, lsr r2
    1550:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1554:	00000002 	andeq	r0, r0, r2
    1558:	01e50300 	mvneq	r0, r0, lsl #6
    155c:	2f3d1401 	svccs	0x003d1401
    1560:	01000302 	tsteq	r0, r2, lsl #6
    1564:	02050001 	andeq	r0, r5, #1
    1568:	08001320 	stmdaeq	r0, {r5, r8, r9, ip}
    156c:	0101f603 	tsteq	r1, r3, lsl #12
    1570:	2e090319 	mcrcs	3, 0, r0, cr9, cr9, {0}
    1574:	01000402 	tsteq	r0, r2, lsl #8
    1578:	02050001 	andeq	r0, r5, #1
    157c:	00000000 	andeq	r0, r0, r0
    1580:	01029003 	tsteq	r2, r3
    1584:	02022116 	andeq	r2, r2, #-2147483643	; 0x80000005
    1588:	00010100 	andeq	r0, r1, r0, lsl #2
    158c:	00000205 	andeq	r0, r0, r5, lsl #4
    1590:	a1030000 	mrsge	r0, (UNDEF: 3)
    1594:	03190102 	tsteq	r9, #-2147483648	; 0x80000000
    1598:	04022e09 	streq	r2, [r2], #-3593	; 0xe09
    159c:	00010100 	andeq	r0, r1, r0, lsl #2
    15a0:	00000205 	andeq	r0, r0, r5, lsl #4
    15a4:	bb030000 	bllt	c15ac <__Stack_Size+0xc11ac>
    15a8:	21160102 	tstcs	r6, r2, lsl #2
    15ac:	01000202 	tsteq	r0, r2, lsl #4
    15b0:	02050001 	andeq	r0, r5, #1
    15b4:	0800132c 	stmdaeq	r0, {r2, r3, r5, r8, r9, ip}
    15b8:	0102cd03 	tsteq	r2, r3, lsl #26
    15bc:	00020217 	andeq	r0, r2, r7, lsl r2
    15c0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    15c4:	00133002 	andseq	r3, r3, r2
    15c8:	02e00308 	rsceq	r0, r0, #8, 6	; 0x20000000
    15cc:	02021701 	andeq	r1, r2, #262144	; 0x40000
    15d0:	00010100 	andeq	r0, r1, r0, lsl #2
    15d4:	00000205 	andeq	r0, r0, r5, lsl #4
    15d8:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    15dc:	22180102 	andscs	r0, r8, #-2147483648	; 0x80000000
    15e0:	00020232 	andeq	r0, r2, r2, lsr r2
    15e4:	05000101 	streq	r0, [r0, #-257]	; 0x101
    15e8:	00000002 	andeq	r0, r0, r2
    15ec:	03900300 	orrseq	r0, r0, #0, 6
    15f0:	02021601 	andeq	r1, r2, #1048576	; 0x100000
    15f4:	00010100 	andeq	r0, r1, r0, lsl #2
    15f8:	00000205 	andeq	r0, r0, r5, lsl #4
    15fc:	a2030000 	andge	r0, r3, #0
    1600:	30190103 	andscc	r0, r9, r3, lsl #2
    1604:	22222222 	eorcs	r2, r2, #536870914	; 0x20000002
    1608:	01000202 	tsteq	r0, r2, lsl #4
    160c:	02050001 	andeq	r0, r5, #1
    1610:	00000000 	andeq	r0, r0, r0
    1614:	0103c303 	tsteq	r3, r3, lsl #6
    1618:	305a3019 	subscc	r3, sl, r9, lsl r0
    161c:	01000502 	tsteq	r0, r2, lsl #10
    1620:	02050001 	andeq	r0, r5, #1
    1624:	00000000 	andeq	r0, r0, r0
    1628:	0103dc03 	tsteq	r3, r3, lsl #24
    162c:	00060216 	andeq	r0, r6, r6, lsl r2
    1630:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1634:	00133402 	andseq	r3, r3, r2, lsl #8
    1638:	04870308 	streq	r0, [r7], #776	; 0x308
    163c:	45252701 	strmi	r2, [r5, #-1793]!	; 0x701
    1640:	1f232223 	svcne	0x00232223
    1644:	03284c2f 	teqeq	r8, #12032	; 0x2f00
    1648:	03262e7a 	teqeq	r6, #1952	; 0x7a0
    164c:	0a032070 	beq	c9814 <__Stack_Size+0xc9414>
    1650:	314b342e 	cmpcc	fp, lr, lsr #8
    1654:	06024d22 	streq	r4, [r2], -r2, lsr #26
    1658:	00010100 	andeq	r0, r1, r0, lsl #2
    165c:	00000205 	andeq	r0, r0, r5, lsl #4
    1660:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
    1664:	03190104 	tsteq	r9, #4, 2
    1668:	22278279 	eorcs	r8, r7, #-1879048185	; 0x90000007
    166c:	023d301e 	eorseq	r3, sp, #30
    1670:	01010005 	tsteq	r1, r5
    1674:	00000338 	andeq	r0, r0, r8, lsr r3
    1678:	00860002 	addeq	r0, r6, r2
    167c:	01020000 	mrseq	r0, (UNDEF: 2)
    1680:	000d0efb 	strdeq	r0, [sp], -fp
    1684:	01010101 	tsteq	r1, r1, lsl #2
    1688:	01000000 	mrseq	r0, (UNDEF: 0)
    168c:	6c010000 	stcvs	0, cr0, [r1], {-0}
    1690:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    1694:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
    1698:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    169c:	0000636e 	andeq	r6, r0, lr, ror #6
    16a0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    16a4:	30316632 	eorscc	r6, r1, r2, lsr r6
    16a8:	766e5f78 	uqsub16vc	r5, lr, r8
    16ac:	632e6369 	teqvs	lr, #-1543503871	; 0xa4000001
    16b0:	00000100 	andeq	r0, r0, r0, lsl #2
    16b4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    16b8:	30316632 	eorscc	r6, r1, r2, lsr r6
    16bc:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    16c0:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    16c4:	00000200 	andeq	r0, r0, r0, lsl #4
    16c8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    16cc:	30316632 	eorscc	r6, r1, r2, lsr r6
    16d0:	616d5f78 	smcvs	54776	; 0xd5f8
    16d4:	00682e70 	rsbeq	r2, r8, r0, ror lr
    16d8:	73000002 	movwvc	r0, #2
    16dc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    16e0:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    16e4:	69766e5f 	ldmdbvs	r6!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    16e8:	00682e63 	rsbeq	r2, r8, r3, ror #28
    16ec:	63000002 	movwvs	r0, #2
    16f0:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0x26f
    16f4:	5f336d78 	svcpl	0x00336d78
    16f8:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    16fc:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    1700:	00000002 	andeq	r0, r0, r2
    1704:	00020500 	andeq	r0, r2, r0, lsl #10
    1708:	03000000 	movweq	r0, #0
    170c:	21150124 	tstcs	r5, r4, lsr #2
    1710:	2f2f4b2d 	svccs	0x002f4b2d
    1714:	04020030 	streq	r0, [r2], #-48	; 0x30
    1718:	02002203 	andeq	r2, r0, #805306368	; 0x30000000
    171c:	002c0304 	eoreq	r0, ip, r4, lsl #6
    1720:	22030402 	andcs	r0, r3, #33554432	; 0x2000000
    1724:	03040200 	movweq	r0, #16896	; 0x4200
    1728:	0402001e 	streq	r0, [r2], #-30
    172c:	02002203 	andeq	r2, r0, #805306368	; 0x30000000
    1730:	242c0304 	strtcs	r0, [ip], #-772	; 0x304
    1734:	01000402 	tsteq	r0, r2, lsl #8
    1738:	02050001 	andeq	r0, r5, #1
    173c:	00000000 	andeq	r0, r0, r0
    1740:	15013b03 	strne	r3, [r1, #-2819]	; 0xb03
    1744:	2f211e3e 	svccs	0x00211e3e
    1748:	3e232121 	sufccsp	f2, f3, f1
    174c:	02213d21 	eoreq	r3, r1, #2112	; 0x840
    1750:	01010006 	tsteq	r1, r6
    1754:	88020500 	stmdahi	r2, {r8, sl}
    1758:	03080013 	movweq	r0, #32787	; 0x8013
    175c:	170100e1 	strne	r0, [r1, -r1, ror #1]
    1760:	01000a02 	tsteq	r0, r2, lsl #20
    1764:	02050001 	andeq	r0, r5, #1
    1768:	0800139c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, ip}
    176c:	0100f403 	tsteq	r0, r3, lsl #8
    1770:	03010a03 	movweq	r0, #6659	; 0x1a03
    1774:	0a032076 	beq	c9954 <__Stack_Size+0xc9554>
    1778:	0328232e 	teqeq	r8, #-1207959552	; 0xb8000000
    177c:	1c242e78 	stcne	14, cr2, [r4], #-480	; 0xfffffe20
    1780:	312c313d 	teqcc	ip, sp, lsr r1
    1784:	241f2c95 	ldrcs	r2, [pc], #-3221	; 178c <__Stack_Size+0x138c>
    1788:	212f242b 	teqcs	pc, fp, lsr #8
    178c:	1f213122 	svcne	0x00213122
    1790:	21504921 	cmpcs	r0, r1, lsr #18
    1794:	000a0249 	andeq	r0, sl, r9, asr #4
    1798:	05000101 	streq	r0, [r0, #-257]	; 0x101
    179c:	00000002 	andeq	r0, r0, r2
    17a0:	01a80300 			; <UNDEFINED> instruction: 0x01a80300
    17a4:	212f1401 	teqcs	pc, r1, lsl #8
    17a8:	00020221 	andeq	r0, r2, r1, lsr #4
    17ac:	05000101 	streq	r0, [r0, #-257]	; 0x101
    17b0:	00000002 	andeq	r0, r0, r2
    17b4:	01b80300 			; <UNDEFINED> instruction: 0x01b80300
    17b8:	02021301 	andeq	r1, r2, #67108864	; 0x4000000
    17bc:	00010100 	andeq	r0, r1, r0, lsl #2
    17c0:	00000205 	andeq	r0, r0, r5, lsl #4
    17c4:	c4030000 	strgt	r0, [r3], #-0
    17c8:	02130101 	andseq	r0, r3, #1073741824	; 0x40000000
    17cc:	01010002 	tsteq	r1, r2
    17d0:	00020500 	andeq	r0, r2, r0, lsl #10
    17d4:	03000000 	movweq	r0, #0
    17d8:	130101d0 	movwne	r0, #4560	; 0x11d0
    17dc:	01000202 	tsteq	r0, r2, lsl #4
    17e0:	02050001 	andeq	r0, r5, #1
    17e4:	00000000 	andeq	r0, r0, r0
    17e8:	0101dc03 	tsteq	r1, r3, lsl #24
    17ec:	00020213 	andeq	r0, r2, r3, lsl r2
    17f0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    17f4:	00000002 	andeq	r0, r0, r2
    17f8:	01ea0300 	mvneq	r0, r0, lsl #6
    17fc:	03021601 	movweq	r1, #9729	; 0x2601
    1800:	00010100 	andeq	r0, r1, r0, lsl #2
    1804:	00000205 	andeq	r0, r0, r5, lsl #4
    1808:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    180c:	02130101 	andseq	r0, r3, #1073741824	; 0x40000000
    1810:	01010002 	tsteq	r1, r2
    1814:	00020500 	andeq	r0, r2, r0, lsl #10
    1818:	03000000 	movweq	r0, #0
    181c:	13010285 	movwne	r0, #4741	; 0x1285
    1820:	0006022f 	andeq	r0, r6, pc, lsr #4
    1824:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1828:	00000002 	andeq	r0, r0, r2
    182c:	02920300 	addseq	r0, r2, #0, 6
    1830:	034c1901 	movteq	r1, #51457	; 0xc901
    1834:	06026609 	streq	r6, [r2], -r9, lsl #12
    1838:	00010100 	andeq	r0, r1, r0, lsl #2
    183c:	00000205 	andeq	r0, r0, r5, lsl #4
    1840:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    1844:	02160102 	andseq	r0, r6, #-2147483648	; 0x80000000
    1848:	01010006 	tsteq	r1, r6
    184c:	00020500 	andeq	r0, r2, r0, lsl #10
    1850:	03000000 	movweq	r0, #0
    1854:	160102bd 			; <UNDEFINED> instruction: 0x160102bd
    1858:	01000c02 	tsteq	r0, r2, lsl #24
    185c:	02050001 	andeq	r0, r5, #1
    1860:	00000000 	andeq	r0, r0, r0
    1864:	0102cd03 	tsteq	r2, r3, lsl #26
    1868:	06022f13 			; <UNDEFINED> instruction: 0x06022f13
    186c:	00010100 	andeq	r0, r1, r0, lsl #2
    1870:	00000205 	andeq	r0, r0, r5, lsl #4
    1874:	da030000 	ble	c187c <__Stack_Size+0xc147c>
    1878:	4c190102 	ldfmis	f0, [r9], {2}
    187c:	02660903 	rsbeq	r0, r6, #49152	; 0xc000
    1880:	01010006 	tsteq	r1, r6
    1884:	00020500 	andeq	r0, r2, r0, lsl #10
    1888:	03000000 	movweq	r0, #0
    188c:	130102f7 	movwne	r0, #4855	; 0x12f7
    1890:	0004022f 	andeq	r0, r4, pc, lsr #4
    1894:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1898:	00142002 	andseq	r2, r4, r2
    189c:	03890308 	orreq	r0, r9, #8, 6	; 0x20000000
    18a0:	0a021701 	beq	874ac <__Stack_Size+0x870ac>
    18a4:	00010100 	andeq	r0, r1, r0, lsl #2
    18a8:	14340205 	ldrtne	r0, [r4], #-517	; 0x205
    18ac:	99030800 	stmdbls	r3, {fp}
    18b0:	3d210103 	stfccs	f0, [r1, #-12]!
    18b4:	01040200 	mrseq	r0, R12_usr
    18b8:	0006022f 	andeq	r0, r6, pc, lsr #4
    18bc:	05000101 	streq	r0, [r0, #-257]	; 0x101
    18c0:	00000002 	andeq	r0, r0, r2
    18c4:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    18c8:	08021301 	stmdaeq	r2, {r0, r8, r9, ip}
    18cc:	00010100 	andeq	r0, r1, r0, lsl #2
    18d0:	00000205 	andeq	r0, r0, r5, lsl #4
    18d4:	ba030000 	blt	c18dc <__Stack_Size+0xc14dc>
    18d8:	1e270103 	sufnes	f0, f7, f3
    18dc:	07023222 	streq	r3, [r2, -r2, lsr #4]
    18e0:	00010100 	andeq	r0, r1, r0, lsl #2
    18e4:	00000205 	andeq	r0, r0, r5, lsl #4
    18e8:	d8030000 	stmdale	r3, {}	; <UNPREDICTABLE>
    18ec:	5a190103 	bpl	641d00 <__Stack_Size+0x641900>
    18f0:	07024022 	streq	r4, [r2, -r2, lsr #32]
    18f4:	00010100 	andeq	r0, r1, r0, lsl #2
    18f8:	00000205 	andeq	r0, r0, r5, lsl #4
    18fc:	81030000 	mrshi	r0, (UNDEF: 3)
    1900:	09030104 	stmdbeq	r3, {r2, r8}
    1904:	20770301 	rsbscs	r0, r7, r1, lsl #6
    1908:	4b200903 	blmi	803d1c <__Stack_Size+0x80391c>
    190c:	253f1e31 	ldrcs	r1, [pc, #-3633]!	; ae3 <__Stack_Size+0x6e3>
    1910:	2326702d 	teqcs	r6, #45	; 0x2d
    1914:	033d221e 	teqeq	sp, #-536870911	; 0xe0000001
    1918:	24242078 	strtcs	r2, [r4], #-120	; 0x78
    191c:	01000602 	tsteq	r0, r2, lsl #12
    1920:	02050001 	andeq	r0, r5, #1
    1924:	00000000 	andeq	r0, r0, r0
    1928:	0104aa03 	tsteq	r4, r3, lsl #20
    192c:	1c010c03 	stcne	12, cr0, [r1], {3}
    1930:	0b033030 	bleq	cd9f8 <__Stack_Size+0xcd5f8>
    1934:	0007022e 	andeq	r0, r7, lr, lsr #4
    1938:	05000101 	streq	r0, [r0, #-257]	; 0x101
    193c:	00000002 	andeq	r0, r0, r2
    1940:	04d00300 	ldrbeq	r0, [r0], #768	; 0x300
    1944:	01090301 	tsteq	r9, r1, lsl #6
    1948:	0902301e 	stmdbeq	r2, {r1, r2, r3, r4, ip, sp}
    194c:	00010100 	andeq	r0, r1, r0, lsl #2
    1950:	00000205 	andeq	r0, r0, r5, lsl #4
    1954:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    1958:	09030104 	stmdbeq	r3, {r2, r8}
    195c:	02301e01 	eorseq	r1, r0, #1, 28
    1960:	01010009 	tsteq	r1, r9
    1964:	00020500 	andeq	r0, r2, r0, lsl #10
    1968:	03000000 	movweq	r0, #0
    196c:	03010586 	movweq	r0, #5510	; 0x1586
    1970:	301c010c 	andscc	r0, ip, ip, lsl #2
    1974:	2e0b0330 	mcrcs	3, 0, r0, cr11, cr0, {1}
    1978:	01000702 	tsteq	r0, r2, lsl #14
    197c:	02050001 	andeq	r0, r5, #1
    1980:	00000000 	andeq	r0, r0, r0
    1984:	0105ae03 	tsteq	r5, r3, lsl #28
    1988:	30223f19 	eorcc	r3, r2, r9, lsl pc
    198c:	362e7a03 	strtcc	r7, [lr], -r3, lsl #20
    1990:	3340223d 	movtcc	r2, #573	; 0x23d
    1994:	00040223 	andeq	r0, r4, r3, lsr #4
    1998:	05000101 	streq	r0, [r0, #-257]	; 0x101
    199c:	00000002 	andeq	r0, r0, r2
    19a0:	05dc0300 	ldrbeq	r0, [ip, #768]	; 0x300
    19a4:	20090301 	andcs	r0, r9, r1, lsl #6
    19a8:	02233230 	eoreq	r3, r3, #48, 4
    19ac:	01010004 	tsteq	r1, r4
    19b0:	00000319 	andeq	r0, r0, r9, lsl r3
    19b4:	00700002 	rsbseq	r0, r0, r2
    19b8:	01020000 	mrseq	r0, (UNDEF: 2)
    19bc:	000d0efb 	strdeq	r0, [sp], -fp
    19c0:	01010101 	tsteq	r1, r1, lsl #2
    19c4:	01000000 	mrseq	r0, (UNDEF: 0)
    19c8:	6c010000 	stcvs	0, cr0, [r1], {-0}
    19cc:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    19d0:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
    19d4:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    19d8:	0000636e 	andeq	r6, r0, lr, ror #6
    19dc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    19e0:	30316632 	eorscc	r6, r1, r2, lsr r6
    19e4:	63725f78 	cmnvs	r2, #120, 30	; 0x1e0
    19e8:	00632e63 	rsbeq	r2, r3, r3, ror #28
    19ec:	73000001 	movwvc	r0, #1
    19f0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    19f4:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    19f8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    19fc:	00682e65 	rsbeq	r2, r8, r5, ror #28
    1a00:	73000002 	movwvc	r0, #2
    1a04:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1a08:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    1a0c:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    1a10:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1a14:	74730000 	ldrbtvc	r0, [r3], #-0
    1a18:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1a1c:	5f783031 	svcpl	0x00783031
    1a20:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    1a24:	00020068 	andeq	r0, r2, r8, rrx
    1a28:	05000000 	streq	r0, [r0, #-0]
    1a2c:	00144c02 	andseq	r4, r4, r2, lsl #24
    1a30:	00fc0308 	rscseq	r0, ip, r8, lsl #6
    1a34:	4d5b1401 	cfldrdmi	mvd1, [fp, #-4]
    1a38:	024d4d69 	subeq	r4, sp, #6720	; 0x1a40
    1a3c:	01010007 	tsteq	r1, r7
    1a40:	88020500 	stmdahi	r2, {r8, sl}
    1a44:	03080014 	movweq	r0, #32788	; 0x8014
    1a48:	1801019f 	stmdane	r1, {r0, r1, r2, r3, r4, r7, r8}
    1a4c:	2e7a0326 	cdpcs	3, 7, cr0, cr10, cr6, {1}
    1a50:	4f5c4d4d 	svcmi	0x005c4d4d
    1a54:	01000802 	tsteq	r0, r2, lsl #16
    1a58:	02050001 	andeq	r0, r5, #1
    1a5c:	00000000 	andeq	r0, r0, r0
    1a60:	0101e903 	tsteq	r1, r3, lsl #18
    1a64:	31313118 	teqcc	r1, r8, lsl r1
    1a68:	01000402 	tsteq	r0, r2, lsl #8
    1a6c:	02050001 	andeq	r0, r5, #1
    1a70:	00000000 	andeq	r0, r0, r0
    1a74:	01028603 	tsteq	r2, r3, lsl #12
    1a78:	00060216 	andeq	r0, r6, r6, lsl r2
    1a7c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1a80:	0014c002 	andseq	ip, r4, r2
    1a84:	029f0308 	addseq	r0, pc, #8, 6	; 0x20000000
    1a88:	3f311901 	svccc	0x00311901
    1a8c:	00040223 	andeq	r0, r4, r3, lsr #4
    1a90:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1a94:	0014d402 	andseq	sp, r4, r2, lsl #8
    1a98:	02bc0308 	adcseq	r0, ip, #8, 6	; 0x20000000
    1a9c:	06021601 	streq	r1, [r2], -r1, lsl #12
    1aa0:	00010100 	andeq	r0, r1, r0, lsl #2
    1aa4:	14e00205 	strbtne	r0, [r0], #517	; 0x205
    1aa8:	cf030800 	svcgt	0x00030800
    1aac:	31180102 	tstcc	r8, r2, lsl #2
    1ab0:	05022331 	streq	r2, [r2, #-817]	; 0x331
    1ab4:	00010100 	andeq	r0, r1, r0, lsl #2
    1ab8:	14f40205 	ldrbtne	r0, [r4], #517	; 0x205
    1abc:	ed030800 	stc	8, cr0, [r3, #-0]
    1ac0:	2f130102 	svccs	0x00130102
    1ac4:	01000602 	tsteq	r0, r2, lsl #12
    1ac8:	02050001 	andeq	r0, r5, #1
    1acc:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
    1ad0:	01038403 	tsteq	r3, r3, lsl #8
    1ad4:	23313118 	teqcs	r1, #24, 2
    1ad8:	01000502 	tsteq	r0, r2, lsl #10
    1adc:	02050001 	andeq	r0, r5, #1
    1ae0:	08001518 	stmdaeq	r0, {r3, r4, r8, sl, ip}
    1ae4:	0103a503 	tsteq	r3, r3, lsl #10
    1ae8:	23313118 	teqcs	r1, #24, 2
    1aec:	01000502 	tsteq	r0, r2, lsl #10
    1af0:	02050001 	andeq	r0, r5, #1
    1af4:	0800152c 	stmdaeq	r0, {r2, r3, r5, r8, sl, ip}
    1af8:	0103c603 	tsteq	r3, r3, lsl #12
    1afc:	31313118 	teqcc	r1, r8, lsl r1
    1b00:	01000402 	tsteq	r0, r2, lsl #8
    1b04:	02050001 	andeq	r0, r5, #1
    1b08:	00000000 	andeq	r0, r0, r0
    1b0c:	0103e903 	tsteq	r3, r3, lsl #18
    1b10:	33231d28 	teqcc	r3, #40, 26	; 0xa00
    1b14:	01000702 	tsteq	r0, r2, lsl #14
    1b18:	02050001 	andeq	r0, r5, #1
    1b1c:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    1b20:	01048803 	tsteq	r4, r3, lsl #16
    1b24:	00060216 	andeq	r0, r6, r6, lsl r2
    1b28:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1b2c:	00000002 	andeq	r0, r0, r2
    1b30:	049d0300 	ldreq	r0, [sp], #768	; 0x300
    1b34:	31311801 	teqcc	r1, r1, lsl #16
    1b38:	00050223 	andeq	r0, r5, r3, lsr #4
    1b3c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1b40:	00000002 	andeq	r0, r0, r2
    1b44:	04bc0300 	ldrteq	r0, [ip], #768	; 0x300
    1b48:	03341801 	teqeq	r4, #65536	; 0x10000
    1b4c:	2323207a 	teqcs	r3, #122	; 0x7a
    1b50:	0224214e 	eoreq	r2, r4, #-2147483629	; 0x80000013
    1b54:	01010005 	tsteq	r1, r5
    1b58:	00020500 	andeq	r0, r2, r0, lsl #10
    1b5c:	03000000 	movweq	r0, #0
    1b60:	160104e3 	strne	r0, [r1], -r3, ror #9
    1b64:	01000602 	tsteq	r0, r2, lsl #12
    1b68:	02050001 	andeq	r0, r5, #1
    1b6c:	00000000 	andeq	r0, r0, r0
    1b70:	0104f903 	tsteq	r4, r3, lsl #18
    1b74:	00080217 	andeq	r0, r8, r7, lsl r2
    1b78:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1b7c:	00000002 	andeq	r0, r0, r2
    1b80:	058c0300 	streq	r0, [ip, #768]	; 0x300
    1b84:	06021601 	streq	r1, [r2], -r1, lsl #12
    1b88:	00010100 	andeq	r0, r1, r0, lsl #2
    1b8c:	154c0205 	strbne	r0, [ip, #-517]	; 0x205
    1b90:	9c030800 	stcls	8, cr0, [r3], {-0}
    1b94:	1c160105 	ldfnes	f0, [r6], {5}
    1b98:	33513e24 	cmpcc	r1, #36, 28	; 0x240
    1b9c:	1c321e23 	ldcne	14, cr1, [r2], #-140	; 0xffffff74
    1ba0:	323f2732 	eorscc	r2, pc, #13107200	; 0xc80000
    1ba4:	223c0c03 	eorscs	r0, ip, #768	; 0x300
    1ba8:	214d321f 	cmpcs	sp, pc, lsl r2
    1bac:	32214d32 	eorcc	r4, r1, #3200	; 0xc80
    1bb0:	312f213f 	teqcc	pc, pc, lsr r1	; <UNPREDICTABLE>
    1bb4:	01000d02 	tsteq	r0, r2, lsl #26
    1bb8:	02050001 	andeq	r0, r5, #1
    1bbc:	00000000 	andeq	r0, r0, r0
    1bc0:	01068003 	tsteq	r6, r3
    1bc4:	32221e27 	eorcc	r1, r2, #624	; 0x270
    1bc8:	01000702 	tsteq	r0, r2, lsl #14
    1bcc:	02050001 	andeq	r0, r5, #1
    1bd0:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
    1bd4:	0106a103 	tsteq	r6, r3, lsl #2
    1bd8:	32221e27 	eorcc	r1, r2, #624	; 0x270
    1bdc:	01000702 	tsteq	r0, r2, lsl #14
    1be0:	02050001 	andeq	r0, r5, #1
    1be4:	080015e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, ip}
    1be8:	0106c303 	tsteq	r6, r3, lsl #6
    1bec:	32221e27 	eorcc	r1, r2, #624	; 0x270
    1bf0:	01000702 	tsteq	r0, r2, lsl #14
    1bf4:	02050001 	andeq	r0, r5, #1
    1bf8:	08001600 	stmdaeq	r0, {r9, sl, ip}
    1bfc:	0106e303 	tsteq	r6, r3, lsl #6
    1c00:	32221e27 	eorcc	r1, r2, #624	; 0x270
    1c04:	01000702 	tsteq	r0, r2, lsl #14
    1c08:	02050001 	andeq	r0, r5, #1
    1c0c:	08001618 	stmdaeq	r0, {r3, r4, r9, sl, ip}
    1c10:	01078403 	tsteq	r7, r3, lsl #8
    1c14:	32221e27 	eorcc	r1, r2, #624	; 0x270
    1c18:	01000702 	tsteq	r0, r2, lsl #14
    1c1c:	02050001 	andeq	r0, r5, #1
    1c20:	00000000 	andeq	r0, r0, r0
    1c24:	01079c03 	tsteq	r7, r3, lsl #24
    1c28:	00060216 	andeq	r0, r6, r6, lsl r2
    1c2c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1c30:	00000002 	andeq	r0, r0, r2
    1c34:	07ac0300 	streq	r0, [ip, r0, lsl #6]!
    1c38:	06021601 	streq	r1, [r2], -r1, lsl #12
    1c3c:	00010100 	andeq	r0, r1, r0, lsl #2
    1c40:	00000205 	andeq	r0, r0, r5, lsl #4
    1c44:	c1030000 	mrsgt	r0, (UNDEF: 3)
    1c48:	02170107 	andseq	r0, r7, #-1073741823	; 0xc0000001
    1c4c:	01010006 	tsteq	r1, r6
    1c50:	30020500 	andcc	r0, r2, r0, lsl #10
    1c54:	03080016 	movweq	r0, #32790	; 0x8016
    1c58:	030107dd 	movweq	r0, #6109	; 0x17dd
    1c5c:	3e220109 	sufccs	f0, f2, #1.0
    1c60:	26322230 			; <UNDEFINED> instruction: 0x26322230
    1c64:	024a0b03 	subeq	r0, sl, #3072	; 0xc00
    1c68:	01010006 	tsteq	r1, r6
    1c6c:	58020500 	stmdapl	r2, {r8, sl}
    1c70:	03080016 	movweq	r0, #32790	; 0x8016
    1c74:	210101c6 	smlabtcs	r1, r6, r1, r0
    1c78:	02040200 	andeq	r0, r4, #0, 4
    1c7c:	04020035 	streq	r0, [r2], #-53	; 0x35
    1c80:	02003d02 	andeq	r3, r0, #2, 26	; 0x80
    1c84:	003d0204 	eorseq	r0, sp, r4, lsl #4
    1c88:	06010402 	streq	r0, [r1], -r2, lsl #8
    1c8c:	034d0620 	movteq	r0, #54816	; 0xd620
    1c90:	06023c0a 	streq	r3, [r2], -sl, lsl #24
    1c94:	00010100 	andeq	r0, r1, r0, lsl #2
    1c98:	16880205 	strne	r0, [r8], r5, lsl #4
    1c9c:	90030800 	andls	r0, r3, r0, lsl #16
    1ca0:	02140108 	andseq	r0, r4, #8, 2
    1ca4:	01010008 	tsteq	r1, r8
    1ca8:	00020500 	andeq	r0, r2, r0, lsl #10
    1cac:	03000000 	movweq	r0, #0
    1cb0:	190108a4 	stmdbne	r1, {r2, r5, r7, fp}
    1cb4:	023c0b03 	eorseq	r0, ip, #3072	; 0xc00
    1cb8:	01010007 	tsteq	r1, r7
    1cbc:	00020500 	andeq	r0, r2, r0, lsl #10
    1cc0:	03000000 	movweq	r0, #0
    1cc4:	180108c7 	stmdane	r1, {r0, r1, r2, r6, r7, fp}
    1cc8:	01000602 	tsteq	r0, r2, lsl #12
    1ccc:	00093101 	andeq	r3, r9, r1, lsl #2
    1cd0:	83000200 	movwhi	r0, #512	; 0x200
    1cd4:	02000000 	andeq	r0, r0, #0
    1cd8:	0d0efb01 	vstreq	d15, [lr, #-4]
    1cdc:	01010100 	mrseq	r0, (UNDEF: 17)
    1ce0:	00000001 	andeq	r0, r0, r1
    1ce4:	01000001 	tsteq	r0, r1
    1ce8:	2f62696c 	svccs	0x0062696c
    1cec:	00637273 	rsbeq	r7, r3, r3, ror r2
    1cf0:	2f62696c 	svccs	0x0062696c
    1cf4:	00636e69 	rsbeq	r6, r3, r9, ror #28
    1cf8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1cfc:	31663233 	cmncc	r6, r3, lsr r2
    1d00:	745f7830 	ldrbvc	r7, [pc], #-2096	; 1d08 <__Stack_Size+0x1908>
    1d04:	632e6d69 	teqvs	lr, #6720	; 0x1a40
    1d08:	00000100 	andeq	r0, r0, r0, lsl #2
    1d0c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1d10:	30316632 	eorscc	r6, r1, r2, lsr r6
    1d14:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d18:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    1d1c:	00000200 	andeq	r0, r0, r0, lsl #4
    1d20:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1d24:	30316632 	eorscc	r6, r1, r2, lsr r6
    1d28:	616d5f78 	smcvs	54776	; 0xd5f8
    1d2c:	00682e70 	rsbeq	r2, r8, r0, ror lr
    1d30:	73000002 	movwvc	r0, #2
    1d34:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1d38:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    1d3c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1d40:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1d44:	74730000 	ldrbtvc	r0, [r3], #-0
    1d48:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1d4c:	5f783031 	svcpl	0x00783031
    1d50:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    1d54:	00020068 	andeq	r0, r2, r8, rrx
    1d58:	05000000 	streq	r0, [r0, #-0]
    1d5c:	00000002 	andeq	r0, r0, r2
    1d60:	17ee0300 	strbne	r0, [lr, r0, lsl #6]!
    1d64:	21682401 	cmncs	r8, r1, lsl #8
    1d68:	4023211f 	eormi	r2, r3, pc, lsl r1
    1d6c:	21235c2b 	teqcs	r3, fp, lsr #24
    1d70:	01000202 	tsteq	r0, r2, lsl #4
    1d74:	02050001 	andeq	r0, r5, #1
    1d78:	00000000 	andeq	r0, r0, r0
    1d7c:	01189c03 	tsteq	r8, r3, lsl #24
    1d80:	24216824 	strtcs	r6, [r1], #-2084	; 0x824
    1d84:	6333242a 	teqvs	r3, #704643072	; 0x2a000000
    1d88:	23242a32 	teqcs	r4, #204800	; 0x32000
    1d8c:	00020221 	andeq	r0, r2, r1, lsr #4
    1d90:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1d94:	00000002 	andeq	r0, r0, r2
    1d98:	01860300 	orreq	r0, r6, r0, lsl #6
    1d9c:	4bec2401 	blmi	ffb0ada8 <SCS_BASE+0x1fafcda8>
    1da0:	082e7703 	stmdaeq	lr!, {r0, r1, r8, r9, sl, ip, sp, lr}
    1da4:	09035915 	stmdbeq	r3, {r0, r2, r4, r8, fp, ip, lr}
    1da8:	1f034b3c 	svcne	0x00034b3c
    1dac:	2e61032e 	cdpcs	3, 6, cr0, cr1, cr14, {1}
    1db0:	4b324b32 	blmi	c94a80 <__Stack_Size+0xc94680>
    1db4:	4b324b32 	blmi	c94a84 <__Stack_Size+0xc94684>
    1db8:	03425932 	movteq	r5, #10546	; 0x2932
    1dbc:	09022e7a 	stmdbeq	r2, {r1, r3, r4, r5, r6, r9, sl, fp, sp}
    1dc0:	00010100 	andeq	r0, r1, r0, lsl #2
    1dc4:	16980205 	ldrne	r0, [r8], r5, lsl #4
    1dc8:	c6030800 	strgt	r0, [r3], -r0, lsl #16
    1dcc:	59190101 	ldmdbpl	r9, {r0, r8}
    1dd0:	30313177 	eorscc	r3, r1, r7, ror r1
    1dd4:	01040200 	mrseq	r0, R12_usr
    1dd8:	4d063c06 	stcmi	12, cr3, [r6, #-24]	; 0xffffffe8
    1ddc:	01000502 	tsteq	r0, r2, lsl #10
    1de0:	02050001 	andeq	r0, r5, #1
    1de4:	00000000 	andeq	r0, r0, r0
    1de8:	0101ed03 	tsteq	r1, r3, lsl #26
    1dec:	03010a03 	movweq	r0, #6659	; 0x1a03
    1df0:	0a032076 	beq	c9fd0 <__Stack_Size+0xc9bd0>
    1df4:	23235b20 	teqcs	r3, #32, 22	; 0x8000
    1df8:	2b501d26 	blcs	1409298 <__Stack_Size+0x1408e98>
    1dfc:	2e09033f 	mcrcs	3, 0, r0, cr9, cr15, {1}
    1e00:	03207703 	teqeq	r0, #786432	; 0xc0000
    1e04:	1b222009 	blne	889e30 <__Stack_Size+0x889a30>
    1e08:	20690325 	rsbcs	r0, r9, r5, lsr #6
    1e0c:	25201203 	strcs	r1, [r0, #-515]!	; 0x203
    1e10:	01040200 	mrseq	r0, R12_usr
    1e14:	03062006 	movweq	r2, #24582	; 0x6006
    1e18:	76034a15 			; <UNDEFINED> instruction: 0x76034a15
    1e1c:	26311d2e 	ldrtcs	r1, [r1], -lr, lsr #26
    1e20:	031c351d 	tsteq	ip, #121634816	; 0x7400000
    1e24:	23314a0a 	teqcs	r1, #40960	; 0xa000
    1e28:	00050223 	andeq	r0, r5, r3, lsr #4
    1e2c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1e30:	00000002 	andeq	r0, r0, r2
    1e34:	02c80300 	sbceq	r0, r8, #0, 6
    1e38:	010a0301 	tsteq	sl, r1, lsl #6
    1e3c:	03207603 	teqeq	r0, #3145728	; 0x300000
    1e40:	235b200a 	cmpcs	fp, #10
    1e44:	4d1d2623 	ldcmi	6, cr2, [sp, #-140]	; 0xffffff74
    1e48:	23232b31 	teqcs	r3, #50176	; 0xc400
    1e4c:	0331231d 	teqeq	r1, #1946157056	; 0x74000000
    1e50:	1203206e 	andne	r2, r3, #110	; 0x6e
    1e54:	231d3120 	tstcs	sp, #32, 2
    1e58:	04020022 	streq	r0, [r2], #-34	; 0x22
    1e5c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    1e60:	231d3152 	tstcs	sp, #-2147483628	; 0x80000014
    1e64:	3f403f31 	svccc	0x00403f31
    1e68:	27207903 	strcs	r7, [r0, -r3, lsl #18]!
    1e6c:	23234e31 	teqcs	r3, #784	; 0x310
    1e70:	01000402 	tsteq	r0, r2, lsl #8
    1e74:	02050001 	andeq	r0, r5, #1
    1e78:	00000000 	andeq	r0, r0, r0
    1e7c:	0103a403 	tsteq	r3, r3, lsl #8
    1e80:	03010a03 	movweq	r0, #6659	; 0x1a03
    1e84:	0a032076 	beq	ca064 <__Stack_Size+0xc9c64>
    1e88:	23235b20 	teqcs	r3, #32, 22	; 0x8000
    1e8c:	2b501d26 	blcs	140932c <__Stack_Size+0x1408f2c>
    1e90:	231d2323 	tstcs	sp, #-1946157056	; 0x8c000000
    1e94:	206e0331 	rsbcs	r0, lr, r1, lsr r3
    1e98:	31201203 	teqcc	r0, r3, lsl #4
    1e9c:	0022231d 	eoreq	r2, r2, sp, lsl r3
    1ea0:	06010402 	streq	r0, [r1], -r2, lsl #8
    1ea4:	3152063c 	cmpcc	r2, ip, lsr r6
    1ea8:	03200a03 	teqeq	r0, #12288	; 0x3000
    1eac:	31232e73 	teqcc	r3, r3, ror lr
    1eb0:	76032335 			; <UNDEFINED> instruction: 0x76032335
    1eb4:	200a0320 	andcs	r0, sl, r0, lsr #6
    1eb8:	032e7903 	teqeq	lr, #49152	; 0xc000
    1ebc:	7603200a 	strvc	r2, [r3], -sl
    1ec0:	2e0a0320 	cdpcs	3, 0, cr0, cr10, cr0, {1}
    1ec4:	032e7603 	teqeq	lr, #3145728	; 0x300000
    1ec8:	2324200a 	teqcs	r4, #10
    1ecc:	00040223 	andeq	r0, r4, r3, lsr #4
    1ed0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1ed4:	00000002 	andeq	r0, r0, r2
    1ed8:	04800300 	streq	r0, [r0], #768	; 0x300
    1edc:	010a0301 	tsteq	sl, r1, lsl #6
    1ee0:	03207603 	teqeq	r0, #3145728	; 0x300000
    1ee4:	235b200a 	cmpcs	fp, #10
    1ee8:	501d2623 	andspl	r2, sp, r3, lsr #12
    1eec:	1d23312b 	stfnes	f3, [r3, #-172]!	; 0xffffff54
    1ef0:	6e033123 	adfvssp	f3, f3, f3
    1ef4:	20120320 	andscs	r0, r2, r0, lsr #6
    1ef8:	20740331 	rsbscs	r0, r4, r1, lsr r3
    1efc:	30200c03 	eorcc	r0, r0, r3, lsl #24
    1f00:	0200251b 	andeq	r2, r0, #113246208	; 0x6c00000
    1f04:	2e060104 	adfcss	f0, f6, f4
    1f08:	311d5206 	tstcc	sp, r6, lsl #4
    1f0c:	02232340 	eoreq	r2, r3, #64, 6
    1f10:	01010004 	tsteq	r1, r4
    1f14:	00020500 	andeq	r0, r2, r0, lsl #10
    1f18:	03000000 	movweq	r0, #0
    1f1c:	030105d1 	movweq	r0, #5585	; 0x15d1
    1f20:	0008010d 	andeq	r0, r8, sp, lsl #2
    1f24:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1f28:	00000002 	andeq	r0, r0, r2
    1f2c:	05ee0300 	strbeq	r0, [lr, #768]!	; 0x300
    1f30:	2f3d1401 	svccs	0x003d1401
    1f34:	02022121 	andeq	r2, r2, #1073741832	; 0x40000008
    1f38:	00010100 	andeq	r0, r1, r0, lsl #2
    1f3c:	00000205 	andeq	r0, r0, r5, lsl #4
    1f40:	80030000 	andhi	r0, r3, r0
    1f44:	2f140106 	svccs	0x00140106
    1f48:	21212121 	teqcs	r1, r1, lsr #2
    1f4c:	02022121 	andeq	r2, r2, #1073741832	; 0x40000008
    1f50:	00010100 	andeq	r0, r1, r0, lsl #2
    1f54:	00000205 	andeq	r0, r0, r5, lsl #4
    1f58:	95030000 	strls	r0, [r3, #-0]
    1f5c:	22140106 	andscs	r0, r4, #-2147483647	; 0x80000001
    1f60:	2121211e 	teqcs	r1, lr, lsl r1
    1f64:	00020221 	andeq	r0, r2, r1, lsr #4
    1f68:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1f6c:	00000002 	andeq	r0, r0, r2
    1f70:	06a70300 	strteq	r0, [r7], r0, lsl #6
    1f74:	212f1401 	teqcs	pc, r1, lsl #8
    1f78:	21212121 	teqcs	r1, r1, lsr #2
    1f7c:	01000202 	tsteq	r0, r2, lsl #4
    1f80:	02050001 	andeq	r0, r5, #1
    1f84:	080016d4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, ip}
    1f88:	0106bc03 	tsteq	r6, r3, lsl #24
    1f8c:	4f231d1a 	svcmi	0x00231d1a
    1f90:	01000602 	tsteq	r0, r2, lsl #12
    1f94:	02050001 	andeq	r0, r5, #1
    1f98:	00000000 	andeq	r0, r0, r0
    1f9c:	0106d703 	tsteq	r6, r3, lsl #14
    1fa0:	6b232b1a 	blvs	8ccc10 <__Stack_Size+0x8cc810>
    1fa4:	01000502 	tsteq	r0, r2, lsl #10
    1fa8:	02050001 	andeq	r0, r5, #1
    1fac:	080016ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip}
    1fb0:	0106fd03 	tsteq	r6, r3, lsl #26
    1fb4:	2b010a03 	blcs	447c8 <__Stack_Size+0x443c8>
    1fb8:	04023323 	streq	r3, [r2], #-803	; 0x323
    1fbc:	00010100 	andeq	r0, r1, r0, lsl #2
    1fc0:	00000205 	andeq	r0, r0, r5, lsl #4
    1fc4:	a0030000 	andge	r0, r3, r0
    1fc8:	02190107 	andseq	r0, r9, #-1073741823	; 0xc0000001
    1fcc:	01010002 	tsteq	r1, r2
    1fd0:	00020500 	andeq	r0, r2, r0, lsl #10
    1fd4:	03000000 	movweq	r0, #0
    1fd8:	190107bf 	stmdbne	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl}
    1fdc:	01000402 	tsteq	r0, r2, lsl #8
    1fe0:	02050001 	andeq	r0, r5, #1
    1fe4:	00000000 	andeq	r0, r0, r0
    1fe8:	0107dc03 	tsteq	r7, r3, lsl #24
    1fec:	2b010a03 	blcs	44800 <__Stack_Size+0x44400>
    1ff0:	04023323 	streq	r3, [r2], #-803	; 0x323
    1ff4:	00010100 	andeq	r0, r1, r0, lsl #2
    1ff8:	00000205 	andeq	r0, r0, r5, lsl #4
    1ffc:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
    2000:	02170107 	andseq	r0, r7, #-1073741823	; 0xc0000001
    2004:	01010007 	tsteq	r1, r7
    2008:	00020500 	andeq	r0, r2, r0, lsl #10
    200c:	03000000 	movweq	r0, #0
    2010:	0301088e 	movweq	r0, #6286	; 0x188e
    2014:	23010292 	movwcs	r0, #4754	; 0x1292
    2018:	ee03234d 	cdp	3, 0, cr2, cr3, cr13, {2}
    201c:	0602207d 			; <UNDEFINED> instruction: 0x0602207d
    2020:	00010100 	andeq	r0, r1, r0, lsl #2
    2024:	00000205 	andeq	r0, r0, r5, lsl #4
    2028:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    202c:	28200108 	stmdacs	r0!, {r3, r8}
    2030:	03207803 	teqeq	r0, #196608	; 0x30000
    2034:	222c2e0a 	eorcs	r2, ip, #10, 28	; 0xa0
    2038:	01e40340 	mvneq	r0, r0, asr #6
    203c:	234d232e 	movtcs	r2, #54062	; 0xd32e
    2040:	207e9a03 	rsbscs	r9, lr, r3, lsl #20
    2044:	01000602 	tsteq	r0, r2, lsl #12
    2048:	02050001 	andeq	r0, r5, #1
    204c:	00000000 	andeq	r0, r0, r0
    2050:	0109b203 	tsteq	r9, r3, lsl #4
    2054:	3f200903 	svccc	0x00200903
    2058:	0202233f 	andeq	r2, r2, #-67108864	; 0xfc000000
    205c:	00010100 	andeq	r0, r1, r0, lsl #2
    2060:	00000205 	andeq	r0, r0, r5, lsl #4
    2064:	dc030000 	stcle	0, cr0, [r3], {-0}
    2068:	03200108 	teqeq	r0, #8, 2
    206c:	2831200a 	ldmdacs	r1!, {r1, r3, sp}
    2070:	0202314b 	andeq	r3, r2, #-1073741806	; 0xc0000012
    2074:	00010100 	andeq	r0, r1, r0, lsl #2
    2078:	00000205 	andeq	r0, r0, r5, lsl #4
    207c:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    2080:	28200109 	stmdacs	r0!, {r0, r3, r8}
    2084:	00060231 	andeq	r0, r6, r1, lsr r2
    2088:	05000101 	streq	r0, [r0, #-257]	; 0x101
    208c:	0016fe02 	andseq	pc, r6, r2, lsl #28
    2090:	09d60308 	ldmibeq	r6, {r3, r8, r9}^
    2094:	02231801 	eoreq	r1, r3, #65536	; 0x10000
    2098:	01010002 	tsteq	r1, r2
    209c:	00020500 	andeq	r0, r2, r0, lsl #10
    20a0:	03000000 	movweq	r0, #0
    20a4:	190109f2 	stmdbne	r1, {r1, r4, r5, r6, r7, r8, fp}
    20a8:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    20ac:	01010002 	tsteq	r1, r2
    20b0:	00020500 	andeq	r0, r2, r0, lsl #10
    20b4:	03000000 	movweq	r0, #0
    20b8:	1a010a98 	bne	44b20 <__Stack_Size+0x44720>
    20bc:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    20c0:	01010002 	tsteq	r1, r2
    20c4:	00020500 	andeq	r0, r2, r0, lsl #10
    20c8:	03000000 	movweq	r0, #0
    20cc:	03010ac6 	movweq	r0, #6854	; 0x1ac6
    20d0:	2323200c 	teqcs	r3, #12
    20d4:	2e790327 	cdpcs	3, 7, cr0, cr9, cr7, {1}
    20d8:	78033227 	stmdavc	r3, {r0, r1, r2, r5, r9, ip, sp}
    20dc:	242a322e 	strtcs	r3, [sl], #-558	; 0x22e
    20e0:	0332251c 	teqeq	r2, #28, 10	; 0x7000000
    20e4:	32242e78 	eorcc	r2, r4, #120, 28	; 0x780
    20e8:	02232323 	eoreq	r2, r3, #-1946157056	; 0x8c000000
    20ec:	01010002 	tsteq	r1, r2
    20f0:	00020500 	andeq	r0, r2, r0, lsl #10
    20f4:	03000000 	movweq	r0, #0
    20f8:	19010aff 	stmdbne	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, fp}
    20fc:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    2100:	01010002 	tsteq	r1, r2
    2104:	00020500 	andeq	r0, r2, r0, lsl #10
    2108:	03000000 	movweq	r0, #0
    210c:	19010ba1 	stmdbne	r1, {r0, r5, r7, r8, r9, fp}
    2110:	023f4d23 	eorseq	r4, pc, #2240	; 0x8c0
    2114:	01010002 	tsteq	r1, r2
    2118:	00020500 	andeq	r0, r2, r0, lsl #10
    211c:	03000000 	movweq	r0, #0
    2120:	19010bc3 	stmdbne	r1, {r0, r1, r6, r7, r8, r9, fp}
    2124:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    2128:	01010002 	tsteq	r1, r2
    212c:	00020500 	andeq	r0, r2, r0, lsl #10
    2130:	03000000 	movweq	r0, #0
    2134:	18010be5 	stmdane	r1, {r0, r2, r5, r6, r7, r8, r9, fp}
    2138:	023f4d23 	eorseq	r4, pc, #2240	; 0x8c0
    213c:	01010002 	tsteq	r1, r2
    2140:	00020500 	andeq	r0, r2, r0, lsl #10
    2144:	03000000 	movweq	r0, #0
    2148:	1a010c82 	bne	45358 <__Stack_Size+0x44f58>
    214c:	024f231d 	subeq	r2, pc, #1946157056	; 0x74000000
    2150:	01010006 	tsteq	r1, r6
    2154:	00020500 	andeq	r0, r2, r0, lsl #10
    2158:	03000000 	movweq	r0, #0
    215c:	1a010c9d 	bne	453d8 <__Stack_Size+0x44fd8>
    2160:	024f231d 	subeq	r2, pc, #1946157056	; 0x74000000
    2164:	01010006 	tsteq	r1, r6
    2168:	00020500 	andeq	r0, r2, r0, lsl #10
    216c:	03000000 	movweq	r0, #0
    2170:	1a010cb9 	bne	4545c <__Stack_Size+0x4505c>
    2174:	024f231d 	subeq	r2, pc, #1946157056	; 0x74000000
    2178:	01010006 	tsteq	r1, r6
    217c:	00020500 	andeq	r0, r2, r0, lsl #10
    2180:	03000000 	movweq	r0, #0
    2184:	1a010cd5 	bne	454e0 <__Stack_Size+0x450e0>
    2188:	024f231d 	subeq	r2, pc, #1946157056	; 0x74000000
    218c:	01010006 	tsteq	r1, r6
    2190:	00020500 	andeq	r0, r2, r0, lsl #10
    2194:	03000000 	movweq	r0, #0
    2198:	19010cf4 	stmdbne	r1, {r2, r4, r5, r6, r7, sl, fp}
    219c:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    21a0:	01010002 	tsteq	r1, r2
    21a4:	00020500 	andeq	r0, r2, r0, lsl #10
    21a8:	03000000 	movweq	r0, #0
    21ac:	19010d95 	stmdbne	r1, {r0, r2, r4, r7, r8, sl, fp}
    21b0:	023f4d23 	eorseq	r4, pc, #2240	; 0x8c0
    21b4:	01010002 	tsteq	r1, r2
    21b8:	00020500 	andeq	r0, r2, r0, lsl #10
    21bc:	03000000 	movweq	r0, #0
    21c0:	19010db6 	stmdbne	r1, {r1, r2, r4, r5, r7, r8, sl, fp}
    21c4:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    21c8:	01010002 	tsteq	r1, r2
    21cc:	00020500 	andeq	r0, r2, r0, lsl #10
    21d0:	03000000 	movweq	r0, #0
    21d4:	19010dd7 	stmdbne	r1, {r0, r1, r2, r4, r6, r7, r8, sl, fp}
    21d8:	023f4d23 	eorseq	r4, pc, #2240	; 0x8c0
    21dc:	01010002 	tsteq	r1, r2
    21e0:	00020500 	andeq	r0, r2, r0, lsl #10
    21e4:	03000000 	movweq	r0, #0
    21e8:	1a010df7 	bne	459cc <__Stack_Size+0x455cc>
    21ec:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    21f0:	01010002 	tsteq	r1, r2
    21f4:	00020500 	andeq	r0, r2, r0, lsl #10
    21f8:	03000000 	movweq	r0, #0
    21fc:	1a010e98 	bne	45c64 <__Stack_Size+0x45864>
    2200:	023f4d23 	eorseq	r4, pc, #2240	; 0x8c0
    2204:	01010002 	tsteq	r1, r2
    2208:	00020500 	andeq	r0, r2, r0, lsl #10
    220c:	03000000 	movweq	r0, #0
    2210:	1a010eb9 	bne	45cfc <__Stack_Size+0x458fc>
    2214:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    2218:	01010002 	tsteq	r1, r2
    221c:	00020500 	andeq	r0, r2, r0, lsl #10
    2220:	03000000 	movweq	r0, #0
    2224:	1a010eda 	bne	45d94 <__Stack_Size+0x45994>
    2228:	023f4d23 	eorseq	r4, pc, #2240	; 0x8c0
    222c:	01010002 	tsteq	r1, r2
    2230:	00020500 	andeq	r0, r2, r0, lsl #10
    2234:	03000000 	movweq	r0, #0
    2238:	19010efb 	stmdbne	r1, {r0, r1, r3, r4, r5, r6, r7, r9, sl, fp}
    223c:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    2240:	01010002 	tsteq	r1, r2
    2244:	00020500 	andeq	r0, r2, r0, lsl #10
    2248:	03000000 	movweq	r0, #0
    224c:	19010f9b 	stmdbne	r1, {r0, r1, r3, r4, r7, r8, r9, sl, fp}
    2250:	023f3123 	eorseq	r3, pc, #-1073741816	; 0xc0000008
    2254:	01010002 	tsteq	r1, r2
    2258:	00020500 	andeq	r0, r2, r0, lsl #10
    225c:	03000000 	movweq	r0, #0
    2260:	19010fbb 	stmdbne	r1, {r0, r1, r3, r4, r5, r7, r8, r9, sl, fp}
    2264:	02234d23 	eoreq	r4, r3, #2240	; 0x8c0
    2268:	01010002 	tsteq	r1, r2
    226c:	00020500 	andeq	r0, r2, r0, lsl #10
    2270:	03000000 	movweq	r0, #0
    2274:	19010fdb 	stmdbne	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, fp}
    2278:	023f3123 	eorseq	r3, pc, #-1073741816	; 0xc0000008
    227c:	01010002 	tsteq	r1, r2
    2280:	00020500 	andeq	r0, r2, r0, lsl #10
    2284:	03000000 	movweq	r0, #0
    2288:	19010ffb 	stmdbne	r1, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    228c:	02234b23 	eoreq	r4, r3, #35840	; 0x8c00
    2290:	01010002 	tsteq	r1, r2
    2294:	00020500 	andeq	r0, r2, r0, lsl #10
    2298:	03000000 	movweq	r0, #0
    229c:	19011098 	stmdbne	r1, {r3, r4, r7, ip}
    22a0:	02234b23 	eoreq	r4, r3, #35840	; 0x8c00
    22a4:	01010002 	tsteq	r1, r2
    22a8:	00020500 	andeq	r0, r2, r0, lsl #10
    22ac:	03000000 	movweq	r0, #0
    22b0:	190110b6 	stmdbne	r1, {r1, r2, r4, r5, r7, ip}
    22b4:	023f4b23 	eorseq	r4, pc, #35840	; 0x8c00
    22b8:	01010002 	tsteq	r1, r2
    22bc:	00020500 	andeq	r0, r2, r0, lsl #10
    22c0:	03000000 	movweq	r0, #0
    22c4:	190110d3 	stmdbne	r1, {r0, r1, r4, r6, r7, ip}
    22c8:	023f4b23 	eorseq	r4, pc, #35840	; 0x8c00
    22cc:	01010002 	tsteq	r1, r2
    22d0:	00020500 	andeq	r0, r2, r0, lsl #10
    22d4:	03000000 	movweq	r0, #0
    22d8:	190110f1 	stmdbne	r1, {r0, r4, r5, r6, r7, ip}
    22dc:	023f4b23 	eorseq	r4, pc, #35840	; 0x8c00
    22e0:	01010002 	tsteq	r1, r2
    22e4:	00020500 	andeq	r0, r2, r0, lsl #10
    22e8:	03000000 	movweq	r0, #0
    22ec:	1901118e 	stmdbne	r1, {r1, r2, r3, r7, r8, ip}
    22f0:	023f4b23 	eorseq	r4, pc, #35840	; 0x8c00
    22f4:	01010002 	tsteq	r1, r2
    22f8:	00020500 	andeq	r0, r2, r0, lsl #10
    22fc:	03000000 	movweq	r0, #0
    2300:	190111ac 	stmdbne	r1, {r2, r3, r5, r7, r8, ip}
    2304:	023f4b23 	eorseq	r4, pc, #35840	; 0x8c00
    2308:	01010002 	tsteq	r1, r2
    230c:	00020500 	andeq	r0, r2, r0, lsl #10
    2310:	03000000 	movweq	r0, #0
    2314:	190111ce 	stmdbne	r1, {r1, r2, r3, r6, r7, r8, ip}
    2318:	27207903 	strcs	r7, [r0, -r3, lsl #18]!
    231c:	00060269 	andeq	r0, r6, r9, ror #4
    2320:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2324:	00000002 	andeq	r0, r0, r2
    2328:	11ea0300 	mvnne	r0, r0, lsl #6
    232c:	79031901 	stmdbvc	r3, {r0, r8, fp, ip}
    2330:	02692720 	rsbeq	r2, r9, #32, 14	; 0x800000
    2334:	01010006 	tsteq	r1, r6
    2338:	00020500 	andeq	r0, r2, r0, lsl #10
    233c:	03000000 	movweq	r0, #0
    2340:	19011292 	stmdbne	r1, {r1, r4, r7, r9, ip}
    2344:	27207903 	strcs	r7, [r0, -r3, lsl #18]!
    2348:	34694d68 	strbtcc	r4, [r9], #-3432	; 0xd68
    234c:	02311d69 	eorseq	r1, r1, #6720	; 0x1a40
    2350:	01010005 	tsteq	r1, r5
    2354:	00020500 	andeq	r0, r2, r0, lsl #10
    2358:	03000000 	movweq	r0, #0
    235c:	1a0112b8 	bne	46e44 <__Stack_Size+0x46a44>
    2360:	024f231d 	subeq	r2, pc, #1946157056	; 0x74000000
    2364:	01010006 	tsteq	r1, r6
    2368:	00020500 	andeq	r0, r2, r0, lsl #10
    236c:	03000000 	movweq	r0, #0
    2370:	1a0112d5 	bne	46ecc <__Stack_Size+0x46acc>
    2374:	024f231d 	subeq	r2, pc, #1946157056	; 0x74000000
    2378:	01010006 	tsteq	r1, r6
    237c:	00020500 	andeq	r0, r2, r0, lsl #10
    2380:	03000000 	movweq	r0, #0
    2384:	1a0112f0 	bne	46f4c <__Stack_Size+0x46b4c>
    2388:	024f231d 	subeq	r2, pc, #1946157056	; 0x74000000
    238c:	01010006 	tsteq	r1, r6
    2390:	00020500 	andeq	r0, r2, r0, lsl #10
    2394:	03000000 	movweq	r0, #0
    2398:	1801138d 	stmdane	r1, {r0, r2, r3, r7, r8, r9, ip}
    239c:	00050269 	andeq	r0, r5, r9, ror #4
    23a0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    23a4:	00000002 	andeq	r0, r0, r2
    23a8:	13ae0300 			; <UNDEFINED> instruction: 0x13ae0300
    23ac:	02691901 	rsbeq	r1, r9, #16384	; 0x4000
    23b0:	01010005 	tsteq	r1, r5
    23b4:	00020500 	andeq	r0, r2, r0, lsl #10
    23b8:	03000000 	movweq	r0, #0
    23bc:	180113ca 	stmdane	r1, {r1, r3, r6, r7, r8, r9, ip}
    23c0:	00050269 	andeq	r0, r5, r9, ror #4
    23c4:	05000101 	streq	r0, [r0, #-257]	; 0x101
    23c8:	00000002 	andeq	r0, r0, r2
    23cc:	13e40300 	mvnne	r0, #0, 6
    23d0:	02691801 	rsbeq	r1, r9, #65536	; 0x10000
    23d4:	01010005 	tsteq	r1, r5
    23d8:	00020500 	andeq	r0, r2, r0, lsl #10
    23dc:	03000000 	movweq	r0, #0
    23e0:	170113f9 			; <UNDEFINED> instruction: 0x170113f9
    23e4:	01000202 	tsteq	r0, r2, lsl #4
    23e8:	02050001 	andeq	r0, r5, #1
    23ec:	00000000 	andeq	r0, r0, r0
    23f0:	01148a03 	tsteq	r4, r3, lsl #20
    23f4:	00020217 	andeq	r0, r2, r7, lsl r2
    23f8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    23fc:	00000002 	andeq	r0, r0, r2
    2400:	149c0300 	ldrne	r0, [ip], #768	; 0x300
    2404:	02021701 	andeq	r1, r2, #262144	; 0x40000
    2408:	00010100 	andeq	r0, r1, r0, lsl #2
    240c:	00000205 	andeq	r0, r0, r5, lsl #4
    2410:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    2414:	02170114 	andseq	r0, r7, #20, 2
    2418:	01010002 	tsteq	r1, r2
    241c:	00020500 	andeq	r0, r2, r0, lsl #10
    2420:	03000000 	movweq	r0, #0
    2424:	170114c0 	strne	r1, [r1, -r0, asr #9]
    2428:	01000202 	tsteq	r0, r2, lsl #4
    242c:	02050001 	andeq	r0, r5, #1
    2430:	00000000 	andeq	r0, r0, r0
    2434:	0114d203 	tsteq	r4, r3, lsl #4
    2438:	00030217 	andeq	r0, r3, r7, lsl r2
    243c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2440:	00000002 	andeq	r0, r0, r2
    2444:	14ea0300 	strbtne	r0, [sl], #768	; 0x300
    2448:	02691801 	rsbeq	r1, r9, #65536	; 0x10000
    244c:	01010005 	tsteq	r1, r5
    2450:	00020500 	andeq	r0, r2, r0, lsl #10
    2454:	03000000 	movweq	r0, #0
    2458:	18011586 	stmdane	r1, {r1, r2, r7, r8, sl, ip}
    245c:	00070269 	andeq	r0, r7, r9, ror #4
    2460:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2464:	00000002 	andeq	r0, r0, r2
    2468:	058a0300 	streq	r0, [sl, #768]	; 0x300
    246c:	03282001 	teqeq	r8, #1
    2470:	7603200a 	strvc	r2, [r3], -sl
    2474:	20130320 	andscs	r0, r3, r0, lsr #6
    2478:	402e7303 	eormi	r7, lr, r3, lsl #6
    247c:	03206e03 	teqeq	r0, #3, 28	; 0x30
    2480:	3f4d2018 	svccc	0x004d2018
    2484:	03694d32 	cmneq	r9, #3200	; 0xc80
    2488:	6f032e11 	svcvs	0x00032e11
    248c:	4d32332e 	ldcmi	3, cr3, [r2, #-184]!	; 0xffffff48
    2490:	022c3069 	eoreq	r3, ip, #105	; 0x69
    2494:	01010002 	tsteq	r1, r2
    2498:	00020500 	andeq	r0, r2, r0, lsl #10
    249c:	03000000 	movweq	r0, #0
    24a0:	180115a2 	stmdane	r1, {r1, r5, r7, r8, sl, ip}
    24a4:	00050269 	andeq	r0, r5, r9, ror #4
    24a8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    24ac:	00000002 	andeq	r0, r0, r2
    24b0:	15be0300 	ldrne	r0, [lr, #768]!	; 0x300
    24b4:	02691801 	rsbeq	r1, r9, #65536	; 0x10000
    24b8:	01010007 	tsteq	r1, r7
    24bc:	00020500 	andeq	r0, r2, r0, lsl #10
    24c0:	03000000 	movweq	r0, #0
    24c4:	200104c9 	andcs	r0, r1, r9, asr #9
    24c8:	03200903 	teqeq	r0, #49152	; 0xc000
    24cc:	09032077 	stmdbeq	r3, {r0, r1, r2, r4, r5, r6, sp}
    24d0:	0333234a 	teqeq	r3, #671088641	; 0x28000001
    24d4:	60032e20 	andvs	r2, r3, r0, lsr #28
    24d8:	3331302e 	teqcc	r1, #46	; 0x2e
    24dc:	032e1603 	teqeq	lr, #3145728	; 0x300000
    24e0:	03302e6a 	teqeq	r0, #1696	; 0x6a0
    24e4:	033c13ea 	teqeq	ip, #-1476395005	; 0xa8000003
    24e8:	03206c96 	teqeq	r0, #38400	; 0x9600
    24ec:	5a2013ea 	bpl	80749c <__Stack_Size+0x80709c>
    24f0:	24211f21 	strtcs	r1, [r1], #-3873	; 0xf21
    24f4:	24464b32 	strbcs	r4, [r6], #-2866	; 0xb32
    24f8:	6c8f0331 	stcvs	3, cr0, [pc], {49}	; 0x31
    24fc:	13f20320 	mvnsne	r0, #32, 6	; 0x80000000
    2500:	6c9a0320 	ldcvs	3, cr0, [sl], {32}
    2504:	2e740320 	cdpcs	3, 7, cr0, cr4, cr0, {1}
    2508:	2e149103 	mnfcss	f1, f3
    250c:	3824215a 	stmdacc	r4!, {r1, r3, r4, r6, r8, sp}
    2510:	2a2f4024 	bcs	bd25a8 <__Stack_Size+0xbd21a8>
    2514:	31241c32 	teqcc	r4, r2, lsr ip
    2518:	206bea03 	rsbcs	lr, fp, r3, lsl #20
    251c:	14950322 	ldrne	r0, [r5], #802	; 0x322
    2520:	6be9032e 	blvs	ffa431e0 <SCS_BASE+0x1fa351e0>
    2524:	00020220 	andeq	r0, r2, r0, lsr #4
    2528:	05000101 	streq	r0, [r0, #-257]	; 0x101
    252c:	00000002 	andeq	r0, r0, r2
    2530:	15d80300 	ldrbne	r0, [r8, #768]	; 0x300
    2534:	023f1801 	eorseq	r1, pc, #65536	; 0x10000
    2538:	01010005 	tsteq	r1, r5
    253c:	00020500 	andeq	r0, r2, r0, lsl #10
    2540:	03000000 	movweq	r0, #0
    2544:	170115ec 	strne	r1, [r1, -ip, ror #11]
    2548:	00020221 	andeq	r0, r2, r1, lsr #4
    254c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2550:	00000002 	andeq	r0, r0, r2
    2554:	15fd0300 	ldrbne	r0, [sp, #768]!	; 0x300
    2558:	02211701 	eoreq	r1, r1, #262144	; 0x40000
    255c:	01010002 	tsteq	r1, r2
    2560:	00020500 	andeq	r0, r2, r0, lsl #10
    2564:	03000000 	movweq	r0, #0
    2568:	1701168e 	strne	r1, [r1, -lr, lsl #13]
    256c:	00020221 	andeq	r0, r2, r1, lsr #4
    2570:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2574:	00000002 	andeq	r0, r0, r2
    2578:	169f0300 	ldrne	r0, [pc], r0, lsl #6
    257c:	022f1701 	eoreq	r1, pc, #262144	; 0x40000
    2580:	01010002 	tsteq	r1, r2
    2584:	00020500 	andeq	r0, r2, r0, lsl #10
    2588:	03000000 	movweq	r0, #0
    258c:	170116af 	strne	r1, [r1, -pc, lsr #13]
    2590:	00020221 	andeq	r0, r2, r1, lsr #4
    2594:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2598:	00000002 	andeq	r0, r0, r2
    259c:	16bf0300 	ldrtne	r0, [pc], r0, lsl #6
    25a0:	02211701 	eoreq	r1, r1, #262144	; 0x40000
    25a4:	01010002 	tsteq	r1, r2
    25a8:	00020500 	andeq	r0, r2, r0, lsl #10
    25ac:	03000000 	movweq	r0, #0
    25b0:	1a0116dd 	bne	4812c <__Stack_Size+0x47d2c>
    25b4:	022e0903 	eoreq	r0, lr, #49152	; 0xc000
    25b8:	01010004 	tsteq	r1, r4
    25bc:	04020500 	streq	r0, [r2], #-1280	; 0x500
    25c0:	03080017 	movweq	r0, #32791	; 0x8017
    25c4:	18011786 	stmdane	r1, {r1, r2, r7, r8, r9, sl, ip}
    25c8:	01000402 	tsteq	r0, r2, lsl #8
    25cc:	02050001 	andeq	r0, r5, #1
    25d0:	00000000 	andeq	r0, r0, r0
    25d4:	0117a203 	tsteq	r7, r3, lsl #4
    25d8:	22010903 	andcs	r0, r1, #49152	; 0xc000
    25dc:	00222c22 	eoreq	r2, r2, r2, lsr #24
    25e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    25e4:	04020020 	streq	r0, [r2], #-32
    25e8:	43220601 	teqmi	r2, #1048576	; 0x100000
    25ec:	01000102 	tsteq	r0, r2, lsl #2
    25f0:	02050001 	andeq	r0, r5, #1
    25f4:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
    25f8:	0117cd03 	tsteq	r7, r3, lsl #26
    25fc:	00040218 	andeq	r0, r4, r8, lsl r2
    2600:	00de0101 	sbcseq	r0, lr, r1, lsl #2
    2604:	00020000 	andeq	r0, r2, r0
    2608:	00000061 	andeq	r0, r0, r1, rrx
    260c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2610:	0101000d 	tsteq	r1, sp
    2614:	00000101 	andeq	r0, r0, r1, lsl #2
    2618:	00000100 	andeq	r0, r0, r0, lsl #2
    261c:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    2620:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2624:	62696c00 	rsbvs	r6, r9, #0, 24
    2628:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    262c:	74730000 	ldrbtvc	r0, [r3], #-0
    2630:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2634:	5f783031 	svcpl	0x00783031
    2638:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0x973
    263c:	2e6b6369 	cdpcs	3, 6, cr6, cr11, cr9, {3}
    2640:	00010063 	andeq	r0, r1, r3, rrx
    2644:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    2648:	31663233 	cmncc	r6, r3, lsr r2
    264c:	745f7830 	ldrbvc	r7, [pc], #-2096	; 2654 <__Stack_Size+0x2254>
    2650:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    2654:	00020068 	andeq	r0, r2, r8, rrx
    2658:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    265c:	31663233 	cmncc	r6, r3, lsr r2
    2660:	6d5f7830 	ldclvs	8, cr7, [pc, #-192]	; 25a8 <__Stack_Size+0x21a8>
    2664:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    2668:	00000200 	andeq	r0, r0, r0, lsl #4
    266c:	02050000 	andeq	r0, r5, #0
    2670:	00000000 	andeq	r0, r0, r0
    2674:	24012b03 	strcs	r2, [r1], #-2819	; 0xb03
    2678:	06024e22 	streq	r4, [r2], -r2, lsr #28
    267c:	00010100 	andeq	r0, r1, r0, lsl #2
    2680:	17140205 	ldrne	r0, [r4, -r5, lsl #4]
    2684:	c2030800 	andgt	r0, r3, #0, 16
    2688:	02160100 	andseq	r0, r6, #0, 2
    268c:	01010006 	tsteq	r1, r6
    2690:	20020500 	andcs	r0, r2, r0, lsl #10
    2694:	03080017 	movweq	r0, #32791	; 0x8017
    2698:	160100d5 			; <UNDEFINED> instruction: 0x160100d5
    269c:	5c304c3e 	ldcpl	12, cr4, [r0], #-248	; 0xffffff08
    26a0:	01000602 	tsteq	r0, r2, lsl #12
    26a4:	02050001 	andeq	r0, r5, #1
    26a8:	08001748 	stmdaeq	r0, {r3, r6, r8, r9, sl, ip}
    26ac:	0100f003 	tsteq	r0, r3
    26b0:	40221e26 	eormi	r1, r2, r6, lsr #28
    26b4:	01000602 	tsteq	r0, r2, lsl #12
    26b8:	02050001 	andeq	r0, r5, #1
    26bc:	00000000 	andeq	r0, r0, r0
    26c0:	01018603 	tsteq	r1, r3, lsl #12
    26c4:	04022f13 	streq	r2, [r2], #-3859	; 0xf13
    26c8:	00010100 	andeq	r0, r1, r0, lsl #2
    26cc:	00000205 	andeq	r0, r0, r5, lsl #4
    26d0:	96030000 	strls	r0, [r3], -r0
    26d4:	0a030101 	beq	c2ae0 <__Stack_Size+0xc26e0>
    26d8:	23323e01 	teqcs	r2, #1, 28
    26dc:	022e0903 	eoreq	r0, lr, #49152	; 0xc000
    26e0:	01010006 	tsteq	r1, r6
    26e4:	00000314 	andeq	r0, r0, r4, lsl r3
    26e8:	00870002 	addeq	r0, r7, r2
    26ec:	01020000 	mrseq	r0, (UNDEF: 2)
    26f0:	000d0efb 	strdeq	r0, [sp], -fp
    26f4:	01010101 	tsteq	r1, r1, lsl #2
    26f8:	01000000 	mrseq	r0, (UNDEF: 0)
    26fc:	6c010000 	stcvs	0, cr0, [r1], {-0}
    2700:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    2704:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
    2708:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    270c:	0000636e 	andeq	r6, r0, lr, ror #6
    2710:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2714:	30316632 	eorscc	r6, r1, r2, lsr r6
    2718:	73755f78 	cmnvc	r5, #120, 30	; 0x1e0
    271c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    2720:	00010063 	andeq	r0, r1, r3, rrx
    2724:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    2728:	31663233 	cmncc	r6, r3, lsr r2
    272c:	745f7830 	ldrbvc	r7, [pc], #-2096	; 2734 <__Stack_Size+0x2334>
    2730:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    2734:	00020068 	andeq	r0, r2, r8, rrx
    2738:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    273c:	31663233 	cmncc	r6, r3, lsr r2
    2740:	6d5f7830 	ldclvs	8, cr7, [pc, #-192]	; 2688 <__Stack_Size+0x2288>
    2744:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    2748:	00000200 	andeq	r0, r0, r0, lsl #4
    274c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2750:	30316632 	eorscc	r6, r1, r2, lsr r6
    2754:	73755f78 	cmnvc	r5, #120, 30	; 0x1e0
    2758:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    275c:	00020068 	andeq	r0, r2, r8, rrx
    2760:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    2764:	31663233 	cmncc	r6, r3, lsr r2
    2768:	725f7830 	subsvc	r7, pc, #48, 16	; 0x300000
    276c:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    2770:	00000200 	andeq	r0, r0, r0, lsl #4
    2774:	02050000 	andeq	r0, r5, #0
    2778:	08001760 	stmdaeq	r0, {r5, r6, r8, r9, sl, ip}
    277c:	0100da03 	tsteq	r0, r3, lsl #20
    2780:	033f0824 	teqeq	pc, #36, 16	; 0x240000
    2784:	6603581b 			; <UNDEFINED> instruction: 0x6603581b
    2788:	40595c2e 	subsmi	r5, r9, lr, lsr #24
    278c:	40594059 	subsmi	r4, r9, r9, asr r0
    2790:	7a034259 	bvc	d30fc <__Stack_Size+0xd2cfc>
    2794:	0007022e 	andeq	r0, r7, lr, lsr #4
    2798:	05000101 	streq	r0, [r0, #-257]	; 0x101
    279c:	0017f402 	andseq	pc, r7, r2, lsl #8
    27a0:	018c0308 	orreq	r0, ip, r8, lsl #6
    27a4:	3c150301 	ldccc	3, cr0, [r5], {1}
    27a8:	207a0326 	rsbscs	r0, sl, r6, lsr #6
    27ac:	23233222 	teqcs	r3, #536870914	; 0x20000002
    27b0:	2e780328 	cdpcs	3, 7, cr0, cr8, cr8, {1}
    27b4:	2e7a0328 	cdpcs	3, 7, cr0, cr10, cr8, {1}
    27b8:	207a0334 	rsbscs	r0, sl, r4, lsr r3
    27bc:	26233234 			; <UNDEFINED> instruction: 0x26233234
    27c0:	22207a03 	eorcs	r7, r0, #12288	; 0x3000
    27c4:	032e4e03 	teqeq	lr, #3, 28	; 0x30
    27c8:	24232036 	strtcs	r2, [r3], #-54	; 0x36
    27cc:	4e241c43 	cdpmi	12, 2, cr1, cr4, cr3, {2}
    27d0:	773d4d67 	ldrvc	r4, [sp, -r7, ror #26]!
    27d4:	0005022f 	andeq	r0, r5, pc, lsr #4
    27d8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    27dc:	00187c02 	andseq	r7, r8, r2, lsl #24
    27e0:	01e80308 	mvneq	r0, r8, lsl #6
    27e4:	1d401401 	cfstrdne	mvd1, [r0, #-4]
    27e8:	2121212f 	teqcs	r1, pc, lsr #2
    27ec:	01000202 	tsteq	r0, r2, lsl #4
    27f0:	02050001 	andeq	r0, r5, #1
    27f4:	00000000 	andeq	r0, r0, r0
    27f8:	0101ff03 	tsteq	r1, r3, lsl #30
    27fc:	03011503 	movweq	r1, #5379	; 0x1503
    2800:	1503206b 	strne	r2, [r3, #-107]	; 0x6b
    2804:	20760320 	rsbscs	r0, r6, r0, lsr #6
    2808:	03200a03 	teqeq	r0, #12288	; 0x3000
    280c:	0a033c76 	beq	d19ec <__Stack_Size+0xd15ec>
    2810:	2e780320 	cdpcs	3, 7, cr0, cr8, cr0, {1}
    2814:	02023235 	andeq	r3, r2, #1342177283	; 0x50000003
    2818:	00010100 	andeq	r0, r1, r0, lsl #2
    281c:	00000205 	andeq	r0, r0, r5, lsl #4
    2820:	a3030000 	movwge	r0, #12288	; 0x3000
    2824:	2f140102 	svccs	0x00140102
    2828:	02022121 	andeq	r2, r2, #1073741832	; 0x40000008
    282c:	00010100 	andeq	r0, r1, r0, lsl #2
    2830:	18920205 	ldmne	r2, {r0, r2, r9}
    2834:	b7030800 	strlt	r0, [r3, -r0, lsl #16]
    2838:	1d1a0102 	ldfnes	f0, [sl, #-8]
    283c:	06024f23 	streq	r4, [r2], -r3, lsr #30
    2840:	00010100 	andeq	r0, r1, r0, lsl #2
    2844:	18aa0205 	stmiane	sl!, {r0, r2, r9}
    2848:	e2030800 	and	r0, r3, #0, 16
    284c:	0d030102 	stfeqs	f0, [r3, #-8]
    2850:	1e3e3320 	cdpne	3, 3, cr3, cr14, cr0, {1}
    2854:	22302230 	eorscs	r2, r0, #48, 4
    2858:	40222232 	eormi	r2, r2, r2, lsr r2
    285c:	01000502 	tsteq	r0, r2, lsl #10
    2860:	02050001 	andeq	r0, r5, #1
    2864:	00000000 	andeq	r0, r0, r0
    2868:	01039d03 	tsteq	r3, r3, lsl #26
    286c:	2a010a03 	bcs	45080 <__Stack_Size+0x44c80>
    2870:	04023424 	streq	r3, [r2], #-1060	; 0x424
    2874:	00010100 	andeq	r0, r1, r0, lsl #2
    2878:	00000205 	andeq	r0, r0, r5, lsl #4
    287c:	bc030000 	stclt	0, cr0, [r3], {-0}
    2880:	68180103 	ldmdavs	r8, {r0, r1, r8}
    2884:	01000502 	tsteq	r0, r2, lsl #10
    2888:	02050001 	andeq	r0, r5, #1
    288c:	00000000 	andeq	r0, r0, r0
    2890:	0103d503 	tsteq	r3, r3, lsl #10
    2894:	05026717 	streq	r6, [r2, #-1815]	; 0x717
    2898:	00010100 	andeq	r0, r1, r0, lsl #2
    289c:	00000205 	andeq	r0, r0, r5, lsl #4
    28a0:	ea030000 	b	c28a8 <__Stack_Size+0xc24a8>
    28a4:	1d1a0103 	ldfnes	f0, [sl, #-12]
    28a8:	06024f23 	streq	r4, [r2], -r3, lsr #30
    28ac:	00010100 	andeq	r0, r1, r0, lsl #2
    28b0:	00000205 	andeq	r0, r0, r5, lsl #4
    28b4:	8a030000 	bhi	c28bc <__Stack_Size+0xc24bc>
    28b8:	67170104 	ldrvs	r0, [r7, -r4, lsl #2]
    28bc:	01000502 	tsteq	r0, r2, lsl #10
    28c0:	02050001 	andeq	r0, r5, #1
    28c4:	00000000 	andeq	r0, r0, r0
    28c8:	01049f03 	tsteq	r4, r3, lsl #30
    28cc:	4f231d1a 	svcmi	0x00231d1a
    28d0:	01000602 	tsteq	r0, r2, lsl #12
    28d4:	02050001 	andeq	r0, r5, #1
    28d8:	080018dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip}
    28dc:	0104bb03 	tsteq	r4, r3, lsl #22
    28e0:	00040218 	andeq	r0, r4, r8, lsl r2
    28e4:	05000101 	streq	r0, [r0, #-257]	; 0x101
    28e8:	0018e402 	andseq	lr, r8, r2, lsl #8
    28ec:	04ce0308 	strbeq	r0, [lr], #776	; 0x308
    28f0:	02211701 	eoreq	r1, r1, #262144	; 0x40000
    28f4:	01010003 	tsteq	r1, r3
    28f8:	00020500 	andeq	r0, r2, r0, lsl #10
    28fc:	03000000 	movweq	r0, #0
    2900:	170104e0 	strne	r0, [r1, -r0, ror #9]
    2904:	01000602 	tsteq	r0, r2, lsl #12
    2908:	02050001 	andeq	r0, r5, #1
    290c:	00000000 	andeq	r0, r0, r0
    2910:	0104f303 	tsteq	r4, r3, lsl #6
    2914:	06023e17 			; <UNDEFINED> instruction: 0x06023e17
    2918:	00010100 	andeq	r0, r1, r0, lsl #2
    291c:	00000205 	andeq	r0, r0, r5, lsl #4
    2920:	89030000 	stmdbhi	r3, {}	; <UNPREDICTABLE>
    2924:	4c170105 	ldfmis	f0, [r7], {5}
    2928:	01000502 	tsteq	r0, r2, lsl #10
    292c:	02050001 	andeq	r0, r5, #1
    2930:	00000000 	andeq	r0, r0, r0
    2934:	01059f03 	tsteq	r5, r3, lsl #30
    2938:	4f231d1a 	svcmi	0x00231d1a
    293c:	01000602 	tsteq	r0, r2, lsl #12
    2940:	02050001 	andeq	r0, r5, #1
    2944:	00000000 	andeq	r0, r0, r0
    2948:	0105bc03 	tsteq	r5, r3, lsl #24
    294c:	4f231d1a 	svcmi	0x00231d1a
    2950:	01000602 	tsteq	r0, r2, lsl #12
    2954:	02050001 	andeq	r0, r5, #1
    2958:	00000000 	andeq	r0, r0, r0
    295c:	0105d903 	tsteq	r5, r3, lsl #18
    2960:	4f231d1a 	svcmi	0x00231d1a
    2964:	01000602 	tsteq	r0, r2, lsl #12
    2968:	02050001 	andeq	r0, r5, #1
    296c:	00000000 	andeq	r0, r0, r0
    2970:	0105f803 	tsteq	r5, r3, lsl #16
    2974:	05026717 	streq	r6, [r2, #-1815]	; 0x717
    2978:	00010100 	andeq	r0, r1, r0, lsl #2
    297c:	00000205 	andeq	r0, r0, r5, lsl #4
    2980:	8d030000 	stchi	0, cr0, [r3, #-0]
    2984:	1d1a0106 	ldfnes	f0, [sl, #-24]	; 0xffffffe8
    2988:	06024f23 	streq	r4, [r2], -r3, lsr #30
    298c:	00010100 	andeq	r0, r1, r0, lsl #2
    2990:	18ec0205 	stmiane	ip!, {r0, r2, r9}^
    2994:	b5030800 	strlt	r0, [r3, #-2048]	; 0x800
    2998:	031a0106 	tsteq	sl, #-2147483647	; 0x80000001
    299c:	04022e09 	streq	r2, [r2], #-3593	; 0xe09
    29a0:	00010100 	andeq	r0, r1, r0, lsl #2
    29a4:	18f80205 	ldmne	r8!, {r0, r2, r9}^
    29a8:	e9030800 	stmdb	r3, {fp}
    29ac:	02180106 	andseq	r0, r8, #-2147483647	; 0x80000001
    29b0:	01010004 	tsteq	r1, r4
    29b4:	00020500 	andeq	r0, r2, r0, lsl #10
    29b8:	03080019 	movweq	r0, #32793	; 0x8019
    29bc:	0301078a 	movweq	r0, #6026	; 0x178a
    29c0:	7103010f 	tstvc	r3, pc, lsl #2
    29c4:	200a0320 	andcs	r0, sl, r0, lsr #6
    29c8:	301e3033 	andscc	r3, lr, r3, lsr r0
    29cc:	32223022 	eorcc	r3, r2, #34	; 0x22
    29d0:	02003042 	andeq	r3, r0, #66	; 0x42
    29d4:	001d0104 	andseq	r0, sp, r4, lsl #2
    29d8:	3f010402 	svccc	0x00010402
    29dc:	01040200 	mrseq	r0, R12_usr
    29e0:	02244e22 	eoreq	r4, r4, #544	; 0x220
    29e4:	01010001 	tsteq	r1, r1
    29e8:	00020500 	andeq	r0, r2, r0, lsl #10
    29ec:	03000000 	movweq	r0, #0
    29f0:	030107da 	movweq	r0, #6106	; 0x17da
    29f4:	023d010a 	eorseq	r0, sp, #-2147483646	; 0x80000002
    29f8:	01010004 	tsteq	r1, r4
    29fc:	00000096 	muleq	r0, r6, r0
    2a00:	002f0002 	eoreq	r0, pc, r2
    2a04:	01020000 	mrseq	r0, (UNDEF: 2)
    2a08:	000d0efb 	strdeq	r0, [sp], -fp
    2a0c:	01010101 	tsteq	r1, r1, lsl #2
    2a10:	01000000 	mrseq	r0, (UNDEF: 0)
    2a14:	6c010000 	stcvs	0, cr0, [r1], {-0}
    2a18:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    2a1c:	00006372 	andeq	r6, r0, r2, ror r3
    2a20:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xf63
    2a24:	336d7865 	cmncc	sp, #6619136	; 0x650000
    2a28:	63616d5f 	cmnvs	r1, #6080	; 0x17c0
    2a2c:	732e6f72 	teqvc	lr, #456	; 0x1c8
    2a30:	00000100 	andeq	r0, r0, r0, lsl #2
    2a34:	02050000 	andeq	r0, r5, #0
    2a38:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
    2a3c:	21013403 	tstcs	r1, r3, lsl #8
    2a40:	21200b03 	teqcs	r0, r3, lsl #22
    2a44:	21200b03 	teqcs	r0, r3, lsl #22
    2a48:	2f200b03 	svccs	0x00200b03
    2a4c:	2f200b03 	svccs	0x00200b03
    2a50:	2f200b03 	svccs	0x00200b03
    2a54:	21200b03 	teqcs	r0, r3, lsl #22
    2a58:	2f200b03 	svccs	0x00200b03
    2a5c:	2f200b03 	svccs	0x00200b03
    2a60:	200a032f 	andcs	r0, sl, pc, lsr #6
    2a64:	200b032f 	andcs	r0, fp, pc, lsr #6
    2a68:	200b032f 	andcs	r0, fp, pc, lsr #6
    2a6c:	200b032f 	andcs	r0, fp, pc, lsr #6
    2a70:	200a032f 	andcs	r0, sl, pc, lsr #6
    2a74:	200b0321 	andcs	r0, fp, r1, lsr #6
    2a78:	200b0321 	andcs	r0, fp, r1, lsr #6
    2a7c:	200b0321 	andcs	r0, fp, r1, lsr #6
    2a80:	200b0321 	andcs	r0, fp, r1, lsr #6
    2a84:	200b032f 	andcs	r0, fp, pc, lsr #6
    2a88:	200a032f 	andcs	r0, sl, pc, lsr #6
    2a8c:	200b0321 	andcs	r0, fp, r1, lsr #6
    2a90:	00010221 	andeq	r0, r1, r1, lsr #4
    2a94:	00550101 	subseq	r0, r5, r1, lsl #2
    2a98:	00020000 	andeq	r0, r2, r0
    2a9c:	00000031 	andeq	r0, r0, r1, lsr r0
    2aa0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2aa4:	0101000d 	tsteq	r1, sp
    2aa8:	00000101 	andeq	r0, r0, r1, lsl #2
    2aac:	00000100 	andeq	r0, r0, r0, lsl #2
    2ab0:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    2ab4:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2ab8:	74730000 	ldrbtvc	r0, [r3], #-0
    2abc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2ac0:	5f783031 	svcpl	0x00783031
    2ac4:	74636576 	strbtvc	r6, [r3], #-1398	; 0x576
    2ac8:	632e726f 	teqvs	lr, #-268435450	; 0xf0000006
    2acc:	00000100 	andeq	r0, r0, r0, lsl #2
    2ad0:	02050000 	andeq	r0, r5, #0
    2ad4:	08001940 	stmdaeq	r0, {r6, r8, fp, ip}
    2ad8:	0101d703 	tsteq	r1, r3, lsl #14
    2adc:	01040200 	mrseq	r0, R12_usr
    2ae0:	02003e7b 	andeq	r3, r0, #1968	; 0x7b0
    2ae4:	3e6c0104 	powcce	f0, f4, f4
    2ae8:	0f022f50 	svceq	0x00022f50
    2aec:	8b010100 	blhi	42ef4 <__Stack_Size+0x42af4>
    2af0:	02000000 	andeq	r0, r0, #0
    2af4:	00006d00 	andeq	r6, r0, r0, lsl #26
    2af8:	fb010200 	blx	43302 <__Stack_Size+0x42f02>
    2afc:	01000d0e 	tsteq	r0, lr, lsl #26
    2b00:	00010101 	andeq	r0, r1, r1, lsl #2
    2b04:	00010000 	andeq	r0, r1, r0
    2b08:	696c0100 	stmdbvs	ip!, {r8}^
    2b0c:	53552f62 	cmppl	r5, #392	; 0x188
    2b10:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
    2b14:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    2b18:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
    2b1c:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
    2b20:	2f2e0063 	svccs	0x002e0063
    2b24:	2f62696c 	svccs	0x0062696c
    2b28:	5f425355 	svcpl	0x00425355
    2b2c:	2f62696c 	svccs	0x0062696c
    2b30:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2b34:	62737500 	rsbsvs	r7, r3, #0, 10
    2b38:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    2b3c:	00632e74 	rsbeq	r2, r3, r4, ror lr
    2b40:	73000001 	movwvc	r0, #1
    2b44:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2b48:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    2b4c:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    2b50:	00682e65 	rsbeq	r2, r8, r5, ror #28
    2b54:	75000002 	strvc	r0, [r0, #-2]
    2b58:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
    2b5c:	2e65726f 	cdpcs	2, 6, cr7, cr5, cr15, {3}
    2b60:	00030068 	andeq	r0, r3, r8, rrx
    2b64:	05000000 	streq	r0, [r0, #-0]
    2b68:	00199002 	andseq	r9, r9, r2
    2b6c:	01350308 	teqeq	r5, r8, lsl #6
    2b70:	211d3113 	tstcs	sp, r3, lsl r1
    2b74:	1e223d2f 	cdpne	13, 2, cr3, cr2, cr15, {1}
    2b78:	000e0222 	andeq	r0, lr, r2, lsr #4
    2b7c:	03900101 	orrseq	r0, r0, #1073741824	; 0x40000000
    2b80:	00020000 	andeq	r0, r2, r0
    2b84:	000000a3 	andeq	r0, r0, r3, lsr #1
    2b88:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2b8c:	0101000d 	tsteq	r1, sp
    2b90:	00000101 	andeq	r0, r0, r1, lsl #2
    2b94:	00000100 	andeq	r0, r0, r0, lsl #2
    2b98:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    2b9c:	4253552f 	subsmi	r5, r3, #197132288	; 0xbc00000
    2ba0:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    2ba4:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2ba8:	62696c00 	rsbvs	r6, r9, #0, 24
    2bac:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2bb0:	6c2f2e00 	stcvs	14, cr2, [pc], #-0	; 2bb8 <__Stack_Size+0x27b8>
    2bb4:	552f6269 	strpl	r6, [pc, #-617]!	; 2953 <__Stack_Size+0x2553>
    2bb8:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    2bbc:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    2bc0:	0000636e 	andeq	r6, r0, lr, ror #6
    2bc4:	5f627375 	svcpl	0x00627375
    2bc8:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xf63
    2bcc:	0100632e 	tsteq	r0, lr, lsr #6
    2bd0:	74730000 	ldrbtvc	r0, [r3], #-0
    2bd4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2bd8:	5f783031 	svcpl	0x00783031
    2bdc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
    2be0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2be4:	73750000 	cmnvc	r5, #0
    2be8:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xf62
    2bec:	00682e66 	rsbeq	r2, r8, r6, ror #28
    2bf0:	75000003 	strvc	r0, [r0, #-3]
    2bf4:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
    2bf8:	2e65726f 	cdpcs	2, 6, cr7, cr5, cr15, {3}
    2bfc:	00030068 	andeq	r0, r3, r8, rrx
    2c00:	62737500 	rsbsvs	r7, r3, #0, 10
    2c04:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    2c08:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2c0c:	75000003 	strvc	r0, [r0, #-3]
    2c10:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
    2c14:	2e736765 	cdpcs	7, 7, cr6, cr3, cr5, {3}
    2c18:	00030068 	andeq	r0, r3, r8, rrx
    2c1c:	62737500 	rsbsvs	r7, r3, #0, 10
    2c20:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
    2c24:	0300682e 	movweq	r6, #2094	; 0x82e
    2c28:	00000000 	andeq	r0, r0, r0
    2c2c:	19c40205 	stmibne	r4, {r0, r2, r9}^
    2c30:	3d030800 	stccc	8, cr0, [r3, #-0]
    2c34:	3e222f01 	cdpcc	15, 2, cr2, cr2, cr1, {0}
    2c38:	022f4b22 	eoreq	r4, pc, #34816	; 0x8800
    2c3c:	01010005 	tsteq	r1, r5
    2c40:	e8020500 	stmda	r2, {r8, sl}
    2c44:	03080019 	movweq	r0, #32793	; 0x8019
    2c48:	2f0100eb 	svccs	0x000100eb
    2c4c:	4b223e22 	blmi	8924dc <__Stack_Size+0x8920dc>
    2c50:	0005022f 	andeq	r0, r5, pc, lsr #4
    2c54:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2c58:	001a0c02 	andseq	r0, sl, r2, lsl #24
    2c5c:	01a30308 			; <UNDEFINED> instruction: 0x01a30308
    2c60:	3d222f01 	stccc	15, cr2, [r2, #-4]!
    2c64:	301e2224 	andscc	r2, lr, r4, lsr #4
    2c68:	4422235b 	strtmi	r2, [r2], #-859	; 0x35b
    2c6c:	33404e30 	movtcc	r4, #3632	; 0xe30
    2c70:	47402231 	smlaldxmi	r2, r0, r1, r2
    2c74:	4c231d31 	stcmi	13, cr1, [r3], #-196	; 0xffffff3c
    2c78:	580b0342 	stmdapl	fp, {r1, r6, r8, r9}
    2c7c:	02242b4b 	eoreq	r2, r4, #76800	; 0x12c00
    2c80:	01010007 	tsteq	r1, r7
    2c84:	9c020500 	cfstr32ls	mvfx0, [r2], {-0}
    2c88:	0308001a 	movweq	r0, #32794	; 0x801a
    2c8c:	2f0103f4 	svccs	0x000103f4
    2c90:	0025214b 	eoreq	r2, r5, fp, asr #2
    2c94:	06010402 	streq	r0, [r1], -r2, lsl #8
    2c98:	4d300620 	ldcmi	6, cr0, [r0, #-128]!	; 0xffffff80
    2c9c:	2e0c03ae 	cdpcs	3, 0, cr0, cr12, cr14, {5}
    2ca0:	033c7903 	teqeq	ip, #49152	; 0xc000
    2ca4:	51212e0e 	teqpl	r1, lr, lsl #28
    2ca8:	244c8579 	strbcs	r8, [ip], #-1401	; 0x579
    2cac:	3e3d2f2a 	cdpcc	15, 3, cr2, cr13, cr10, {1}
    2cb0:	00100231 	andseq	r0, r0, r1, lsr r2
    2cb4:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2cb8:	001b4802 	andseq	r4, fp, r2, lsl #16
    2cbc:	00d20308 	sbcseq	r0, r2, r8, lsl #6
    2cc0:	1f212201 	svcne	0x00212201
    2cc4:	21302f59 	teqcs	r0, r9, asr pc
    2cc8:	0222324b 	eoreq	r3, r2, #-1342177276	; 0xb0000004
    2ccc:	01010008 	tsteq	r1, r8
    2cd0:	80020500 	andhi	r0, r2, r0, lsl #10
    2cd4:	0308001b 	movweq	r0, #32795	; 0x801b
    2cd8:	24010180 	strcs	r0, [r1], #-384	; 0x180
    2cdc:	02003e84 	andeq	r3, r0, #132, 28	; 0x840
    2ce0:	20060104 	andcs	r0, r6, r4, lsl #2
    2ce4:	4b342f06 	blmi	d0e904 <__Stack_Size+0xd0e504>
    2ce8:	422f1f21 	eormi	r1, pc, #33, 30	; 0x84
    2cec:	00070221 	andeq	r0, r7, r1, lsr #4
    2cf0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2cf4:	001bc802 	andseq	ip, fp, r2, lsl #16
    2cf8:	01f50308 	mvnseq	r0, r8, lsl #6
    2cfc:	3e402101 	dvfccs	f2, f0, f1
    2d00:	3d35224b 	lfmcc	f2, 4, [r5, #-300]!	; 0xfffffed4
    2d04:	200f0342 	andcs	r0, pc, r2, asr #6
    2d08:	43207203 	teqmi	r0, #805306368	; 0x30000000
    2d0c:	2075035f 	rsbscs	r0, r5, pc, asr r3
    2d10:	00314032 	eorseq	r4, r1, r2, lsr r0
    2d14:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d18:	032f062e 	teqeq	pc, #48234496	; 0x2e00000
    2d1c:	23473c09 	movtcs	r3, #31753	; 0x7c09
    2d20:	4c4d231d 	mcrrmi	3, 1, r2, sp, cr13
    2d24:	6c235a5e 	stcvs	10, cr5, [r3], #-376	; 0xfffffe88
    2d28:	314bcc30 	cmpcc	fp, r0, lsr ip
    2d2c:	00090221 	andeq	r0, r9, r1, lsr #4
    2d30:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2d34:	001ca002 	andseq	sl, ip, r2
    2d38:	02d20308 	sbcseq	r0, r2, #8, 6	; 0x20000000
    2d3c:	0f032601 	svceq	0x00032601
    2d40:	20710320 	rsbscs	r0, r1, r0, lsr #6
    2d44:	03200f03 	teqeq	r0, #3, 30
    2d48:	43212071 	teqmi	r1, #113	; 0x71
    2d4c:	31403254 	cmpcc	r0, r4, asr r2
    2d50:	0402002f 	streq	r0, [r2], #-47	; 0x2f
    2d54:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    2d58:	2e090321 	cdpcs	3, 0, cr0, cr9, cr1, {1}
    2d5c:	03422355 	movteq	r2, #9045	; 0x2355
    2d60:	03342e7a 	teqeq	r4, #1952	; 0x7a0
    2d64:	03342e7a 	teqeq	r4, #1952	; 0x7a0
    2d68:	7734207a 			; <UNDEFINED> instruction: 0x7734207a
    2d6c:	2e6f034b 	cdpcs	3, 6, cr0, cr15, cr11, {2}
    2d70:	02201203 	eoreq	r1, r0, #805306368	; 0x30000000
    2d74:	01010008 	tsteq	r1, r8
    2d78:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
    2d7c:	0308001d 	movweq	r0, #32797	; 0x801d
    2d80:	21010388 	smlabbcs	r1, r8, r3, r0
    2d84:	07024c67 	streq	r4, [r2, -r7, ror #24]
    2d88:	00010100 	andeq	r0, r1, r0, lsl #2
    2d8c:	1d500205 	lfmne	f0, 2, [r0, #-20]	; 0xffffffec
    2d90:	a2030800 	andge	r0, r3, #0, 16
    2d94:	1d150103 	ldfnes	f0, [r5, #-12]
    2d98:	3d222f23 	stccc	15, cr2, [r2, #-140]!	; 0xffffff74
    2d9c:	03022f23 	movweq	r2, #12067	; 0x2f23
    2da0:	00010100 	andeq	r0, r1, r0, lsl #2
    2da4:	1d6c0205 	sfmne	f0, 2, [ip, #-20]!	; 0xffffffec
    2da8:	f6030800 			; <UNDEFINED> instruction: 0xf6030800
    2dac:	68250107 	stmdavs	r5!, {r0, r1, r2, r8}
    2db0:	1803594c 	stmdane	r3, {r2, r3, r6, r8, fp, ip, lr}
    2db4:	000e024a 	andeq	r0, lr, sl, asr #4
    2db8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2dbc:	001db002 	andseq	fp, sp, r2
    2dc0:	06ed0308 	strbteq	r0, [sp], r8, lsl #6
    2dc4:	20110301 	andscs	r0, r1, r1, lsl #6
    2dc8:	1d232b3f 	fstmdbxne	r3!, {d2-d32}	;@ Deprecated
    2dcc:	2f5d4731 	svccs	0x005d4731
    2dd0:	3f5a4c30 	svccc	0x005a4c30
    2dd4:	7db1033d 	ldcvc	3, cr0, [r1, #244]!	; 0xf4
    2dd8:	40304e4a 	eorsmi	r4, r0, sl, asr #28
    2ddc:	3d294f30 	stccc	15, cr4, [r9, #-192]!	; 0xffffff40
    2de0:	4a10033d 	bmi	403adc <__Stack_Size+0x4036dc>
    2de4:	3c3c0330 	ldccc	3, cr0, [ip], #-192	; 0xffffff40
    2de8:	3c440359 	mcrrcc	3, 5, r0, r4, cr9
    2dec:	30443e3d 	subcc	r3, r4, sp, lsr lr
    2df0:	033e3d3d 	teqeq	lr, #3904	; 0xf40
    2df4:	30313c0b 	eorscc	r3, r1, fp, lsl #24
    2df8:	30333141 	eorscc	r3, r3, r1, asr #2
    2dfc:	032e0903 	teqeq	lr, #49152	; 0xc000
    2e00:	aa362e0a 	bge	d8e630 <__Stack_Size+0xd8e230>
    2e04:	032e7503 	teqeq	lr, #12582912	; 0xc00000
    2e08:	1a032010 	bne	cae50 <__Stack_Size+0xcaa50>
    2e0c:	2f3e303c 	svccs	0x003e303c
    2e10:	3e303e30 	mrccc	14, 1, r3, cr0, cr0, {1}
    2e14:	695a4230 	ldmdbvs	sl, {r4, r5, r9, lr}^
    2e18:	75305e4b 	ldrvc	r5, [r0, #-3659]!	; 0xe4b
    2e1c:	0e033051 	mcreq	0, 0, r3, cr3, cr1, {2}
    2e20:	20720320 	rsbscs	r0, r2, r0, lsr #6
    2e24:	75035f43 	strvc	r5, [r3, #-3907]	; 0xf43
    2e28:	31403220 	cmpcc	r0, r0, lsr #4
    2e2c:	3c090359 	stccc	3, cr0, [r9], {89}	; 0x59
    2e30:	59305030 	ldmdbpl	r0!, {r4, r5, ip, lr}
    2e34:	2289674b 	addcs	r6, r9, #19660800	; 0x12c0000
    2e38:	322f233d 	eorcc	r2, pc, #-201326592	; 0xf4000000
    2e3c:	69413067 	stmdbvs	r1, {r0, r1, r2, r5, r6, ip, sp}^
    2e40:	4d413f31 	stclmi	15, cr3, [r1, #-196]	; 0xffffff3c
    2e44:	15083e3f 	strne	r3, [r8, #-3647]	; 0xe3f
    2e48:	5a305a30 	bpl	c19710 <__Stack_Size+0xc19310>
    2e4c:	2f404b40 	svccs	0x00404b40
    2e50:	2f4a3903 	svccs	0x004a3903
    2e54:	2e7ecc03 	cdpcs	12, 7, cr12, cr14, cr3, {0}
    2e58:	032e2c03 	teqeq	lr, #768	; 0x300
    2e5c:	0c022e0b 	stceq	14, cr2, [r2], {11}
    2e60:	00010100 	andeq	r0, r1, r0, lsl #2
    2e64:	208c0205 	addcs	r0, ip, r5, lsl #4
    2e68:	cb030800 	blgt	c4e70 <__Stack_Size+0xc4a70>
    2e6c:	3e210107 	sufccs	f0, f1, f7
    2e70:	01040200 	mrseq	r0, R12_usr
    2e74:	33062e06 	movwcc	r2, #28166	; 0x6e06
    2e78:	01040200 	mrseq	r0, R12_usr
    2e7c:	03062e06 	movweq	r2, #28166	; 0x6e06
    2e80:	1e2e7bea 	vnmulne.f64	d7, d30, d26
    2e84:	59263322 	stmdbpl	r6!, {r1, r5, r8, r9, ip, sp}
    2e88:	252f211f 	strcs	r2, [pc, #-287]!	; 2d71 <__Stack_Size+0x2971>
    2e8c:	3078331b 	rsbscc	r3, r8, fp, lsl r3
    2e90:	1f2f1f21 	svcne	0x002f1f21
    2e94:	3e3f2f21 	cdpcc	15, 3, cr2, cr15, cr1, {1}
    2e98:	2232221e 	eorscs	r2, r2, #-536870911	; 0xe0000001
    2e9c:	ef032f40 	svc	0x00032f40
    2ea0:	303fac03 	eorscc	sl, pc, r3, lsl #24
    2ea4:	034a7603 	movteq	r7, #42499	; 0xa603
    2ea8:	2d312017 	ldccs	0, cr2, [r1, #-92]!	; 0xffffffa4
    2eac:	01000e02 	tsteq	r0, r2, lsl #28
    2eb0:	02050001 	andeq	r0, r5, #1
    2eb4:	08002158 	stmdaeq	r0, {r3, r4, r6, r8, sp}
    2eb8:	0108a203 	tsteq	r8, r3, lsl #4
    2ebc:	001d2325 	andseq	r2, sp, r5, lsr #6
    2ec0:	23010402 	movwcs	r0, #5122	; 0x1402
    2ec4:	03040200 	movweq	r0, #16896	; 0x4200
    2ec8:	04020030 	streq	r0, [r2], #-48	; 0x30
    2ecc:	0232e203 	eorseq	lr, r2, #805306368	; 0x30000000
    2ed0:	01010009 	tsteq	r1, r9
    2ed4:	98020500 	stmdals	r2, {r8, sl}
    2ed8:	03080021 	movweq	r0, #32801	; 0x8021
    2edc:	210107a3 	smlatbcs	r1, r3, r7, r0
    2ee0:	0402003e 	streq	r0, [r2], #-62	; 0x3e
    2ee4:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    2ee8:	303f3030 	eorscc	r3, pc, r0, lsr r0	; <UNPREDICTABLE>
    2eec:	01040200 	mrseq	r0, R12_usr
    2ef0:	0402003d 	streq	r0, [r2], #-61	; 0x3d
    2ef4:	3d311f01 	ldccc	15, cr1, [r1, #-4]!
    2ef8:	3123504c 	teqcc	r3, ip, asr #32
    2efc:	0009022d 	andeq	r0, r9, sp, lsr #4
    2f00:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2f04:	0021f402 	eoreq	pc, r1, r2, lsl #8
    2f08:	08ba0308 	ldmeq	sl!, {r3, r8, r9}
    2f0c:	00010201 	andeq	r0, r1, r1, lsl #4
    2f10:	00a50101 	adceq	r0, r5, r1, lsl #2
    2f14:	00020000 	andeq	r0, r2, r0
    2f18:	0000004c 	andeq	r0, r0, ip, asr #32
    2f1c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2f20:	0101000d 	tsteq	r1, sp
    2f24:	00000101 	andeq	r0, r0, r1, lsl #2
    2f28:	00000100 	andeq	r0, r0, r0, lsl #2
    2f2c:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    2f30:	4253552f 	subsmi	r5, r3, #197132288	; 0xbc00000
    2f34:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    2f38:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2f3c:	62696c00 	rsbvs	r6, r9, #0, 24
    2f40:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2f44:	73750000 	cmnvc	r5, #0
    2f48:	656d5f62 	strbvs	r5, [sp, #-3938]!	; 0xf62
    2f4c:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    2f50:	73000001 	movwvc	r0, #1
    2f54:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2f58:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    2f5c:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    2f60:	00682e65 	rsbeq	r2, r8, r5, ror #28
    2f64:	00000002 	andeq	r0, r0, r2
    2f68:	f6020500 			; <UNDEFINED> instruction: 0xf6020500
    2f6c:	03080021 	movweq	r0, #32801	; 0x8021
    2f70:	2b240124 	blcs	903408 <__Stack_Size+0x903008>
    2f74:	21232b23 	teqcs	r3, r3, lsr #22
    2f78:	01040200 	mrseq	r0, R12_usr
    2f7c:	02002006 	andeq	r2, r0, #6
    2f80:	4e060304 	cdpmi	3, 0, cr0, cr6, cr4, {0}
    2f84:	03040200 	movweq	r0, #16896	; 0x4200
    2f88:	0402002c 	streq	r0, [r2], #-44	; 0x2c
    2f8c:	02003003 	andeq	r3, r0, #3
    2f90:	4e2f0304 	cdpmi	3, 2, cr0, cr15, cr4, {0}
    2f94:	01000102 	tsteq	r0, r2, lsl #2
    2f98:	02050001 	andeq	r0, r5, #1
    2f9c:	08002226 	stmdaeq	r0, {r1, r2, r5, r9, sp}
    2fa0:	24013d03 	strcs	r3, [r1], #-3331	; 0xd03
    2fa4:	232b232b 	teqcs	fp, #-1409286144	; 0xac000000
    2fa8:	04020021 	streq	r0, [r2], #-33	; 0x21
    2fac:	00200601 	eoreq	r0, r0, r1, lsl #12
    2fb0:	06030402 	streq	r0, [r3], -r2, lsl #8
    2fb4:	01026930 	tsteq	r2, r0, lsr r9
    2fb8:	16010100 	strne	r0, [r1], -r0, lsl #2
    2fbc:	02000005 	andeq	r0, r0, #5
    2fc0:	00006d00 	andeq	r6, r0, r0, lsl #26
    2fc4:	fb010200 	blx	437ce <__Stack_Size+0x433ce>
    2fc8:	01000d0e 	tsteq	r0, lr, lsl #26
    2fcc:	00010101 	andeq	r0, r1, r1, lsl #2
    2fd0:	00010000 	andeq	r0, r1, r0
    2fd4:	696c0100 	stmdbvs	ip!, {r8}^
    2fd8:	53552f62 	cmppl	r5, #392	; 0x188
    2fdc:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
    2fe0:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    2fe4:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
    2fe8:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
    2fec:	2f2e0063 	svccs	0x002e0063
    2ff0:	2f62696c 	svccs	0x0062696c
    2ff4:	5f425355 	svcpl	0x00425355
    2ff8:	2f62696c 	svccs	0x0062696c
    2ffc:	00636e69 	rsbeq	r6, r3, r9, ror #28
    3000:	62737500 	rsbsvs	r7, r3, #0, 10
    3004:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    3008:	00632e73 	rsbeq	r2, r3, r3, ror lr
    300c:	73000001 	movwvc	r0, #1
    3010:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    3014:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    3018:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    301c:	00682e65 	rsbeq	r2, r8, r5, ror #28
    3020:	75000002 	strvc	r0, [r0, #-2]
    3024:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
    3028:	2e736765 	cdpcs	7, 7, cr6, cr3, cr5, {3}
    302c:	00030068 	andeq	r0, r3, r8, rrx
    3030:	05000000 	streq	r0, [r0, #-0]
    3034:	00000002 	andeq	r0, r0, r2
    3038:	01230300 	teqeq	r3, r0, lsl #6
    303c:	00060213 	andeq	r0, r6, r3, lsl r2
    3040:	05000101 	streq	r0, [r0, #-257]	; 0x101
    3044:	00000002 	andeq	r0, r0, r2
    3048:	012f0300 	teqeq	pc, r0, lsl #6
    304c:	04022f13 	streq	r2, [r2], #-3859	; 0xf13
    3050:	00010100 	andeq	r0, r1, r0, lsl #2
    3054:	00000205 	andeq	r0, r0, r5, lsl #4
    3058:	3b030000 	blcc	c3060 <__Stack_Size+0xc2c60>
    305c:	06021301 	streq	r1, [r2], -r1, lsl #6
    3060:	00010100 	andeq	r0, r1, r0, lsl #2
    3064:	00000205 	andeq	r0, r0, r5, lsl #4
    3068:	c7030000 	strgt	r0, [r3, -r0]
    306c:	2f130100 	svccs	0x00130100
    3070:	01000402 	tsteq	r0, r2, lsl #8
    3074:	02050001 	andeq	r0, r5, #1
    3078:	00000000 	andeq	r0, r0, r0
    307c:	0100d303 	tsteq	r0, r3, lsl #6
    3080:	04022f13 	streq	r2, [r2], #-3859	; 0xf13
    3084:	00010100 	andeq	r0, r1, r0, lsl #2
    3088:	00000205 	andeq	r0, r0, r5, lsl #4
    308c:	df030000 	svcle	0x00030000
    3090:	02130100 	andseq	r0, r3, #0, 2
    3094:	01010006 	tsteq	r1, r6
    3098:	00020500 	andeq	r0, r2, r0, lsl #10
    309c:	03000000 	movweq	r0, #0
    30a0:	130100eb 	movwne	r0, #4331	; 0x10eb
    30a4:	0004022f 	andeq	r0, r4, pc, lsr #4
    30a8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    30ac:	00224c02 	eoreq	r4, r2, r2, lsl #24
    30b0:	00f70308 	rscseq	r0, r7, r8, lsl #6
    30b4:	08021301 	stmdaeq	r2, {r0, r8, r9, ip}
    30b8:	00010100 	andeq	r0, r1, r0, lsl #2
    30bc:	00000205 	andeq	r0, r0, r5, lsl #4
    30c0:	83030000 	movwhi	r0, #12288	; 0x3000
    30c4:	2f130101 	svccs	0x00130101
    30c8:	01000402 	tsteq	r0, r2, lsl #8
    30cc:	02050001 	andeq	r0, r5, #1
    30d0:	00000000 	andeq	r0, r0, r0
    30d4:	01019003 	tsteq	r1, r3
    30d8:	00070213 	andeq	r0, r7, r3, lsl r2
    30dc:	05000101 	streq	r0, [r0, #-257]	; 0x101
    30e0:	00000002 	andeq	r0, r0, r2
    30e4:	019c0300 	orrseq	r0, ip, r0, lsl #6
    30e8:	02671301 	rsbeq	r1, r7, #67108864	; 0x4000000
    30ec:	01010002 	tsteq	r1, r2
    30f0:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    30f4:	03080022 	movweq	r0, #32802	; 0x8022
    30f8:	130101a9 	movwne	r0, #4521	; 0x11a9
    30fc:	01000e02 	tsteq	r0, r2, lsl #28
    3100:	02050001 	andeq	r0, r5, #1
    3104:	00000000 	andeq	r0, r0, r0
    3108:	0101b503 	tsteq	r1, r3, lsl #10
    310c:	03026713 	movweq	r6, #10003	; 0x2713
    3110:	00010100 	andeq	r0, r1, r0, lsl #2
    3114:	22780205 	rsbscs	r0, r8, #1342177280	; 0x50000000
    3118:	c2030800 	andgt	r0, r3, #0, 16
    311c:	02130101 	andseq	r0, r3, #1073741824	; 0x40000000
    3120:	01010019 	tsteq	r1, r9, lsl r0
    3124:	aa020500 	bge	8452c <__Stack_Size+0x8412c>
    3128:	03080022 	movweq	r0, #32802	; 0x8022
    312c:	130101cf 	movwne	r0, #4559	; 0x11cf
    3130:	01001902 	tsteq	r0, r2, lsl #18
    3134:	02050001 	andeq	r0, r5, #1
    3138:	00000000 	andeq	r0, r0, r0
    313c:	0101dc03 	tsteq	r1, r3, lsl #24
    3140:	03014103 	movweq	r4, #4355	; 0x1103
    3144:	035800c2 	cmpeq	r8, #194	; 0xc2
    3148:	03207fbe 	teqeq	r0, #760	; 0x2f8
    314c:	222000c2 	eorcs	r0, r0, #194	; 0xc2
    3150:	0502303e 	streq	r3, [r2, #-62]	; 0x3e
    3154:	00010100 	andeq	r0, r1, r0, lsl #2
    3158:	00000205 	andeq	r0, r0, r5, lsl #4
    315c:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    3160:	67130101 	ldrvs	r0, [r3, -r1, lsl #2]
    3164:	01000302 	tsteq	r0, r2, lsl #6
    3168:	02050001 	andeq	r0, r5, #1
    316c:	00000000 	andeq	r0, r0, r0
    3170:	0101fd03 	tsteq	r1, r3, lsl #26
    3174:	03026713 	movweq	r6, #10003	; 0x2713
    3178:	00010100 	andeq	r0, r1, r0, lsl #2
    317c:	22dc0205 	sbcscs	r0, ip, #1342177280	; 0x50000000
    3180:	89030800 	stmdbhi	r3, {fp}
    3184:	02130102 	andseq	r0, r3, #-2147483648	; 0x80000000
    3188:	01010013 	tsteq	r1, r3, lsl r0
    318c:	02020500 	andeq	r0, r2, #0, 10
    3190:	03080023 	movweq	r0, #32803	; 0x8023
    3194:	13010295 	movwne	r0, #4757	; 0x1295
    3198:	01001302 	tsteq	r0, r2, lsl #6
    319c:	02050001 	andeq	r0, r5, #1
    31a0:	00000000 	andeq	r0, r0, r0
    31a4:	0102a103 	tsteq	r2, r3, lsl #2
    31a8:	00100213 	andseq	r0, r0, r3, lsl r2
    31ac:	05000101 	streq	r0, [r0, #-257]	; 0x101
    31b0:	00000002 	andeq	r0, r0, r2
    31b4:	02ad0300 	adceq	r0, sp, #0, 6
    31b8:	10021301 	andne	r1, r2, r1, lsl #6
    31bc:	00010100 	andeq	r0, r1, r0, lsl #2
    31c0:	23280205 	teqcs	r8, #1342177280	; 0x50000000
    31c4:	b8030800 	stmdalt	r3, {fp}
    31c8:	02130102 	andseq	r0, r3, #-2147483648	; 0x80000000
    31cc:	01010010 	tsteq	r1, r0, lsl r0
    31d0:	00020500 	andeq	r0, r2, r0, lsl #10
    31d4:	03000000 	movweq	r0, #0
    31d8:	130102c3 	movwne	r0, #4803	; 0x12c3
    31dc:	01001002 	tsteq	r0, r2
    31e0:	02050001 	andeq	r0, r5, #1
    31e4:	00000000 	andeq	r0, r0, r0
    31e8:	0102ce03 	tsteq	r2, r3, lsl #28
    31ec:	00100213 	andseq	r0, r0, r3, lsl r2
    31f0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    31f4:	00000002 	andeq	r0, r0, r2
    31f8:	02d90300 	sbcseq	r0, r9, #0, 6
    31fc:	10021301 	andne	r1, r2, r1, lsl #6
    3200:	00010100 	andeq	r0, r1, r0, lsl #2
    3204:	00000205 	andeq	r0, r0, r5, lsl #4
    3208:	e4030000 	str	r0, [r3], #-0
    320c:	83130102 	tsthi	r3, #-2147483648	; 0x80000000
    3210:	01000502 	tsteq	r0, r2, lsl #10
    3214:	02050001 	andeq	r0, r5, #1
    3218:	00000000 	andeq	r0, r0, r0
    321c:	0102ef03 	tsteq	r2, r3, lsl #30
    3220:	05028313 	streq	r8, [r2, #-787]	; 0x313
    3224:	00010100 	andeq	r0, r1, r0, lsl #2
    3228:	00000205 	andeq	r0, r0, r5, lsl #4
    322c:	fa030000 	blx	c3234 <__Stack_Size+0xc2e34>
    3230:	02130102 	andseq	r0, r3, #-2147483648	; 0x80000000
    3234:	0101000c 	tsteq	r1, ip
    3238:	00020500 	andeq	r0, r2, r0, lsl #10
    323c:	03000000 	movweq	r0, #0
    3240:	13010385 	movwne	r0, #4997	; 0x1385
    3244:	01000e02 	tsteq	r0, r2, lsl #28
    3248:	02050001 	andeq	r0, r5, #1
    324c:	00000000 	andeq	r0, r0, r0
    3250:	01039003 	tsteq	r3, r3
    3254:	00100213 	andseq	r0, r0, r3, lsl r2
    3258:	05000101 	streq	r0, [r0, #-257]	; 0x101
    325c:	00000002 	andeq	r0, r0, r2
    3260:	039b0300 	orrseq	r0, fp, #0, 6
    3264:	10021301 	andne	r1, r2, r1, lsl #6
    3268:	00010100 	andeq	r0, r1, r0, lsl #2
    326c:	23480205 	movtcs	r0, #33285	; 0x8205
    3270:	a6030800 	strge	r0, [r3], -r0, lsl #16
    3274:	02130103 	andseq	r0, r3, #-1073741824	; 0xc0000000
    3278:	01010013 	tsteq	r1, r3, lsl r0
    327c:	6e020500 	cfsh32vs	mvfx0, mvfx2, #0
    3280:	03080023 	movweq	r0, #32803	; 0x8023
    3284:	130103b1 	movwne	r0, #5041	; 0x13b1
    3288:	01001302 	tsteq	r0, r2, lsl #6
    328c:	02050001 	andeq	r0, r5, #1
    3290:	00000000 	andeq	r0, r0, r0
    3294:	0103bd03 	tsteq	r3, r3, lsl #26
    3298:	01000813 	tsteq	r0, r3, lsl r8
    329c:	02050001 	andeq	r0, r5, #1
    32a0:	00000000 	andeq	r0, r0, r0
    32a4:	0103c803 	tsteq	r3, r3, lsl #16
    32a8:	03026713 	movweq	r6, #10003	; 0x2713
    32ac:	00010100 	andeq	r0, r1, r0, lsl #2
    32b0:	23940205 	orrscs	r0, r4, #1342177280	; 0x50000000
    32b4:	d4030800 	strle	r0, [r3], #-2048	; 0x800
    32b8:	02130103 	andseq	r0, r3, #-1073741824	; 0xc0000000
    32bc:	01010010 	tsteq	r1, r0, lsl r0
    32c0:	b4020500 	strlt	r0, [r2], #-1280	; 0x500
    32c4:	03080023 	movweq	r0, #32803	; 0x8023
    32c8:	130103e0 	movwne	r0, #5088	; 0x13e0
    32cc:	01001002 	tsteq	r0, r2
    32d0:	02050001 	andeq	r0, r5, #1
    32d4:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
    32d8:	0103eb03 	tsteq	r3, r3, lsl #22
    32dc:	0502ad13 	streq	sl, [r2, #-3347]	; 0xd13
    32e0:	00010100 	andeq	r0, r1, r0, lsl #2
    32e4:	23f40205 	mvnscs	r0, #1342177280	; 0x50000000
    32e8:	f6030800 			; <UNDEFINED> instruction: 0xf6030800
    32ec:	91130103 	tstls	r3, r3, lsl #2
    32f0:	01000702 	tsteq	r0, r2, lsl #14
    32f4:	02050001 	andeq	r0, r5, #1
    32f8:	08002414 	stmdaeq	r0, {r2, r4, sl, sp}
    32fc:	01048203 	tsteq	r4, r3, lsl #4
    3300:	000e0213 	andeq	r0, lr, r3, lsl r2
    3304:	05000101 	streq	r0, [r0, #-257]	; 0x101
    3308:	00000002 	andeq	r0, r0, r2
    330c:	048e0300 	streq	r0, [lr], #768	; 0x300
    3310:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    3314:	2e060104 	adfcss	f0, f6, f4
    3318:	02040200 	andeq	r0, r4, #0, 4
    331c:	0402009e 	streq	r0, [r2], #-158	; 0x9e
    3320:	02025808 	andeq	r5, r2, #8, 16	; 0x80000
    3324:	00010100 	andeq	r0, r1, r0, lsl #2
    3328:	24300205 	ldrtcs	r0, [r0], #-517	; 0x205
    332c:	9a030800 	bls	c5334 <__Stack_Size+0xc4f34>
    3330:	00130104 	andseq	r0, r3, r4, lsl #2
    3334:	06010402 	streq	r0, [r1], -r2, lsl #8
    3338:	040200ac 	streq	r0, [r2], #-172	; 0xac
    333c:	02009e02 	andeq	r9, r0, #2, 28
    3340:	02580804 	subseq	r0, r8, #4, 16	; 0x40000
    3344:	01010006 	tsteq	r1, r6
    3348:	00020500 	andeq	r0, r2, r0, lsl #10
    334c:	03000000 	movweq	r0, #0
    3350:	130104a5 	movwne	r0, #5285	; 0x14a5
    3354:	00070291 	muleq	r7, r1, r2
    3358:	05000101 	streq	r0, [r0, #-257]	; 0x101
    335c:	00247002 	eoreq	r7, r4, r2
    3360:	04b00308 	ldrteq	r0, [r0], #776	; 0x308
    3364:	02911301 	addseq	r1, r1, #67108864	; 0x4000000
    3368:	01010007 	tsteq	r1, r7
    336c:	00020500 	andeq	r0, r2, r0, lsl #10
    3370:	03000000 	movweq	r0, #0
    3374:	210104bd 			; <UNDEFINED> instruction: 0x210104bd
    3378:	01001b02 	tsteq	r0, r2, lsl #22
    337c:	02050001 	andeq	r0, r5, #1
    3380:	00000000 	andeq	r0, r0, r0
    3384:	0104c903 	tsteq	r4, r3, lsl #18
    3388:	00100213 	andseq	r0, r0, r3, lsl r2
    338c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    3390:	00000002 	andeq	r0, r0, r2
    3394:	04d50300 	ldrbeq	r0, [r5], #768	; 0x300
    3398:	10021301 	andne	r1, r2, r1, lsl #6
    339c:	00010100 	andeq	r0, r1, r0, lsl #2
    33a0:	00000205 	andeq	r0, r0, r5, lsl #4
    33a4:	e0030000 	and	r0, r3, r0
    33a8:	ad130104 	ldfges	f0, [r3, #-16]
    33ac:	01000502 	tsteq	r0, r2, lsl #10
    33b0:	02050001 	andeq	r0, r5, #1
    33b4:	00000000 	andeq	r0, r0, r0
    33b8:	0104eb03 	tsteq	r4, r3, lsl #22
    33bc:	07029113 	smladeq	r2, r3, r1, r9
    33c0:	00010100 	andeq	r0, r1, r0, lsl #2
    33c4:	00000205 	andeq	r0, r0, r5, lsl #4
    33c8:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
    33cc:	1f130104 	svcne	0x00130104
    33d0:	04020021 	streq	r0, [r2], #-33	; 0x21
    33d4:	00200601 	eoreq	r0, r0, r1, lsl #12
    33d8:	ac030402 	cfstrsge	mvf0, [r3], {2}
    33dc:	04040200 	streq	r0, [r4], #-512	; 0x200
    33e0:	040200ac 	streq	r0, [r2], #-172	; 0xac
    33e4:	0200660a 	andeq	r6, r0, #10485760	; 0xa00000
    33e8:	009e1004 	addseq	r1, lr, r4
    33ec:	9e020402 	cdpls	4, 0, cr0, cr2, cr2, {0}
    33f0:	0b040200 	bleq	103bf8 <__Stack_Size+0x1037f8>
    33f4:	0402002e 	streq	r0, [r2], #-46	; 0x2e
    33f8:	00120811 	andseq	r0, r2, r1, lsl r8
    33fc:	58170402 	ldmdapl	r7, {r1, sl}
    3400:	01000902 	tsteq	r0, r2, lsl #18
    3404:	02050001 	andeq	r0, r5, #1
    3408:	00000000 	andeq	r0, r0, r0
    340c:	01058303 	tsteq	r5, r3, lsl #6
    3410:	04020013 	streq	r0, [r2], #-19
    3414:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3418:	ac030402 	cfstrsge	mvf0, [r3], {2}
    341c:	04040200 	streq	r0, [r4], #-512	; 0x200
    3420:	0402009e 	streq	r0, [r2], #-158	; 0x9e
    3424:	0200580a 	andeq	r5, r0, #655360	; 0xa0000
    3428:	002e0204 	eoreq	r0, lr, r4, lsl #4
    342c:	2e0b0402 	cdpcs	4, 0, cr0, cr11, cr2, {0}
    3430:	01000e02 	tsteq	r0, r2, lsl #28
    3434:	02050001 	andeq	r0, r5, #1
    3438:	00000000 	andeq	r0, r0, r0
    343c:	01058f03 	tsteq	r5, r3, lsl #30
    3440:	04020013 	streq	r0, [r2], #-19
    3444:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3448:	ac030402 	cfstrsge	mvf0, [r3], {2}
    344c:	04040200 	streq	r0, [r4], #-512	; 0x200
    3450:	0402009e 	streq	r0, [r2], #-158	; 0x9e
    3454:	0200580a 	andeq	r5, r0, #655360	; 0xa0000
    3458:	002e0204 	eoreq	r0, lr, r4, lsl #4
    345c:	2e0b0402 	cdpcs	4, 0, cr0, cr11, cr2, {0}
    3460:	01000e02 	tsteq	r0, r2, lsl #28
    3464:	02050001 	andeq	r0, r5, #1
    3468:	00000000 	andeq	r0, r0, r0
    346c:	01059b03 	tsteq	r5, r3, lsl #22
    3470:	07029113 	smladeq	r2, r3, r1, r9
    3474:	00010100 	andeq	r0, r1, r0, lsl #2
    3478:	00000205 	andeq	r0, r0, r5, lsl #4
    347c:	a7030000 	strge	r0, [r3, -r0]
    3480:	91130105 	tstls	r3, r5, lsl #2
    3484:	01000702 	tsteq	r0, r2, lsl #14
    3488:	02050001 	andeq	r0, r5, #1
    348c:	00000000 	andeq	r0, r0, r0
    3490:	0105b303 	tsteq	r5, r3, lsl #6
    3494:	46a1bc13 	ssatmi	fp, #2, r3, lsl #24
    3498:	00070225 	andeq	r0, r7, r5, lsr #4
    349c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    34a0:	00000002 	andeq	r0, r0, r2
    34a4:	05c40300 	strbeq	r0, [r4, #768]	; 0x300
    34a8:	d8301301 	ldmdale	r0!, {r0, r8, r9, ip}
    34ac:	000f0230 	andeq	r0, pc, r0, lsr r2	; <UNPREDICTABLE>
    34b0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    34b4:	00000002 	andeq	r0, r0, r2
    34b8:	05d70300 	ldrbeq	r0, [r7, #768]	; 0x300
    34bc:	03021601 	movweq	r1, #9729	; 0x2601
    34c0:	00010100 	andeq	r0, r1, r0, lsl #2
    34c4:	24900205 	ldrcs	r0, [r0], #517	; 0x205
    34c8:	e4030800 	str	r0, [r3], #-2048	; 0x800
    34cc:	30160105 	andscc	r0, r6, r5, lsl #2
    34d0:	01000302 	tsteq	r0, r2, lsl #6
    34d4:	0000bd01 	andeq	fp, r0, r1, lsl #26
    34d8:	87000200 	strhi	r0, [r0, -r0, lsl #4]
    34dc:	02000000 	andeq	r0, r0, #0
    34e0:	0d0efb01 	vstreq	d15, [lr, #-4]
    34e4:	01010100 	mrseq	r0, (UNDEF: 17)
    34e8:	00000001 	andeq	r0, r0, r1
    34ec:	01000001 	tsteq	r0, r1
    34f0:	2f62696c 	svccs	0x0062696c
    34f4:	5f425355 	svcpl	0x00425355
    34f8:	2f62696c 	svccs	0x0062696c
    34fc:	00637273 	rsbeq	r7, r3, r3, ror r2
    3500:	2f62696c 	svccs	0x0062696c
    3504:	00636e69 	rsbeq	r6, r3, r9, ror #28
    3508:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    350c:	53552f62 	cmppl	r5, #392	; 0x188
    3510:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
    3514:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
    3518:	75000063 	strvc	r0, [r0, #-99]	; 0x63
    351c:	735f6273 	cmpvc	pc, #805306375	; 0x30000007
    3520:	632e6c69 	teqvs	lr, #26880	; 0x6900
    3524:	00000100 	andeq	r0, r0, r0, lsl #2
    3528:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    352c:	30316632 	eorscc	r6, r1, r2, lsr r6
    3530:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3534:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    3538:	00000200 	andeq	r0, r0, r0, lsl #4
    353c:	5f627375 	svcpl	0x00627375
    3540:	73676572 	cmnvc	r7, #478150656	; 0x1c800000
    3544:	0300682e 	movweq	r6, #2094	; 0x82e
    3548:	73750000 	cmnvc	r5, #0
    354c:	6e695f62 	cdpvs	15, 6, cr5, cr9, cr2, {3}
    3550:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
    3554:	00000300 	andeq	r0, r0, r0, lsl #6
    3558:	5f627375 	svcpl	0x00627375
    355c:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
    3560:	00030068 	andeq	r0, r3, r8, rrx
    3564:	05000000 	streq	r0, [r0, #-0]
    3568:	00249c02 	eoreq	r9, r4, r2, lsl #24
    356c:	01230308 	teqeq	r3, r8, lsl #6
    3570:	211f2f17 	tstcs	pc, r7, lsl pc	; <UNPREDICTABLE>
    3574:	2e0a033e 	mcrcs	3, 0, r0, cr10, cr14, {1}
    3578:	01000702 	tsteq	r0, r2, lsl #14
    357c:	02050001 	andeq	r0, r5, #1
    3580:	080024bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, sp}
    3584:	0100df03 	tsteq	r0, r3, lsl #30
    3588:	3c7a0326 	ldclcc	3, cr0, [sl], #-152	; 0xffffff68
    358c:	13033f26 	movwne	r3, #16166	; 0x3f26
    3590:	00020282 	andeq	r0, r2, r2, lsl #5
    3594:	00e50101 	rsceq	r0, r5, r1, lsl #2
    3598:	00020000 	andeq	r0, r2, r0
    359c:	00000088 	andeq	r0, r0, r8, lsl #1
    35a0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    35a4:	0101000d 	tsteq	r1, sp
    35a8:	00000101 	andeq	r0, r0, r1, lsl #2
    35ac:	00000100 	andeq	r0, r0, r0, lsl #2
    35b0:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    35b4:	4253552f 	subsmi	r5, r3, #197132288	; 0xbc00000
    35b8:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    35bc:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    35c0:	62696c00 	rsbvs	r6, r9, #0, 24
    35c4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    35c8:	6c2f2e00 	stcvs	14, cr2, [pc], #-0	; 35d0 <__Stack_Size+0x31d0>
    35cc:	552f6269 	strpl	r6, [pc, #-617]!	; 336b <__Stack_Size+0x2f6b>
    35d0:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    35d4:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    35d8:	0000636e 	andeq	r6, r0, lr, ror #6
    35dc:	5f627375 	svcpl	0x00627375
    35e0:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    35e4:	00010063 	andeq	r0, r1, r3, rrx
    35e8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    35ec:	31663233 	cmncc	r6, r3, lsr r2
    35f0:	745f7830 	ldrbvc	r7, [pc], #-2096	; 35f8 <__Stack_Size+0x31f8>
    35f4:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    35f8:	00020068 	andeq	r0, r2, r8, rrx
    35fc:	62737500 	rsbsvs	r7, r3, #0, 10
    3600:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    3604:	00682e73 	rsbeq	r2, r8, r3, ror lr
    3608:	75000003 	strvc	r0, [r0, #-3]
    360c:	695f6273 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    3610:	2e74696e 	cdpcs	9, 7, cr6, cr4, cr14, {3}
    3614:	00030068 	andeq	r0, r3, r8, rrx
    3618:	62737500 	rsbsvs	r7, r3, #0, 10
    361c:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    3620:	00682e65 	rsbeq	r2, r8, r5, ror #28
    3624:	00000003 	andeq	r0, r0, r3
    3628:	e0020500 	and	r0, r2, r0, lsl #10
    362c:	03080024 	movweq	r0, #32804	; 0x8024
    3630:	3e21012a 	sufccsp	f0, f1, #2.0
    3634:	0a035985 	beq	d9c50 <__Stack_Size+0xd9850>
    3638:	2f1f3d2e 	svccs	0x001f3d2e
    363c:	44cc4c4b 	strbmi	r4, [ip], #3147	; 0xc4b
    3640:	3c0e0359 	stccc	3, cr0, [lr], {89}	; 0x59
    3644:	43594c4c 	cmpmi	r9, #76, 24	; 0x4c00
    3648:	0831595a 	ldmdaeq	r1!, {r1, r3, r4, r6, r8, fp, ip, lr}
    364c:	200903d7 	ldrdcs	r0, [r9], -r7
    3650:	1d3f5b91 	fldmdbxne	pc!, {d5-d76}	;@ Deprecated
    3654:	935b4e31 	cmpls	fp, #784	; 0x310
    3658:	025e311d 	subseq	r3, lr, #1073741831	; 0x40000007
    365c:	01010013 	tsteq	r1, r3, lsl r0
    3660:	00020500 	andeq	r0, r2, r0, lsl #10
    3664:	03000000 	movweq	r0, #0
    3668:	23010198 	movwcs	r0, #4504	; 0x1198
    366c:	675a3e76 			; <UNDEFINED> instruction: 0x675a3e76
    3670:	311d3f31 	tstcc	sp, r1, lsr pc
    3674:	1d3f3131 	ldfnes	f3, [pc, #-196]!	; 35b8 <__Stack_Size+0x31b8>
    3678:	0b025e31 	bleq	9af44 <__Stack_Size+0x9ab44>
    367c:	Address 0x000000000000367c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_HP(void)
{
       0:	0000000c 	andeq	r0, r0, ip
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
      10:	0000000c 	andeq	r0, r0, ip
      14:	00000000 	andeq	r0, r0, r0
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
      18:	080001a4 	stmdaeq	r0, {r2, r5, r7, r8}
      1c:	0000000c 	andeq	r0, r0, ip
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
      20:	0000000c 	andeq	r0, r0, ip
      24:	00000000 	andeq	r0, r0, r0
      28:	080001b0 	stmdaeq	r0, {r4, r5, r7, r8}
    if ((wEPVal & EP_CTR_RX) != 0)
      2c:	00000014 	andeq	r0, r0, r4, lsl r0
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      30:	0000000c 	andeq	r0, r0, ip
      34:	00000000 	andeq	r0, r0, r0
      38:	080001c4 	stmdaeq	r0, {r2, r6, r7, r8}

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	00000014 	andeq	r0, r0, r4, lsl r0

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	00000014 	andeq	r0, r0, r4, lsl r0
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	00000000 	andeq	r0, r0, r0
      48:	080001d8 	stmdaeq	r0, {r3, r4, r6, r7, r8}
      4c:	0000004e 	andeq	r0, r0, lr, asr #32

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	8e180e41 	cdphi	14, 1, cr0, cr8, cr1, {2}
      54:	040e6401 	streq	r6, [lr], #-1025	; 0x401
      58:	0000000c 	andeq	r0, r0, ip
	...


    } /* if((wEPVal & EP_CTR_TX) != 0) */

  }/* while(...) */
}
      64:	00000014 	andeq	r0, r0, r4, lsl r0
      68:	0000000c 	andeq	r0, r0, ip
	...
      74:	00000030 	andeq	r0, r0, r0, lsr r0
      78:	00000014 	andeq	r0, r0, r4, lsl r0
      7c:	00000000 	andeq	r0, r0, r0
      80:	08000228 	stmdaeq	r0, {r3, r5, r9}
      84:	00000028 	andeq	r0, r0, r8, lsr #32
      88:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
      8c:	00018e02 	andeq	r8, r1, r2, lsl #28
      90:	00000020 	andeq	r0, r0, r0, lsr #32
	...
      9c:	0000004a 	andeq	r0, r0, sl, asr #32
      a0:	83100e41 	tsthi	r0, #1040	; 0x410
      a4:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	62018e02 	andvs	r8, r1, #2, 28
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
      b0:	0000000e 	andeq	r0, r0, lr
      break; 
      
    default:
      break;
  }
}
      b4:	00000014 	andeq	r0, r0, r4, lsl r0
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	00000000 	andeq	r0, r0, r0
      bc:	08000250 	stmdaeq	r0, {r4, r6, r9}
      c0:	00000012 	andeq	r0, r0, r2, lsl r0
      c4:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
      c8:	00018e02 	andeq	r8, r1, r2, lsl #28
      cc:	00000018 	andeq	r0, r0, r8, lsl r0
      d0:	00000000 	andeq	r0, r0, r0
      d4:	08000262 	stmdaeq	r0, {r1, r5, r6, r9}
      d8:	00000034 	andeq	r0, r0, r4, lsr r0
      dc:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
      e0:	57018e02 	strpl	r8, [r1, -r2, lsl #28]
      e4:	000ec4ce 	andeq	ip, lr, lr, asr #9
      e8:	00000018 	andeq	r0, r0, r8, lsl r0
      ec:	00000000 	andeq	r0, r0, r0
      f0:	08000296 	stmdaeq	r0, {r1, r2, r4, r7, r9}
      f4:	00000014 	andeq	r0, r0, r4, lsl r0
      f8:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
      fc:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     100:	000ec4ce 	andeq	ip, lr, lr, asr #9
     104:	00000018 	andeq	r0, r0, r8, lsl r0
     108:	00000000 	andeq	r0, r0, r0
     10c:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
     110:	00000014 	andeq	r0, r0, r4, lsl r0
     114:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     118:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     11c:	000ec4ce 	andeq	ip, lr, lr, asr #9
     120:	00000020 	andeq	r0, r0, r0, lsr #32
	...
     12c:	0000004a 	andeq	r0, r0, sl, asr #32
     130:	83100e41 	tsthi	r0, #1040	; 0x410
     134:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     138:	62018e02 	andvs	r8, r1, #2, 28
     13c:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
     140:	0000000e 	andeq	r0, r0, lr
     144:	00000014 	andeq	r0, r0, r4, lsl r0
     148:	00000000 	andeq	r0, r0, r0
     14c:	080002be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9}
     150:	00000012 	andeq	r0, r0, r2, lsl r0
     154:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     158:	00018e02 	andeq	r8, r1, r2, lsl #28
     15c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
     168:	00000034 	andeq	r0, r0, r4, lsr r0
     16c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     170:	57018e02 	strpl	r8, [r1, -r2, lsl #28]
     174:	000ec4ce 	andeq	ip, lr, lr, asr #9
     178:	00000018 	andeq	r0, r0, r8, lsl r0
	...
     184:	00000014 	andeq	r0, r0, r4, lsl r0
     188:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     18c:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     190:	000ec4ce 	andeq	ip, lr, lr, asr #9
     194:	00000018 	andeq	r0, r0, r8, lsl r0
	...
     1a0:	00000014 	andeq	r0, r0, r4, lsl r0
     1a4:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     1a8:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     1ac:	000ec4ce 	andeq	ip, lr, lr, asr #9
     1b0:	0000000c 	andeq	r0, r0, ip
	...
     1bc:	00000020 	andeq	r0, r0, r0, lsr #32
     1c0:	00000018 	andeq	r0, r0, r8, lsl r0
     1c4:	00000000 	andeq	r0, r0, r0
     1c8:	080002d0 	stmdaeq	r0, {r4, r6, r7, r9}
     1cc:	0000002c 	andeq	r0, r0, ip, lsr #32
     1d0:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     1d4:	50018e02 	andpl	r8, r1, r2, lsl #28
     1d8:	000ec4ce 	andeq	ip, lr, lr, asr #9
     1dc:	00000018 	andeq	r0, r0, r8, lsl r0
     1e0:	00000000 	andeq	r0, r0, r0
     1e4:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
     1e8:	0000002e 	andeq	r0, r0, lr, lsr #32
     1ec:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
     1f0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     1f4:	00000001 	andeq	r0, r0, r1
     1f8:	00000018 	andeq	r0, r0, r8, lsl r0
     1fc:	00000000 	andeq	r0, r0, r0
     200:	0800032a 	stmdaeq	r0, {r1, r3, r5, r8, r9}
     204:	00000024 	andeq	r0, r0, r4, lsr #32
     208:	840c0e42 	strhi	r0, [ip], #-3650	; 0xe42
     20c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     210:	00000001 	andeq	r0, r0, r1
     214:	0000001c 	andeq	r0, r0, ip, lsl r0
     218:	00000000 	andeq	r0, r0, r0
     21c:	08000350 	stmdaeq	r0, {r4, r6, r8, r9}
     220:	000000b8 	strheq	r0, [r0], -r8
     224:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
     228:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     22c:	200e4301 	andcs	r4, lr, r1, lsl #6
     230:	0c0e5102 	stfeqs	f5, [lr], {2}
     234:	00000024 	andeq	r0, r0, r4, lsr #32
     238:	00000000 	andeq	r0, r0, r0
     23c:	08000408 	stmdaeq	r0, {r3, sl}
     240:	000003f4 	strdeq	r0, [r0], -r4
     244:	84240e42 	strthi	r0, [r4], #-3650	; 0xe42
     248:	86088509 	strhi	r8, [r8], -r9, lsl #10
     24c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     250:	8a048905 	bhi	12266c <__Stack_Size+0x12226c>
     254:	8e028b03 	vmlahi.f64	d8, d2, d3
     258:	580e4201 	stmdapl	lr, {r0, r9, lr}
     25c:	0000001c 	andeq	r0, r0, ip, lsl r0
     260:	00000000 	andeq	r0, r0, r0
     264:	080007fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl}
     268:	0000008c 	andeq	r0, r0, ip, lsl #1
     26c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     270:	54018e02 	strpl	r8, [r1], #-3586	; 0xe02
     274:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
     278:	000b4400 	andeq	r4, fp, r0, lsl #8
     27c:	00000028 	andeq	r0, r0, r8, lsr #32
     280:	00000000 	andeq	r0, r0, r0
     284:	08000888 	stmdaeq	r0, {r3, r7, fp}
     288:	00000124 	andeq	r0, r0, r4, lsr #2
     28c:	84240e42 	strthi	r0, [r4], #-3650	; 0xe42
     290:	86088509 	strhi	r8, [r8], -r9, lsl #10
     294:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     298:	8a048905 	bhi	1226b4 <__Stack_Size+0x1222b4>
     29c:	8e028b03 	vmlahi.f64	d8, d2, d3
     2a0:	380e4201 	stmdacc	lr, {r0, r9, lr}
     2a4:	240e8602 	strcs	r8, [lr], #-1538	; 0x602
     2a8:	00000018 	andeq	r0, r0, r8, lsl r0
     2ac:	00000000 	andeq	r0, r0, r0
     2b0:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
     2b4:	0000007c 	andeq	r0, r0, ip, ror r0
     2b8:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xe41
     2bc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     2c0:	0c0e7c01 	stceq	12, cr7, [lr], {1}
     2c4:	00000018 	andeq	r0, r0, r8, lsl r0
     2c8:	00000000 	andeq	r0, r0, r0
     2cc:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
     2d0:	000000b4 	strheq	r0, [r0], -r4
     2d4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     2d8:	86038504 	strhi	r8, [r3], -r4, lsl #10
     2dc:	00018e02 	andeq	r8, r1, r2, lsl #28
     2e0:	0000000c 	andeq	r0, r0, ip
     2e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     2ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2f0:	0000000c 	andeq	r0, r0, ip
     2f4:	000002e0 	andeq	r0, r0, r0, ror #5
     2f8:	08000adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp}
     2fc:	00000002 	andeq	r0, r0, r2
     300:	0000000c 	andeq	r0, r0, ip
     304:	000002e0 	andeq	r0, r0, r0, ror #5
     308:	08000ade 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, fp}
     30c:	00000002 	andeq	r0, r0, r2
     310:	0000000c 	andeq	r0, r0, ip
     314:	000002e0 	andeq	r0, r0, r0, ror #5
     318:	08000ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp}
     31c:	00000002 	andeq	r0, r0, r2
     320:	0000000c 	andeq	r0, r0, ip
     324:	000002e0 	andeq	r0, r0, r0, ror #5
     328:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
     32c:	00000002 	andeq	r0, r0, r2
     330:	0000000c 	andeq	r0, r0, ip
     334:	000002e0 	andeq	r0, r0, r0, ror #5
     338:	08000ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp}
     33c:	00000002 	andeq	r0, r0, r2
     340:	0000000c 	andeq	r0, r0, ip
     344:	000002e0 	andeq	r0, r0, r0, ror #5
     348:	08000ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp}
     34c:	00000002 	andeq	r0, r0, r2
     350:	0000000c 	andeq	r0, r0, ip
     354:	000002e0 	andeq	r0, r0, r0, ror #5
     358:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
     35c:	00000002 	andeq	r0, r0, r2
     360:	0000000c 	andeq	r0, r0, ip
     364:	000002e0 	andeq	r0, r0, r0, ror #5
     368:	08000aea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, fp}
     36c:	00000002 	andeq	r0, r0, r2
     370:	0000000c 	andeq	r0, r0, ip
     374:	000002e0 	andeq	r0, r0, r0, ror #5
     378:	08000aec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, fp}
     37c:	00000014 	andeq	r0, r0, r4, lsl r0
     380:	0000000c 	andeq	r0, r0, ip
     384:	000002e0 	andeq	r0, r0, r0, ror #5
     388:	08000b00 	stmdaeq	r0, {r8, r9, fp}
     38c:	00000002 	andeq	r0, r0, r2
     390:	0000000c 	andeq	r0, r0, ip
     394:	000002e0 	andeq	r0, r0, r0, ror #5
     398:	08000b02 	stmdaeq	r0, {r1, r8, r9, fp}
     39c:	00000002 	andeq	r0, r0, r2
     3a0:	0000000c 	andeq	r0, r0, ip
     3a4:	000002e0 	andeq	r0, r0, r0, ror #5
     3a8:	08000b04 	stmdaeq	r0, {r2, r8, r9, fp}
     3ac:	00000002 	andeq	r0, r0, r2
     3b0:	0000000c 	andeq	r0, r0, ip
     3b4:	000002e0 	andeq	r0, r0, r0, ror #5
     3b8:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
     3bc:	00000002 	andeq	r0, r0, r2
     3c0:	0000000c 	andeq	r0, r0, ip
     3c4:	000002e0 	andeq	r0, r0, r0, ror #5
     3c8:	08000b08 	stmdaeq	r0, {r3, r8, r9, fp}
     3cc:	00000002 	andeq	r0, r0, r2
     3d0:	0000000c 	andeq	r0, r0, ip
     3d4:	000002e0 	andeq	r0, r0, r0, ror #5
     3d8:	08000b0a 	stmdaeq	r0, {r1, r3, r8, r9, fp}
     3dc:	00000002 	andeq	r0, r0, r2
     3e0:	0000000c 	andeq	r0, r0, ip
     3e4:	000002e0 	andeq	r0, r0, r0, ror #5
     3e8:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
     3ec:	00000002 	andeq	r0, r0, r2
     3f0:	0000000c 	andeq	r0, r0, ip
     3f4:	000002e0 	andeq	r0, r0, r0, ror #5
     3f8:	08000b0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, fp}
     3fc:	00000002 	andeq	r0, r0, r2
     400:	0000000c 	andeq	r0, r0, ip
     404:	000002e0 	andeq	r0, r0, r0, ror #5
     408:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
     40c:	00000002 	andeq	r0, r0, r2
     410:	0000000c 	andeq	r0, r0, ip
     414:	000002e0 	andeq	r0, r0, r0, ror #5
     418:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
     41c:	00000002 	andeq	r0, r0, r2
     420:	0000000c 	andeq	r0, r0, ip
     424:	000002e0 	andeq	r0, r0, r0, ror #5
     428:	08000b14 	stmdaeq	r0, {r2, r4, r8, r9, fp}
     42c:	00000002 	andeq	r0, r0, r2
     430:	0000000c 	andeq	r0, r0, ip
     434:	000002e0 	andeq	r0, r0, r0, ror #5
     438:	00000000 	andeq	r0, r0, r0
     43c:	00000002 	andeq	r0, r0, r2
     440:	0000000c 	andeq	r0, r0, ip
     444:	000002e0 	andeq	r0, r0, r0, ror #5
     448:	00000000 	andeq	r0, r0, r0
     44c:	00000002 	andeq	r0, r0, r2
     450:	0000000c 	andeq	r0, r0, ip
     454:	000002e0 	andeq	r0, r0, r0, ror #5
     458:	00000000 	andeq	r0, r0, r0
     45c:	00000002 	andeq	r0, r0, r2
     460:	0000000c 	andeq	r0, r0, ip
     464:	000002e0 	andeq	r0, r0, r0, ror #5
     468:	00000000 	andeq	r0, r0, r0
     46c:	00000002 	andeq	r0, r0, r2
     470:	0000000c 	andeq	r0, r0, ip
     474:	000002e0 	andeq	r0, r0, r0, ror #5
     478:	00000000 	andeq	r0, r0, r0
     47c:	00000002 	andeq	r0, r0, r2
     480:	0000000c 	andeq	r0, r0, ip
     484:	000002e0 	andeq	r0, r0, r0, ror #5
     488:	00000000 	andeq	r0, r0, r0
     48c:	00000002 	andeq	r0, r0, r2
     490:	0000000c 	andeq	r0, r0, ip
     494:	000002e0 	andeq	r0, r0, r0, ror #5
     498:	00000000 	andeq	r0, r0, r0
     49c:	00000002 	andeq	r0, r0, r2
     4a0:	0000000c 	andeq	r0, r0, ip
     4a4:	000002e0 	andeq	r0, r0, r0, ror #5
     4a8:	08000b16 	stmdaeq	r0, {r1, r2, r4, r8, r9, fp}
     4ac:	00000002 	andeq	r0, r0, r2
     4b0:	0000000c 	andeq	r0, r0, ip
     4b4:	000002e0 	andeq	r0, r0, r0, ror #5
     4b8:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
     4bc:	00000002 	andeq	r0, r0, r2
     4c0:	0000000c 	andeq	r0, r0, ip
     4c4:	000002e0 	andeq	r0, r0, r0, ror #5
     4c8:	08000b1a 	stmdaeq	r0, {r1, r3, r4, r8, r9, fp}
     4cc:	00000004 	andeq	r0, r0, r4
     4d0:	0000000c 	andeq	r0, r0, ip
     4d4:	000002e0 	andeq	r0, r0, r0, ror #5
     4d8:	08000b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp}
     4dc:	00000002 	andeq	r0, r0, r2
     4e0:	0000000c 	andeq	r0, r0, ip
     4e4:	000002e0 	andeq	r0, r0, r0, ror #5
     4e8:	08000b20 	stmdaeq	r0, {r5, r8, r9, fp}
     4ec:	00000002 	andeq	r0, r0, r2
     4f0:	0000000c 	andeq	r0, r0, ip
     4f4:	000002e0 	andeq	r0, r0, r0, ror #5
     4f8:	08000b22 	stmdaeq	r0, {r1, r5, r8, r9, fp}
     4fc:	00000002 	andeq	r0, r0, r2
     500:	0000000c 	andeq	r0, r0, ip
     504:	000002e0 	andeq	r0, r0, r0, ror #5
     508:	08000b24 	stmdaeq	r0, {r2, r5, r8, r9, fp}
     50c:	00000002 	andeq	r0, r0, r2
     510:	0000000c 	andeq	r0, r0, ip
     514:	000002e0 	andeq	r0, r0, r0, ror #5
     518:	08000b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp}
     51c:	00000002 	andeq	r0, r0, r2
     520:	0000000c 	andeq	r0, r0, ip
     524:	000002e0 	andeq	r0, r0, r0, ror #5
     528:	08000b28 	stmdaeq	r0, {r3, r5, r8, r9, fp}
     52c:	00000002 	andeq	r0, r0, r2
     530:	0000000c 	andeq	r0, r0, ip
     534:	000002e0 	andeq	r0, r0, r0, ror #5
     538:	08000b2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, fp}
     53c:	00000002 	andeq	r0, r0, r2
     540:	00000018 	andeq	r0, r0, r8, lsl r0
     544:	000002e0 	andeq	r0, r0, r0, ror #5
     548:	08000b2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, fp}
     54c:	00000014 	andeq	r0, r0, r4, lsl r0
     550:	83080e41 	movwhi	r0, #36417	; 0x8e41
     554:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     558:	000ec3ce 	andeq	ip, lr, lr, asr #7
     55c:	0000000c 	andeq	r0, r0, ip
     560:	000002e0 	andeq	r0, r0, r0, ror #5
     564:	08000b40 	stmdaeq	r0, {r6, r8, r9, fp}
     568:	00000002 	andeq	r0, r0, r2
     56c:	0000000c 	andeq	r0, r0, ip
     570:	000002e0 	andeq	r0, r0, r0, ror #5
     574:	08000b42 	stmdaeq	r0, {r1, r6, r8, r9, fp}
     578:	00000002 	andeq	r0, r0, r2
     57c:	0000000c 	andeq	r0, r0, ip
     580:	000002e0 	andeq	r0, r0, r0, ror #5
     584:	08000b44 	stmdaeq	r0, {r2, r6, r8, r9, fp}
     588:	00000002 	andeq	r0, r0, r2
     58c:	0000000c 	andeq	r0, r0, ip
     590:	000002e0 	andeq	r0, r0, r0, ror #5
     594:	08000b46 	stmdaeq	r0, {r1, r2, r6, r8, r9, fp}
     598:	00000002 	andeq	r0, r0, r2
     59c:	0000000c 	andeq	r0, r0, ip
     5a0:	000002e0 	andeq	r0, r0, r0, ror #5
     5a4:	08000b48 	stmdaeq	r0, {r3, r6, r8, r9, fp}
     5a8:	00000002 	andeq	r0, r0, r2
     5ac:	0000000c 	andeq	r0, r0, ip
     5b0:	000002e0 	andeq	r0, r0, r0, ror #5
     5b4:	08000b4a 	stmdaeq	r0, {r1, r3, r6, r8, r9, fp}
     5b8:	00000002 	andeq	r0, r0, r2
     5bc:	0000000c 	andeq	r0, r0, ip
     5c0:	000002e0 	andeq	r0, r0, r0, ror #5
     5c4:	08000b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp}
     5c8:	00000002 	andeq	r0, r0, r2
     5cc:	0000000c 	andeq	r0, r0, ip
     5d0:	000002e0 	andeq	r0, r0, r0, ror #5
     5d4:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
     5d8:	00000002 	andeq	r0, r0, r2
     5dc:	00000014 	andeq	r0, r0, r4, lsl r0
     5e0:	000002e0 	andeq	r0, r0, r0, ror #5
     5e4:	08000b50 	stmdaeq	r0, {r4, r6, r8, r9, fp}
     5e8:	00000034 	andeq	r0, r0, r4, lsr r0
     5ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     5f0:	00018e02 	andeq	r8, r1, r2, lsl #28
     5f4:	00000018 	andeq	r0, r0, r8, lsl r0
     5f8:	000002e0 	andeq	r0, r0, r0, ror #5
     5fc:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
     600:	0000003c 	andeq	r0, r0, ip, lsr r0
     604:	83100e42 	tsthi	r0, #1056	; 0x420
     608:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     60c:	00018e02 	andeq	r8, r1, r2, lsl #28
     610:	0000000c 	andeq	r0, r0, ip
     614:	000002e0 	andeq	r0, r0, r0, ror #5
     618:	08000bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp}
     61c:	00000002 	andeq	r0, r0, r2
     620:	0000000c 	andeq	r0, r0, ip
     624:	000002e0 	andeq	r0, r0, r0, ror #5
     628:	08000bc2 	stmdaeq	r0, {r1, r6, r7, r8, r9, fp}
     62c:	00000002 	andeq	r0, r0, r2
     630:	0000000c 	andeq	r0, r0, ip
     634:	000002e0 	andeq	r0, r0, r0, ror #5
     638:	08000bc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, fp}
     63c:	00000002 	andeq	r0, r0, r2
     640:	0000000c 	andeq	r0, r0, ip
     644:	000002e0 	andeq	r0, r0, r0, ror #5
     648:	08000bc6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, fp}
     64c:	00000002 	andeq	r0, r0, r2
     650:	0000000c 	andeq	r0, r0, ip
     654:	000002e0 	andeq	r0, r0, r0, ror #5
     658:	08000bc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, fp}
     65c:	00000002 	andeq	r0, r0, r2
     660:	0000000c 	andeq	r0, r0, ip
     664:	000002e0 	andeq	r0, r0, r0, ror #5
     668:	08000bca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, fp}
     66c:	00000002 	andeq	r0, r0, r2
     670:	0000000c 	andeq	r0, r0, ip
     674:	000002e0 	andeq	r0, r0, r0, ror #5
     678:	08000bcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, fp}
     67c:	00000002 	andeq	r0, r0, r2
     680:	0000000c 	andeq	r0, r0, ip
     684:	000002e0 	andeq	r0, r0, r0, ror #5
     688:	08000bce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, fp}
     68c:	00000002 	andeq	r0, r0, r2
     690:	0000000c 	andeq	r0, r0, ip
     694:	000002e0 	andeq	r0, r0, r0, ror #5
     698:	08000bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp}
     69c:	00000002 	andeq	r0, r0, r2
     6a0:	0000000c 	andeq	r0, r0, ip
     6a4:	000002e0 	andeq	r0, r0, r0, ror #5
     6a8:	08000bd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, r9, fp}
     6ac:	00000002 	andeq	r0, r0, r2
     6b0:	0000000c 	andeq	r0, r0, ip
     6b4:	000002e0 	andeq	r0, r0, r0, ror #5
     6b8:	08000bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp}
     6bc:	00000002 	andeq	r0, r0, r2
     6c0:	0000000c 	andeq	r0, r0, ip
     6c4:	000002e0 	andeq	r0, r0, r0, ror #5
     6c8:	08000bd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, fp}
     6cc:	00000002 	andeq	r0, r0, r2
     6d0:	0000000c 	andeq	r0, r0, ip
     6d4:	000002e0 	andeq	r0, r0, r0, ror #5
     6d8:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
     6dc:	00000002 	andeq	r0, r0, r2
     6e0:	0000000c 	andeq	r0, r0, ip
     6e4:	000002e0 	andeq	r0, r0, r0, ror #5
     6e8:	08000bda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, fp}
     6ec:	00000002 	andeq	r0, r0, r2
     6f0:	0000000c 	andeq	r0, r0, ip
     6f4:	000002e0 	andeq	r0, r0, r0, ror #5
     6f8:	08000bdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, fp}
     6fc:	00000002 	andeq	r0, r0, r2
     700:	0000000c 	andeq	r0, r0, ip
     704:	000002e0 	andeq	r0, r0, r0, ror #5
     708:	08000bde 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, fp}
     70c:	00000002 	andeq	r0, r0, r2
     710:	0000000c 	andeq	r0, r0, ip
     714:	000002e0 	andeq	r0, r0, r0, ror #5
     718:	08000be0 	stmdaeq	r0, {r5, r6, r7, r8, r9, fp}
     71c:	00000002 	andeq	r0, r0, r2
     720:	0000000c 	andeq	r0, r0, ip
     724:	000002e0 	andeq	r0, r0, r0, ror #5
     728:	08000be2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, fp}
     72c:	00000002 	andeq	r0, r0, r2
     730:	0000000c 	andeq	r0, r0, ip
     734:	000002e0 	andeq	r0, r0, r0, ror #5
     738:	08000be4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, fp}
     73c:	00000002 	andeq	r0, r0, r2
     740:	0000000c 	andeq	r0, r0, ip
     744:	000002e0 	andeq	r0, r0, r0, ror #5
     748:	08000be6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, fp}
     74c:	00000002 	andeq	r0, r0, r2
     750:	0000000c 	andeq	r0, r0, ip
     754:	000002e0 	andeq	r0, r0, r0, ror #5
     758:	08000be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp}
     75c:	00000002 	andeq	r0, r0, r2
     760:	0000000c 	andeq	r0, r0, ip
     764:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     768:	7c020001 	stcvc	0, cr0, [r2], {1}
     76c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     770:	0000000c 	andeq	r0, r0, ip
     774:	00000760 	andeq	r0, r0, r0, ror #14
     778:	08000bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp}
     77c:	0000000c 	andeq	r0, r0, ip
     780:	00000028 	andeq	r0, r0, r8, lsr #32
     784:	00000760 	andeq	r0, r0, r0, ror #14
     788:	08000bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp}
     78c:	00000104 	andeq	r0, r0, r4, lsl #2
     790:	84240e42 	strthi	r0, [r4], #-3650	; 0xe42
     794:	86088509 	strhi	r8, [r8], -r9, lsl #10
     798:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     79c:	8a048905 	bhi	122bb8 <__Stack_Size+0x1227b8>
     7a0:	8e028b03 	vmlahi.f64	d8, d2, d3
     7a4:	380e4201 	stmdacc	lr, {r0, r9, lr}
     7a8:	240e6c02 	strcs	r6, [lr], #-3074	; 0xc02
     7ac:	00000020 	andeq	r0, r0, r0, lsr #32
     7b0:	00000760 	andeq	r0, r0, r0, ror #14
     7b4:	08000cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp}
     7b8:	0000005c 	andeq	r0, r0, ip, asr r0
     7bc:	83100e41 	tsthi	r0, #1040	; 0x410
     7c0:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     7c4:	61018e02 	tstvs	r1, r2, lsl #28
     7c8:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
     7cc:	0000000e 	andeq	r0, r0, lr
     7d0:	0000000c 	andeq	r0, r0, ip
     7d4:	00000760 	andeq	r0, r0, r0, ror #14
     7d8:	00000000 	andeq	r0, r0, r0
     7dc:	00000020 	andeq	r0, r0, r0, lsr #32
     7e0:	0000000c 	andeq	r0, r0, ip
     7e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     7e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     7ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     7f0:	00000018 	andeq	r0, r0, r8, lsl r0
     7f4:	000007e0 	andeq	r0, r0, r0, ror #15
     7f8:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
     7fc:	0000006c 	andeq	r0, r0, ip, rrx
     800:	83100e41 	tsthi	r0, #1040	; 0x410
     804:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     808:	00018e02 	andeq	r8, r1, r2, lsl #28
     80c:	0000000c 	andeq	r0, r0, ip
     810:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     814:	7c020001 	stcvc	0, cr0, [r2], {1}
     818:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     81c:	0000000c 	andeq	r0, r0, ip
     820:	0000080c 	andeq	r0, r0, ip, lsl #16
     824:	08000dc4 	stmdaeq	r0, {r2, r6, r7, r8, sl, fp}
     828:	00000018 	andeq	r0, r0, r8, lsl r0
     82c:	0000000c 	andeq	r0, r0, ip
     830:	0000080c 	andeq	r0, r0, ip, lsl #16
     834:	08000ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp}
     838:	0000000c 	andeq	r0, r0, ip
     83c:	0000000c 	andeq	r0, r0, ip
     840:	0000080c 	andeq	r0, r0, ip, lsl #16
     844:	08000de8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, fp}
     848:	00000014 	andeq	r0, r0, r4, lsl r0
     84c:	0000000c 	andeq	r0, r0, ip
     850:	0000080c 	andeq	r0, r0, ip, lsl #16
     854:	08000dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp}
     858:	00000002 	andeq	r0, r0, r2
     85c:	00000014 	andeq	r0, r0, r4, lsl r0
     860:	0000080c 	andeq	r0, r0, ip, lsl #16
     864:	08000e00 	stmdaeq	r0, {r9, sl, fp}
     868:	0000005c 	andeq	r0, r0, ip, asr r0
     86c:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
     870:	00018e02 	andeq	r8, r1, r2, lsl #28
     874:	0000000c 	andeq	r0, r0, ip
     878:	0000080c 	andeq	r0, r0, ip, lsl #16
     87c:	08000e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp}
     880:	00000024 	andeq	r0, r0, r4, lsr #32
     884:	0000000c 	andeq	r0, r0, ip
     888:	0000080c 	andeq	r0, r0, ip, lsl #16
     88c:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
     890:	00000010 	andeq	r0, r0, r0, lsl r0
     894:	0000000c 	andeq	r0, r0, ip
     898:	0000080c 	andeq	r0, r0, ip, lsl #16
     89c:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
     8a0:	00000018 	andeq	r0, r0, r8, lsl r0
     8a4:	0000000c 	andeq	r0, r0, ip
     8a8:	0000080c 	andeq	r0, r0, ip, lsl #16
     8ac:	08000ea8 	stmdaeq	r0, {r3, r5, r7, r9, sl, fp}
     8b0:	0000002c 	andeq	r0, r0, ip, lsr #32
     8b4:	00000014 	andeq	r0, r0, r4, lsl r0
     8b8:	0000080c 	andeq	r0, r0, ip, lsl #16
     8bc:	08000ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp}
     8c0:	00000024 	andeq	r0, r0, r4, lsr #32
     8c4:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     8c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     8cc:	00000014 	andeq	r0, r0, r4, lsl r0
     8d0:	0000080c 	andeq	r0, r0, ip, lsl #16
     8d4:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
     8d8:	000000e0 	andeq	r0, r0, r0, ror #1
     8dc:	84080e45 	strhi	r0, [r8], #-3653	; 0xe45
     8e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     8e4:	0000000c 	andeq	r0, r0, ip
     8e8:	0000080c 	andeq	r0, r0, ip, lsl #16
     8ec:	08000fd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, fp}
     8f0:	0000000c 	andeq	r0, r0, ip
     8f4:	0000000c 	andeq	r0, r0, ip
     8f8:	0000080c 	andeq	r0, r0, ip, lsl #16
     8fc:	08000fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp}
     900:	0000000c 	andeq	r0, r0, ip
     904:	0000000c 	andeq	r0, r0, ip
     908:	0000080c 	andeq	r0, r0, ip, lsl #16
     90c:	08000ff0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, fp}
     910:	00000020 	andeq	r0, r0, r0, lsr #32
     914:	0000000c 	andeq	r0, r0, ip
     918:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     91c:	7c020001 	stcvc	0, cr0, [r2], {1}
     920:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     924:	00000018 	andeq	r0, r0, r8, lsl r0
     928:	00000914 	andeq	r0, r0, r4, lsl r9
     92c:	08001010 	stmdaeq	r0, {r4, ip}
     930:	00000028 	andeq	r0, r0, r8, lsr #32
     934:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
     938:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     93c:	00000001 	andeq	r0, r0, r1
     940:	00000014 	andeq	r0, r0, r4, lsl r0
     944:	00000914 	andeq	r0, r0, r4, lsl r9
     948:	08001038 	stmdaeq	r0, {r3, r4, r5, ip}
     94c:	00000038 	andeq	r0, r0, r8, lsr r0
     950:	83080e41 	movwhi	r0, #36417	; 0x8e41
     954:	00018e02 	andeq	r8, r1, r2, lsl #28
     958:	0000000c 	andeq	r0, r0, ip
     95c:	00000914 	andeq	r0, r0, r4, lsl r9
     960:	00000000 	andeq	r0, r0, r0
     964:	00000004 	andeq	r0, r0, r4
     968:	0000000c 	andeq	r0, r0, ip
     96c:	00000914 	andeq	r0, r0, r4, lsl r9
     970:	08001070 	stmdaeq	r0, {r4, r5, r6, ip}
     974:	0000001c 	andeq	r0, r0, ip, lsl r0
     978:	00000018 	andeq	r0, r0, r8, lsl r0
     97c:	00000914 	andeq	r0, r0, r4, lsl r9
     980:	0800108c 	stmdaeq	r0, {r2, r3, r7, ip}
     984:	00000024 	andeq	r0, r0, r4, lsr #32
     988:	83100e41 	tsthi	r0, #1040	; 0x410
     98c:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     990:	00018e02 	andeq	r8, r1, r2, lsl #28
     994:	0000000c 	andeq	r0, r0, ip
     998:	00000914 	andeq	r0, r0, r4, lsl r9
     99c:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
     9a0:	00000004 	andeq	r0, r0, r4
     9a4:	0000001c 	andeq	r0, r0, ip, lsl r0
     9a8:	00000914 	andeq	r0, r0, r4, lsl r9
     9ac:	080010b4 	stmdaeq	r0, {r2, r4, r5, r7, ip}
     9b0:	00000034 	andeq	r0, r0, r4, lsr r0
     9b4:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
     9b8:	4d018e02 	stcmi	14, cr8, [r1, #-8]
     9bc:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
     9c0:	000b4400 	andeq	r4, fp, r0, lsl #8
     9c4:	00000018 	andeq	r0, r0, r8, lsl r0
     9c8:	00000914 	andeq	r0, r0, r4, lsl r9
     9cc:	080010e8 	stmdaeq	r0, {r3, r5, r6, r7, ip}
     9d0:	0000002a 	andeq	r0, r0, sl, lsr #32
     9d4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     9d8:	53018e02 	movwpl	r8, #7682	; 0x1e02
     9dc:	0000080e 	andeq	r0, r0, lr, lsl #16
     9e0:	0000000c 	andeq	r0, r0, ip
     9e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     9e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     9ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     9f0:	0000000c 	andeq	r0, r0, ip
     9f4:	000009e0 	andeq	r0, r0, r0, ror #19
     9f8:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
     9fc:	00000018 	andeq	r0, r0, r8, lsl r0
     a00:	0000000c 	andeq	r0, r0, ip
     a04:	000009e0 	andeq	r0, r0, r0, ror #19
     a08:	00000000 	andeq	r0, r0, r0
     a0c:	00000018 	andeq	r0, r0, r8, lsl r0
     a10:	0000000c 	andeq	r0, r0, ip
     a14:	000009e0 	andeq	r0, r0, r0, ror #19
     a18:	0800112c 	stmdaeq	r0, {r2, r3, r5, r8, ip}
     a1c:	00000018 	andeq	r0, r0, r8, lsl r0
     a20:	0000000c 	andeq	r0, r0, ip
     a24:	000009e0 	andeq	r0, r0, r0, ror #19
     a28:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
     a2c:	00000018 	andeq	r0, r0, r8, lsl r0
     a30:	0000000c 	andeq	r0, r0, ip
     a34:	000009e0 	andeq	r0, r0, r0, ror #19
     a38:	0800115c 	stmdaeq	r0, {r2, r3, r4, r6, r8, ip}
     a3c:	00000010 	andeq	r0, r0, r0, lsl r0
     a40:	0000000c 	andeq	r0, r0, ip
     a44:	000009e0 	andeq	r0, r0, r0, ror #19
     a48:	00000000 	andeq	r0, r0, r0
     a4c:	0000000c 	andeq	r0, r0, ip
     a50:	0000000c 	andeq	r0, r0, ip
     a54:	000009e0 	andeq	r0, r0, r0, ror #19
     a58:	00000000 	andeq	r0, r0, r0
     a5c:	0000000c 	andeq	r0, r0, ip
     a60:	0000000c 	andeq	r0, r0, ip
     a64:	000009e0 	andeq	r0, r0, r0, ror #19
     a68:	00000000 	andeq	r0, r0, r0
     a6c:	00000010 	andeq	r0, r0, r0, lsl r0
     a70:	0000000c 	andeq	r0, r0, ip
     a74:	000009e0 	andeq	r0, r0, r0, ror #19
     a78:	00000000 	andeq	r0, r0, r0
     a7c:	00000010 	andeq	r0, r0, r0, lsl r0
     a80:	0000000c 	andeq	r0, r0, ip
     a84:	000009e0 	andeq	r0, r0, r0, ror #19
     a88:	00000000 	andeq	r0, r0, r0
     a8c:	00000018 	andeq	r0, r0, r8, lsl r0
     a90:	0000000c 	andeq	r0, r0, ip
     a94:	000009e0 	andeq	r0, r0, r0, ror #19
     a98:	00000000 	andeq	r0, r0, r0
     a9c:	00000020 	andeq	r0, r0, r0, lsr #32
     aa0:	0000000c 	andeq	r0, r0, ip
     aa4:	000009e0 	andeq	r0, r0, r0, ror #19
     aa8:	0800116c 	stmdaeq	r0, {r2, r3, r5, r6, r8, ip}
     aac:	0000000c 	andeq	r0, r0, ip
     ab0:	0000000c 	andeq	r0, r0, ip
     ab4:	000009e0 	andeq	r0, r0, r0, ror #19
     ab8:	08001178 	stmdaeq	r0, {r3, r4, r5, r6, r8, ip}
     abc:	00000028 	andeq	r0, r0, r8, lsr #32
     ac0:	00000018 	andeq	r0, r0, r8, lsl r0
     ac4:	000009e0 	andeq	r0, r0, r0, ror #19
     ac8:	080011a0 	stmdaeq	r0, {r5, r7, r8, ip}
     acc:	00000036 	andeq	r0, r0, r6, lsr r0
     ad0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     ad4:	59018e02 	stmdbpl	r1, {r1, r9, sl, fp, pc}
     ad8:	0000080e 	andeq	r0, r0, lr, lsl #16
     adc:	00000018 	andeq	r0, r0, r8, lsl r0
     ae0:	000009e0 	andeq	r0, r0, r0, ror #19
     ae4:	080011d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, ip}
     ae8:	00000040 	andeq	r0, r0, r0, asr #32
     aec:	83100e41 	tsthi	r0, #1040	; 0x410
     af0:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     af4:	00018e02 	andeq	r8, r1, r2, lsl #28
     af8:	00000014 	andeq	r0, r0, r4, lsl r0
     afc:	000009e0 	andeq	r0, r0, r0, ror #19
     b00:	00000000 	andeq	r0, r0, r0
     b04:	0000003c 	andeq	r0, r0, ip, lsr r0
     b08:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b10:	00000014 	andeq	r0, r0, r4, lsl r0
     b14:	000009e0 	andeq	r0, r0, r0, ror #19
     b18:	00000000 	andeq	r0, r0, r0
     b1c:	00000070 	andeq	r0, r0, r0, ror r0
     b20:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     b24:	00018e02 	andeq	r8, r1, r2, lsl #28
     b28:	00000018 	andeq	r0, r0, r8, lsl r0
     b2c:	000009e0 	andeq	r0, r0, r0, ror #19
     b30:	08001218 	stmdaeq	r0, {r3, r4, r9, ip}
     b34:	00000048 	andeq	r0, r0, r8, asr #32
     b38:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     b3c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b40:	00018e02 	andeq	r8, r1, r2, lsl #28
     b44:	00000018 	andeq	r0, r0, r8, lsl r0
     b48:	000009e0 	andeq	r0, r0, r0, ror #19
     b4c:	00000000 	andeq	r0, r0, r0
     b50:	00000038 	andeq	r0, r0, r8, lsr r0
     b54:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     b58:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b60:	00000018 	andeq	r0, r0, r8, lsl r0
     b64:	000009e0 	andeq	r0, r0, r0, ror #19
     b68:	00000000 	andeq	r0, r0, r0
     b6c:	00000048 	andeq	r0, r0, r8, asr #32
     b70:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     b74:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b78:	00018e02 	andeq	r8, r1, r2, lsl #28
     b7c:	00000014 	andeq	r0, r0, r4, lsl r0
     b80:	000009e0 	andeq	r0, r0, r0, ror #19
     b84:	00000000 	andeq	r0, r0, r0
     b88:	000000a0 	andeq	r0, r0, r0, lsr #1
     b8c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     b90:	00018e02 	andeq	r8, r1, r2, lsl #28
     b94:	00000018 	andeq	r0, r0, r8, lsl r0
     b98:	000009e0 	andeq	r0, r0, r0, ror #19
     b9c:	00000000 	andeq	r0, r0, r0
     ba0:	0000008c 	andeq	r0, r0, ip, lsl #1
     ba4:	83100e41 	tsthi	r0, #1040	; 0x410
     ba8:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     bac:	00018e02 	andeq	r8, r1, r2, lsl #28
     bb0:	0000001c 	andeq	r0, r0, ip, lsl r0
     bb4:	000009e0 	andeq	r0, r0, r0, ror #19
     bb8:	00000000 	andeq	r0, r0, r0
     bbc:	00000054 	andeq	r0, r0, r4, asr r0
     bc0:	83180e41 	tsthi	r8, #1040	; 0x410
     bc4:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
     bc8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     bcc:	00018e02 	andeq	r8, r1, r2, lsl #28
     bd0:	0000000c 	andeq	r0, r0, ip
     bd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     bd8:	7c020001 	stcvc	0, cr0, [r2], {1}
     bdc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     be0:	0000000c 	andeq	r0, r0, ip
     be4:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     be8:	08001260 	stmdaeq	r0, {r5, r6, r9, ip}
     bec:	0000000c 	andeq	r0, r0, ip
     bf0:	0000000c 	andeq	r0, r0, ip
     bf4:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     bf8:	0800126c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip}
     bfc:	0000000c 	andeq	r0, r0, ip
     c00:	0000000c 	andeq	r0, r0, ip
     c04:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     c08:	08001278 	stmdaeq	r0, {r3, r4, r5, r6, r9, ip}
     c0c:	0000000c 	andeq	r0, r0, ip
     c10:	0000000c 	andeq	r0, r0, ip
     c14:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     c18:	00000000 	andeq	r0, r0, r0
     c1c:	00000010 	andeq	r0, r0, r0, lsl r0
     c20:	0000000c 	andeq	r0, r0, ip
     c24:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     c28:	00000000 	andeq	r0, r0, r0
     c2c:	00000010 	andeq	r0, r0, r0, lsl r0
     c30:	0000000c 	andeq	r0, r0, ip
     c34:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     c38:	00000000 	andeq	r0, r0, r0
     c3c:	00000014 	andeq	r0, r0, r4, lsl r0
     c40:	0000000c 	andeq	r0, r0, ip
     c44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c48:	7c020001 	stcvc	0, cr0, [r2], {1}
     c4c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c50:	0000001c 	andeq	r0, r0, ip, lsl r0
     c54:	00000c40 	andeq	r0, r0, r0, asr #24
     c58:	00000000 	andeq	r0, r0, r0
     c5c:	000000a4 	andeq	r0, r0, r4, lsr #1
     c60:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c64:	02018e02 	andeq	r8, r1, #2, 28
     c68:	c3ce0a49 	bicgt	r0, lr, #299008	; 0x49000
     c6c:	0b42000e 	bleq	1080cac <__Stack_Size+0x10808ac>
     c70:	00000018 	andeq	r0, r0, r8, lsl r0
     c74:	00000c40 	andeq	r0, r0, r0, asr #24
     c78:	00000000 	andeq	r0, r0, r0
     c7c:	00000016 	andeq	r0, r0, r6, lsl r0
     c80:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c84:	46018e02 	strmi	r8, [r1], -r2, lsl #28
     c88:	000ec3ce 	andeq	ip, lr, lr, asr #7
     c8c:	0000001c 	andeq	r0, r0, ip, lsl r0
     c90:	00000c40 	andeq	r0, r0, r0, asr #24
     c94:	08001284 	stmdaeq	r0, {r2, r7, r9, ip}
     c98:	0000009c 	muleq	r0, ip, r0
     c9c:	84140e42 	ldrhi	r0, [r4], #-3650	; 0xe42
     ca0:	86048505 	strhi	r8, [r4], -r5, lsl #10
     ca4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     ca8:	00000001 	andeq	r0, r0, r1
     cac:	0000000c 	andeq	r0, r0, ip
     cb0:	00000c40 	andeq	r0, r0, r0, asr #24
     cb4:	00000000 	andeq	r0, r0, r0
     cb8:	00000010 	andeq	r0, r0, r0, lsl r0
     cbc:	0000000c 	andeq	r0, r0, ip
     cc0:	00000c40 	andeq	r0, r0, r0, asr #24
     cc4:	08001320 	stmdaeq	r0, {r5, r8, r9, ip}
     cc8:	0000000c 	andeq	r0, r0, ip
     ccc:	0000000c 	andeq	r0, r0, ip
     cd0:	00000c40 	andeq	r0, r0, r0, asr #24
     cd4:	00000000 	andeq	r0, r0, r0
     cd8:	00000006 	andeq	r0, r0, r6
     cdc:	0000000c 	andeq	r0, r0, ip
     ce0:	00000c40 	andeq	r0, r0, r0, asr #24
     ce4:	00000000 	andeq	r0, r0, r0
     ce8:	0000000c 	andeq	r0, r0, ip
     cec:	0000000c 	andeq	r0, r0, ip
     cf0:	00000c40 	andeq	r0, r0, r0, asr #24
     cf4:	00000000 	andeq	r0, r0, r0
     cf8:	00000006 	andeq	r0, r0, r6
     cfc:	0000000c 	andeq	r0, r0, ip
     d00:	00000c40 	andeq	r0, r0, r0, asr #24
     d04:	0800132c 	stmdaeq	r0, {r2, r3, r5, r8, r9, ip}
     d08:	00000004 	andeq	r0, r0, r4
     d0c:	0000000c 	andeq	r0, r0, ip
     d10:	00000c40 	andeq	r0, r0, r0, asr #24
     d14:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
     d18:	00000004 	andeq	r0, r0, r4
     d1c:	0000000c 	andeq	r0, r0, ip
     d20:	00000c40 	andeq	r0, r0, r0, asr #24
     d24:	00000000 	andeq	r0, r0, r0
     d28:	0000000a 	andeq	r0, r0, sl
     d2c:	0000000c 	andeq	r0, r0, ip
     d30:	00000c40 	andeq	r0, r0, r0, asr #24
     d34:	00000000 	andeq	r0, r0, r0
     d38:	00000004 	andeq	r0, r0, r4
     d3c:	0000000c 	andeq	r0, r0, ip
     d40:	00000c40 	andeq	r0, r0, r0, asr #24
     d44:	00000000 	andeq	r0, r0, r0
     d48:	00000010 	andeq	r0, r0, r0, lsl r0
     d4c:	0000000c 	andeq	r0, r0, ip
     d50:	00000c40 	andeq	r0, r0, r0, asr #24
     d54:	00000000 	andeq	r0, r0, r0
     d58:	0000001c 	andeq	r0, r0, ip, lsl r0
     d5c:	0000000c 	andeq	r0, r0, ip
     d60:	00000c40 	andeq	r0, r0, r0, asr #24
     d64:	00000000 	andeq	r0, r0, r0
     d68:	0000000c 	andeq	r0, r0, ip
     d6c:	00000018 	andeq	r0, r0, r8, lsl r0
     d70:	00000c40 	andeq	r0, r0, r0, asr #24
     d74:	08001334 	stmdaeq	r0, {r2, r4, r5, r8, r9, ip}
     d78:	00000054 	andeq	r0, r0, r4, asr r0
     d7c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
     d80:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     d84:	00000001 	andeq	r0, r0, r1
     d88:	00000014 	andeq	r0, r0, r4, lsl r0
     d8c:	00000c40 	andeq	r0, r0, r0, asr #24
     d90:	00000000 	andeq	r0, r0, r0
     d94:	0000002a 	andeq	r0, r0, sl, lsr #32
     d98:	84080e49 	strhi	r0, [r8], #-3657	; 0xe49
     d9c:	00018e02 	andeq	r8, r1, r2, lsl #28
     da0:	0000000c 	andeq	r0, r0, ip
     da4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     da8:	7c020001 	stcvc	0, cr0, [r2], {1}
     dac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     db0:	0000000c 	andeq	r0, r0, ip
     db4:	00000da0 	andeq	r0, r0, r0, lsr #27
     db8:	00000000 	andeq	r0, r0, r0
     dbc:	00000034 	andeq	r0, r0, r4, lsr r0
     dc0:	0000000c 	andeq	r0, r0, ip
     dc4:	00000da0 	andeq	r0, r0, r0, lsr #27
     dc8:	00000000 	andeq	r0, r0, r0
     dcc:	00000030 	andeq	r0, r0, r0, lsr r0
     dd0:	0000000c 	andeq	r0, r0, ip
     dd4:	00000da0 	andeq	r0, r0, r0, lsr #27
     dd8:	08001388 	stmdaeq	r0, {r3, r7, r8, r9, ip}
     ddc:	00000014 	andeq	r0, r0, r4, lsl r0
     de0:	00000018 	andeq	r0, r0, r8, lsl r0
     de4:	00000da0 	andeq	r0, r0, r0, lsr #27
     de8:	0800139c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, ip}
     dec:	00000084 	andeq	r0, r0, r4, lsl #1
     df0:	840c0e42 	strhi	r0, [ip], #-3650	; 0xe42
     df4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     df8:	00000001 	andeq	r0, r0, r1
     dfc:	0000000c 	andeq	r0, r0, ip
     e00:	00000da0 	andeq	r0, r0, r0, lsr #27
     e04:	00000000 	andeq	r0, r0, r0
     e08:	0000000c 	andeq	r0, r0, ip
     e0c:	0000000c 	andeq	r0, r0, ip
     e10:	00000da0 	andeq	r0, r0, r0, lsr #27
     e14:	00000000 	andeq	r0, r0, r0
     e18:	00000004 	andeq	r0, r0, r4
     e1c:	0000000c 	andeq	r0, r0, ip
     e20:	00000da0 	andeq	r0, r0, r0, lsr #27
     e24:	00000000 	andeq	r0, r0, r0
     e28:	00000004 	andeq	r0, r0, r4
     e2c:	0000000c 	andeq	r0, r0, ip
     e30:	00000da0 	andeq	r0, r0, r0, lsr #27
     e34:	00000000 	andeq	r0, r0, r0
     e38:	00000004 	andeq	r0, r0, r4
     e3c:	0000000c 	andeq	r0, r0, ip
     e40:	00000da0 	andeq	r0, r0, r0, lsr #27
     e44:	00000000 	andeq	r0, r0, r0
     e48:	00000004 	andeq	r0, r0, r4
     e4c:	0000000c 	andeq	r0, r0, ip
     e50:	00000da0 	andeq	r0, r0, r0, lsr #27
     e54:	00000000 	andeq	r0, r0, r0
     e58:	00000006 	andeq	r0, r0, r6
     e5c:	0000000c 	andeq	r0, r0, ip
     e60:	00000da0 	andeq	r0, r0, r0, lsr #27
     e64:	00000000 	andeq	r0, r0, r0
     e68:	00000004 	andeq	r0, r0, r4
     e6c:	0000000c 	andeq	r0, r0, ip
     e70:	00000da0 	andeq	r0, r0, r0, lsr #27
     e74:	00000000 	andeq	r0, r0, r0
     e78:	00000010 	andeq	r0, r0, r0, lsl r0
     e7c:	0000000c 	andeq	r0, r0, ip
     e80:	00000da0 	andeq	r0, r0, r0, lsr #27
     e84:	00000000 	andeq	r0, r0, r0
     e88:	00000020 	andeq	r0, r0, r0, lsr #32
     e8c:	0000000c 	andeq	r0, r0, ip
     e90:	00000da0 	andeq	r0, r0, r0, lsr #27
     e94:	00000000 	andeq	r0, r0, r0
     e98:	0000000c 	andeq	r0, r0, ip
     e9c:	0000000c 	andeq	r0, r0, ip
     ea0:	00000da0 	andeq	r0, r0, r0, lsr #27
     ea4:	00000000 	andeq	r0, r0, r0
     ea8:	00000018 	andeq	r0, r0, r8, lsl r0
     eac:	0000000c 	andeq	r0, r0, ip
     eb0:	00000da0 	andeq	r0, r0, r0, lsr #27
     eb4:	00000000 	andeq	r0, r0, r0
     eb8:	00000010 	andeq	r0, r0, r0, lsl r0
     ebc:	0000000c 	andeq	r0, r0, ip
     ec0:	00000da0 	andeq	r0, r0, r0, lsr #27
     ec4:	00000000 	andeq	r0, r0, r0
     ec8:	00000020 	andeq	r0, r0, r0, lsr #32
     ecc:	0000000c 	andeq	r0, r0, ip
     ed0:	00000da0 	andeq	r0, r0, r0, lsr #27
     ed4:	00000000 	andeq	r0, r0, r0
     ed8:	0000000c 	andeq	r0, r0, ip
     edc:	0000000c 	andeq	r0, r0, ip
     ee0:	00000da0 	andeq	r0, r0, r0, lsr #27
     ee4:	08001420 	stmdaeq	r0, {r5, sl, ip}
     ee8:	00000014 	andeq	r0, r0, r4, lsl r0
     eec:	00000014 	andeq	r0, r0, r4, lsl r0
     ef0:	00000da0 	andeq	r0, r0, r0, lsr #27
     ef4:	08001434 	stmdaeq	r0, {r2, r4, r5, sl, ip}
     ef8:	00000018 	andeq	r0, r0, r8, lsl r0
     efc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f00:	00018e02 	andeq	r8, r1, r2, lsl #28
     f04:	0000000c 	andeq	r0, r0, ip
     f08:	00000da0 	andeq	r0, r0, r0, lsr #27
     f0c:	00000000 	andeq	r0, r0, r0
     f10:	00000010 	andeq	r0, r0, r0, lsl r0
     f14:	0000000c 	andeq	r0, r0, ip
     f18:	00000da0 	andeq	r0, r0, r0, lsr #27
     f1c:	00000000 	andeq	r0, r0, r0
     f20:	00000018 	andeq	r0, r0, r8, lsl r0
     f24:	0000000c 	andeq	r0, r0, ip
     f28:	00000da0 	andeq	r0, r0, r0, lsr #27
     f2c:	00000000 	andeq	r0, r0, r0
     f30:	00000020 	andeq	r0, r0, r0, lsr #32
     f34:	00000014 	andeq	r0, r0, r4, lsl r0
     f38:	00000da0 	andeq	r0, r0, r0, lsr #27
     f3c:	00000000 	andeq	r0, r0, r0
     f40:	0000004c 	andeq	r0, r0, ip, asr #32
     f44:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
     f48:	00018e02 	andeq	r8, r1, r2, lsl #28
     f4c:	0000000c 	andeq	r0, r0, ip
     f50:	00000da0 	andeq	r0, r0, r0, lsr #27
     f54:	00000000 	andeq	r0, r0, r0
     f58:	0000001c 	andeq	r0, r0, ip, lsl r0
     f5c:	0000000c 	andeq	r0, r0, ip
     f60:	00000da0 	andeq	r0, r0, r0, lsr #27
     f64:	00000000 	andeq	r0, r0, r0
     f68:	00000018 	andeq	r0, r0, r8, lsl r0
     f6c:	0000000c 	andeq	r0, r0, ip
     f70:	00000da0 	andeq	r0, r0, r0, lsr #27
     f74:	00000000 	andeq	r0, r0, r0
     f78:	00000018 	andeq	r0, r0, r8, lsl r0
     f7c:	0000000c 	andeq	r0, r0, ip
     f80:	00000da0 	andeq	r0, r0, r0, lsr #27
     f84:	00000000 	andeq	r0, r0, r0
     f88:	0000001c 	andeq	r0, r0, ip, lsl r0
     f8c:	0000000c 	andeq	r0, r0, ip
     f90:	00000da0 	andeq	r0, r0, r0, lsr #27
     f94:	00000000 	andeq	r0, r0, r0
     f98:	00000030 	andeq	r0, r0, r0, lsr r0
     f9c:	0000000c 	andeq	r0, r0, ip
     fa0:	00000da0 	andeq	r0, r0, r0, lsr #27
     fa4:	00000000 	andeq	r0, r0, r0
     fa8:	00000014 	andeq	r0, r0, r4, lsl r0
     fac:	0000000c 	andeq	r0, r0, ip
     fb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     fb4:	7c020001 	stcvc	0, cr0, [r2], {1}
     fb8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     fbc:	0000000c 	andeq	r0, r0, ip
     fc0:	00000fac 	andeq	r0, r0, ip, lsr #31
     fc4:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
     fc8:	0000003c 	andeq	r0, r0, ip, lsr r0
     fcc:	0000000c 	andeq	r0, r0, ip
     fd0:	00000fac 	andeq	r0, r0, ip, lsr #31
     fd4:	08001488 	stmdaeq	r0, {r3, r7, sl, ip}
     fd8:	00000038 	andeq	r0, r0, r8, lsr r0
     fdc:	0000000c 	andeq	r0, r0, ip
     fe0:	00000fac 	andeq	r0, r0, ip, lsr #31
     fe4:	00000000 	andeq	r0, r0, r0
     fe8:	00000014 	andeq	r0, r0, r4, lsl r0
     fec:	0000000c 	andeq	r0, r0, ip
     ff0:	00000fac 	andeq	r0, r0, ip, lsr #31
     ff4:	00000000 	andeq	r0, r0, r0
     ff8:	0000000c 	andeq	r0, r0, ip
     ffc:	0000000c 	andeq	r0, r0, ip
    1000:	00000fac 	andeq	r0, r0, ip, lsr #31
    1004:	080014c0 	stmdaeq	r0, {r6, r7, sl, ip}
    1008:	00000014 	andeq	r0, r0, r4, lsl r0
    100c:	0000000c 	andeq	r0, r0, ip
    1010:	00000fac 	andeq	r0, r0, ip, lsr #31
    1014:	080014d4 	stmdaeq	r0, {r2, r4, r6, r7, sl, ip}
    1018:	0000000c 	andeq	r0, r0, ip
    101c:	0000000c 	andeq	r0, r0, ip
    1020:	00000fac 	andeq	r0, r0, ip, lsr #31
    1024:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
    1028:	00000014 	andeq	r0, r0, r4, lsl r0
    102c:	0000000c 	andeq	r0, r0, ip
    1030:	00000fac 	andeq	r0, r0, ip, lsr #31
    1034:	080014f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, ip}
    1038:	00000010 	andeq	r0, r0, r0, lsl r0
    103c:	0000000c 	andeq	r0, r0, ip
    1040:	00000fac 	andeq	r0, r0, ip, lsr #31
    1044:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
    1048:	00000014 	andeq	r0, r0, r4, lsl r0
    104c:	0000000c 	andeq	r0, r0, ip
    1050:	00000fac 	andeq	r0, r0, ip, lsr #31
    1054:	08001518 	stmdaeq	r0, {r3, r4, r8, sl, ip}
    1058:	00000014 	andeq	r0, r0, r4, lsl r0
    105c:	0000000c 	andeq	r0, r0, ip
    1060:	00000fac 	andeq	r0, r0, ip, lsr #31
    1064:	0800152c 	stmdaeq	r0, {r2, r3, r5, r8, sl, ip}
    1068:	00000014 	andeq	r0, r0, r4, lsl r0
    106c:	0000000c 	andeq	r0, r0, ip
    1070:	00000fac 	andeq	r0, r0, ip, lsr #31
    1074:	00000000 	andeq	r0, r0, r0
    1078:	00000018 	andeq	r0, r0, r8, lsl r0
    107c:	0000000c 	andeq	r0, r0, ip
    1080:	00000fac 	andeq	r0, r0, ip, lsr #31
    1084:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    1088:	0000000c 	andeq	r0, r0, ip
    108c:	0000000c 	andeq	r0, r0, ip
    1090:	00000fac 	andeq	r0, r0, ip, lsr #31
    1094:	00000000 	andeq	r0, r0, r0
    1098:	00000014 	andeq	r0, r0, r4, lsl r0
    109c:	0000000c 	andeq	r0, r0, ip
    10a0:	00000fac 	andeq	r0, r0, ip, lsr #31
    10a4:	00000000 	andeq	r0, r0, r0
    10a8:	00000020 	andeq	r0, r0, r0, lsr #32
    10ac:	0000000c 	andeq	r0, r0, ip
    10b0:	00000fac 	andeq	r0, r0, ip, lsr #31
    10b4:	00000000 	andeq	r0, r0, r0
    10b8:	0000000c 	andeq	r0, r0, ip
    10bc:	0000000c 	andeq	r0, r0, ip
    10c0:	00000fac 	andeq	r0, r0, ip, lsr #31
    10c4:	00000000 	andeq	r0, r0, r0
    10c8:	00000010 	andeq	r0, r0, r0, lsl r0
    10cc:	0000000c 	andeq	r0, r0, ip
    10d0:	00000fac 	andeq	r0, r0, ip, lsr #31
    10d4:	00000000 	andeq	r0, r0, r0
    10d8:	0000000c 	andeq	r0, r0, ip
    10dc:	00000014 	andeq	r0, r0, r4, lsl r0
    10e0:	00000fac 	andeq	r0, r0, ip, lsr #31
    10e4:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
    10e8:	00000084 	andeq	r0, r0, r4, lsl #1
    10ec:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    10f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    10f4:	0000000c 	andeq	r0, r0, ip
    10f8:	00000fac 	andeq	r0, r0, ip, lsr #31
    10fc:	00000000 	andeq	r0, r0, r0
    1100:	00000018 	andeq	r0, r0, r8, lsl r0
    1104:	0000000c 	andeq	r0, r0, ip
    1108:	00000fac 	andeq	r0, r0, ip, lsr #31
    110c:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
    1110:	00000018 	andeq	r0, r0, r8, lsl r0
    1114:	0000000c 	andeq	r0, r0, ip
    1118:	00000fac 	andeq	r0, r0, ip, lsr #31
    111c:	080015e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, ip}
    1120:	00000018 	andeq	r0, r0, r8, lsl r0
    1124:	0000000c 	andeq	r0, r0, ip
    1128:	00000fac 	andeq	r0, r0, ip, lsr #31
    112c:	08001600 	stmdaeq	r0, {r9, sl, ip}
    1130:	00000018 	andeq	r0, r0, r8, lsl r0
    1134:	0000000c 	andeq	r0, r0, ip
    1138:	00000fac 	andeq	r0, r0, ip, lsr #31
    113c:	08001618 	stmdaeq	r0, {r3, r4, r9, sl, ip}
    1140:	00000018 	andeq	r0, r0, r8, lsl r0
    1144:	0000000c 	andeq	r0, r0, ip
    1148:	00000fac 	andeq	r0, r0, ip, lsr #31
    114c:	00000000 	andeq	r0, r0, r0
    1150:	0000000c 	andeq	r0, r0, ip
    1154:	0000000c 	andeq	r0, r0, ip
    1158:	00000fac 	andeq	r0, r0, ip, lsr #31
    115c:	00000000 	andeq	r0, r0, r0
    1160:	0000000c 	andeq	r0, r0, ip
    1164:	0000000c 	andeq	r0, r0, ip
    1168:	00000fac 	andeq	r0, r0, ip, lsr #31
    116c:	00000000 	andeq	r0, r0, r0
    1170:	0000000c 	andeq	r0, r0, ip
    1174:	0000000c 	andeq	r0, r0, ip
    1178:	00000fac 	andeq	r0, r0, ip, lsr #31
    117c:	08001630 	stmdaeq	r0, {r4, r5, r9, sl, ip}
    1180:	00000028 	andeq	r0, r0, r8, lsr #32
    1184:	00000014 	andeq	r0, r0, r4, lsl r0
    1188:	00000fac 	andeq	r0, r0, ip, lsr #31
    118c:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
    1190:	0000002e 	andeq	r0, r0, lr, lsr #32
    1194:	8e100e41 	cdphi	14, 1, cr0, cr0, cr1, {2}
    1198:	040e5401 	streq	r5, [lr], #-1025	; 0x401
    119c:	0000000c 	andeq	r0, r0, ip
    11a0:	00000fac 	andeq	r0, r0, ip, lsr #31
    11a4:	08001688 	stmdaeq	r0, {r3, r7, r9, sl, ip}
    11a8:	00000010 	andeq	r0, r0, r0, lsl r0
    11ac:	0000000c 	andeq	r0, r0, ip
    11b0:	00000fac 	andeq	r0, r0, ip, lsr #31
    11b4:	00000000 	andeq	r0, r0, r0
    11b8:	00000014 	andeq	r0, r0, r4, lsl r0
    11bc:	0000000c 	andeq	r0, r0, ip
    11c0:	00000fac 	andeq	r0, r0, ip, lsr #31
    11c4:	00000000 	andeq	r0, r0, r0
    11c8:	0000000c 	andeq	r0, r0, ip
    11cc:	0000000c 	andeq	r0, r0, ip
    11d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11d4:	7c020001 	stcvc	0, cr0, [r2], {1}
    11d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11dc:	00000018 	andeq	r0, r0, r8, lsl r0
    11e0:	000011cc 	andeq	r1, r0, ip, asr #3
    11e4:	00000000 	andeq	r0, r0, r0
    11e8:	00000032 	andeq	r0, r0, r2, lsr r0
    11ec:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
    11f0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    11f4:	00000001 	andeq	r0, r0, r1
    11f8:	00000018 	andeq	r0, r0, r8, lsl r0
    11fc:	000011cc 	andeq	r1, r0, ip, asr #3
    1200:	00000000 	andeq	r0, r0, r0
    1204:	0000003a 	andeq	r0, r0, sl, lsr r0
    1208:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
    120c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1210:	00000001 	andeq	r0, r0, r1
    1214:	00000024 	andeq	r0, r0, r4, lsr #32
    1218:	000011cc 	andeq	r1, r0, ip, asr #3
    121c:	00000000 	andeq	r0, r0, r0
    1220:	000000c8 	andeq	r0, r0, r8, asr #1
    1224:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1228:	76018e02 	strvc	r8, [r1], -r2, lsl #28
    122c:	0ec3ce0a 	cdpeq	14, 12, cr12, cr3, cr10, {0}
    1230:	620b4200 	andvs	r4, fp, #0, 4
    1234:	0ec3ce0a 	cdpeq	14, 12, cr12, cr3, cr10, {0}
    1238:	000b4200 	andeq	r4, fp, r0, lsl #4
    123c:	0000000c 	andeq	r0, r0, ip
    1240:	000011cc 	andeq	r1, r0, ip, asr #3
    1244:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
    1248:	0000003c 	andeq	r0, r0, ip, lsr r0
    124c:	00000018 	andeq	r0, r0, r8, lsl r0
    1250:	000011cc 	andeq	r1, r0, ip, asr #3
    1254:	00000000 	andeq	r0, r0, r0
    1258:	00000074 	andeq	r0, r0, r4, ror r0
    125c:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xe42
    1260:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1264:	00018e02 	andeq	r8, r1, r2, lsl #28
    1268:	00000018 	andeq	r0, r0, r8, lsl r0
    126c:	000011cc 	andeq	r1, r0, ip, asr #3
    1270:	00000000 	andeq	r0, r0, r0
    1274:	00000088 	andeq	r0, r0, r8, lsl #1
    1278:	840c0e42 	strhi	r0, [ip], #-3650	; 0xe42
    127c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1280:	00000001 	andeq	r0, r0, r1
    1284:	00000018 	andeq	r0, r0, r8, lsl r0
    1288:	000011cc 	andeq	r1, r0, ip, asr #3
    128c:	00000000 	andeq	r0, r0, r0
    1290:	00000084 	andeq	r0, r0, r4, lsl #1
    1294:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xe42
    1298:	86038504 	strhi	r8, [r3], -r4, lsl #10
    129c:	00018e02 	andeq	r8, r1, r2, lsl #28
    12a0:	00000018 	andeq	r0, r0, r8, lsl r0
    12a4:	000011cc 	andeq	r1, r0, ip, asr #3
    12a8:	00000000 	andeq	r0, r0, r0
    12ac:	00000068 	andeq	r0, r0, r8, rrx
    12b0:	840c0e42 	strhi	r0, [ip], #-3650	; 0xe42
    12b4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    12b8:	00000001 	andeq	r0, r0, r1
    12bc:	0000000c 	andeq	r0, r0, ip
    12c0:	000011cc 	andeq	r1, r0, ip, asr #3
    12c4:	00000000 	andeq	r0, r0, r0
    12c8:	00000022 	andeq	r0, r0, r2, lsr #32
    12cc:	0000000c 	andeq	r0, r0, ip
    12d0:	000011cc 	andeq	r1, r0, ip, asr #3
    12d4:	00000000 	andeq	r0, r0, r0
    12d8:	00000012 	andeq	r0, r0, r2, lsl r0
    12dc:	0000000c 	andeq	r0, r0, ip
    12e0:	000011cc 	andeq	r1, r0, ip, asr #3
    12e4:	00000000 	andeq	r0, r0, r0
    12e8:	00000014 	andeq	r0, r0, r4, lsl r0
    12ec:	0000000c 	andeq	r0, r0, ip
    12f0:	000011cc 	andeq	r1, r0, ip, asr #3
    12f4:	00000000 	andeq	r0, r0, r0
    12f8:	00000010 	andeq	r0, r0, r0, lsl r0
    12fc:	0000000c 	andeq	r0, r0, ip
    1300:	000011cc 	andeq	r1, r0, ip, asr #3
    1304:	00000000 	andeq	r0, r0, r0
    1308:	00000012 	andeq	r0, r0, r2, lsl r0
    130c:	0000000c 	andeq	r0, r0, ip
    1310:	000011cc 	andeq	r1, r0, ip, asr #3
    1314:	080016d4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, ip}
    1318:	00000018 	andeq	r0, r0, r8, lsl r0
    131c:	0000000c 	andeq	r0, r0, ip
    1320:	000011cc 	andeq	r1, r0, ip, asr #3
    1324:	00000000 	andeq	r0, r0, r0
    1328:	0000001c 	andeq	r0, r0, ip, lsl r0
    132c:	0000000c 	andeq	r0, r0, ip
    1330:	000011cc 	andeq	r1, r0, ip, asr #3
    1334:	080016ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip}
    1338:	00000012 	andeq	r0, r0, r2, lsl r0
    133c:	0000000c 	andeq	r0, r0, ip
    1340:	000011cc 	andeq	r1, r0, ip, asr #3
    1344:	00000000 	andeq	r0, r0, r0
    1348:	00000004 	andeq	r0, r0, r4
    134c:	0000000c 	andeq	r0, r0, ip
    1350:	000011cc 	andeq	r1, r0, ip, asr #3
    1354:	00000000 	andeq	r0, r0, r0
    1358:	00000008 	andeq	r0, r0, r8
    135c:	0000000c 	andeq	r0, r0, ip
    1360:	000011cc 	andeq	r1, r0, ip, asr #3
    1364:	00000000 	andeq	r0, r0, r0
    1368:	00000012 	andeq	r0, r0, r2, lsl r0
    136c:	0000000c 	andeq	r0, r0, ip
    1370:	000011cc 	andeq	r1, r0, ip, asr #3
    1374:	00000000 	andeq	r0, r0, r0
    1378:	0000000e 	andeq	r0, r0, lr
    137c:	0000000c 	andeq	r0, r0, ip
    1380:	000011cc 	andeq	r1, r0, ip, asr #3
    1384:	00000000 	andeq	r0, r0, r0
    1388:	0000001a 	andeq	r0, r0, sl, lsl r0
    138c:	00000018 	andeq	r0, r0, r8, lsl r0
    1390:	000011cc 	andeq	r1, r0, ip, asr #3
    1394:	00000000 	andeq	r0, r0, r0
    1398:	00000034 	andeq	r0, r0, r4, lsr r0
    139c:	83100e41 	tsthi	r0, #1040	; 0x410
    13a0:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
    13a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    13a8:	00000014 	andeq	r0, r0, r4, lsl r0
    13ac:	000011cc 	andeq	r1, r0, ip, asr #3
    13b0:	00000000 	andeq	r0, r0, r0
    13b4:	00000014 	andeq	r0, r0, r4, lsl r0
    13b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    13bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    13c0:	00000014 	andeq	r0, r0, r4, lsl r0
    13c4:	000011cc 	andeq	r1, r0, ip, asr #3
    13c8:	00000000 	andeq	r0, r0, r0
    13cc:	0000001a 	andeq	r0, r0, sl, lsl r0
    13d0:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    13d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    13d8:	00000014 	andeq	r0, r0, r4, lsl r0
    13dc:	000011cc 	andeq	r1, r0, ip, asr #3
    13e0:	00000000 	andeq	r0, r0, r0
    13e4:	00000014 	andeq	r0, r0, r4, lsl r0
    13e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    13ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    13f0:	0000000c 	andeq	r0, r0, ip
    13f4:	000011cc 	andeq	r1, r0, ip, asr #3
    13f8:	080016fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, sl, ip}
    13fc:	00000006 	andeq	r0, r0, r6
    1400:	0000000c 	andeq	r0, r0, ip
    1404:	000011cc 	andeq	r1, r0, ip, asr #3
    1408:	00000000 	andeq	r0, r0, r0
    140c:	00000010 	andeq	r0, r0, r0, lsl r0
    1410:	0000000c 	andeq	r0, r0, ip
    1414:	000011cc 	andeq	r1, r0, ip, asr #3
    1418:	00000000 	andeq	r0, r0, r0
    141c:	00000010 	andeq	r0, r0, r0, lsl r0
    1420:	00000018 	andeq	r0, r0, r8, lsl r0
    1424:	000011cc 	andeq	r1, r0, ip, asr #3
    1428:	00000000 	andeq	r0, r0, r0
    142c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1430:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
    1434:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1438:	00018e02 	andeq	r8, r1, r2, lsl #28
    143c:	0000000c 	andeq	r0, r0, ip
    1440:	000011cc 	andeq	r1, r0, ip, asr #3
    1444:	00000000 	andeq	r0, r0, r0
    1448:	00000010 	andeq	r0, r0, r0, lsl r0
    144c:	0000000c 	andeq	r0, r0, ip
    1450:	000011cc 	andeq	r1, r0, ip, asr #3
    1454:	00000000 	andeq	r0, r0, r0
    1458:	00000014 	andeq	r0, r0, r4, lsl r0
    145c:	0000000c 	andeq	r0, r0, ip
    1460:	000011cc 	andeq	r1, r0, ip, asr #3
    1464:	00000000 	andeq	r0, r0, r0
    1468:	00000010 	andeq	r0, r0, r0, lsl r0
    146c:	0000000c 	andeq	r0, r0, ip
    1470:	000011cc 	andeq	r1, r0, ip, asr #3
    1474:	00000000 	andeq	r0, r0, r0
    1478:	00000014 	andeq	r0, r0, r4, lsl r0
    147c:	0000000c 	andeq	r0, r0, ip
    1480:	000011cc 	andeq	r1, r0, ip, asr #3
    1484:	00000000 	andeq	r0, r0, r0
    1488:	00000018 	andeq	r0, r0, r8, lsl r0
    148c:	0000000c 	andeq	r0, r0, ip
    1490:	000011cc 	andeq	r1, r0, ip, asr #3
    1494:	00000000 	andeq	r0, r0, r0
    1498:	00000018 	andeq	r0, r0, r8, lsl r0
    149c:	0000000c 	andeq	r0, r0, ip
    14a0:	000011cc 	andeq	r1, r0, ip, asr #3
    14a4:	00000000 	andeq	r0, r0, r0
    14a8:	00000018 	andeq	r0, r0, r8, lsl r0
    14ac:	0000000c 	andeq	r0, r0, ip
    14b0:	000011cc 	andeq	r1, r0, ip, asr #3
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	00000018 	andeq	r0, r0, r8, lsl r0
    14bc:	0000000c 	andeq	r0, r0, ip
    14c0:	000011cc 	andeq	r1, r0, ip, asr #3
    14c4:	00000000 	andeq	r0, r0, r0
    14c8:	00000010 	andeq	r0, r0, r0, lsl r0
    14cc:	0000000c 	andeq	r0, r0, ip
    14d0:	000011cc 	andeq	r1, r0, ip, asr #3
    14d4:	00000000 	andeq	r0, r0, r0
    14d8:	00000014 	andeq	r0, r0, r4, lsl r0
    14dc:	0000000c 	andeq	r0, r0, ip
    14e0:	000011cc 	andeq	r1, r0, ip, asr #3
    14e4:	00000000 	andeq	r0, r0, r0
    14e8:	00000010 	andeq	r0, r0, r0, lsl r0
    14ec:	0000000c 	andeq	r0, r0, ip
    14f0:	000011cc 	andeq	r1, r0, ip, asr #3
    14f4:	00000000 	andeq	r0, r0, r0
    14f8:	00000014 	andeq	r0, r0, r4, lsl r0
    14fc:	0000000c 	andeq	r0, r0, ip
    1500:	000011cc 	andeq	r1, r0, ip, asr #3
    1504:	00000000 	andeq	r0, r0, r0
    1508:	00000010 	andeq	r0, r0, r0, lsl r0
    150c:	0000000c 	andeq	r0, r0, ip
    1510:	000011cc 	andeq	r1, r0, ip, asr #3
    1514:	00000000 	andeq	r0, r0, r0
    1518:	00000014 	andeq	r0, r0, r4, lsl r0
    151c:	0000000c 	andeq	r0, r0, ip
    1520:	000011cc 	andeq	r1, r0, ip, asr #3
    1524:	00000000 	andeq	r0, r0, r0
    1528:	00000010 	andeq	r0, r0, r0, lsl r0
    152c:	0000000c 	andeq	r0, r0, ip
    1530:	000011cc 	andeq	r1, r0, ip, asr #3
    1534:	00000000 	andeq	r0, r0, r0
    1538:	00000014 	andeq	r0, r0, r4, lsl r0
    153c:	0000000c 	andeq	r0, r0, ip
    1540:	000011cc 	andeq	r1, r0, ip, asr #3
    1544:	00000000 	andeq	r0, r0, r0
    1548:	00000010 	andeq	r0, r0, r0, lsl r0
    154c:	0000000c 	andeq	r0, r0, ip
    1550:	000011cc 	andeq	r1, r0, ip, asr #3
    1554:	00000000 	andeq	r0, r0, r0
    1558:	00000010 	andeq	r0, r0, r0, lsl r0
    155c:	0000000c 	andeq	r0, r0, ip
    1560:	000011cc 	andeq	r1, r0, ip, asr #3
    1564:	00000000 	andeq	r0, r0, r0
    1568:	00000010 	andeq	r0, r0, r0, lsl r0
    156c:	0000000c 	andeq	r0, r0, ip
    1570:	000011cc 	andeq	r1, r0, ip, asr #3
    1574:	00000000 	andeq	r0, r0, r0
    1578:	00000010 	andeq	r0, r0, r0, lsl r0
    157c:	0000000c 	andeq	r0, r0, ip
    1580:	000011cc 	andeq	r1, r0, ip, asr #3
    1584:	00000000 	andeq	r0, r0, r0
    1588:	00000010 	andeq	r0, r0, r0, lsl r0
    158c:	0000000c 	andeq	r0, r0, ip
    1590:	000011cc 	andeq	r1, r0, ip, asr #3
    1594:	00000000 	andeq	r0, r0, r0
    1598:	00000010 	andeq	r0, r0, r0, lsl r0
    159c:	0000000c 	andeq	r0, r0, ip
    15a0:	000011cc 	andeq	r1, r0, ip, asr #3
    15a4:	00000000 	andeq	r0, r0, r0
    15a8:	00000014 	andeq	r0, r0, r4, lsl r0
    15ac:	0000000c 	andeq	r0, r0, ip
    15b0:	000011cc 	andeq	r1, r0, ip, asr #3
    15b4:	00000000 	andeq	r0, r0, r0
    15b8:	00000014 	andeq	r0, r0, r4, lsl r0
    15bc:	0000000c 	andeq	r0, r0, ip
    15c0:	000011cc 	andeq	r1, r0, ip, asr #3
    15c4:	00000000 	andeq	r0, r0, r0
    15c8:	00000014 	andeq	r0, r0, r4, lsl r0
    15cc:	0000000c 	andeq	r0, r0, ip
    15d0:	000011cc 	andeq	r1, r0, ip, asr #3
    15d4:	00000000 	andeq	r0, r0, r0
    15d8:	00000014 	andeq	r0, r0, r4, lsl r0
    15dc:	0000000c 	andeq	r0, r0, ip
    15e0:	000011cc 	andeq	r1, r0, ip, asr #3
    15e4:	00000000 	andeq	r0, r0, r0
    15e8:	00000014 	andeq	r0, r0, r4, lsl r0
    15ec:	00000014 	andeq	r0, r0, r4, lsl r0
    15f0:	000011cc 	andeq	r1, r0, ip, asr #3
    15f4:	00000000 	andeq	r0, r0, r0
    15f8:	0000001c 	andeq	r0, r0, ip, lsl r0
    15fc:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    1600:	00018e02 	andeq	r8, r1, r2, lsl #28
    1604:	00000014 	andeq	r0, r0, r4, lsl r0
    1608:	000011cc 	andeq	r1, r0, ip, asr #3
    160c:	00000000 	andeq	r0, r0, r0
    1610:	0000001c 	andeq	r0, r0, ip, lsl r0
    1614:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    1618:	00018e02 	andeq	r8, r1, r2, lsl #28
    161c:	00000014 	andeq	r0, r0, r4, lsl r0
    1620:	000011cc 	andeq	r1, r0, ip, asr #3
    1624:	00000000 	andeq	r0, r0, r0
    1628:	00000044 	andeq	r0, r0, r4, asr #32
    162c:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    1630:	00018e02 	andeq	r8, r1, r2, lsl #28
    1634:	0000000c 	andeq	r0, r0, ip
    1638:	000011cc 	andeq	r1, r0, ip, asr #3
    163c:	00000000 	andeq	r0, r0, r0
    1640:	00000018 	andeq	r0, r0, r8, lsl r0
    1644:	0000000c 	andeq	r0, r0, ip
    1648:	000011cc 	andeq	r1, r0, ip, asr #3
    164c:	00000000 	andeq	r0, r0, r0
    1650:	00000018 	andeq	r0, r0, r8, lsl r0
    1654:	0000000c 	andeq	r0, r0, ip
    1658:	000011cc 	andeq	r1, r0, ip, asr #3
    165c:	00000000 	andeq	r0, r0, r0
    1660:	00000018 	andeq	r0, r0, r8, lsl r0
    1664:	0000000c 	andeq	r0, r0, ip
    1668:	000011cc 	andeq	r1, r0, ip, asr #3
    166c:	00000000 	andeq	r0, r0, r0
    1670:	00000016 	andeq	r0, r0, r6, lsl r0
    1674:	0000000c 	andeq	r0, r0, ip
    1678:	000011cc 	andeq	r1, r0, ip, asr #3
    167c:	00000000 	andeq	r0, r0, r0
    1680:	00000016 	andeq	r0, r0, r6, lsl r0
    1684:	0000000c 	andeq	r0, r0, ip
    1688:	000011cc 	andeq	r1, r0, ip, asr #3
    168c:	00000000 	andeq	r0, r0, r0
    1690:	00000016 	andeq	r0, r0, r6, lsl r0
    1694:	0000000c 	andeq	r0, r0, ip
    1698:	000011cc 	andeq	r1, r0, ip, asr #3
    169c:	00000000 	andeq	r0, r0, r0
    16a0:	00000016 	andeq	r0, r0, r6, lsl r0
    16a4:	0000000c 	andeq	r0, r0, ip
    16a8:	000011cc 	andeq	r1, r0, ip, asr #3
    16ac:	00000000 	andeq	r0, r0, r0
    16b0:	00000004 	andeq	r0, r0, r4
    16b4:	0000000c 	andeq	r0, r0, ip
    16b8:	000011cc 	andeq	r1, r0, ip, asr #3
    16bc:	00000000 	andeq	r0, r0, r0
    16c0:	00000004 	andeq	r0, r0, r4
    16c4:	0000000c 	andeq	r0, r0, ip
    16c8:	000011cc 	andeq	r1, r0, ip, asr #3
    16cc:	00000000 	andeq	r0, r0, r0
    16d0:	00000004 	andeq	r0, r0, r4
    16d4:	0000000c 	andeq	r0, r0, ip
    16d8:	000011cc 	andeq	r1, r0, ip, asr #3
    16dc:	00000000 	andeq	r0, r0, r0
    16e0:	00000004 	andeq	r0, r0, r4
    16e4:	0000000c 	andeq	r0, r0, ip
    16e8:	000011cc 	andeq	r1, r0, ip, asr #3
    16ec:	00000000 	andeq	r0, r0, r0
    16f0:	00000004 	andeq	r0, r0, r4
    16f4:	0000000c 	andeq	r0, r0, ip
    16f8:	000011cc 	andeq	r1, r0, ip, asr #3
    16fc:	00000000 	andeq	r0, r0, r0
    1700:	00000006 	andeq	r0, r0, r6
    1704:	0000000c 	andeq	r0, r0, ip
    1708:	000011cc 	andeq	r1, r0, ip, asr #3
    170c:	00000000 	andeq	r0, r0, r0
    1710:	00000016 	andeq	r0, r0, r6, lsl r0
    1714:	0000000c 	andeq	r0, r0, ip
    1718:	000011cc 	andeq	r1, r0, ip, asr #3
    171c:	00000000 	andeq	r0, r0, r0
    1720:	0000001a 	andeq	r0, r0, sl, lsl r0
    1724:	00000030 	andeq	r0, r0, r0, lsr r0
    1728:	000011cc 	andeq	r1, r0, ip, asr #3
    172c:	00000000 	andeq	r0, r0, r0
    1730:	0000006e 	andeq	r0, r0, lr, rrx
    1734:	83180e41 	tsthi	r8, #1040	; 0x410
    1738:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
    173c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1740:	62018e02 	andvs	r8, r1, #2, 28
    1744:	c6c7ce0a 	strbgt	ip, [r7], sl, lsl #28
    1748:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    174c:	500b4200 	andpl	r4, fp, r0, lsl #4
    1750:	c5c6c7ce 	strbgt	ip, [r6, #1998]	; 0x7ce
    1754:	000ec3c4 	andeq	ip, lr, r4, asr #7
    1758:	0000000c 	andeq	r0, r0, ip
    175c:	000011cc 	andeq	r1, r0, ip, asr #3
    1760:	00000000 	andeq	r0, r0, r0
    1764:	00000016 	andeq	r0, r0, r6, lsl r0
    1768:	0000000c 	andeq	r0, r0, ip
    176c:	000011cc 	andeq	r1, r0, ip, asr #3
    1770:	00000000 	andeq	r0, r0, r0
    1774:	0000001a 	andeq	r0, r0, sl, lsl r0
    1778:	00000048 	andeq	r0, r0, r8, asr #32
    177c:	000011cc 	andeq	r1, r0, ip, asr #3
    1780:	00000000 	andeq	r0, r0, r0
    1784:	000000b6 	strheq	r0, [r0], -r6
    1788:	83180e41 	tsthi	r8, #1040	; 0x410
    178c:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
    1790:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1794:	4d018e02 	stcmi	14, cr8, [r1, #-8]
    1798:	c6c7ce0a 	strbgt	ip, [r7], sl, lsl #28
    179c:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    17a0:	480b4200 	stmdami	fp, {r9, lr}
    17a4:	c6c7ce0a 	strbgt	ip, [r7], sl, lsl #28
    17a8:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    17ac:	600b4200 	andvs	r4, fp, r0, lsl #4
    17b0:	c6c7ce0a 	strbgt	ip, [r7], sl, lsl #28
    17b4:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    17b8:	5c0b4200 	sfmpl	f4, 4, [fp], {-0}
    17bc:	c5c6c7ce 	strbgt	ip, [r6, #1998]	; 0x7ce
    17c0:	000ec3c4 	andeq	ip, lr, r4, asr #7
    17c4:	0000000c 	andeq	r0, r0, ip
    17c8:	000011cc 	andeq	r1, r0, ip, asr #3
    17cc:	00000000 	andeq	r0, r0, r0
    17d0:	00000010 	andeq	r0, r0, r0, lsl r0
    17d4:	0000000c 	andeq	r0, r0, ip
    17d8:	000011cc 	andeq	r1, r0, ip, asr #3
    17dc:	00000000 	andeq	r0, r0, r0
    17e0:	00000006 	andeq	r0, r0, r6
    17e4:	0000000c 	andeq	r0, r0, ip
    17e8:	000011cc 	andeq	r1, r0, ip, asr #3
    17ec:	00000000 	andeq	r0, r0, r0
    17f0:	00000006 	andeq	r0, r0, r6
    17f4:	0000000c 	andeq	r0, r0, ip
    17f8:	000011cc 	andeq	r1, r0, ip, asr #3
    17fc:	00000000 	andeq	r0, r0, r0
    1800:	00000006 	andeq	r0, r0, r6
    1804:	0000000c 	andeq	r0, r0, ip
    1808:	000011cc 	andeq	r1, r0, ip, asr #3
    180c:	00000000 	andeq	r0, r0, r0
    1810:	00000008 	andeq	r0, r0, r8
    1814:	0000000c 	andeq	r0, r0, ip
    1818:	000011cc 	andeq	r1, r0, ip, asr #3
    181c:	00000000 	andeq	r0, r0, r0
    1820:	00000006 	andeq	r0, r0, r6
    1824:	0000000c 	andeq	r0, r0, ip
    1828:	000011cc 	andeq	r1, r0, ip, asr #3
    182c:	00000000 	andeq	r0, r0, r0
    1830:	00000006 	andeq	r0, r0, r6
    1834:	0000000c 	andeq	r0, r0, ip
    1838:	000011cc 	andeq	r1, r0, ip, asr #3
    183c:	00000000 	andeq	r0, r0, r0
    1840:	0000000c 	andeq	r0, r0, ip
    1844:	0000000c 	andeq	r0, r0, ip
    1848:	000011cc 	andeq	r1, r0, ip, asr #3
    184c:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
    1850:	00000008 	andeq	r0, r0, r8
    1854:	0000000c 	andeq	r0, r0, ip
    1858:	000011cc 	andeq	r1, r0, ip, asr #3
    185c:	00000000 	andeq	r0, r0, r0
    1860:	00000016 	andeq	r0, r0, r6, lsl r0
    1864:	0000000c 	andeq	r0, r0, ip
    1868:	000011cc 	andeq	r1, r0, ip, asr #3
    186c:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
    1870:	00000008 	andeq	r0, r0, r8
    1874:	0000000c 	andeq	r0, r0, ip
    1878:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    187c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1880:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1884:	0000000c 	andeq	r0, r0, ip
    1888:	00001874 	andeq	r1, r0, r4, ror r8
    188c:	00000000 	andeq	r0, r0, r0
    1890:	00000018 	andeq	r0, r0, r8, lsl r0
    1894:	0000000c 	andeq	r0, r0, ip
    1898:	00001874 	andeq	r1, r0, r4, ror r8
    189c:	08001714 	stmdaeq	r0, {r2, r4, r8, r9, sl, ip}
    18a0:	0000000c 	andeq	r0, r0, ip
    18a4:	0000000c 	andeq	r0, r0, ip
    18a8:	00001874 	andeq	r1, r0, r4, ror r8
    18ac:	08001720 	stmdaeq	r0, {r5, r8, r9, sl, ip}
    18b0:	00000028 	andeq	r0, r0, r8, lsr #32
    18b4:	0000000c 	andeq	r0, r0, ip
    18b8:	00001874 	andeq	r1, r0, r4, ror r8
    18bc:	08001748 	stmdaeq	r0, {r3, r6, r8, r9, sl, ip}
    18c0:	00000018 	andeq	r0, r0, r8, lsl r0
    18c4:	0000000c 	andeq	r0, r0, ip
    18c8:	00001874 	andeq	r1, r0, r4, ror r8
    18cc:	00000000 	andeq	r0, r0, r0
    18d0:	0000000c 	andeq	r0, r0, ip
    18d4:	0000000c 	andeq	r0, r0, ip
    18d8:	00001874 	andeq	r1, r0, r4, ror r8
    18dc:	00000000 	andeq	r0, r0, r0
    18e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    18e4:	0000000c 	andeq	r0, r0, ip
    18e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    18ec:	7c020001 	stcvc	0, cr0, [r2], {1}
    18f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18f4:	00000024 	andeq	r0, r0, r4, lsr #32
    18f8:	000018e4 	andeq	r1, r0, r4, ror #17
    18fc:	08001760 	stmdaeq	r0, {r5, r6, r8, r9, sl, ip}
    1900:	00000094 	muleq	r0, r4, r0
    1904:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1908:	5b018e02 	blpl	65118 <__Stack_Size+0x64d18>
    190c:	0ec3ce0a 	cdpeq	14, 12, cr12, cr3, cr10, {0}
    1910:	620b4500 	andvs	r4, fp, #0, 10
    1914:	0ec3ce0a 	cdpeq	14, 12, cr12, cr3, cr10, {0}
    1918:	000b4200 	andeq	r4, fp, r0, lsl #4
    191c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1920:	000018e4 	andeq	r1, r0, r4, ror #17
    1924:	080017f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, ip}
    1928:	00000088 	andeq	r0, r0, r8, lsl #1
    192c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
    1930:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1934:	280e5d01 	stmdacs	lr, {r0, r8, sl, fp, ip, lr}
    1938:	000c0e62 	andeq	r0, ip, r2, ror #28
    193c:	0000000c 	andeq	r0, r0, ip
    1940:	000018e4 	andeq	r1, r0, r4, ror #17
    1944:	0800187c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip}
    1948:	00000016 	andeq	r0, r0, r6, lsl r0
    194c:	00000014 	andeq	r0, r0, r4, lsl r0
    1950:	000018e4 	andeq	r1, r0, r4, ror #17
    1954:	00000000 	andeq	r0, r0, r0
    1958:	00000020 	andeq	r0, r0, r0, lsr #32
    195c:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    1960:	00018e02 	andeq	r8, r1, r2, lsl #28
    1964:	0000000c 	andeq	r0, r0, ip
    1968:	000018e4 	andeq	r1, r0, r4, ror #17
    196c:	00000000 	andeq	r0, r0, r0
    1970:	0000000c 	andeq	r0, r0, ip
    1974:	0000000c 	andeq	r0, r0, ip
    1978:	000018e4 	andeq	r1, r0, r4, ror #17
    197c:	08001892 	stmdaeq	r0, {r1, r4, r7, fp, ip}
    1980:	00000018 	andeq	r0, r0, r8, lsl r0
    1984:	00000014 	andeq	r0, r0, r4, lsl r0
    1988:	000018e4 	andeq	r1, r0, r4, ror #17
    198c:	080018aa 	stmdaeq	r0, {r1, r3, r5, r7, fp, ip}
    1990:	00000032 	andeq	r0, r0, r2, lsr r0
    1994:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1998:	00018e02 	andeq	r8, r1, r2, lsl #28
    199c:	0000000c 	andeq	r0, r0, ip
    19a0:	000018e4 	andeq	r1, r0, r4, ror #17
    19a4:	00000000 	andeq	r0, r0, r0
    19a8:	00000012 	andeq	r0, r0, r2, lsl r0
    19ac:	0000000c 	andeq	r0, r0, ip
    19b0:	000018e4 	andeq	r1, r0, r4, ror #17
    19b4:	00000000 	andeq	r0, r0, r0
    19b8:	00000016 	andeq	r0, r0, r6, lsl r0
    19bc:	0000000c 	andeq	r0, r0, ip
    19c0:	000018e4 	andeq	r1, r0, r4, ror #17
    19c4:	00000000 	andeq	r0, r0, r0
    19c8:	00000016 	andeq	r0, r0, r6, lsl r0
    19cc:	0000000c 	andeq	r0, r0, ip
    19d0:	000018e4 	andeq	r1, r0, r4, ror #17
    19d4:	00000000 	andeq	r0, r0, r0
    19d8:	00000018 	andeq	r0, r0, r8, lsl r0
    19dc:	0000000c 	andeq	r0, r0, ip
    19e0:	000018e4 	andeq	r1, r0, r4, ror #17
    19e4:	00000000 	andeq	r0, r0, r0
    19e8:	00000016 	andeq	r0, r0, r6, lsl r0
    19ec:	0000000c 	andeq	r0, r0, ip
    19f0:	000018e4 	andeq	r1, r0, r4, ror #17
    19f4:	00000000 	andeq	r0, r0, r0
    19f8:	00000018 	andeq	r0, r0, r8, lsl r0
    19fc:	0000000c 	andeq	r0, r0, ip
    1a00:	000018e4 	andeq	r1, r0, r4, ror #17
    1a04:	080018dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip}
    1a08:	00000008 	andeq	r0, r0, r8
    1a0c:	0000000c 	andeq	r0, r0, ip
    1a10:	000018e4 	andeq	r1, r0, r4, ror #17
    1a14:	080018e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, ip}
    1a18:	00000008 	andeq	r0, r0, r8
    1a1c:	0000000c 	andeq	r0, r0, ip
    1a20:	000018e4 	andeq	r1, r0, r4, ror #17
    1a24:	00000000 	andeq	r0, r0, r0
    1a28:	0000000c 	andeq	r0, r0, ip
    1a2c:	0000000c 	andeq	r0, r0, ip
    1a30:	000018e4 	andeq	r1, r0, r4, ror #17
    1a34:	00000000 	andeq	r0, r0, r0
    1a38:	00000012 	andeq	r0, r0, r2, lsl r0
    1a3c:	0000000c 	andeq	r0, r0, ip
    1a40:	000018e4 	andeq	r1, r0, r4, ror #17
    1a44:	00000000 	andeq	r0, r0, r0
    1a48:	00000012 	andeq	r0, r0, r2, lsl r0
    1a4c:	0000000c 	andeq	r0, r0, ip
    1a50:	000018e4 	andeq	r1, r0, r4, ror #17
    1a54:	00000000 	andeq	r0, r0, r0
    1a58:	00000018 	andeq	r0, r0, r8, lsl r0
    1a5c:	0000000c 	andeq	r0, r0, ip
    1a60:	000018e4 	andeq	r1, r0, r4, ror #17
    1a64:	00000000 	andeq	r0, r0, r0
    1a68:	00000018 	andeq	r0, r0, r8, lsl r0
    1a6c:	0000000c 	andeq	r0, r0, ip
    1a70:	000018e4 	andeq	r1, r0, r4, ror #17
    1a74:	00000000 	andeq	r0, r0, r0
    1a78:	00000018 	andeq	r0, r0, r8, lsl r0
    1a7c:	0000000c 	andeq	r0, r0, ip
    1a80:	000018e4 	andeq	r1, r0, r4, ror #17
    1a84:	00000000 	andeq	r0, r0, r0
    1a88:	00000016 	andeq	r0, r0, r6, lsl r0
    1a8c:	0000000c 	andeq	r0, r0, ip
    1a90:	000018e4 	andeq	r1, r0, r4, ror #17
    1a94:	00000000 	andeq	r0, r0, r0
    1a98:	00000018 	andeq	r0, r0, r8, lsl r0
    1a9c:	0000000c 	andeq	r0, r0, ip
    1aa0:	000018e4 	andeq	r1, r0, r4, ror #17
    1aa4:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
    1aa8:	0000000c 	andeq	r0, r0, ip
    1aac:	0000000c 	andeq	r0, r0, ip
    1ab0:	000018e4 	andeq	r1, r0, r4, ror #17
    1ab4:	080018f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, ip}
    1ab8:	00000008 	andeq	r0, r0, r8
    1abc:	00000014 	andeq	r0, r0, r4, lsl r0
    1ac0:	000018e4 	andeq	r1, r0, r4, ror #17
    1ac4:	08001900 	stmdaeq	r0, {r8, fp, ip}
    1ac8:	0000003e 	andeq	r0, r0, lr, lsr r0
    1acc:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    1ad0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ad4:	0000000c 	andeq	r0, r0, ip
    1ad8:	000018e4 	andeq	r1, r0, r4, ror #17
    1adc:	00000000 	andeq	r0, r0, r0
    1ae0:	0000000e 	andeq	r0, r0, lr
    1ae4:	0000000c 	andeq	r0, r0, ip
    1ae8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1aec:	7c020001 	stcvc	0, cr0, [r2], {1}
    1af0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1af4:	0000001c 	andeq	r0, r0, ip, lsl r0
    1af8:	00001ae4 	andeq	r1, r0, r4, ror #21
    1afc:	08001940 	stmdaeq	r0, {r6, r8, fp, ip}
    1b00:	00000050 	andeq	r0, r0, r0, asr r0
    1b04:	000d0941 	andeq	r0, sp, r1, asr #18
    1b08:	8d080e44 	stchi	14, cr0, [r8, #-272]	; 0xfffffef0
    1b0c:	56018e02 	strpl	r8, [r1], -r2, lsl #28
    1b10:	000ec0ce 	andeq	ip, lr, lr, asr #1
    1b14:	0000000c 	andeq	r0, r0, ip
    1b18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b1c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b20:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b24:	0000000c 	andeq	r0, r0, ip
    1b28:	00001b14 	andeq	r1, r0, r4, lsl fp
    1b2c:	08001990 	stmdaeq	r0, {r4, r7, r8, fp, ip}
    1b30:	00000034 	andeq	r0, r0, r4, lsr r0
    1b34:	0000000c 	andeq	r0, r0, ip
    1b38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b3c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b44:	00000014 	andeq	r0, r0, r4, lsl r0
    1b48:	00001b34 	andeq	r1, r0, r4, lsr fp
    1b4c:	080019c4 	stmdaeq	r0, {r2, r6, r7, r8, fp, ip}
    1b50:	00000024 	andeq	r0, r0, r4, lsr #32
    1b54:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1b58:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b5c:	00000014 	andeq	r0, r0, r4, lsl r0
    1b60:	00001b34 	andeq	r1, r0, r4, lsr fp
    1b64:	080019e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, ip}
    1b68:	00000024 	andeq	r0, r0, r4, lsr #32
    1b6c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1b70:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b74:	00000014 	andeq	r0, r0, r4, lsl r0
    1b78:	00001b34 	andeq	r1, r0, r4, lsr fp
    1b7c:	08001a0c 	stmdaeq	r0, {r2, r3, r9, fp, ip}
    1b80:	00000090 	muleq	r0, r0, r0
    1b84:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1b88:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b8c:	00000020 	andeq	r0, r0, r0, lsr #32
    1b90:	00001b34 	andeq	r1, r0, r4, lsr fp
    1b94:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
    1b98:	000000ac 	andeq	r0, r0, ip, lsr #1
    1b9c:	83200e42 	teqhi	r0, #1056	; 0x420
    1ba0:	85078408 	strhi	r8, [r7, #-1032]	; 0x408
    1ba4:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    1ba8:	89038804 	stmdbhi	r3, {r2, fp, pc}
    1bac:	00018e02 	andeq	r8, r1, r2, lsl #28
    1bb0:	00000014 	andeq	r0, r0, r4, lsl r0
    1bb4:	00001b34 	andeq	r1, r0, r4, lsr fp
    1bb8:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
    1bbc:	00000038 	andeq	r0, r0, r8, lsr r0
    1bc0:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1bc4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1bc8:	00000018 	andeq	r0, r0, r8, lsl r0
    1bcc:	00001b34 	andeq	r1, r0, r4, lsr fp
    1bd0:	08001b80 	stmdaeq	r0, {r7, r8, r9, fp, ip}
    1bd4:	00000048 	andeq	r0, r0, r8, asr #32
    1bd8:	83100e41 	tsthi	r0, #1040	; 0x410
    1bdc:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
    1be0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1be4:	00000018 	andeq	r0, r0, r8, lsl r0
    1be8:	00001b34 	andeq	r1, r0, r4, lsr fp
    1bec:	08001bc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, fp, ip}
    1bf0:	000000d8 	ldrdeq	r0, [r0], -r8
    1bf4:	83100e41 	tsthi	r0, #1040	; 0x410
    1bf8:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
    1bfc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c00:	00000018 	andeq	r0, r0, r8, lsl r0
    1c04:	00001b34 	andeq	r1, r0, r4, lsr fp
    1c08:	08001ca0 	stmdaeq	r0, {r5, r7, sl, fp, ip}
    1c0c:	0000008c 	andeq	r0, r0, ip, lsl #1
    1c10:	83100e41 	tsthi	r0, #1040	; 0x410
    1c14:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
    1c18:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c1c:	00000014 	andeq	r0, r0, r4, lsl r0
    1c20:	00001b34 	andeq	r1, r0, r4, lsr fp
    1c24:	08001d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp, ip}
    1c28:	00000024 	andeq	r0, r0, r4, lsr #32
    1c2c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1c30:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c34:	00000014 	andeq	r0, r0, r4, lsl r0
    1c38:	00001b34 	andeq	r1, r0, r4, lsr fp
    1c3c:	08001d50 	stmdaeq	r0, {r4, r6, r8, sl, fp, ip}
    1c40:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c44:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    1c48:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c4c:	00000014 	andeq	r0, r0, r4, lsl r0
    1c50:	00001b34 	andeq	r1, r0, r4, lsr fp
    1c54:	08001d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp, ip}
    1c58:	00000044 	andeq	r0, r0, r4, asr #32
    1c5c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1c60:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c64:	00000024 	andeq	r0, r0, r4, lsr #32
    1c68:	00001b34 	andeq	r1, r0, r4, lsr fp
    1c6c:	08001db0 	stmdaeq	r0, {r4, r5, r7, r8, sl, fp, ip}
    1c70:	000002dc 	ldrdeq	r0, [r0], -ip
    1c74:	84200e41 	strthi	r0, [r0], #-3649	; 0xe41
    1c78:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1c7c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1c80:	015c0301 	cmpeq	ip, r1, lsl #6
    1c84:	41140e0a 	tstmi	r4, sl, lsl #28
    1c88:	0000000b 	andeq	r0, r0, fp
    1c8c:	00000028 	andeq	r0, r0, r8, lsr #32
    1c90:	00001b34 	andeq	r1, r0, r4, lsr fp
    1c94:	0800208c 	stmdaeq	r0, {r2, r3, r7, sp}
    1c98:	000000cc 	andeq	r0, r0, ip, asr #1
    1c9c:	83180e41 	tsthi	r8, #1040	; 0x410
    1ca0:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
    1ca4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1ca8:	02018e02 	andeq	r8, r1, #2, 28
    1cac:	c6c7ce57 			; <UNDEFINED> instruction: 0xc6c7ce57
    1cb0:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    1cb4:	00000000 	andeq	r0, r0, r0
    1cb8:	00000018 	andeq	r0, r0, r8, lsl r0
    1cbc:	00001b34 	andeq	r1, r0, r4, lsr fp
    1cc0:	08002158 	stmdaeq	r0, {r3, r4, r6, r8, sp}
    1cc4:	00000040 	andeq	r0, r0, r0, asr #32
    1cc8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
    1ccc:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1cd0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1cd4:	00000018 	andeq	r0, r0, r8, lsl r0
    1cd8:	00001b34 	andeq	r1, r0, r4, lsr fp
    1cdc:	08002198 	stmdaeq	r0, {r3, r4, r7, r8, sp}
    1ce0:	0000005c 	andeq	r0, r0, ip, asr r0
    1ce4:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1ce8:	64018e02 	strvs	r8, [r1], #-3586	; 0xe02
    1cec:	000ec4ce 	andeq	ip, lr, lr, asr #9
    1cf0:	0000000c 	andeq	r0, r0, ip
    1cf4:	00001b34 	andeq	r1, r0, r4, lsr fp
    1cf8:	080021f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sp}
    1cfc:	00000002 	andeq	r0, r0, r2
    1d00:	0000000c 	andeq	r0, r0, ip
    1d04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d08:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d0c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d10:	00000018 	andeq	r0, r0, r8, lsl r0
    1d14:	00001d00 	andeq	r1, r0, r0, lsl #26
    1d18:	080021f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sp}
    1d1c:	00000030 	andeq	r0, r0, r0, lsr r0
    1d20:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
    1d24:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1d28:	00000001 	andeq	r0, r0, r1
    1d2c:	00000014 	andeq	r0, r0, r4, lsl r0
    1d30:	00001d00 	andeq	r1, r0, r0, lsl #26
    1d34:	08002226 	stmdaeq	r0, {r1, r2, r5, r9, sp}
    1d38:	00000024 	andeq	r0, r0, r4, lsr #32
    1d3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1d40:	00018e02 	andeq	r8, r1, r2, lsl #28
    1d44:	0000000c 	andeq	r0, r0, ip
    1d48:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d4c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d50:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d54:	0000000c 	andeq	r0, r0, ip
    1d58:	00001d44 	andeq	r1, r0, r4, asr #26
    1d5c:	00000000 	andeq	r0, r0, r0
    1d60:	0000000c 	andeq	r0, r0, ip
    1d64:	0000000c 	andeq	r0, r0, ip
    1d68:	00001d44 	andeq	r1, r0, r4, asr #26
    1d6c:	00000000 	andeq	r0, r0, r0
    1d70:	0000000c 	andeq	r0, r0, ip
    1d74:	0000000c 	andeq	r0, r0, ip
    1d78:	00001d44 	andeq	r1, r0, r4, asr #26
    1d7c:	00000000 	andeq	r0, r0, r0
    1d80:	0000000c 	andeq	r0, r0, ip
    1d84:	0000000c 	andeq	r0, r0, ip
    1d88:	00001d44 	andeq	r1, r0, r4, asr #26
    1d8c:	00000000 	andeq	r0, r0, r0
    1d90:	0000000c 	andeq	r0, r0, ip
    1d94:	0000000c 	andeq	r0, r0, ip
    1d98:	00001d44 	andeq	r1, r0, r4, asr #26
    1d9c:	00000000 	andeq	r0, r0, r0
    1da0:	0000000c 	andeq	r0, r0, ip
    1da4:	0000000c 	andeq	r0, r0, ip
    1da8:	00001d44 	andeq	r1, r0, r4, asr #26
    1dac:	00000000 	andeq	r0, r0, r0
    1db0:	0000000c 	andeq	r0, r0, ip
    1db4:	0000000c 	andeq	r0, r0, ip
    1db8:	00001d44 	andeq	r1, r0, r4, asr #26
    1dbc:	00000000 	andeq	r0, r0, r0
    1dc0:	0000000c 	andeq	r0, r0, ip
    1dc4:	0000000c 	andeq	r0, r0, ip
    1dc8:	00001d44 	andeq	r1, r0, r4, asr #26
    1dcc:	0800224c 	stmdaeq	r0, {r2, r3, r6, r9, sp}
    1dd0:	00000010 	andeq	r0, r0, r0, lsl r0
    1dd4:	0000000c 	andeq	r0, r0, ip
    1dd8:	00001d44 	andeq	r1, r0, r4, asr #26
    1ddc:	00000000 	andeq	r0, r0, r0
    1de0:	0000000c 	andeq	r0, r0, ip
    1de4:	0000000c 	andeq	r0, r0, ip
    1de8:	00001d44 	andeq	r1, r0, r4, asr #26
    1dec:	00000000 	andeq	r0, r0, r0
    1df0:	0000000e 	andeq	r0, r0, lr
    1df4:	0000000c 	andeq	r0, r0, ip
    1df8:	00001d44 	andeq	r1, r0, r4, asr #26
    1dfc:	00000000 	andeq	r0, r0, r0
    1e00:	00000010 	andeq	r0, r0, r0, lsl r0
    1e04:	0000000c 	andeq	r0, r0, ip
    1e08:	00001d44 	andeq	r1, r0, r4, asr #26
    1e0c:	0800225c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sp}
    1e10:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e14:	0000000c 	andeq	r0, r0, ip
    1e18:	00001d44 	andeq	r1, r0, r4, asr #26
    1e1c:	00000000 	andeq	r0, r0, r0
    1e20:	00000012 	andeq	r0, r0, r2, lsl r0
    1e24:	0000000c 	andeq	r0, r0, ip
    1e28:	00001d44 	andeq	r1, r0, r4, asr #26
    1e2c:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
    1e30:	00000032 	andeq	r0, r0, r2, lsr r0
    1e34:	0000000c 	andeq	r0, r0, ip
    1e38:	00001d44 	andeq	r1, r0, r4, asr #26
    1e3c:	080022aa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sp}
    1e40:	00000032 	andeq	r0, r0, r2, lsr r0
    1e44:	0000000c 	andeq	r0, r0, ip
    1e48:	00001d44 	andeq	r1, r0, r4, asr #26
    1e4c:	00000000 	andeq	r0, r0, r0
    1e50:	00000024 	andeq	r0, r0, r4, lsr #32
    1e54:	0000000c 	andeq	r0, r0, ip
    1e58:	00001d44 	andeq	r1, r0, r4, asr #26
    1e5c:	00000000 	andeq	r0, r0, r0
    1e60:	00000012 	andeq	r0, r0, r2, lsl r0
    1e64:	0000000c 	andeq	r0, r0, ip
    1e68:	00001d44 	andeq	r1, r0, r4, asr #26
    1e6c:	00000000 	andeq	r0, r0, r0
    1e70:	00000012 	andeq	r0, r0, r2, lsl r0
    1e74:	0000000c 	andeq	r0, r0, ip
    1e78:	00001d44 	andeq	r1, r0, r4, asr #26
    1e7c:	080022dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sp}
    1e80:	00000026 	andeq	r0, r0, r6, lsr #32
    1e84:	0000000c 	andeq	r0, r0, ip
    1e88:	00001d44 	andeq	r1, r0, r4, asr #26
    1e8c:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1e90:	00000026 	andeq	r0, r0, r6, lsr #32
    1e94:	0000000c 	andeq	r0, r0, ip
    1e98:	00001d44 	andeq	r1, r0, r4, asr #26
    1e9c:	00000000 	andeq	r0, r0, r0
    1ea0:	00000020 	andeq	r0, r0, r0, lsr #32
    1ea4:	0000000c 	andeq	r0, r0, ip
    1ea8:	00001d44 	andeq	r1, r0, r4, asr #26
    1eac:	00000000 	andeq	r0, r0, r0
    1eb0:	00000020 	andeq	r0, r0, r0, lsr #32
    1eb4:	0000000c 	andeq	r0, r0, ip
    1eb8:	00001d44 	andeq	r1, r0, r4, asr #26
    1ebc:	08002328 	stmdaeq	r0, {r3, r5, r8, r9, sp}
    1ec0:	00000020 	andeq	r0, r0, r0, lsr #32
    1ec4:	0000000c 	andeq	r0, r0, ip
    1ec8:	00001d44 	andeq	r1, r0, r4, asr #26
    1ecc:	00000000 	andeq	r0, r0, r0
    1ed0:	00000020 	andeq	r0, r0, r0, lsr #32
    1ed4:	0000000c 	andeq	r0, r0, ip
    1ed8:	00001d44 	andeq	r1, r0, r4, asr #26
    1edc:	00000000 	andeq	r0, r0, r0
    1ee0:	00000020 	andeq	r0, r0, r0, lsr #32
    1ee4:	0000000c 	andeq	r0, r0, ip
    1ee8:	00001d44 	andeq	r1, r0, r4, asr #26
    1eec:	00000000 	andeq	r0, r0, r0
    1ef0:	00000020 	andeq	r0, r0, r0, lsr #32
    1ef4:	0000000c 	andeq	r0, r0, ip
    1ef8:	00001d44 	andeq	r1, r0, r4, asr #26
    1efc:	00000000 	andeq	r0, r0, r0
    1f00:	0000001a 	andeq	r0, r0, sl, lsl r0
    1f04:	0000000c 	andeq	r0, r0, ip
    1f08:	00001d44 	andeq	r1, r0, r4, asr #26
    1f0c:	00000000 	andeq	r0, r0, r0
    1f10:	0000001a 	andeq	r0, r0, sl, lsl r0
    1f14:	0000000c 	andeq	r0, r0, ip
    1f18:	00001d44 	andeq	r1, r0, r4, asr #26
    1f1c:	00000000 	andeq	r0, r0, r0
    1f20:	00000018 	andeq	r0, r0, r8, lsl r0
    1f24:	0000000c 	andeq	r0, r0, ip
    1f28:	00001d44 	andeq	r1, r0, r4, asr #26
    1f2c:	00000000 	andeq	r0, r0, r0
    1f30:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f34:	0000000c 	andeq	r0, r0, ip
    1f38:	00001d44 	andeq	r1, r0, r4, asr #26
    1f3c:	00000000 	andeq	r0, r0, r0
    1f40:	00000020 	andeq	r0, r0, r0, lsr #32
    1f44:	0000000c 	andeq	r0, r0, ip
    1f48:	00001d44 	andeq	r1, r0, r4, asr #26
    1f4c:	00000000 	andeq	r0, r0, r0
    1f50:	00000020 	andeq	r0, r0, r0, lsr #32
    1f54:	0000000c 	andeq	r0, r0, ip
    1f58:	00001d44 	andeq	r1, r0, r4, asr #26
    1f5c:	08002348 	stmdaeq	r0, {r3, r6, r8, r9, sp}
    1f60:	00000026 	andeq	r0, r0, r6, lsr #32
    1f64:	0000000c 	andeq	r0, r0, ip
    1f68:	00001d44 	andeq	r1, r0, r4, asr #26
    1f6c:	0800236e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, sp}
    1f70:	00000026 	andeq	r0, r0, r6, lsr #32
    1f74:	0000000c 	andeq	r0, r0, ip
    1f78:	00001d44 	andeq	r1, r0, r4, asr #26
    1f7c:	00000000 	andeq	r0, r0, r0
    1f80:	00000022 	andeq	r0, r0, r2, lsr #32
    1f84:	0000000c 	andeq	r0, r0, ip
    1f88:	00001d44 	andeq	r1, r0, r4, asr #26
    1f8c:	00000000 	andeq	r0, r0, r0
    1f90:	00000012 	andeq	r0, r0, r2, lsl r0
    1f94:	0000000c 	andeq	r0, r0, ip
    1f98:	00001d44 	andeq	r1, r0, r4, asr #26
    1f9c:	08002394 	stmdaeq	r0, {r2, r4, r7, r8, r9, sp}
    1fa0:	00000020 	andeq	r0, r0, r0, lsr #32
    1fa4:	0000000c 	andeq	r0, r0, ip
    1fa8:	00001d44 	andeq	r1, r0, r4, asr #26
    1fac:	080023b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sp}
    1fb0:	00000020 	andeq	r0, r0, r0, lsr #32
    1fb4:	0000000c 	andeq	r0, r0, ip
    1fb8:	00001d44 	andeq	r1, r0, r4, asr #26
    1fbc:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
    1fc0:	00000020 	andeq	r0, r0, r0, lsr #32
    1fc4:	0000000c 	andeq	r0, r0, ip
    1fc8:	00001d44 	andeq	r1, r0, r4, asr #26
    1fcc:	080023f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sp}
    1fd0:	00000020 	andeq	r0, r0, r0, lsr #32
    1fd4:	0000000c 	andeq	r0, r0, ip
    1fd8:	00001d44 	andeq	r1, r0, r4, asr #26
    1fdc:	08002414 	stmdaeq	r0, {r2, r4, sl, sp}
    1fe0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1fe4:	0000000c 	andeq	r0, r0, ip
    1fe8:	00001d44 	andeq	r1, r0, r4, asr #26
    1fec:	00000000 	andeq	r0, r0, r0
    1ff0:	00000026 	andeq	r0, r0, r6, lsr #32
    1ff4:	0000000c 	andeq	r0, r0, ip
    1ff8:	00001d44 	andeq	r1, r0, r4, asr #26
    1ffc:	08002430 	stmdaeq	r0, {r4, r5, sl, sp}
    2000:	00000040 	andeq	r0, r0, r0, asr #32
    2004:	0000000c 	andeq	r0, r0, ip
    2008:	00001d44 	andeq	r1, r0, r4, asr #26
    200c:	00000000 	andeq	r0, r0, r0
    2010:	00000020 	andeq	r0, r0, r0, lsr #32
    2014:	0000000c 	andeq	r0, r0, ip
    2018:	00001d44 	andeq	r1, r0, r4, asr #26
    201c:	08002470 	stmdaeq	r0, {r4, r5, r6, sl, sp}
    2020:	00000020 	andeq	r0, r0, r0, lsr #32
    2024:	00000014 	andeq	r0, r0, r4, lsl r0
    2028:	00001d44 	andeq	r1, r0, r4, asr #26
    202c:	00000000 	andeq	r0, r0, r0
    2030:	00000038 	andeq	r0, r0, r8, lsr r0
    2034:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    2038:	00018e02 	andeq	r8, r1, r2, lsl #28
    203c:	0000000c 	andeq	r0, r0, ip
    2040:	00001d44 	andeq	r1, r0, r4, asr #26
    2044:	00000000 	andeq	r0, r0, r0
    2048:	00000020 	andeq	r0, r0, r0, lsr #32
    204c:	0000000c 	andeq	r0, r0, ip
    2050:	00001d44 	andeq	r1, r0, r4, asr #26
    2054:	00000000 	andeq	r0, r0, r0
    2058:	00000020 	andeq	r0, r0, r0, lsr #32
    205c:	0000000c 	andeq	r0, r0, ip
    2060:	00001d44 	andeq	r1, r0, r4, asr #26
    2064:	00000000 	andeq	r0, r0, r0
    2068:	00000020 	andeq	r0, r0, r0, lsr #32
    206c:	0000000c 	andeq	r0, r0, ip
    2070:	00001d44 	andeq	r1, r0, r4, asr #26
    2074:	00000000 	andeq	r0, r0, r0
    2078:	00000020 	andeq	r0, r0, r0, lsr #32
    207c:	00000014 	andeq	r0, r0, r4, lsl r0
    2080:	00001d44 	andeq	r1, r0, r4, asr #26
    2084:	00000000 	andeq	r0, r0, r0
    2088:	000000a8 	andeq	r0, r0, r8, lsr #1
    208c:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    2090:	00018e02 	andeq	r8, r1, r2, lsl #28
    2094:	0000000c 	andeq	r0, r0, ip
    2098:	00001d44 	andeq	r1, r0, r4, asr #26
    209c:	00000000 	andeq	r0, r0, r0
    20a0:	0000005c 	andeq	r0, r0, ip, asr r0
    20a4:	0000000c 	andeq	r0, r0, ip
    20a8:	00001d44 	andeq	r1, r0, r4, asr #26
    20ac:	00000000 	andeq	r0, r0, r0
    20b0:	0000005c 	andeq	r0, r0, ip, asr r0
    20b4:	0000000c 	andeq	r0, r0, ip
    20b8:	00001d44 	andeq	r1, r0, r4, asr #26
    20bc:	00000000 	andeq	r0, r0, r0
    20c0:	00000020 	andeq	r0, r0, r0, lsr #32
    20c4:	0000000c 	andeq	r0, r0, ip
    20c8:	00001d44 	andeq	r1, r0, r4, asr #26
    20cc:	00000000 	andeq	r0, r0, r0
    20d0:	00000020 	andeq	r0, r0, r0, lsr #32
    20d4:	0000000c 	andeq	r0, r0, ip
    20d8:	00001d44 	andeq	r1, r0, r4, asr #26
    20dc:	00000000 	andeq	r0, r0, r0
    20e0:	00000044 	andeq	r0, r0, r4, asr #32
    20e4:	0000000c 	andeq	r0, r0, ip
    20e8:	00001d44 	andeq	r1, r0, r4, asr #26
    20ec:	00000000 	andeq	r0, r0, r0
    20f0:	00000042 	andeq	r0, r0, r2, asr #32
    20f4:	0000000c 	andeq	r0, r0, ip
    20f8:	00001d44 	andeq	r1, r0, r4, asr #26
    20fc:	00000000 	andeq	r0, r0, r0
    2100:	00000006 	andeq	r0, r0, r6
    2104:	0000000c 	andeq	r0, r0, ip
    2108:	00001d44 	andeq	r1, r0, r4, asr #26
    210c:	08002490 	stmdaeq	r0, {r4, r7, sl, sp}
    2110:	0000000a 	andeq	r0, r0, sl
    2114:	0000000c 	andeq	r0, r0, ip
    2118:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    211c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2120:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2124:	0000000c 	andeq	r0, r0, ip
    2128:	00002114 	andeq	r2, r0, r4, lsl r1
    212c:	0800249c 	stmdaeq	r0, {r2, r3, r4, r7, sl, sp}
    2130:	00000020 	andeq	r0, r0, r0, lsr #32
    2134:	00000018 	andeq	r0, r0, r8, lsl r0
    2138:	00002114 	andeq	r2, r0, r4, lsl r1
    213c:	080024bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, sp}
    2140:	00000024 	andeq	r0, r0, r4, lsr #32
    2144:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
    2148:	86038504 	strhi	r8, [r3], -r4, lsl #10
    214c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2150:	0000000c 	andeq	r0, r0, ip
    2154:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2158:	7c020001 	stcvc	0, cr0, [r2], {1}
    215c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2160:	0000001c 	andeq	r0, r0, ip, lsl r0
    2164:	00002150 	andeq	r2, r0, r0, asr r1
    2168:	080024e0 	stmdaeq	r0, {r5, r6, r7, sl, sp}
    216c:	0000016c 	andeq	r0, r0, ip, ror #2
    2170:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xe41
    2174:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2178:	02018e02 	andeq	r8, r1, #2, 28
    217c:	00100ea3 	andseq	r0, r0, r3, lsr #29
    2180:	00000014 	andeq	r0, r0, r4, lsl r0
    2184:	00002150 	andeq	r2, r0, r0, asr r1
    2188:	00000000 	andeq	r0, r0, r0
    218c:	00000070 	andeq	r0, r0, r0, ror r0
    2190:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2194:	00018e02 	andeq	r8, r1, r2, lsl #28

Disassembly of section .debug_str:

00000000 <.debug_str>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_HP(void)
{
       0:	4f495047 	svcmi	0x00495047
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
       4:	646f4d5f 	strbtvs	r4, [pc], #-3423	; c <_Minimum_Stack_Size-0xf4>
       8:	754f5f65 	strbvc	r5, [pc, #-3941]	; fffff0ab <SCS_BASE+0x1fff10ab>
       c:	50505f74 	subspl	r5, r0, r4, ror pc
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
      10:	6f437700 	svcvs	0x00437700
      14:	00746e75 	rsbseq	r6, r4, r5, ror lr
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
      18:	5f434352 	svcpl	0x00434352
      1c:	43535953 	cmpmi	r3, #1359872	; 0x14c000
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
      20:	6f434b4c 	svcvs	0x00434b4c
      24:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
      28:	70776700 	rsbsvc	r6, r7, r0, lsl #14
    if ((wEPVal & EP_CTR_RX) != 0)
      2c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      30:	66754254 			; <UNDEFINED> instruction: 0x66754254
      34:	00726566 	rsbseq	r6, r2, r6, ror #10
      38:	5f434352 	svcpl	0x00434352

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	67007469 	strvs	r7, [r0, -r9, ror #8]
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	54323375 	ldrtpl	r3, [r2], #-885	; 0x375
      48:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
      4c:	756f4367 	strbvc	r4, [pc, #-871]!	; fffffced <SCS_BASE+0x1fff1ced>

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
      54:	00736d31 	rsbseq	r6, r3, r1, lsr sp
      58:	6e69616d 	powvsez	f6, f1, #5.0


    } /* if((wEPVal & EP_CTR_TX) != 0) */

  }/* while(...) */
}
      5c:	4200632e 	andmi	r6, r0, #-1207959552	; 0xb8000000
      60:	00525253 	subseq	r5, r2, r3, asr r2
      64:	4f495047 	svcmi	0x00495047
      68:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 70 <_Minimum_Stack_Size-0x90>
      6c:	70620065 	rsbvc	r0, r2, r5, rrx
      70:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
      74:	00646e61 	rsbeq	r6, r4, r1, ror #28
      78:	61656c43 	cmnvs	r5, r3, asr #24
      7c:	66754272 			; <UNDEFINED> instruction: 0x66754272
      80:	32726566 	rsbscc	r6, r2, #427819008	; 0x19800000
      84:	47003635 	smladxmi	r0, r5, r6, r3
      88:	5f4f4950 	svcpl	0x004f4950
      8c:	006e6950 	rsbeq	r6, lr, r0, asr r9
      90:	5f425355 	svcpl	0x00425355
      94:	5f447854 	svcpl	0x00447854
      98:	5f636544 	svcpl	0x00636544
      9c:	47003855 	smlsdmi	r0, r5, r8, r3
      a0:	5f4f4950 	svcpl	0x004f4950
      a4:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	5550495f 	ldrbpl	r4, [r0, #-2399]	; 0x95f
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	49414600 	stmdbmi	r1, {r9, sl, lr}^
      b0:	0044454c 	subeq	r4, r4, ip, asr #10
      break; 
      
    default:
      break;
  }
}
      b4:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
      bc:	74536c61 	ldrbvc	r6, [r3], #-3169	; 0xc61
      c0:	00657461 	rsbeq	r7, r5, r1, ror #8
      c4:	53414c46 	movtpl	r4, #7238	; 0x1c46
      c8:	52455f48 	subpl	r5, r5, #72, 30	; 0x120
      cc:	5f524f52 	svcpl	0x00524f52
      d0:	00505257 	subseq	r5, r0, r7, asr r2
      d4:	6e65536c 	cdpvs	3, 6, cr5, cr5, cr12, {3}
      d8:	74614474 	strbtvc	r4, [r1], #-1140	; 0x474
      dc:	53550061 	cmppl	r5, #97	; 0x61
      e0:	5f545241 	svcpl	0x00545241
      e4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
      e8:	72724500 	rsbsvc	r4, r2, #0, 10
      ec:	7453726f 	ldrbvc	r7, [r3], #-623	; 0x26f
      f0:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
      f4:	6d754a00 	vldmdbvs	r5!, {s9-s8}
      f8:	64644170 	strbtvs	r4, [r4], #-368	; 0x170
      fc:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     100:	43435200 	movtmi	r5, #12800	; 0x3200
     104:	4c4c505f 	mcrrmi	0, 5, r5, ip, cr15
     108:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     10c:	55006769 	strpl	r6, [r0, #-1897]	; 0x769
     110:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
     114:	726f575f 	rsbvc	r5, pc, #24903680	; 0x17c0000
     118:	6e654c64 	cdpvs	12, 6, cr4, cr5, cr4, {3}
     11c:	00687467 	rsbeq	r7, r8, r7, ror #8
     120:	78527767 	ldmdavc	r2, {r0, r1, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     124:	61746f54 	cmnvs	r4, r4, asr pc
     128:	756f436c 	strbvc	r4, [pc, #-876]!	; fffffdc4 <SCS_BASE+0x1fff1dc4>
     12c:	4e00746e 	cdpmi	4, 0, cr7, cr0, cr14, {3}
     130:	5f434956 	svcpl	0x00434956
     134:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0x547
     138:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0x172
     13c:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0x953
     140:	65526d65 	ldrbvs	r6, [r2, #-3429]	; 0xd65
     144:	00746573 	rsbseq	r6, r4, r3, ror r5
     148:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     14c:	53550074 	cmppl	r5, #116	; 0x74
     150:	5f545241 	svcpl	0x00545241
     154:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
     158:	73746942 	cmnvc	r4, #1081344	; 0x108000
     15c:	414c4600 	cmpmi	ip, r0, lsl #12
     160:	505f4853 	subspl	r4, pc, r3, asr r8	; <UNPREDICTABLE>
     164:	65666572 	strbvs	r6, [r6, #-1394]!	; 0x572
     168:	42686374 	rsbmi	r6, r8, #116, 6	; 0xd0000001
     16c:	65666675 	strbvs	r6, [r6, #-1653]!	; 0x675
     170:	646d4372 	strbtvs	r4, [sp], #-882	; 0x372
     174:	75616200 	strbvc	r6, [r1, #-512]!	; 0x200
     178:	6d756e64 	ldclvs	14, cr6, [r5, #-400]!	; 0xfffffe70
     17c:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     180:	6e495f4f 	cdpvs	15, 4, cr5, cr9, cr15, {2}
     184:	52007469 	andpl	r7, r0, #1761607680	; 0x69000000
     188:	505f4343 	subspl	r4, pc, r3, asr #6
     18c:	324b4c43 	subcc	r4, fp, #17152	; 0x4300
     190:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     194:	54006769 	strpl	r6, [r0], #-1897	; 0x769
     198:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
     19c:	6c654467 	cfstrdvs	mvd4, [r5], #-412	; 0xfffffe64
     1a0:	54007961 	strpl	r7, [r0], #-2401	; 0x961
     1a4:	53747365 	cmnpl	r4, #-1811939327	; 0x94000001
     1a8:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
     1ac:	50470073 	subpl	r0, r7, r3, ror r0
     1b0:	535f4f49 	cmppl	pc, #292	; 0x124
     1b4:	64656570 	strbtvs	r6, [r5], #-1392	; 0x570
     1b8:	484d325f 	stmdami	sp, {r0, r1, r2, r3, r4, r6, r9, ip, sp}^
     1bc:	4c46007a 	mcrrmi	0, 7, r0, r6, cr10
     1c0:	5f485341 	svcpl	0x00485341
     1c4:	61656c43 	cmnvs	r5, r3, asr #24
     1c8:	616c4672 	smcvs	50274	; 0xc462
     1cc:	54470067 	strbpl	r0, [r7], #-103	; 0x67
     1d0:	52005250 	andpl	r5, r0, #80, 4
     1d4:	575f4343 	ldrbpl	r4, [pc, -r3, asr #6]
     1d8:	46746961 	ldrbtmi	r6, [r4], -r1, ror #18
     1dc:	5348726f 	movtpl	r7, #33391	; 0x826f
     1e0:	61745345 	cmnvs	r4, r5, asr #6
     1e4:	70557472 	subsvc	r7, r5, r2, ror r4
     1e8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     1ec:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     1f0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     1f4:	41535500 	cmpmi	r3, r0, lsl #10
     1f8:	435f5452 	cmpmi	pc, #1375731712	; 0x52000000
     1fc:	5500646d 	strpl	r6, [r0, #-1133]	; 0x46d
     200:	545f4253 	ldrbpl	r4, [pc], #-595	; 208 <_Minimum_Stack_Size+0x108>
     204:	65484478 	strbvs	r4, [r8, #-1144]	; 0x478
     208:	00363178 	eorseq	r3, r6, r8, ror r1
     20c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     210:	61425f54 	cmpvs	r2, r4, asr pc
     214:	61526475 	cmpvs	r2, r5, ror r4
     218:	54006574 	strpl	r6, [r0], #-1396	; 0x574
     21c:	00455552 	subeq	r5, r5, r2, asr r5
     220:	5f4d4954 	svcpl	0x004d4954
     224:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     228:	7669446b 	strbtvc	r4, [r9], -fp, ror #8
     22c:	6f697369 	svcvs	0x00697369
     230:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     234:	6c435f4d 	mcrrvs	15, 4, r5, r3, cr13
     238:	46726165 	ldrbtmi	r6, [r2], -r5, ror #2
     23c:	0067616c 	rsbeq	r6, r7, ip, ror #2
     240:	52544442 	subspl	r4, r4, #1107296256	; 0x42000000
     244:	31757600 	cmncc	r5, r0, lsl #12
     248:	564e0036 			; <UNDEFINED> instruction: 0x564e0036
     24c:	495f4349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     250:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0x96e
     254:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
     258:	62006665 	andvs	r6, r0, #105906176	; 0x6500000
     25c:	746e6553 	strbtvc	r6, [lr], #-1363	; 0x553
     260:	61746144 	cmnvs	r4, r4, asr #2
     264:	52434300 	subpl	r4, r3, #0, 6
     268:	43430031 	movtmi	r0, #12337	; 0x3031
     26c:	43003252 	movwmi	r3, #594	; 0x252
     270:	00335243 	eorseq	r5, r3, r3, asr #4
     274:	34524343 	ldrbcc	r4, [r2], #-835	; 0x343
     278:	4d434300 	stclmi	3, cr4, [r3, #-0]
     27c:	43003152 	movwmi	r3, #338	; 0x152
     280:	32524d43 	subscc	r4, r2, #4288	; 0x10c0
     284:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     288:	70535f4f 	subsvc	r5, r3, pc, asr #30
     28c:	5f646565 	svcpl	0x00646565
     290:	484d3031 	stmdami	sp, {r0, r4, r5, ip, sp}^
     294:	7767007a 			; <UNDEFINED> instruction: 0x7767007a
     298:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     29c:	50737365 	rsbspl	r7, r3, r5, ror #6
     2a0:	746e696f 	strbtvc	r6, [lr], #-2415	; 0x96f
     2a4:	4e007265 	cdpmi	2, 0, cr7, cr0, cr5, {3}
     2a8:	7041746f 	subvc	r7, r1, pc, ror #8
     2ac:	57490070 	smlsldxpl	r0, r9, r0, r0
     2b0:	575f4744 	ldrbpl	r4, [pc, -r4, asr #14]
     2b4:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0x972
     2b8:	65636341 	strbvs	r6, [r3, #-833]!	; 0x341
     2bc:	6d437373 	stclvs	3, cr7, [r3, #-460]	; 0xfffffe34
     2c0:	53550064 	cmppl	r5, #100	; 0x64
     2c4:	5f545241 	svcpl	0x00545241
     2c8:	646e6553 	strbtvs	r6, [lr], #-1363	; 0x553
     2cc:	61746144 	cmnvs	r4, r4, asr #2
     2d0:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     2d4:	65535f4f 	ldrbvs	r5, [r3, #-3919]	; 0xf4f
     2d8:	74694274 	strbtvc	r4, [r9], #-628	; 0x274
     2dc:	53770073 	cmnpl	r7, #115	; 0x73
     2e0:	44746e65 	ldrbtmi	r6, [r4], #-3685	; 0xe65
     2e4:	00617461 	rsbeq	r7, r1, r1, ror #8
     2e8:	52706267 	rsbspl	r6, r0, #1879048198	; 0x70000006
     2ec:	66754278 			; <UNDEFINED> instruction: 0x66754278
     2f0:	00726566 	rsbseq	r6, r2, r6, ror #10
     2f4:	20554e47 	subscs	r4, r5, r7, asr #28
     2f8:	2e342043 	cdpcs	0, 3, cr2, cr4, cr3, {2}
     2fc:	20332e39 	eorscs	r2, r3, r9, lsr lr
     300:	35313032 	ldrcc	r3, [r1, #-50]!	; 0x32
     304:	33303330 	teqcc	r0, #48, 6	; 0xc0000000
     308:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0x820
     30c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
     310:	5b202965 	blpl	80a8ac <__Stack_Size+0x80a4ac>
     314:	2f4d5241 	svccs	0x004d5241
     318:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xd65
     31c:	64656464 	strbtvs	r6, [r5], #-1124	; 0x464
     320:	395f342d 	ldmdbcc	pc, {r0, r2, r3, r5, sl, ip, sp}^	; <UNPREDICTABLE>
     324:	6172622d 	cmnvs	r2, sp, lsr #4
     328:	2068636e 	rsbcs	r6, r8, lr, ror #6
     32c:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     330:	6e6f6973 	mcrvs	9, 3, r6, cr15, cr3, {3}
     334:	31323220 	teqcc	r2, r0, lsr #4
     338:	5d303232 	lfmpl	f3, 4, [r0, #-200]!	; 0xffffff38
     33c:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
     340:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
     344:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0x26f
     348:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
     34c:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xd20
     350:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
     354:	20672d20 	rsbcs	r2, r7, r0, lsr #26
     358:	20734f2d 	rsbscs	r4, r3, sp, lsr #30
     35c:	7566662d 	strbvc	r6, [r6, #-1581]!	; 0x62d
     360:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
     364:	732d6e6f 	teqvc	sp, #1776	; 0x6f0
     368:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     36c:	00736e6f 	rsbseq	r6, r3, pc, ror #28
     370:	5f425355 	svcpl	0x00425355
     374:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     378:	414c4600 	cmpmi	ip, r0, lsl #12
     37c:	74534853 	ldrbvc	r4, [r3], #-2131	; 0x853
     380:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     384:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     388:	69505f4f 	ldmdbvs	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     38c:	6d65526e 	sfmvs	f5, 2, [r5, #-440]!	; 0xfffffe48
     390:	6f437061 	svcvs	0x00437061
     394:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     398:	41535500 	cmpmi	r3, r0, lsl #10
     39c:	475f5452 			; <UNDEFINED> instruction: 0x475f5452
     3a0:	6c467465 	cfstrdvs	mvd7, [r6], {101}	; 0x65
     3a4:	74536761 	ldrbvc	r6, [r3], #-1889	; 0x761
     3a8:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     3ac:	65446200 	strbvs	r6, [r4, #-512]	; 0x200
     3b0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0x976
     3b4:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
     3b8:	50470065 	subpl	r0, r7, r5, rrx
     3bc:	4d5f4f49 	ldclmi	15, cr4, [pc, #-292]	; 2a0 <_Minimum_Stack_Size+0x1a0>
     3c0:	5f65646f 	svcpl	0x0065646f
     3c4:	00445049 	subeq	r5, r4, r9, asr #32
     3c8:	6f6d654d 	svcvs	0x006d654d
     3cc:	72507972 	subsvc	r7, r0, #1867776	; 0x1c8000
     3d0:	6172676f 	cmnvs	r2, pc, ror #14
     3d4:	6174536d 	cmnvs	r4, sp, ror #6
     3d8:	00737574 	rsbseq	r7, r3, r4, ror r5
     3dc:	53557767 	cmppl	r5, #27000832	; 0x19c0000
     3e0:	57545241 	ldrbpl	r5, [r4, -r1, asr #4]
     3e4:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0x972
     3e8:	00727450 	rsbseq	r7, r2, r0, asr r4
     3ec:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0x52f
     3f0:	422f7372 	eormi	r7, pc, #-939524095	; 0xc8000001
     3f4:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
     3f8:	65704f2f 	ldrbvs	r4, [r0, #-3887]!	; 0xf2f
     3fc:	394d436e 	stmdbcc	sp, {r1, r2, r3, r5, r6, r8, r9, lr}^
     400:	5f34302e 	svcpl	0x0034302e
     404:	75647241 	strbvc	r7, [r4, #-577]!	; 0x241
     408:	746f6f42 	strbtvc	r6, [pc], #-3906	; 410 <__Stack_Size+0x10>
     40c:	4c46002f 	mcrrmi	0, 2, r0, r6, cr15
     410:	5f485341 	svcpl	0x00485341
     414:	454d4954 	strbmi	r4, [sp, #-2388]	; 0x954
     418:	0054554f 	subseq	r5, r4, pc, asr #10
     41c:	5f425355 	svcpl	0x00425355
     420:	48447854 	stmdami	r4, {r2, r4, r6, fp, ip, sp, lr}^
     424:	32337865 	eorscc	r7, r3, #6619136	; 0x650000
     428:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     42c:	6f4d5f4f 	svcvs	0x004d5f4f
     430:	4f5f6564 	svcmi	0x005f6564
     434:	4f5f7475 	svcmi	0x005f7475
     438:	72450044 	subvc	r0, r5, #68	; 0x44
     43c:	43657361 	cmnmi	r5, #-2080374783	; 0x84000001
     440:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
     444:	62007265 	andvs	r7, r0, #1342177286	; 0x50000006
     448:	61447852 	cmpvs	r4, r2, asr r8
     44c:	4e006174 	mcrmi	1, 0, r6, cr0, cr4, {3}
     450:	664f7262 	strbvs	r7, [pc], -r2, ror #4
     454:	65676150 	strbvs	r6, [r7, #-336]!	; 0x150
     458:	33757600 	cmncc	r5, #0, 12
     45c:	49540032 	ldmdbmi	r4, {r1, r4, r5}^
     460:	72505f4d 	subsvc	r5, r0, #308	; 0x134
     464:	61637365 	cmnvs	r3, r5, ror #6
     468:	0072656c 	rsbseq	r6, r2, ip, ror #10
     46c:	53414c46 	movtpl	r4, #7238	; 0x1c46
     470:	55425f48 	strbpl	r5, [r2, #-3912]	; 0xf48
     474:	44005953 	strmi	r5, [r0], #-2387	; 0x953
     478:	00524549 	subseq	r4, r2, r9, asr #10
     47c:	5f425355 	svcpl	0x00425355
     480:	48447854 	stmdami	r4, {r2, r4, r6, fp, ip, sp, lr}^
     484:	00387865 	eorseq	r7, r8, r5, ror #16
     488:	53414c46 	movtpl	r4, #7238	; 0x1c46
     48c:	6e555f48 	cdpvs	15, 5, cr5, cr5, cr8, {2}
     490:	6b636f6c 	blvs	18dc248 <__Stack_Size+0x18dbe48>
     494:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     498:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xf4f
     49c:	6e496461 	cdpvs	4, 4, cr6, cr9, cr1, {3}
     4a0:	44747570 	ldrbtmi	r7, [r4], #-1392	; 0x570
     4a4:	42617461 	rsbmi	r7, r1, #1627389952	; 0x61000000
     4a8:	55007469 	strpl	r7, [r0, #-1129]	; 0x469
     4ac:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
     4b0:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     4b4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     4b8:	44444100 	strbmi	r4, [r4], #-256	; 0x100
     4bc:	53534552 	cmppl	r3, #343932928	; 0x14800000
     4c0:	54004445 	strpl	r4, [r0], #-1093	; 0x445
     4c4:	525f4d49 	subspl	r4, pc, #4672	; 0x1240
     4c8:	74657065 	strbtvc	r7, [r5], #-101	; 0x65
     4cc:	6f697469 	svcvs	0x00697469
     4d0:	756f436e 	strbvc	r4, [pc, #-878]!	; 16a <_Minimum_Stack_Size+0x6a>
     4d4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     4d8:	46626700 	strbtmi	r6, [r2], -r0, lsl #14
     4dc:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
     4e0:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
     4e4:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xf6c
     4e8:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
     4ec:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
     4f0:	6d435f4d 	stclvs	15, cr5, [r3, #-308]	; 0xfffffecc
     4f4:	4c460064 	mcrrmi	0, 6, r0, r6, cr4
     4f8:	5f485341 	svcpl	0x00485341
     4fc:	504d4f43 	subpl	r4, sp, r3, asr #30
     500:	4554454c 	ldrbmi	r4, [r4, #-1356]	; 0x54c
     504:	41535500 	cmpmi	r3, r0, lsl #10
     508:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     50c:	5374696e 	cmnpl	r4, #1802240	; 0x1b8000
     510:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
     514:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
     518:	72745300 	rsbsvc	r5, r4, #0, 6
     51c:	43676e69 	cmnmi	r7, #1680	; 0x690
     520:	61706d6f 	cmnvs	r0, pc, ror #26
     524:	43006572 	movwmi	r6, #1394	; 0x572
     528:	00524543 	subseq	r4, r2, r3, asr #10
     52c:	4349564e 	movtmi	r5, #38478	; 0x964e
     530:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     534:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
     538:	75746375 	ldrbvc	r6, [r4, #-885]!	; 0x375
     53c:	44006572 	strmi	r6, [r0], #-1394	; 0x572
     540:	42415349 	submi	r5, r1, #603979777	; 0x24000001
     544:	5200454c 	andpl	r4, r0, #76, 10	; 0x13000000
     548:	415f4343 	cmpmi	pc, r3, asr #6
     54c:	50314250 	eorspl	r4, r1, r0, asr r2
     550:	70697265 	rsbvc	r7, r9, r5, ror #4
     554:	6f6c4368 	svcvs	0x006c4368
     558:	6d436b63 	vstrvs	d22, [r3, #-396]	; 0xfffffe74
     55c:	73750064 	cmnvc	r5, #100	; 0x64
     560:	43785262 	cmnmi	r8, #536870918	; 0x20000006
     564:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
     568:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     56c:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xf43
     570:	63655674 	cmnvs	r5, #116, 12	; 0x7400000
     574:	54726f74 	ldrbtpl	r6, [r2], #-3956	; 0xf74
     578:	656c6261 	strbvs	r6, [ip, #-609]!	; 0x261
     57c:	44706200 	ldrbtmi	r6, [r0], #-512	; 0x200
     580:	54007473 	strpl	r7, [r0], #-1139	; 0x473
     584:	435f4d49 	cmpmi	pc, #4672	; 0x1240
     588:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
     58c:	6f4d7265 	svcvs	0x004d7265
     590:	67006564 	strvs	r6, [r0, -r4, ror #10]
     594:	41535577 	cmpmi	r3, r7, ror r5
     598:	65525452 	ldrbvs	r5, [r2, #-1106]	; 0x452
     59c:	74506461 	ldrbvc	r6, [r0], #-1121	; 0x461
     5a0:	53550072 	cmppl	r5, #114	; 0x72
     5a4:	5f545241 	svcpl	0x00545241
     5a8:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
     5ac:	434d5300 	movtmi	r5, #54016	; 0xd300
     5b0:	43520052 	cmpmi	r2, #82	; 0x52
     5b4:	53485f43 	movtpl	r5, #36675	; 0x8f43
     5b8:	6e6f4345 	cdpvs	3, 6, cr4, cr15, cr5, {2}
     5bc:	00676966 	rsbeq	r6, r7, r6, ror #18
     5c0:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     5c4:	61485f54 	cmpvs	r8, r4, asr pc
     5c8:	61776472 	cmnvs	r7, r2, ror r4
     5cc:	6c466572 	cfstr64vs	mvdx6, [r6], {114}	; 0x72
     5d0:	6f43776f 	svcvs	0x0043776f
     5d4:	6f72746e 	svcvs	0x0072746e
     5d8:	7767006c 	strbvc	r0, [r7, -ip, rrx]!
     5dc:	74697257 	strbtvc	r7, [r9], #-599	; 0x257
     5e0:	6f725065 	svcvs	0x00725065
     5e4:	74636574 	strbtvc	r6, [r3], #-1396	; 0x574
     5e8:	61506465 	cmpvs	r0, r5, ror #8
     5ec:	00736567 	rsbseq	r6, r3, r7, ror #10
     5f0:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xf50
     5f4:	00444552 	subeq	r4, r4, r2, asr r5
     5f8:	53414c46 	movtpl	r4, #7238	; 0x1c46
     5fc:	6f4c5f48 	svcvs	0x004c5f48
     600:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
     604:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
     608:	5f434352 	svcpl	0x00434352
     60c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     610:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     614:	6f697461 	svcvs	0x00697461
     618:	7567006e 	strbvc	r0, [r7, #-110]!	; 0x6e
     61c:	69543233 	ldmdbvs	r4, {r0, r1, r4, r5, r9, ip, sp}^
     620:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
     624:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     628:	31726574 	cmncc	r2, r4, ror r5
     62c:	545f736d 	ldrbpl	r7, [pc], #-877	; 634 <__Stack_Size+0x234>
     630:	49006478 	stmdbmi	r0, {r3, r4, r5, r6, sl, sp, lr}
     634:	5f474457 	svcpl	0x00474457
     638:	52746553 	rsbspl	r6, r4, #348127232	; 0x14c00000
     63c:	616f6c65 	cmnvs	pc, r5, ror #24
     640:	62670064 	rsbvs	r0, r7, #100	; 0x64
     644:	6c467349 	mcrrvs	3, 4, r7, r6, cr9
     648:	4c687361 	stclmi	3, cr7, [r8], #-388	; 0xfffffe7c
     64c:	006b636f 	rsbeq	r6, fp, pc, ror #6
     650:	4f495047 	svcmi	0x00495047
     654:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     658:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
     65c:	75746375 	ldrbvc	r6, [r4, #-885]!	; 0x375
     660:	49006572 	stmdbmi	r0, {r1, r4, r5, r6, r8, sl, sp, lr}
     664:	5f474457 	svcpl	0x00474457
     668:	50746553 	rsbspl	r6, r4, r3, asr r5
     66c:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
     670:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
     674:	44785200 	ldrbtmi	r5, [r8], #-512	; 0x200
     678:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     67c:	72467265 	subvc	r7, r6, #1342177286	; 0x50000006
     680:	6f486d6f 	svcvs	0x00486d6f
     684:	49007473 	stmdbmi	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
     688:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     68c:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0x572
     690:	00736d31 	rsbseq	r6, r3, r1, lsr sp
     694:	5f434352 	svcpl	0x00434352
     698:	4b4c4348 	blmi	13113c0 <__Stack_Size+0x1310fc0>
     69c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     6a0:	62006769 	andvs	r6, r0, #27525120	; 0x1a40000
     6a4:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0x942
     6a8:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     6ac:	52495f43 	subpl	r5, r9, #268	; 0x10c
     6b0:	61684351 	cmnvs	r8, r1, asr r3
     6b4:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     6b8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     6bc:	7265505f 	rsbvc	r5, r5, #95	; 0x5f
     6c0:	00646f69 	rsbeq	r6, r4, r9, ror #30
     6c4:	5f434352 	svcpl	0x00434352
     6c8:	4b4c4350 	blmi	1311410 <__Stack_Size+0x1311010>
     6cc:	6e6f4331 	mcrvs	3, 3, r4, cr15, cr1, {1}
     6d0:	00676966 	rsbeq	r6, r7, r6, ror #18
     6d4:	4349564e 	movtmi	r5, #38478	; 0x964e
     6d8:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     6dc:	706f0074 	rsbvc	r0, pc, r4, ror r0	; <UNPREDICTABLE>
     6e0:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
     6e4:	70626700 	rsbvc	r6, r2, r0, lsl #14
     6e8:	444c5844 	strbmi	r5, [ip], #-2116	; 0x844
     6ec:	42617461 	rsbmi	r7, r1, #1627389952	; 0x61000000
     6f0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0x675
     6f4:	50470072 	subpl	r0, r7, r2, ror r0
     6f8:	4d5f4f49 	ldclmi	15, cr4, [pc, #-292]	; 5dc <__Stack_Size+0x1dc>
     6fc:	5f65646f 	svcpl	0x0065646f
     700:	4f5f4641 	svcmi	0x005f4641
     704:	69540044 	ldmdbvs	r4, {r2, r6}^
     708:	5f72656d 	svcpl	0x0072656d
     70c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     710:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     714:	6f697461 	svcvs	0x00697461
     718:	5374006e 	cmnpl	r4, #110	; 0x6e
     71c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0x174
     720:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     724:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     728:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xf4f
     72c:	42746573 	rsbsmi	r6, r4, #482344960	; 0x1cc00000
     730:	00737469 	rsbseq	r7, r3, r9, ror #8
     734:	61656c43 	cmnvs	r5, r3, asr #24
     738:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
     73c:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xf65
     740:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     744:	46007265 	strmi	r7, [r0], -r5, ror #4
     748:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
     74c:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
     750:	6574614c 	ldrbvs	r6, [r4, #-332]!	; 0x14c
     754:	0079636e 	rsbseq	r6, r9, lr, ror #6
     758:	53414c46 	movtpl	r4, #7238	; 0x1c46
     75c:	74535f48 	ldrbvc	r5, [r3], #-3912	; 0xf48
     760:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     764:	73795300 	cmnvc	r9, #0, 6
     768:	6b636954 	blvs	18dacc0 <__Stack_Size+0x18da8c0>
     76c:	4354495f 	cmpmi	r4, #1556480	; 0x17c000
     770:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     774:	43520067 	cmpmi	r2, #103	; 0x67
     778:	53555f43 	cmppl	r5, #268	; 0x10c
     77c:	4b4c4342 	blmi	131148c <__Stack_Size+0x131108c>
     780:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     784:	52006769 	andpl	r6, r0, #27525120	; 0x1a40000
     788:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
     78c:	6c467465 	cfstrdvs	mvd7, [r6], {101}	; 0x65
     790:	74536761 	ldrbvc	r6, [r3], #-1889	; 0x761
     794:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     798:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     79c:	6570534f 	ldrbvs	r5, [r0, #-847]!	; 0x34f
     7a0:	545f6465 	ldrbpl	r6, [pc], #-1125	; 7a8 <__Stack_Size+0x3a8>
     7a4:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
     7a8:	47006665 	strmi	r6, [r0, -r5, ror #12]
     7ac:	5f4f4950 	svcpl	0x004f4950
     7b0:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
     7b4:	4e49415f 	mcrmi	1, 2, r4, cr9, cr15, {2}
     7b8:	53455200 	movtpl	r5, #20992	; 0x5200
     7bc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     7c0:	52003044 	andpl	r3, r0, #68	; 0x44
     7c4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     7c8:	31444556 	cmpcc	r4, r6, asr r5
     7cc:	53455200 	movtpl	r5, #20992	; 0x5200
     7d0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     7d4:	52003244 	andpl	r3, r0, #68, 4	; 0x40000004
     7d8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     7dc:	33444556 	movtcc	r4, #17750	; 0x4556
     7e0:	53455200 	movtpl	r5, #20992	; 0x5200
     7e4:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     7e8:	52003444 	andpl	r3, r0, #68, 8	; 0x44000000
     7ec:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     7f0:	35444556 	strbcc	r4, [r4, #-1366]	; 0x556
     7f4:	53455200 	movtpl	r5, #20992	; 0x5200
     7f8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     7fc:	73003644 	movwvc	r3, #1604	; 0x644
     800:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xf68
     804:	746e6920 	strbtvc	r6, [lr], #-2336	; 0x920
     808:	53455200 	movtpl	r5, #20992	; 0x5200
     80c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     810:	52003844 	andpl	r3, r0, #68, 16	; 0x440000
     814:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     818:	39444556 	stmdbcc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     81c:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     820:	6f4d5f4f 	svcvs	0x004d5f4f
     824:	415f6564 	cmpmi	pc, r4, ror #10
     828:	50505f46 	subspl	r5, r0, r6, asr #30
     82c:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     830:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
     834:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
     838:	46005241 	strmi	r5, [r0], -r1, asr #4
     83c:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
     840:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     844:	505f524f 	subspl	r5, pc, pc, asr #4
     848:	41500047 	cmpmi	r0, r7, asr #32
     84c:	44455353 	strbmi	r5, [r5], #-851	; 0x353
     850:	43626700 	cmnmi	r2, #0, 14
     854:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
     858:	65684300 	strbvs	r4, [r8, #-768]!	; 0x300
     85c:	69546b63 	ldmdbvs	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     860:	754f656d 	strbvc	r6, [pc, #-1389]	; 2fb <_Minimum_Stack_Size+0x1fb>
     864:	53550074 	cmppl	r5, #116	; 0x74
     868:	5f545241 	svcpl	0x00545241
     86c:	6f435449 	svcvs	0x00435449
     870:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     874:	4c414600 	mcrrmi	6, 0, r4, r1, cr0
     878:	67004553 	smlsdvs	r0, r3, r5, r4
     87c:	646e4577 	strbtvs	r4, [lr], #-1399	; 0x577
     880:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     884:	50737365 	rsbspl	r7, r3, r5, ror #6
     888:	746e696f 	strbtvc	r6, [lr], #-2415	; 0x96f
     88c:	54007265 	strpl	r7, [r0], #-613	; 0x265
     890:	495f4d49 	ldmdbmi	pc, {r0, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
     894:	6e6f4354 	mcrvs	3, 3, r4, cr15, cr4, {2}
     898:	00676966 	rsbeq	r6, r7, r6, ror #18
     89c:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0x953
     8a0:	5f6b6369 	svcpl	0x006b6369
     8a4:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     8a8:	43726574 	cmnmi	r2, #116, 10	; 0x1d000000
     8ac:	6700646d 	strvs	r6, [r0, -sp, ror #8]
     8b0:	63655277 	cmnvs	r5, #1879048199	; 0x70000007
     8b4:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0x965
     8b8:	65684364 	strbvs	r4, [r8, #-868]!	; 0x364
     8bc:	75536b63 	ldrbvc	r6, [r3, #-2915]	; 0xb63
     8c0:	6f72466d 	svcvs	0x0072466d
     8c4:	736f486d 	cmnvc	pc, #7143424	; 0x6d0000
     8c8:	53550074 	cmppl	r5, #116	; 0x74
     8cc:	5f545241 	svcpl	0x00545241
     8d0:	61656c43 	cmnvs	r5, r3, asr #24
     8d4:	616c4672 	smcvs	50274	; 0xc462
     8d8:	50470067 	subpl	r0, r7, r7, rrx
     8dc:	545f4f49 	ldrbpl	r4, [pc], #-3913	; 8e4 <__Stack_Size+0x4e4>
     8e0:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
     8e4:	47006665 	strmi	r6, [r0, -r5, ror #12]
     8e8:	4d4f4950 	stclmi	9, cr4, [pc, #-320]	; 7b0 <__Stack_Size+0x3b0>
     8ec:	5f65646f 	svcpl	0x0065646f
     8f0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
     8f4:	00666544 	rsbeq	r6, r6, r4, asr #10
     8f8:	5f425355 	svcpl	0x00425355
     8fc:	435f7852 	cmpmi	pc, #5373952	; 0x520000
     900:	5200746e 	andpl	r7, r0, #1845493760	; 0x6e000000
     904:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
     908:	59537465 	ldmdbpl	r3, {r0, r2, r5, r6, sl, ip, sp, lr}^
     90c:	4b4c4353 	blmi	1311660 <__Stack_Size+0x1311260>
     910:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
     914:	45006563 	strmi	r6, [r0, #-1379]	; 0x563
     918:	4c42414e 	stfmie	f4, [r2], {78}	; 0x4e
     91c:	564e0045 	strbpl	r0, [lr], -r5, asr #32
     920:	495f4349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     924:	68435152 	stmdavs	r3, {r1, r4, r6, r8, ip, lr}^
     928:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
     92c:	646d436c 	strbtvs	r4, [sp], #-876	; 0x36c
     930:	7a697300 	bvc	1a5d538 <__Stack_Size+0x1a5d138>
     934:	70797465 	rsbsvc	r7, r9, r5, ror #8
     938:	6f6c0065 	svcvs	0x006c0065
     93c:	7520676e 	strvc	r6, [r0, #-1902]!	; 0x76e
     940:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     944:	2064656e 	rsbcs	r6, r4, lr, ror #10
     948:	00746e69 	rsbseq	r6, r4, r9, ror #28
     94c:	56627355 			; <UNDEFINED> instruction: 0x56627355
     950:	69447063 	stmdbvs	r4, {r0, r1, r5, r6, ip, sp, lr}^
     954:	6e6f6373 	mcrvs	3, 3, r6, cr15, cr3, {3}
     958:	7463656e 	strbtvc	r6, [r3], #-1390	; 0x56e
     95c:	43435200 	movtmi	r5, #12800	; 0x3200
     960:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
     964:	6c467261 	sfmvs	f7, 2, [r6], {97}	; 0x61
     968:	53006761 	movwpl	r6, #1889	; 0x761
     96c:	61697265 	cmnvs	r9, r5, ror #4
     970:	6e6f4d6c 	cdpvs	13, 6, cr4, cr15, cr12, {3}
     974:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     978:	44626700 	strbtmi	r6, [r2], #-1792	; 0x700
     97c:	72574c58 	subsvc	r4, r7, #88, 24	; 0x5800
     980:	50657469 	rsbpl	r7, r5, r9, ror #8
     984:	746e696f 	strbtvc	r6, [lr], #-2415	; 0x96f
     988:	55007265 	strpl	r7, [r0, #-613]	; 0x265
     98c:	545f4253 	ldrbpl	r4, [pc], #-595	; 994 <__Stack_Size+0x594>
     990:	74534478 	ldrbvc	r4, [r3], #-1144	; 0x478
     994:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     998:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     99c:	6d69545f 	cfstrdvs	mvd5, [r9, #-380]!	; 0xfffffe84
     9a0:	73614265 	cmnvc	r1, #1342177286	; 0x50000006
     9a4:	72745365 	rsbsvc	r5, r4, #-1811939327	; 0x94000001
     9a8:	75746375 	ldrbvc	r6, [r4, #-885]!	; 0x375
     9ac:	64006572 	strvs	r6, [r0], #-1394	; 0x572
     9b0:	675f6c78 			; <UNDEFINED> instruction: 0x675f6c78
     9b4:	625f7465 	subsvs	r7, pc, #1694498816	; 0x65000000
     9b8:	72647561 	rsbvc	r7, r4, #406847488	; 0x18400000
     9bc:	00657461 	rsbeq	r7, r5, r1, ror #8
     9c0:	464e4f43 	strbmi	r4, [lr], -r3, asr #30
     9c4:	52554749 	subspl	r4, r5, #19136512	; 0x1240000
     9c8:	47004445 	strmi	r4, [r0, -r5, asr #8]
     9cc:	5f4f4950 	svcpl	0x004f4950
     9d0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     9d4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
     9d8:	00666544 	rsbeq	r6, r6, r4, asr #10
     9dc:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     9e0:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xe67
     9e4:	61686320 	cmnvs	r8, r0, lsr #6
     9e8:	54620072 	strbtpl	r0, [r2], #-114	; 0x72
     9ec:	4700706d 	strmi	r7, [r0, -sp, rrx]
     9f0:	5f4f4950 	svcpl	0x004f4950
     9f4:	65657053 	strbvs	r7, [r5, #-83]!	; 0x53
     9f8:	30355f64 	eorscc	r5, r5, r4, ror #30
     9fc:	007a484d 	rsbseq	r4, sl, sp, asr #16
     a00:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     a04:	6f435f54 	svcvs	0x00435f54
     a08:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     a0c:	74617275 	strbtvc	r7, [r1], #-629	; 0x275
     a10:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     a14:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0x953
     a18:	5f6b6369 	svcpl	0x006b6369
     a1c:	52746553 	rsbspl	r6, r4, #348127232	; 0x14c00000
     a20:	616f6c65 	cmnvs	pc, r5, ror #24
     a24:	445f0064 	ldrbmi	r0, [pc], #-100	; a2c <__Stack_Size+0x62c>
     a28:	43495645 	movtmi	r5, #38469	; 0x9645
     a2c:	54535f45 	ldrbpl	r5, [r3], #-3909	; 0xf45
     a30:	00455441 	subeq	r5, r5, r1, asr #8
     a34:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     a38:	65445f54 	strbvs	r5, [r4, #-3924]	; 0xf54
     a3c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     a40:	6d754a00 	vldmdbvs	r5!, {s9-s8}
     a44:	6f545f70 	svcvs	0x00545f70
     a48:	7070415f 	rsbsvc	r4, r0, pc, asr r1
     a4c:	6163696c 	cmnvs	r3, ip, ror #18
     a50:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
     a54:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     a58:	6f435f43 	svcvs	0x00435f43
     a5c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     a60:	74617275 	strbtvc	r7, [r1], #-629	; 0x275
     a64:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     a68:	4f434e55 	svcmi	0x00434e55
     a6c:	43454e4e 	movtmi	r4, #24142	; 0x5e4e
     a70:	00444554 	subeq	r4, r4, r4, asr r5
     a74:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
     a78:	44455652 	strbmi	r5, [r5], #-1618	; 0x652
     a7c:	52003031 	andpl	r3, r0, #49	; 0x31
     a80:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     a84:	31444556 	cmpcc	r4, r6, asr r5
     a88:	45520031 	ldrbmi	r0, [r2, #-49]	; 0x31
     a8c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     a90:	32314445 	eorscc	r4, r1, #1157627904	; 0x45000000
     a94:	53455200 	movtpl	r5, #20992	; 0x5200
     a98:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     a9c:	00333144 	eorseq	r3, r3, r4, asr #2
     aa0:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
     aa4:	44455652 	strbmi	r5, [r5], #-1618	; 0x652
     aa8:	52003431 	andpl	r3, r0, #822083584	; 0x31000000
     aac:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     ab0:	31444556 	cmpcc	r4, r6, asr r5
     ab4:	45520035 	ldrbmi	r0, [r2, #-53]	; 0x35
     ab8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     abc:	36314445 	ldrtcc	r4, [r1], -r5, asr #8
     ac0:	53455200 	movtpl	r5, #20992	; 0x5200
     ac4:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     ac8:	00373144 	eorseq	r3, r7, r4, asr #2
     acc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
     ad0:	44455652 	strbmi	r5, [r5], #-1618	; 0x652
     ad4:	52003831 	andpl	r3, r0, #3211264	; 0x310000
     ad8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     adc:	31444556 	cmpcc	r4, r6, asr r5
     ae0:	50470039 	subpl	r0, r7, r9, lsr r0
     ae4:	435f4f49 	cmpmi	pc, #292	; 0x124
     ae8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     aec:	61727567 	cmnvs	r2, r7, ror #10
     af0:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
     af4:	41535500 	cmpmi	r3, r0, lsl #10
     af8:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     afc:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0x96e
     b00:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
     b04:	4e006665 	cfmadd32mi	mvax3, mvfx6, mvfx0, mvfx5
     b08:	5f434956 	svcpl	0x00434956
     b0c:	43515249 	cmpmi	r1, #-1879048188	; 0x90000004
     b10:	6e6e6168 	powvsez	f6, f6, #0.0
     b14:	75536c65 	ldrbvc	r6, [r3, #-3173]	; 0xc65
     b18:	69725062 	ldmdbvs	r2!, {r1, r5, r6, ip, lr}^
     b1c:	7469726f 	strbtvc	r7, [r9], #-623	; 0x26f
     b20:	53550079 	cmppl	r5, #121	; 0x79
     b24:	5f545241 	svcpl	0x00545241
     b28:	69726150 	ldmdbvs	r2!, {r4, r6, r8, sp, lr}^
     b2c:	52007974 	andpl	r7, r0, #116, 18	; 0x1d0000
     b30:	415f4343 	cmpmi	pc, r3, asr #6
     b34:	50324250 	eorspl	r4, r2, r0, asr r2
     b38:	70697265 	rsbvc	r7, r9, r5, ror #4
     b3c:	6f6c4368 	svcvs	0x006c4368
     b40:	6d436b63 	vstrvs	d22, [r3, #-396]	; 0xfffffe74
     b44:	53550064 	cmppl	r5, #100	; 0x64
     b48:	78525f42 	ldmdavc	r2, {r1, r6, r8, r9, sl, fp, ip, lr}^
     b4c:	6675425f 			; <UNDEFINED> instruction: 0x6675425f
     b50:	00726566 	rsbseq	r6, r2, r6, ror #10
     b54:	72655462 	rsbvc	r5, r5, #1644167168	; 0x62000000
     b58:	616e696d 	cmnvs	lr, sp, ror #18
     b5c:	55006574 	strpl	r6, [r0, #-1396]	; 0x574
     b60:	545f4253 	ldrbpl	r4, [pc], #-595	; b68 <__Stack_Size+0x768>
     b64:	79424478 	stmdbvc	r2, {r3, r4, r5, r6, sl, lr}^
     b68:	52006574 	andpl	r6, r0, #116, 10	; 0x1d000000
     b6c:	505f4343 	subspl	r4, pc, r3, asr #6
     b70:	6d434c4c 	stclvs	12, cr4, [r3, #-304]	; 0xfffffed0
     b74:	46700064 	ldrbtmi	r0, [r0], -r4, rrx
     b78:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xe75
     b7c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     b80:	5f4d4954 	svcpl	0x004d4954
     b84:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
     b88:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0x142
     b8c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     b90:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
     b94:	00666544 	rsbeq	r6, r6, r4, asr #10
     b98:	61437767 	cmpvs	r3, r7, ror #14
     b9c:	6c75636c 	ldclvs	3, cr6, [r5], #-432	; 0xfffffe50
     ba0:	64657461 	strbtvs	r7, [r5], #-1121	; 0x461
     ba4:	63656843 	cmnvs	r5, #4390912	; 0x430000
     ba8:	6d75536b 	ldclvs	3, cr5, [r5, #-428]!	; 0xfffffe54
     bac:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     bb0:	72505f43 	subsvc	r5, r0, #268	; 0x10c
     bb4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     bb8:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
     bbc:	4370756f 	cmnmi	r0, #465567744	; 0x1bc00000
     bc0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     bc4:	50470067 	subpl	r0, r7, r7, rrx
     bc8:	535f4f49 	cmppl	pc, #292	; 0x124
     bcc:	64656570 	strbtvs	r6, [r5], #-1392	; 0x570
     bd0:	53706200 	cmnpl	r0, #0, 4
     bd4:	73006372 	movwvc	r6, #882	; 0x372
     bd8:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xf68
     bdc:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     be0:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0x769
     be4:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     be8:	54410074 	strbpl	r0, [r1], #-116	; 0x74
     bec:	48434154 	stmdami	r3, {r2, r4, r6, r8, lr}^
     bf0:	6d004445 	cfstrsvs	mvf4, [r0, #-276]	; 0xfffffeec
     bf4:	006e6961 	rsbeq	r6, lr, r1, ror #18
     bf8:	53414c46 	movtpl	r4, #7238	; 0x1c46
     bfc:	72455f48 	subvc	r5, r5, #72, 30	; 0x120
     c00:	50657361 	rsbpl	r7, r5, r1, ror #6
     c04:	00656761 	rsbeq	r6, r5, r1, ror #14
     c08:	4349564e 	movtmi	r5, #38478	; 0x964e
     c0c:	5152495f 	cmppl	r2, pc, asr r9
     c10:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     c14:	506c656e 	rsbpl	r6, ip, lr, ror #10
     c18:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
     c1c:	6f697470 	svcvs	0x00697470
     c20:	6972506e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, ip, lr}^
     c24:	7469726f 	strbtvc	r7, [r9], #-623	; 0x26f
     c28:	55530079 	ldrbpl	r0, [r3, #-121]	; 0x79
     c2c:	4e455053 	mcrmi	0, 2, r5, cr5, cr3, {2}
     c30:	00444544 	subeq	r4, r4, r4, asr #10
     c34:	4f495047 	svcmi	0x00495047
     c38:	646f4d5f 	strbtvs	r4, [pc], #-3423	; c40 <__Stack_Size+0x840>
     c3c:	4e495f65 	cdpmi	15, 4, cr5, cr9, cr5, {3}
     c40:	4f4c465f 	svcmi	0x004c465f
     c44:	4e495441 	cdpmi	4, 4, cr5, cr9, cr1, {2}
     c48:	45520047 	ldrbmi	r0, [r2, #-71]	; 0x47
     c4c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     c50:	00374445 	eorseq	r4, r7, r5, asr #8
     c54:	5f4d4954 	svcpl	0x004d4954
     c58:	73657250 	cmnvc	r5, #80, 4
     c5c:	656c6163 	strbvs	r6, [ip, #-355]!	; 0x163
     c60:	6e6f4372 	mcrvs	3, 3, r4, cr15, cr2, {3}
     c64:	00676966 	rsbeq	r6, r7, r6, ror #18
     c68:	58446267 	stmdapl	r4, {r0, r1, r2, r5, r6, r9, sp, lr}^
     c6c:	6165524c 	cmnvs	r5, ip, asr #4
     c70:	696f5064 	stmdbvs	pc!, {r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     c74:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     c78:	69546e00 	ldmdbvs	r4, {r9, sl, fp, sp, lr}^
     c7c:	5400656d 	strpl	r6, [r0], #-1389	; 0x56d
     c80:	545f4d49 	ldrbpl	r4, [pc], #-3401	; c88 <__Stack_Size+0x888>
     c84:	42656d69 	rsbmi	r6, r5, #6720	; 0x1a40
     c88:	49657361 	stmdbmi	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
     c8c:	0074696e 	rsbseq	r6, r4, lr, ror #18
     c90:	53455348 	movtpl	r5, #21320	; 0x5348
     c94:	74726174 	ldrbtvc	r6, [r2], #-372	; 0x174
     c98:	74537055 	ldrbvc	r7, [r3], #-85	; 0x55
     c9c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     ca0:	72745300 	rsbsvc	r5, r4, #0, 6
     ca4:	43676e69 	cmnmi	r7, #1680	; 0x690
     ca8:	0079706f 	rsbseq	r7, r9, pc, rrx
     cac:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     cb0:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xf54
     cb4:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
     cb8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     cbc:	4b434c00 	blmi	10d3cc4 <__Stack_Size+0x10d38c4>
     cc0:	78640052 	stmdavc	r4!, {r1, r4, r6}^
     cc4:	7561426c 	strbvc	r4, [r1, #-620]!	; 0x26c
     cc8:	74617264 	strbtvc	r7, [r1], #-612	; 0x264
     ccc:	32490065 	subcc	r0, r9, #101	; 0x65
     cd0:	455f3243 	ldrbmi	r3, [pc, #-579]	; a95 <__Stack_Size+0x695>
     cd4:	52495f56 	subpl	r5, r9, #344	; 0x158
     cd8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     cdc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     ce0:	54584500 	ldrbpl	r4, [r8], #-1280	; 0x500
     ce4:	355f3949 	ldrbcc	r3, [pc, #-2377]	; 3a3 <_Minimum_Stack_Size+0x2a3>
     ce8:	5152495f 	cmppl	r2, pc, asr r9
     cec:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     cf0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     cf4:	646e6550 	strbtvs	r6, [lr], #-1360	; 0x550
     cf8:	00435653 	subeq	r5, r3, r3, asr r6
     cfc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     d00:	30316632 	eorscc	r6, r1, r2, lsr r6
     d04:	74695f78 	strbtvc	r5, [r9], #-3960	; 0xf78
     d08:	4400632e 	strmi	r6, [r0], #-814	; 0x32e
     d0c:	5f32414d 	svcpl	0x0032414d
     d10:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     d14:	346c656e 	strbtcc	r6, [ip], #-1390	; 0x56e
     d18:	495f355f 	ldmdbmi	pc, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     d1c:	61485152 	cmpvs	r8, r2, asr r1
     d20:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     d24:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
     d28:	35314954 	ldrcc	r4, [r1, #-2388]!	; 0x954
     d2c:	5f30315f 	svcpl	0x0030315f
     d30:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     d34:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d38:	54007265 	strpl	r7, [r0], #-613	; 0x265
     d3c:	5f314d49 	svcpl	0x00314d49
     d40:	5f4b5242 	svcpl	0x004b5242
     d44:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     d48:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d4c:	55007265 	strpl	r7, [r0, #-613]	; 0x265
     d50:	34545241 	ldrbcc	r5, [r4], #-577	; 0x241
     d54:	5152495f 	cmppl	r2, pc, asr r9
     d58:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     d5c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     d60:	41435452 	cmpmi	r3, r2, asr r4
     d64:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
     d68:	5152495f 	cmppl	r2, pc, asr r9
     d6c:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     d70:	0072656c 	rsbseq	r6, r2, ip, ror #10
     d74:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     d78:	5f43435f 	svcpl	0x0043435f
     d7c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     d80:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d84:	45007265 	strmi	r7, [r0, #-613]	; 0x265
     d88:	30495458 	subcc	r5, r9, r8, asr r4
     d8c:	5152495f 	cmppl	r2, pc, asr r9
     d90:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     d94:	0072656c 	rsbseq	r6, r2, ip, ror #10
     d98:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     d9c:	6168435f 	cmnvs	r8, pc, asr r3
     da0:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     da4:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     da8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     dac:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     db0:	43324900 	teqmi	r2, #0, 18
     db4:	56455f31 			; <UNDEFINED> instruction: 0x56455f31
     db8:	5152495f 	cmppl	r2, pc, asr r9
     dbc:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     dc0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     dc4:	57425355 	smlsldpl	r5, r2, r5, r3
     dc8:	55656b61 	strbpl	r6, [r5, #-2913]!	; 0xb61
     dcc:	52495f70 	subpl	r5, r9, #112, 30	; 0x1c0
     dd0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     dd4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     dd8:	414d4400 	cmpmi	sp, r0, lsl #8
     ddc:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     de0:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
     de4:	495f356c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     de8:	61485152 	cmpvs	r8, r2, asr r1
     dec:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     df0:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
     df4:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     df8:	6e6e6168 	powvsez	f6, f6, #0.0
     dfc:	5f326c65 	svcpl	0x00326c65
     e00:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     e04:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e08:	41007265 	tstmi	r0, r5, ror #4
     e0c:	5f314344 	svcpl	0x00314344
     e10:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     e14:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     e18:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     e1c:	49445300 	stmdbmi	r4, {r8, r9, ip, lr}^
     e20:	52495f4f 	subpl	r5, r9, #316	; 0x13c
     e24:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     e28:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     e2c:	41535500 	cmpmi	r3, r0, lsl #10
     e30:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
     e34:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     e38:	61446576 	hvcvs	18006	; 0x4656
     e3c:	45006174 	strmi	r6, [r0, #-372]	; 0x174
     e40:	33495458 	movtcc	r5, #37976	; 0x9458
     e44:	5152495f 	cmppl	r2, pc, asr r9
     e48:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     e4c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     e50:	33495053 	movtcc	r5, #36947	; 0x9053
     e54:	5152495f 	cmppl	r2, pc, asr r9
     e58:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     e5c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     e60:	5f4d4954 	svcpl	0x004d4954
     e64:	61656c43 	cmnvs	r5, r3, asr #24
     e68:	50544972 	subspl	r4, r4, r2, ror r9
     e6c:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     e70:	6942676e 	stmdbvs	r2, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     e74:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
     e78:	495f374d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     e7c:	61485152 	cmpvs	r8, r2, asr r1
     e80:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     e84:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
     e88:	495f334d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     e8c:	61485152 	cmpvs	r8, r2, asr r1
     e90:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     e94:	53550072 	cmppl	r5, #114	; 0x72
     e98:	50485f42 	subpl	r5, r8, r2, asr #30
     e9c:	4e41435f 	mcrmi	3, 2, r4, cr1, cr15, {2}
     ea0:	5f58545f 	svcpl	0x0058545f
     ea4:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     ea8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     eac:	55007265 	strpl	r7, [r0, #-613]	; 0x265
     eb0:	65676173 	strbvs	r6, [r7, #-371]!	; 0x173
     eb4:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     eb8:	63784574 	cmnvs	r8, #116, 10	; 0x1d000000
     ebc:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
     ec0:	55006e6f 	strpl	r6, [r0, #-3695]	; 0xe6f
     ec4:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
     ec8:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     ecc:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     ed0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     ed4:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     ed8:	4543535f 	strbmi	r5, [r3, #-863]	; 0x35f
     edc:	5152495f 	cmppl	r2, pc, asr r9
     ee0:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     ee4:	0072656c 	rsbseq	r6, r2, ip, ror #10
     ee8:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     eec:	4752545f 			; <UNDEFINED> instruction: 0x4752545f
     ef0:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; d7c <__Stack_Size+0x97c>
     ef4:	5152495f 	cmppl	r2, pc, asr r9
     ef8:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     efc:	0072656c 	rsbseq	r6, r2, ip, ror #10
     f00:	364d4954 			; <UNDEFINED> instruction: 0x364d4954
     f04:	5152495f 	cmppl	r2, pc, asr r9
     f08:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     f0c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     f10:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0x953
     f14:	486b6369 	stmdami	fp!, {r0, r3, r5, r6, r8, r9, sp, lr}^
     f18:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     f1c:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     f20:	46647261 	strbtmi	r7, [r4], -r1, ror #4
     f24:	746c7561 	strbtvc	r7, [ip], #-1377	; 0x561
     f28:	65637845 	strbvs	r7, [r3, #-2117]!	; 0x845
     f2c:	6f697470 	svcvs	0x00697470
     f30:	4441006e 	strbmi	r0, [r1], #-110	; 0x6e
     f34:	495f3343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     f38:	61485152 	cmpvs	r8, r2, asr r1
     f3c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     f40:	57570072 			; <UNDEFINED> instruction: 0x57570072
     f44:	495f4744 	ldmdbmi	pc, {r2, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     f48:	61485152 	cmpvs	r8, r2, asr r1
     f4c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     f50:	4d4e0072 	stclmi	0, cr0, [lr, #-456]	; 0xfffffe38
     f54:	63784549 	cmnvs	r8, #306184192	; 0x12400000
     f58:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
     f5c:	44006e6f 	strmi	r6, [r0], #-3695	; 0xe6f
     f60:	5f32414d 	svcpl	0x0032414d
     f64:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     f68:	316c656e 	cmncc	ip, lr, ror #10
     f6c:	5152495f 	cmppl	r2, pc, asr r9
     f70:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     f74:	0072656c 	rsbseq	r6, r2, ip, ror #10
     f78:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
     f7c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0x561
     f80:	65637845 	strbvs	r7, [r3, #-2117]!	; 0x845
     f84:	6f697470 	svcvs	0x00697470
     f88:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     f8c:	555f384d 	ldrbpl	r3, [pc, #-2125]	; 747 <__Stack_Size+0x347>
     f90:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     f94:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     f98:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     f9c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     fa0:	43435f31 	movtmi	r5, #16177	; 0x3f31
     fa4:	5152495f 	cmppl	r2, pc, asr r9
     fa8:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     fac:	0072656c 	rsbseq	r6, r2, ip, ror #10
     fb0:	31414d44 	cmpcc	r1, r4, asr #26
     fb4:	6168435f 	cmnvs	r8, pc, asr r3
     fb8:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     fbc:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     fc0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     fc4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     fc8:	4d534600 	ldclmi	6, cr4, [r3, #-0]
     fcc:	52495f43 	subpl	r5, r9, #268	; 0x10c
     fd0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     fd4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     fd8:	52415500 	subpl	r5, r1, #0, 10
     fdc:	495f3554 	ldmdbmi	pc, {r2, r4, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     fe0:	61485152 	cmpvs	r8, r2, asr r1
     fe4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     fe8:	41540072 	cmpmi	r4, r2, ror r0
     fec:	5245504d 	subpl	r5, r5, #77	; 0x4d
     ff0:	5152495f 	cmppl	r2, pc, asr r9
     ff4:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     ff8:	0072656c 	rsbseq	r6, r2, ip, ror #10
     ffc:	314d4954 	cmpcc	sp, r4, asr r9
    1000:	4752545f 			; <UNDEFINED> instruction: 0x4752545f
    1004:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; e90 <__Stack_Size+0xa90>
    1008:	5152495f 	cmppl	r2, pc, asr r9
    100c:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    1010:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1014:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1018:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
    101c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1020:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1024:	41535500 	cmpmi	r3, r0, lsl #10
    1028:	475f5452 			; <UNDEFINED> instruction: 0x475f5452
    102c:	54497465 	strbpl	r7, [r9], #-1125	; 0x465
    1030:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    1034:	5f007375 	svcpl	0x00007375
    1038:	4253555f 	subsmi	r5, r3, #398458880	; 0x17c00000
    103c:	5f434443 	svcpl	0x00434443
    1040:	00525349 	subseq	r5, r2, r9, asr #6
    1044:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1048:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    104c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1050:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1054:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
    1058:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    105c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1060:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1064:	42535500 	subsmi	r5, r3, #0, 10
    1068:	5f504c5f 	svcpl	0x00504c5f
    106c:	5f4e4143 	svcpl	0x004e4143
    1070:	5f305852 	svcpl	0x00305852
    1074:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1078:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    107c:	44007265 	strmi	r7, [r0], #-613	; 0x265
    1080:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
    1084:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1088:	00726f74 	rsbseq	r6, r2, r4, ror pc
    108c:	5f435452 	svcpl	0x00435452
    1090:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1094:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1098:	44007265 	strmi	r7, [r0], #-613	; 0x265
    109c:	5f31414d 	svcpl	0x0031414d
    10a0:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
    10a4:	366c656e 	strbtcc	r6, [ip], -lr, ror #10
    10a8:	5152495f 	cmppl	r2, pc, asr r9
    10ac:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    10b0:	0072656c 	rsbseq	r6, r2, ip, ror #10
    10b4:	344d4954 	strbcc	r4, [sp], #-2388	; 0x954
    10b8:	5152495f 	cmppl	r2, pc, asr r9
    10bc:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    10c0:	0072656c 	rsbseq	r6, r2, ip, ror #10
    10c4:	32433249 	subcc	r3, r3, #-1879048188	; 0x90000004
    10c8:	5f52455f 	svcpl	0x0052455f
    10cc:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    10d0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    10d4:	55007265 	strpl	r7, [r0, #-613]	; 0x265
    10d8:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    10dc:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    10e0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    10e4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    10e8:	414c4600 	cmpmi	ip, r0, lsl #12
    10ec:	495f4853 	ldmdbmi	pc, {r0, r1, r4, r6, fp, lr}^	; <UNPREDICTABLE>
    10f0:	61485152 	cmpvs	r8, r2, asr r1
    10f4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    10f8:	32490072 	subcc	r0, r9, #114	; 0x72
    10fc:	455f3143 	ldrbmi	r3, [pc, #-323]	; fc1 <__Stack_Size+0xbc1>
    1100:	52495f52 	subpl	r5, r9, #328	; 0x148
    1104:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1108:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    110c:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
    1110:	3158525f 	cmpcc	r8, pc, asr r2
    1114:	5152495f 	cmppl	r2, pc, asr r9
    1118:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    111c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1120:	48435653 	stmdami	r3, {r0, r1, r4, r6, r9, sl, ip, lr}^
    1124:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1128:	54007265 	strpl	r7, [r0], #-613	; 0x265
    112c:	5f384d49 	svcpl	0x00384d49
    1130:	5f4b5242 	svcpl	0x004b5242
    1134:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1138:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    113c:	44007265 	strmi	r7, [r0], #-613	; 0x265
    1140:	5f32414d 	svcpl	0x0032414d
    1144:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
    1148:	326c656e 	rsbcc	r6, ip, #461373440	; 0x1b800000
    114c:	5152495f 	cmppl	r2, pc, asr r9
    1150:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    1154:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1158:	31414d44 	cmpcc	r1, r4, asr #26
    115c:	6168435f 	cmnvs	r8, pc, asr r3
    1160:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
    1164:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
    1168:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    116c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1170:	43435200 	movtmi	r5, #12800	; 0x3200
    1174:	5152495f 	cmppl	r2, pc, asr r9
    1178:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    117c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1180:	31414d44 	cmpcc	r1, r4, asr #26
    1184:	6168435f 	cmnvs	r8, pc, asr r3
    1188:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
    118c:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    1190:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1194:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1198:	54584500 	ldrbpl	r4, [r8], #-1280	; 0x500
    119c:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    11a0:	61485152 	cmpvs	r8, r2, asr r1
    11a4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    11a8:	50530072 	subspl	r0, r3, r2, ror r0
    11ac:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    11b0:	61485152 	cmpvs	r8, r2, asr r1
    11b4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    11b8:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    11bc:	555f314d 	ldrbpl	r3, [pc, #-333]	; 1077 <__Stack_Size+0xc77>
    11c0:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
    11c4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    11c8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    11cc:	414d4400 	cmpmi	sp, r0, lsl #8
    11d0:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
    11d4:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
    11d8:	495f376c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
    11dc:	61485152 	cmpvs	r8, r2, asr r1
    11e0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    11e4:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    11e8:	495f354d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
    11ec:	61485152 	cmpvs	r8, r2, asr r1
    11f0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    11f4:	654d0072 	strbvs	r0, [sp, #-114]	; 0x72
    11f8:	6e614d6d 	cdpvs	13, 6, cr4, cr1, cr13, {3}
    11fc:	45656761 	strbmi	r6, [r5, #-1889]!	; 0x761
    1200:	70656378 	rsbvc	r6, r5, r8, ror r3
    1204:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1208:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    120c:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
    1210:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1214:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1218:	44565000 	ldrbmi	r5, [r6], #-0
    121c:	5152495f 	cmppl	r2, pc, asr r9
    1220:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    1224:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1228:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    122c:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    1230:	61485152 	cmpvs	r8, r2, asr r1
    1234:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    1238:	73750072 	cmnvc	r5, #114	; 0x72
    123c:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xf62
    1240:	632e6373 	teqvs	lr, #-872415231	; 0xcc000001
    1244:	72695600 	rsbvc	r5, r9, #0, 12
    1248:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    124c:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 10d8 <__Stack_Size+0xcd8>
    1250:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    1254:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xf74
    1258:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    125c:	646e6556 	strbtvs	r6, [lr], #-1366	; 0x556
    1260:	5600726f 	strpl	r7, [r0], -pc, ror #4
    1264:	75747269 	ldrbvc	r7, [r4, #-617]!	; 0x269
    1268:	435f6c61 	cmpmi	pc, #24832	; 0x6100
    126c:	505f6d6f 	subspl	r6, pc, pc, ror #26
    1270:	5f74726f 	svcpl	0x0074726f
    1274:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    1278:	65446563 	strbvs	r6, [r4, #-1379]	; 0x563
    127c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1280:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
    1284:	72695600 	rsbvc	r5, r9, #0, 12
    1288:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    128c:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 1118 <__Stack_Size+0xd18>
    1290:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    1294:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xf74
    1298:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    129c:	676e614c 	strbvs	r6, [lr, -ip, asr #2]!
    12a0:	56004449 	strpl	r4, [r0], -r9, asr #8
    12a4:	75747269 	ldrbvc	r7, [r4, #-617]!	; 0x269
    12a8:	435f6c61 	cmpmi	pc, #24832	; 0x6100
    12ac:	505f6d6f 	subspl	r6, pc, pc, ror #26
    12b0:	5f74726f 	svcpl	0x0074726f
    12b4:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
    12b8:	7250676e 	subsvc	r6, r0, #28835840	; 0x1b80000
    12bc:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
    12c0:	69560074 	ldmdbvs	r6, {r2, r4, r5, r6}^
    12c4:	61757472 	cmnvs	r5, r2, ror r4
    12c8:	6f435f6c 	svcvs	0x00435f6c
    12cc:	6f505f6d 	svcvs	0x00505f6d
    12d0:	435f7472 	cmpmi	pc, #1912602624	; 0x72000000
    12d4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    12d8:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
    12dc:	70697263 	rsbvc	r7, r9, r3, ror #4
    12e0:	00726f74 	rsbseq	r6, r2, r4, ror pc
    12e4:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    12e8:	5f6c6175 	svcpl	0x006c6175
    12ec:	5f6d6f43 	svcpl	0x006d6f43
    12f0:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    12f4:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    12f8:	53676e69 	cmnpl	r7, #1680	; 0x690
    12fc:	61697265 	cmnvs	r9, r5, ror #4
    1300:	5045006c 	subpl	r0, r5, ip, rrx
    1304:	554f5f33 	strbpl	r5, [pc, #-3891]	; 3d9 <_Minimum_Stack_Size+0x2d9>
    1308:	61435f54 	cmpvs	r3, r4, asr pc
    130c:	61626c6c 	cmnvs	r2, ip, ror #24
    1310:	75006b63 	strvc	r6, [r0, #-2915]	; 0xb63
    1314:	655f6273 	ldrbvs	r6, [pc, #-627]	; 10a9 <__Stack_Size+0xca9>
    1318:	2e70646e 	cdpcs	4, 7, cr6, cr0, cr14, {3}
    131c:	466c0063 	strbtmi	r0, [ip], -r3, rrx
    1320:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
    1324:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1328:	4c460074 	mcrrmi	0, 7, r0, r6, cr4
    132c:	5f485341 	svcpl	0x00485341
    1330:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
    1334:	576d6172 			; <UNDEFINED> instruction: 0x576d6172
    1338:	0064726f 	rsbeq	r7, r4, pc, ror #4
    133c:	74697257 	strbtvc	r7, [r9], #-599	; 0x257
    1340:	616c4665 	cmnvs	ip, r5, ror #12
    1344:	34366873 	ldrtcc	r6, [r6], #-2163	; 0x873
    1348:	6e694600 	cdpvs	6, 6, cr4, cr9, cr0, {0}
    134c:	54687369 	strbtpl	r7, [r8], #-873	; 0x369
    1350:	6e65536f 	cdpvs	3, 6, cr5, cr5, cr15, {3}
    1354:	53550064 	cmppl	r5, #100	; 0x64
    1358:	49535f42 	ldmdbmi	r3, {r1, r6, r8, r9, sl, fp, ip, lr}^
    135c:	65525f4c 	ldrbvs	r5, [r2, #-3916]	; 0xf4c
    1360:	45006461 	strmi	r6, [r0, #-1121]	; 0x461
    1364:	495f3150 	ldmdbmi	pc, {r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    1368:	61435f4e 	cmpvs	r3, lr, asr #30
    136c:	61626c6c 	cmnvs	r2, ip, ror #24
    1370:	53006b63 	movwpl	r6, #2915	; 0xb63
    1374:	435f464f 	cmpmi	pc, #82837504	; 0x4f00000
    1378:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    137c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1380:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
    1384:	756f4365 	strbvc	r4, [pc, #-869]!	; 1027 <__Stack_Size+0xc27>
    1388:	5300746e 	movwpl	r7, #1134	; 0x46e
    138c:	50457465 	subpl	r7, r5, r5, ror #8
    1390:	61567852 	cmpvs	r6, r2, asr r8
    1394:	0064696c 	rsbeq	r6, r4, ip, ror #18
    1398:	6568546c 	strbvs	r5, [r8, #-1132]!	; 0x46c
    139c:	74736552 	ldrbtvc	r6, [r3], #-1362	; 0x552
    13a0:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    13a4:	445f0074 	ldrbmi	r0, [pc], #-116	; 13ac <__Stack_Size+0xfac>
    13a8:	43495645 	movtmi	r5, #38469	; 0x9645
    13ac:	52505f45 	subspl	r5, r0, #276	; 0x114
    13b0:	5200504f 	andpl	r5, r0, #79	; 0x4f
    13b4:	5f504578 	svcpl	0x00504578
    13b8:	66667562 	strbtvs	r7, [r6], -r2, ror #10
    13bc:	70007265 	andvc	r7, r0, r5, ror #4
    13c0:	6e497045 	cdpvs	0, 4, cr7, cr9, cr5, {2}
    13c4:	554f5f74 	strbpl	r5, [pc, #-3956]	; 458 <__Stack_Size+0x58>
    13c8:	6c430054 	mcrrvs	0, 5, r0, r3, cr4
    13cc:	5f737361 	svcpl	0x00737361
    13d0:	61446f4e 	cmpvs	r4, lr, asr #30
    13d4:	535f6174 	cmppl	pc, #116, 2
    13d8:	70757465 	rsbsvc	r7, r5, r5, ror #8
    13dc:	76654400 	strbtvc	r4, [r5], -r0, lsl #8
    13e0:	5f656369 	svcpl	0x00656369
    13e4:	706f7250 	rsbvc	r7, pc, r0, asr r2	; <UNPREDICTABLE>
    13e8:	79747265 	ldmdbvc	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    13ec:	73497700 	movtvc	r7, #38656	; 0x9700
    13f0:	5f007274 	svcpl	0x00007274
    13f4:	55534552 	ldrbpl	r4, [r3, #-1362]	; 0x552
    13f8:	6200544c 	andvs	r5, r0, #76, 8	; 0x4c000000
    13fc:	50746e49 	rsbspl	r6, r4, r9, asr #28
    1400:	536b6361 	cmnpl	fp, #-2080374783	; 0x84000001
    1404:	5500464f 	strpl	r4, [r0, #-1615]	; 0x64f
    1408:	535f4253 	cmppl	pc, #805306373	; 0x30000005
    140c:	45434355 	strbmi	r4, [r3, #-853]	; 0x355
    1410:	50005353 	andpl	r5, r0, r3, asr r3
    1414:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xf72
    1418:	535f7373 	cmppl	pc, #-872415231	; 0xcc000001
    141c:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
    1420:	554f5f73 	strbpl	r5, [pc, #-3955]	; 4b5 <__Stack_Size+0xb5>
    1424:	45700054 	ldrbmi	r0, [r0, #-84]!	; 0x54
    1428:	746e4970 	strbtvc	r4, [lr], #-2416	; 0x970
    142c:	004e495f 	subeq	r4, lr, pc, asr r9
    1430:	5f425355 	svcpl	0x00425355
    1434:	55534e55 	ldrbpl	r4, [r3, #-3669]	; 0xe55
    1438:	524f5050 	subpl	r5, pc, #80	; 0x50
    143c:	73750054 	cmnvc	r5, #84	; 0x54
    1440:	73695f62 	cmnvc	r9, #392	; 0x188
    1444:	632e7274 	teqvs	lr, #116, 4	; 0x40000007
    1448:	616c4300 	cmnvs	ip, r0, lsl #6
    144c:	445f7373 	ldrbmi	r7, [pc], #-883	; 1454 <__Stack_Size+0x1054>
    1450:	5f617461 	svcpl	0x00617461
    1454:	75746553 	ldrbvc	r6, [r4, #-1363]!	; 0x553
    1458:	6c430070 	mcrrvs	0, 7, r0, r3, cr0
    145c:	5f737361 	svcpl	0x00737361
    1460:	5f746547 	svcpl	0x00746547
    1464:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xe49
    1468:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    146c:	65535f65 	ldrbvs	r5, [r3, #-3941]	; 0xf65
    1470:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
    1474:	72500067 	subsvc	r0, r0, #103	; 0x67
    1478:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    147c:	74535f73 	ldrbvc	r5, [r3], #-3955	; 0xf73
    1480:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1484:	004e495f 	subeq	r4, lr, pc, asr r9
    1488:	5f525443 	svcpl	0x00525443
    148c:	5500504c 	strpl	r5, [r0, #-76]	; 0x4c
    1490:	4e5f4253 	mrcmi	2, 2, r4, cr15, cr3, {2}
    1494:	525f544f 	subspl	r5, pc, #1325400064	; 0x4f000000
    1498:	59444145 	stmdbpl	r4, {r0, r2, r6, r8, lr}^
    149c:	42535500 	subsmi	r5, r3, #0, 10
    14a0:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
    14a4:	5500524f 	strpl	r5, [r0, #-591]	; 0x24f
    14a8:	52624253 	rsbpl	r4, r2, #805306373	; 0x30000005
    14ac:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0x165
    14b0:	63007473 	movwvs	r7, #1139	; 0x473
    14b4:	74736d6f 	ldrbtvc	r6, [r3], #-3439	; 0xd6f
    14b8:	74657461 	strbtvc	r7, [r5], #-1121	; 0x461
    14bc:	00706d65 	rsbseq	r6, r0, r5, ror #26
    14c0:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    14c4:	53007461 	movwpl	r7, #1121	; 0x461
    14c8:	50457465 	subpl	r7, r5, r5, ror #8
    14cc:	74537854 	ldrbvc	r7, [r3], #-2132	; 0x854
    14d0:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    14d4:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    14d8:	79545045 	ldmdbvc	r4, {r0, r2, r6, ip, lr}^
    14dc:	4f006570 	svcmi	0x00006570
    14e0:	6544656e 	strbvs	r6, [r4, #-1390]	; 0x56e
    14e4:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    14e8:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
    14ec:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    14f0:	78525045 	ldmdavc	r2, {r0, r2, r6, ip, lr}^
    14f4:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    14f8:	53555f00 	cmppl	r5, #0, 30
    14fc:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
    1500:	444e4154 	strbmi	r4, [lr], #-340	; 0x154
    1504:	5f445241 	svcpl	0x00445241
    1508:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0x552
    150c:	53545345 	cmppl	r4, #335544321	; 0x14000001
    1510:	65735500 	ldrbvs	r5, [r3, #-1280]!	; 0x500
    1514:	65475f72 	strbvs	r5, [r7, #-3954]	; 0xf72
    1518:	61745374 	cmnvs	r4, r4, ror r3
    151c:	00737574 	rsbseq	r7, r3, r4, ror r5
    1520:	69726170 	ldmdbvs	r2!, {r4, r5, r6, r8, sp, lr}^
    1524:	79747974 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
    1528:	55006570 	strpl	r6, [r0, #-1392]	; 0x570
    152c:	535f4253 	cmppl	pc, #805306373	; 0x30000005
    1530:	495f4c49 	ldmdbmi	pc, {r0, r3, r6, sl, fp, lr}^	; <UNPREDICTABLE>
    1534:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1538:	5645445f 			; <UNDEFINED> instruction: 0x5645445f
    153c:	5f454349 	svcpl	0x00454349
    1540:	4f464e49 	svcmi	0x00464e49
    1544:	62737500 	rsbsvs	r7, r3, #0, 10
    1548:	6f72705f 	svcvs	0x0072705f
    154c:	00632e70 	rsbeq	r2, r3, r0, ror lr
    1550:	5f746547 	svcpl	0x00746547
    1554:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
    1558:	754e6c61 	strbvc	r6, [lr, #-3169]	; 0xc61
    155c:	5355006d 	cmppl	r5, #109	; 0x6d
    1560:	6e497742 	cdpvs	7, 4, cr7, cr9, cr2, {2}
    1564:	73786564 	cmnvc	r8, #100, 10	; 0x19000000
    1568:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
    156c:	646f6365 	strbtvs	r6, [pc], #-869	; 1574 <__Stack_Size+0x1174>
    1570:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1574:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    1578:	5f6c6175 	svcpl	0x006c6175
    157c:	5f6d6f43 	svcpl	0x006d6f43
    1580:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    1584:	446f4e5f 	strbtmi	r4, [pc], #-3679	; 158c <__Stack_Size+0x118c>
    1588:	5f617461 	svcpl	0x00617461
    158c:	75746553 	ldrbvc	r6, [r4, #-1363]!	; 0x553
    1590:	4e450070 	mcrmi	0, 2, r0, cr5, cr0, {3}
    1594:	494f5044 	stmdbmi	pc, {r2, r6, ip, lr}^	; <UNPREDICTABLE>
    1598:	525f544e 	subspl	r5, pc, #1308622848	; 0x4e000000
    159c:	50494345 	subpl	r4, r9, r5, asr #6
    15a0:	544e4549 	strbpl	r4, [lr], #-1353	; 0x549
    15a4:	65735500 	ldrbvs	r5, [r3, #-1280]!	; 0x500
    15a8:	65535f72 	ldrbvs	r5, [r3, #-3954]	; 0xf72
    15ac:	76654474 			; <UNDEFINED> instruction: 0x76654474
    15b0:	46656369 	strbtmi	r6, [r5], -r9, ror #6
    15b4:	75746165 	ldrbvc	r6, [r4, #-357]!	; 0x165
    15b8:	55006572 	strpl	r6, [r0, #-1394]	; 0x572
    15bc:	775f6273 			; <UNDEFINED> instruction: 0x775f6273
    15c0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    15c4:	70006874 	andvc	r6, r0, r4, ror r8
    15c8:	6f666e49 	svcvs	0x00666e49
    15cc:	74616d72 	strbtvc	r6, [r1], #-3442	; 0xd72
    15d0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    15d4:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
    15d8:	445f676e 	ldrbmi	r6, [pc], #-1902	; 15e0 <__Stack_Size+0x11e0>
    15dc:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    15e0:	6f747069 	svcvs	0x00747069
    15e4:	69620072 	stmdbvs	r2!, {r1, r4, r5, r6}^
    15e8:	74617274 	strbtvc	r7, [r1], #-628	; 0x274
    15ec:	65440065 	strbvs	r0, [r4, #-101]	; 0x65
    15f0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0x976
    15f4:	6261545f 	rsbvs	r5, r1, #1593835520	; 0x5f000000
    15f8:	5300656c 	movwpl	r6, #1388	; 0x56c
    15fc:	50457465 	subpl	r7, r5, r5, ror #8
    1600:	64417854 	strbvs	r7, [r1], #-2132	; 0x854
    1604:	5f007264 	svcpl	0x00007264
    1608:	49434552 	stmdbmi	r3, {r1, r4, r6, r8, sl, lr}^
    160c:	4e454950 	mcrmi	9, 2, r4, cr5, cr0, {2}
    1610:	59545f54 	ldmdbpl	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    1614:	53004550 	movwpl	r4, #1360	; 0x550
    1618:	646e6174 	strbtvs	r6, [lr], #-372	; 0x174
    161c:	5f647261 	svcpl	0x00647261
    1620:	44746547 	ldrbtmi	r6, [r4], #-1351	; 0x547
    1624:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    1628:	6f747069 	svcvs	0x00747069
    162c:	74614472 	strbtvc	r4, [r1], #-1138	; 0x472
    1630:	69560061 	ldmdbvs	r6, {r0, r5, r6}^
    1634:	61757472 	cmnvs	r5, r2, ror r4
    1638:	6f435f6c 	svcvs	0x00435f6c
    163c:	6f505f6d 	svcvs	0x00505f6d
    1640:	475f7472 			; <UNDEFINED> instruction: 0x475f7472
    1644:	694c7465 	stmdbvs	ip, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1648:	6f43656e 	svcvs	0x0043656e
    164c:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    1650:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    1654:	42415442 	submi	r5, r1, #1107296256	; 0x42000000
    1658:	5500454c 	strpl	r4, [r0, #-1356]	; 0x54c
    165c:	5f726573 	svcpl	0x00726573
    1660:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    1664:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    1668:	65636166 	strbvs	r6, [r3, #-358]!	; 0x166
    166c:	65735500 	ldrbvs	r5, [r3, #-1280]!	; 0x500
    1670:	65535f72 	ldrbvs	r5, [r3, #-3954]	; 0xf72
    1674:	76654474 			; <UNDEFINED> instruction: 0x76654474
    1678:	41656369 	cmnmi	r5, r9, ror #6
    167c:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0x464
    1680:	55007373 	strpl	r7, [r0, #-883]	; 0x373
    1684:	56774253 			; <UNDEFINED> instruction: 0x56774253
    1688:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
    168c:	69560073 	ldmdbvs	r6, {r0, r1, r4, r5, r6}^
    1690:	61757472 	cmnvs	r5, r2, ror r4
    1694:	6f435f6c 	svcvs	0x00435f6c
    1698:	6f505f6d 	svcvs	0x00505f6d
    169c:	475f7472 			; <UNDEFINED> instruction: 0x475f7472
    16a0:	65447465 	strbvs	r7, [r4, #-1125]	; 0x465
    16a4:	65636976 	strbvs	r6, [r3, #-2422]!	; 0x976
    16a8:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
    16ac:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0x972
    16b0:	5400726f 	strpl	r7, [r0], #-623	; 0x26f
    16b4:	6c61746f 	cfstrdvs	mvd7, [r1], #-444	; 0xfffffe44
    16b8:	646e455f 	strbtvs	r4, [lr], #-1375	; 0x55f
    16bc:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
    16c0:	69560074 	ldmdbvs	r6, {r2, r4, r5, r6}^
    16c4:	61757472 	cmnvs	r5, r2, ror r4
    16c8:	6f435f6c 	svcvs	0x00435f6c
    16cc:	6f505f6d 	svcvs	0x00505f6d
    16d0:	525f7472 	subspl	r7, pc, #1912602624	; 0x72000000
    16d4:	74657365 	strbtvc	r7, [r5], #-869	; 0x365
    16d8:	73654400 	cmnvc	r5, #0, 8
    16dc:	70697263 	rsbvc	r7, r9, r3, ror #4
    16e0:	5f726f74 	svcpl	0x00726f74
    16e4:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0x953
    16e8:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    16ec:	78525045 	ldmdavc	r2, {r0, r2, r6, ip, lr}^
    16f0:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    16f4:	55007375 	strpl	r7, [r0, #-885]	; 0x375
    16f8:	5f726573 	svcpl	0x00726573
    16fc:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
    1700:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1704:	61727567 	cmnvs	r2, r7, ror #10
    1708:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    170c:	65735500 	ldrbvs	r5, [r3, #-1280]!	; 0x500
    1710:	65535f72 	ldrbvs	r5, [r3, #-3954]	; 0xf72
    1714:	746e4974 	strbtvc	r4, [lr], #-2420	; 0x974
    1718:	61667265 	cmnvs	r6, r5, ror #4
    171c:	70006563 	andvc	r6, r0, r3, ror #10
    1720:	6f666e49 	svcvs	0x00666e49
    1724:	72695600 	rsbvc	r5, r9, #0, 12
    1728:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    172c:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 15b8 <__Stack_Size+0x11b8>
    1730:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    1734:	65535f74 	ldrbvs	r5, [r3, #-3956]	; 0xf74
    1738:	76654474 			; <UNDEFINED> instruction: 0x76654474
    173c:	41656369 	cmnmi	r5, r9, ror #6
    1740:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0x464
    1744:	44007373 	strmi	r7, [r0], #-883	; 0x373
    1748:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    174c:	65445f65 	strbvs	r5, [r4, #-3941]	; 0xf65
    1750:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1754:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
    1758:	71655200 	cmnvc	r5, r0, lsl #4
    175c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0x575
    1760:	55006f4e 	strpl	r6, [r0, #-3918]	; 0xf4e
    1764:	4c774253 	lfmmi	f4, 2, [r7], #-332	; 0xfffffeb4
    1768:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xe65
    176c:	43007368 	movwmi	r7, #872	; 0x368
    1770:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0x275
    1774:	435f746e 	cmpmi	pc, #1845493760	; 0x6e000000
    1778:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    177c:	61727567 	cmnvs	r2, r7, ror #10
    1780:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1784:	56454400 	strbpl	r4, [r5], -r0, lsl #8
    1788:	5f454349 	svcpl	0x00454349
    178c:	49434552 	stmdbmi	r3, {r1, r4, r6, r8, sl, lr}^
    1790:	4e454950 	mcrmi	9, 2, r4, cr5, cr0, {2}
    1794:	56770054 			; <UNDEFINED> instruction: 0x56770054
    1798:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
    179c:	69560030 	ldmdbvs	r6, {r4, r5}^
    17a0:	61757472 	cmnvs	r5, r2, ror r4
    17a4:	6f435f6c 	svcvs	0x00435f6c
    17a8:	6f505f6d 	svcvs	0x00505f6d
    17ac:	535f7472 	cmppl	pc, #1912602624	; 0x72000000
    17b0:	694c7465 	stmdbvs	ip, {r0, r2, r5, r6, sl, ip, sp, lr}^
    17b4:	6f43656e 	svcvs	0x0043656e
    17b8:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    17bc:	72754300 	rsbsvc	r4, r5, #0, 6
    17c0:	746e6572 	strbtvc	r6, [lr], #-1394	; 0x572
    17c4:	746e495f 	strbtvc	r4, [lr], #-2399	; 0x95f
    17c8:	61667265 	cmnvs	r6, r5, ror #4
    17cc:	50006563 	andpl	r6, r0, r3, ror #10
    17d0:	5f454e4f 	svcpl	0x00454e4f
    17d4:	43534544 	cmpmi	r3, #68, 10	; 0x11000000
    17d8:	54504952 	ldrbpl	r4, [r0], #-2386	; 0x952
    17dc:	5400524f 	strpl	r5, [r0], #-591	; 0x24f
    17e0:	6c61746f 	cfstrdvs	mvd7, [r1], #-444	; 0xfffffe44
    17e4:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    17e8:	75676966 	strbvc	r6, [r7, #-2406]!	; 0x966
    17ec:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    17f0:	50006e6f 	andpl	r6, r0, pc, ror #28
    17f4:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
    17f8:	55006e4f 	strpl	r6, [r0, #-3663]	; 0xe4f
    17fc:	5f726573 	svcpl	0x00726573
    1800:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
    1804:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1808:	61727567 	cmnvs	r2, r7, ror #10
    180c:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1810:	72695600 	rsbvc	r5, r9, #0, 12
    1814:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    1818:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 16a4 <__Stack_Size+0x12a4>
    181c:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    1820:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xf74
    1824:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1828:	006e495f 	rsbeq	r4, lr, pc, asr r9
    182c:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    1830:	5f746e65 	svcpl	0x00746e65
    1834:	65746c41 	ldrbvs	r6, [r4, #-3137]!	; 0xc41
    1838:	74616e72 	strbtvc	r6, [r1], #-3698	; 0xe72
    183c:	74655365 	strbtvc	r5, [r5], #-869	; 0x365
    1840:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    1844:	4e455f00 	cdpmi	15, 4, cr5, cr5, cr0, {0}
    1848:	494f5044 	stmdbmi	pc, {r2, r6, ip, lr}^	; <UNPREDICTABLE>
    184c:	495f544e 	ldmdbmi	pc, {r1, r2, r3, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    1850:	004f464e 	subeq	r4, pc, lr, asr #12
    1854:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    1858:	5f6c6175 	svcpl	0x006c6175
    185c:	5f6d6f43 	svcpl	0x006d6f43
    1860:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    1864:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    1868:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    186c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
    1870:	6f697461 	svcvs	0x00697461
    1874:	6f43006e 	svcvs	0x0043006e
    1878:	6f527970 	svcvs	0x00527970
    187c:	6e697475 	mcrvs	4, 3, r7, cr9, cr5, {3}
    1880:	61640065 	cmnvs	r4, r5, rrx
    1884:	79746174 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    1888:	5f006570 	svcpl	0x00006570
    188c:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
    1890:	43004543 	movwmi	r4, #1347	; 0x543
    1894:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    1898:	74536c6f 	ldrbvc	r6, [r3], #-3183	; 0xc6f
    189c:	00657461 	rsbeq	r7, r5, r1, ror #8
    18a0:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xe49
    18a4:	43414652 	movtmi	r4, #5714	; 0x1652
    18a8:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xf45
    18ac:	49504943 	ldmdbmi	r0, {r0, r1, r6, r8, fp, lr}^
    18b0:	00544e45 	subseq	r4, r4, r5, asr #28
    18b4:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
    18b8:	61746144 	cmnvs	r4, r4, asr #2
    18bc:	65735500 	ldrbvs	r5, [r3, #-1280]!	; 0x500
    18c0:	6c435f72 	mcrrvs	15, 7, r5, r3, cr2
    18c4:	46726165 	ldrbtmi	r6, [r2], -r5, ror #2
    18c8:	75746165 	ldrbvc	r6, [r4, #-357]!	; 0x165
    18cc:	56006572 			; <UNDEFINED> instruction: 0x56006572
    18d0:	75747269 	ldrbvc	r7, [r4, #-617]!	; 0x269
    18d4:	435f6c61 	cmpmi	pc, #24832	; 0x6100
    18d8:	505f6d6f 	subspl	r6, pc, pc, ror #26
    18dc:	5f74726f 	svcpl	0x0074726f
    18e0:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    18e4:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    18e8:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
    18ec:	70697263 	rsbvc	r7, r9, r3, ror #4
    18f0:	00726f74 	rsbseq	r6, r2, r4, ror pc
    18f4:	62425355 	subvs	r5, r2, #1409286145	; 0x54000001
    18f8:	7165526d 	cmnvc	r5, sp, ror #4
    18fc:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0x575
    1900:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    1904:	72695600 	rsbvc	r5, r9, #0, 12
    1908:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    190c:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 1798 <__Stack_Size+0x1398>
    1910:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    1914:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xf74
    1918:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    191c:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xf5f
    1920:	656c4300 	strbvs	r4, [ip, #-768]!	; 0x300
    1924:	535f7261 	cmppl	pc, #268435462	; 0x10000006
    1928:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
    192c:	754f5f73 	strbvc	r5, [pc, #-3955]	; 9c1 <__Stack_Size+0x5c1>
    1930:	69560074 	ldmdbvs	r6, {r2, r4, r5, r6}^
    1934:	61757472 	cmnvs	r5, r2, ror r4
    1938:	6f435f6c 	svcvs	0x00435f6c
    193c:	6f505f6d 	svcvs	0x00505f6d
    1940:	475f7472 			; <UNDEFINED> instruction: 0x475f7472
    1944:	495f7465 	ldmdbmi	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1948:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    194c:	65636166 	strbvs	r6, [r3, #-358]!	; 0x166
    1950:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    1954:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    1958:	76654400 	strbtvc	r4, [r5], -r0, lsl #8
    195c:	5f656369 	svcpl	0x00656369
    1960:	6f666e49 	svcvs	0x00666e49
    1964:	72744300 	rsbsvc	r4, r4, #0, 6
    1968:	6e495f6c 	cdpvs	15, 4, cr5, cr9, cr12, {3}
    196c:	43006f66 	movwmi	r6, #3942	; 0xf66
    1970:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1974:	65445f67 	strbvs	r5, [r4, #-3943]	; 0xf67
    1978:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    197c:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
    1980:	72754300 	rsbsvc	r4, r5, #0, 6
    1984:	746e6572 	strbtvc	r6, [lr], #-1394	; 0x572
    1988:	6165465f 	cmnvs	r5, pc, asr r6
    198c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
    1990:	62735500 	rsbsvs	r5, r3, #0, 10
    1994:	664f775f 			; <UNDEFINED> instruction: 0x664f775f
    1998:	74657366 	strbtvc	r7, [r5], #-870	; 0x366
    199c:	65735500 	ldrbvs	r5, [r3, #-1280]!	; 0x500
    19a0:	65535f72 	ldrbvs	r5, [r3, #-3954]	; 0xf72
    19a4:	646e4574 	strbtvs	r4, [lr], #-1396	; 0x574
    19a8:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
    19ac:	61654674 	smcvs	21604	; 0x5464
    19b0:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
    19b4:	72695600 	rsbvc	r5, r9, #0, 12
    19b8:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    19bc:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 1848 <__Stack_Size+0x1448>
    19c0:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    19c4:	61445f74 	hvcvs	17908	; 0x45f4
    19c8:	535f6174 	cmppl	pc, #116, 2
    19cc:	70757465 	rsbsvc	r7, r5, r5, ror #8
    19d0:	72695600 	rsbvc	r5, r9, #0, 12
    19d4:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    19d8:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 1864 <__Stack_Size+0x1464>
    19dc:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    19e0:	65475f74 	strbvs	r5, [r7, #-3956]	; 0xf74
    19e4:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    19e8:	44676966 	strbtmi	r6, [r7], #-2406	; 0x966
    19ec:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    19f0:	6f747069 	svcvs	0x00747069
    19f4:	544f0072 	strbpl	r0, [pc], #-114	; 19fc <__Stack_Size+0x15fc>
    19f8:	5f524548 	svcpl	0x00524548
    19fc:	49434552 	stmdbmi	r3, {r1, r4, r6, r8, sl, lr}^
    1a00:	4e454950 	mcrmi	9, 2, r4, cr5, cr0, {2}
    1a04:	31750054 	cmncc	r5, r4, asr r0
    1a08:	38755f36 	ldmdacc	r5!, {r1, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    1a0c:	72695600 	rsbvc	r5, r9, #0, 12
    1a10:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    1a14:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 18a0 <__Stack_Size+0x14a0>
    1a18:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    1a1c:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    1a20:	4c007469 	cfstrsmi	mvf7, [r0], {105}	; 0x69
    1a24:	5f454e49 	svcpl	0x00454e49
    1a28:	49444f43 	stmdbmi	r4, {r0, r1, r6, r8, r9, sl, fp, lr}^
    1a2c:	5300474e 	movwpl	r4, #1870	; 0x74e
    1a30:	50457465 	subpl	r7, r5, r5, ror #8
    1a34:	6f437852 	svcvs	0x00437852
    1a38:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1a3c:	65776f50 	ldrbvs	r6, [r7, #-3920]!	; 0xf50
    1a40:	66664f72 	uqsub16vs	r4, r6, r2
    1a44:	746e4900 	strbtvc	r4, [lr], #-2304	; 0x900
    1a48:	6e556f54 	mrcvs	15, 2, r6, cr5, cr4, {2}
    1a4c:	646f6369 	strbtvs	r6, [pc], #-873	; 1a54 <__Stack_Size+0x1654>
    1a50:	53550065 	cmppl	r5, #101	; 0x65
    1a54:	696e4942 	stmdbvs	lr!, {r1, r6, r8, fp, lr}^
    1a58:	00632e74 	rsbeq	r2, r3, r4, ror lr
    1a5c:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    1a60:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    1a64:	44007265 	strmi	r7, [r0], #-613	; 0x265
    1a68:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    1a6c:	65535f65 	ldrbvs	r5, [r3, #-3941]	; 0xf65
    1a70:	6c616972 	stclvs	9, cr6, [r1], #-456	; 0xfffffe38
    1a74:	61760031 	cmnvs	r6, r1, lsr r0
    1a78:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1a7c:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    1a80:	43785450 	cmnmi	r8, #80, 8	; 0x50000000
    1a84:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    1a88:	77654e00 	strbvc	r4, [r5, -r0, lsl #28]!
    1a8c:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    1a90:	49770065 	ldmdbmi	r7!, {r0, r2, r5, r6}^
    1a94:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    1a98:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0x572
    1a9c:	73614d5f 	cmnvc	r1, #6080	; 0x17c0
    1aa0:	6544006b 	strbvs	r0, [r4, #-107]	; 0x6b
    1aa4:	65636976 	strbvs	r6, [r3, #-2422]!	; 0x976
    1aa8:	7265535f 	rsbvc	r5, r5, #2080374785	; 0x7c000001
    1aac:	306c6169 	rsbcc	r6, ip, r9, ror #2
    1ab0:	76654400 	strbtvc	r4, [r5], -r0, lsl #8
    1ab4:	5f656369 	svcpl	0x00656369
    1ab8:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
    1abc:	00326c61 	eorseq	r6, r2, r1, ror #24
    1ac0:	5f425355 	svcpl	0x00425355
    1ac4:	6c626143 	stfvse	f6, [r2], #-268	; 0xfffffef4
    1ac8:	6f435f65 	svcvs	0x00435f65
    1acc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1ad0:	42535500 	subsmi	r5, r3, #0, 10
    1ad4:	5f78545f 	svcpl	0x0078545f
    1ad8:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    1adc:	73550065 	cmpvc	r5, #101	; 0x65
    1ae0:	70635662 	rsbvc	r5, r3, r2, ror #12
    1ae4:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
    1ae8:	00746365 	rsbseq	r6, r4, r5, ror #6
    1aec:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1af0:	4d506f54 	ldclmi	15, cr6, [r0, #-336]	; 0xfffffeb0
    1af4:	66754241 	ldrbtvs	r4, [r5], -r1, asr #4
    1af8:	43726566 	cmnmi	r2, #427819008	; 0x19800000
    1afc:	0079706f 	rsbseq	r7, r9, pc, rrx
    1b00:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    1b04:	56785450 			; <UNDEFINED> instruction: 0x56785450
    1b08:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xc61
    1b0c:	41535500 	cmpmi	r3, r0, lsl #10
    1b10:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    1b14:	656c5f78 	strbvs	r5, [ip, #-3960]!	; 0xf78
    1b18:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1b1c:	75627000 	strbvc	r7, [r2, #-0]!
    1b20:	4c460066 	mcrrmi	0, 6, r0, r6, cr6
    1b24:	5f485341 	svcpl	0x00485341
    1b28:	6f435449 	svcvs	0x00435449
    1b2c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1b30:	50525700 	subspl	r5, r2, r0, lsl #14
    1b34:	61445f32 	cmpvs	r4, r2, lsr pc
    1b38:	4f006174 	svcmi	0x00006174
    1b3c:	54535f42 	ldrbpl	r5, [r3], #-3906	; 0xf42
    1b40:	4600504f 	strmi	r5, [r0], -pc, asr #32
    1b44:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    1b48:	6172455f 	cmnvs	r2, pc, asr r5
    1b4c:	704f6573 	subvc	r6, pc, r3, ror r5	; <UNPREDICTABLE>
    1b50:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1b54:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0x942
    1b58:	65720073 	ldrbvs	r0, [r2, #-115]!	; 0x73
    1b5c:	756f6461 	strbvc	r6, [pc, #-1121]!	; 1703 <__Stack_Size+0x1303>
    1b60:	61747374 	cmnvs	r4, r4, ror r3
    1b64:	00737574 	rsbseq	r7, r3, r4, ror r5
    1b68:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1b6c:	614c5f48 	cmpvs	ip, r8, asr #30
    1b70:	636e6574 	cmnvs	lr, #116, 10	; 0x1d000000
    1b74:	4c460079 	mcrrmi	0, 7, r0, r6, cr9
    1b78:	5f485341 	svcpl	0x00485341
    1b7c:	50746547 	rsbspl	r6, r4, r7, asr #10
    1b80:	65666572 	strbvs	r6, [r6, #-1394]!	; 0x572
    1b84:	42686374 	rsbmi	r6, r8, #116, 6	; 0xd0000001
    1b88:	65666675 	strbvs	r6, [r6, #-1653]!	; 0x675
    1b8c:	61745372 	cmnvs	r4, r2, ror r3
    1b90:	00737574 	rsbseq	r7, r3, r4, ror r5
    1b94:	616c6564 	cmnvs	ip, r4, ror #10
    1b98:	696c0079 	stmdbvs	ip!, {r0, r3, r4, r5, r6}^
    1b9c:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    1ba0:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xf63
    1ba4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1ba8:	5f783031 	svcpl	0x00783031
    1bac:	73616c66 	cmnvc	r1, #26112	; 0x6600
    1bb0:	00632e68 	rsbeq	r2, r3, r8, ror #28
    1bb4:	52505257 	subspl	r5, r0, #1879048197	; 0x70000005
    1bb8:	414c4600 	cmpmi	ip, r0, lsl #12
    1bbc:	455f4853 	ldrbmi	r4, [pc, #-2131]	; 1371 <__Stack_Size+0xf71>
    1bc0:	65736172 	ldrbvs	r6, [r3, #-370]!	; 0x172
    1bc4:	506c6c41 	rsbpl	r6, ip, r1, asr #24
    1bc8:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    1bcc:	50525700 	subspl	r5, r2, r0, lsl #14
    1bd0:	52570030 	subspl	r0, r7, #48	; 0x30
    1bd4:	57003150 	smlsdpl	r0, r0, r1, r3
    1bd8:	00325052 	eorseq	r5, r2, r2, asr r0
    1bdc:	33505257 	cmpcc	r0, #1879048197	; 0x70000005
    1be0:	414c4600 	cmpmi	ip, r0, lsl #12
    1be4:	475f4853 			; <UNDEFINED> instruction: 0x475f4853
    1be8:	72577465 	subsvc	r7, r7, #1694498816	; 0x65000000
    1bec:	50657469 	rsbpl	r7, r5, r9, ror #8
    1bf0:	65746f72 	ldrbvs	r6, [r4, #-3954]!	; 0xf72
    1bf4:	6f697463 	svcvs	0x00697463
    1bf8:	74704f6e 	ldrbtvc	r4, [r0], #-3950	; 0xf6e
    1bfc:	426e6f69 	rsbmi	r6, lr, #420	; 0x1a4
    1c00:	00657479 	rsbeq	r7, r5, r9, ror r4
    1c04:	4b54504f 	blmi	1515d48 <__Stack_Size+0x1515948>
    1c08:	00525945 	subseq	r5, r2, r5, asr #18
    1c0c:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1c10:	73555f48 	cmpvc	r5, #72, 30	; 0x120
    1c14:	704f7265 	subvc	r7, pc, r5, ror #4
    1c18:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1c1c:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0x942
    1c20:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1c24:	4f006769 	svcmi	0x00006769
    1c28:	57495f42 	strbpl	r5, [r9, -r2, asr #30]
    1c2c:	46004744 	strmi	r4, [r0], -r4, asr #14
    1c30:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    1c34:	6165525f 	cmnvs	r5, pc, asr r2
    1c38:	74754f64 	ldrbtvc	r4, [r5], #-3940	; 0xf64
    1c3c:	746f7250 	strbtvc	r7, [pc], #-592	; 1c44 <__Stack_Size+0x1844>
    1c40:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1c44:	66006e6f 	strvs	r6, [r0], -pc, ror #28
    1c48:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
    1c4c:	74617473 	strbtvc	r7, [r1], #-1139	; 0x473
    1c50:	62007375 	andvs	r7, r0, #-738197503	; 0xd4000001
    1c54:	74737469 	ldrbtvc	r7, [r3], #-1129	; 0x469
    1c58:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1c5c:	67615000 	strbvs	r5, [r1, -r0]!
    1c60:	64415f65 	strbvs	r5, [r1], #-3941	; 0xf65
    1c64:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    1c68:	52570073 	subspl	r0, r7, #115	; 0x73
    1c6c:	445f3350 	ldrbmi	r3, [pc], #-848	; 1c74 <__Stack_Size+0x1874>
    1c70:	00617461 	rsbeq	r7, r1, r1, ror #8
    1c74:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1c78:	65475f48 	strbvs	r5, [r7, #-3912]	; 0xf48
    1c7c:	616c4674 	smcvs	50276	; 0xc464
    1c80:	61745367 	cmnvs	r4, r7, ror #6
    1c84:	00737574 	rsbseq	r7, r3, r4, ror r5
    1c88:	31505257 	cmpcc	r0, r7, asr r2
    1c8c:	7461445f 	strbtvc	r4, [r1], #-1119	; 0x45f
    1c90:	69540061 	ldmdbvs	r4, {r0, r5, r6}^
    1c94:	756f656d 	strbvc	r6, [pc, #-1389]!	; 172f <__Stack_Size+0x132f>
    1c98:	4c460074 	mcrrmi	0, 7, r0, r6, cr4
    1c9c:	5f485341 	svcpl	0x00485341
    1ca0:	52746547 	rsbspl	r6, r4, #297795584	; 0x11c00000
    1ca4:	4f646165 	svcmi	0x00646165
    1ca8:	72507475 	subsvc	r7, r0, #1962934272	; 0x75000000
    1cac:	6365746f 	cmnvs	r5, #1862270976	; 0x6f000000
    1cb0:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1cb4:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    1cb8:	4f007375 	svcmi	0x00007375
    1cbc:	54535f42 	ldrbpl	r5, [r3], #-3906	; 0xf42
    1cc0:	00594244 	subseq	r4, r9, r4, asr #4
    1cc4:	30505257 	subscc	r5, r0, r7, asr r2
    1cc8:	7461445f 	strbtvc	r4, [r1], #-1119	; 0x45f
    1ccc:	4c460061 	mcrrmi	0, 6, r0, r6, cr1
    1cd0:	5f485341 	svcpl	0x00485341
    1cd4:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    1cd8:	6c637943 	stclvs	9, cr7, [r3], #-268	; 0xfffffef4
    1cdc:	63634165 	cmnvs	r3, #1073741849	; 0x40000019
    1ce0:	00737365 	rsbseq	r7, r3, r5, ror #6
    1ce4:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1ce8:	65475f48 	strbvs	r5, [r7, #-3912]	; 0xf48
    1cec:	61745374 	cmnvs	r4, r4, ror r3
    1cf0:	00737574 	rsbseq	r7, r3, r4, ror r5
    1cf4:	545f424f 	ldrbpl	r4, [pc], #-591	; 1cfc <__Stack_Size+0x18fc>
    1cf8:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
    1cfc:	46006665 	strmi	r6, [r0], -r5, ror #12
    1d00:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    1d04:	6c61485f 	stclvs	8, cr4, [r1], #-380	; 0xfffffe84
    1d08:	63794366 	cmnvs	r9, #-1744830463	; 0x98000001
    1d0c:	6341656c 	movtvs	r6, #5484	; 0x156c
    1d10:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1d14:	00646d43 	rsbeq	r6, r4, r3, asr #26
    1d18:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1d1c:	72505f48 	subsvc	r5, r0, #72, 30	; 0x120
    1d20:	6172676f 	cmnvs	r2, pc, ror #14
    1d24:	74704f6d 	ldrbtvc	r4, [r0], #-3949	; 0xf6d
    1d28:	426e6f69 	rsbmi	r6, lr, #420	; 0x1a4
    1d2c:	44657479 	strbtmi	r7, [r5], #-1145	; 0x479
    1d30:	00617461 	rsbeq	r7, r1, r1, ror #8
    1d34:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1d38:	65475f48 	strbvs	r5, [r7, #-3912]	; 0xf48
    1d3c:	65735574 	ldrbvs	r5, [r3, #-1396]!	; 0x574
    1d40:	74704f72 	ldrbtvc	r4, [r0], #-3954	; 0xf72
    1d44:	426e6f69 	rsbmi	r6, lr, #420	; 0x1a4
    1d48:	00657479 	rsbeq	r7, r5, r9, ror r4
    1d4c:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1d50:	72505f48 	subsvc	r5, r0, #72, 30	; 0x120
    1d54:	6172676f 	cmnvs	r2, pc, ror #14
    1d58:	6c61486d 	stclvs	8, cr4, [r1], #-436	; 0xfffffe4c
    1d5c:	726f5766 	rsbvc	r5, pc, #26738688	; 0x1980000
    1d60:	4c460064 	mcrrmi	0, 6, r0, r6, cr4
    1d64:	5f485341 	svcpl	0x00485341
    1d68:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
    1d6c:	414c4600 	cmpmi	ip, r0, lsl #12
    1d70:	455f4853 	ldrbmi	r4, [pc, #-2131]	; 1525 <__Stack_Size+0x1125>
    1d74:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    1d78:	69725765 	ldmdbvs	r2!, {r0, r2, r5, r6, r8, r9, sl, ip, lr}^
    1d7c:	72506574 	subsvc	r6, r0, #116, 10	; 0x1d000000
    1d80:	6365746f 	cmnvs	r5, #1862270976	; 0x6f000000
    1d84:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1d88:	45535500 	ldrbmi	r5, [r3, #-1280]	; 0x500
    1d8c:	61440052 	qdaddvs	r0, r2, r4
    1d90:	00306174 	eorseq	r6, r0, r4, ror r1
    1d94:	61746144 	cmnvs	r4, r4, asr #2
    1d98:	4c460031 	mcrrmi	0, 3, r0, r6, cr1
    1d9c:	5f485341 	svcpl	0x00485341
    1da0:	65676150 	strbvs	r6, [r7, #-336]!	; 0x150
    1da4:	4c460073 	mcrrmi	0, 7, r0, r6, cr3
    1da8:	5f485341 	svcpl	0x00485341
    1dac:	52005449 	andpl	r5, r0, #1224736768	; 0x49000000
    1db0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
    1db4:	00444556 	subeq	r4, r4, r6, asr r5
    1db8:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1dbc:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
    1dc0:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
    1dc4:	4c460066 	mcrrmi	0, 6, r0, r6, cr6
    1dc8:	5f485341 	svcpl	0x00485341
    1dcc:	74696157 	strbtvc	r6, [r9], #-343	; 0x157
    1dd0:	4c726f46 	ldclmi	15, cr6, [r2], #-280	; 0xfffffee8
    1dd4:	4f747361 	svcmi	0x00747361
    1dd8:	61726570 	cmnvs	r2, r0, ror r5
    1ddc:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1de0:	414c4600 	cmpmi	ip, r0, lsl #12
    1de4:	505f4853 	subspl	r4, pc, r3, asr r8	; <UNPREDICTABLE>
    1de8:	65666572 	strbvs	r6, [r6, #-1394]!	; 0x572
    1dec:	42686374 	rsbmi	r6, r8, #116, 6	; 0xd0000001
    1df0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0x675
    1df4:	57490072 	smlsldxpl	r0, r9, r2, r0
    1df8:	455f4744 	ldrbmi	r4, [pc, #-1860]	; 16bc <__Stack_Size+0x12bc>
    1dfc:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    1e00:	57490065 	strbpl	r0, [r9, -r5, rrx]
    1e04:	505f4744 	subspl	r4, pc, r4, asr #14
    1e08:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    1e0c:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
    1e10:	62696c00 	rsbvs	r6, r9, #0, 24
    1e14:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1e18:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1e1c:	31663233 	cmncc	r6, r3, lsr r2
    1e20:	695f7830 	ldmdbvs	pc, {r4, r5, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1e24:	2e676477 	mcrcs	4, 3, r6, cr7, cr7, {3}
    1e28:	57490063 	strbpl	r0, [r9, -r3, rrx]
    1e2c:	525f4744 	subspl	r4, pc, #68, 14	; 0x1100000
    1e30:	616f6c65 	cmnvs	pc, r5, ror #24
    1e34:	756f4364 	strbvc	r4, [pc, #-868]!	; 1ad8 <__Stack_Size+0x16d8>
    1e38:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    1e3c:	44574900 	ldrbmi	r4, [r7], #-2304	; 0x900
    1e40:	4c465f47 	mcrrmi	15, 4, r5, r6, cr7
    1e44:	49004741 	stmdbmi	r0, {r0, r6, r8, r9, sl, lr}
    1e48:	5f474457 	svcpl	0x00474457
    1e4c:	74697257 	strbtvc	r7, [r9], #-599	; 0x257
    1e50:	63634165 	cmnvs	r3, #1073741849	; 0x40000019
    1e54:	00737365 	rsbseq	r7, r3, r5, ror #6
    1e58:	47445749 	strbmi	r5, [r4, -r9, asr #14]
    1e5c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    1e60:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
    1e64:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    1e68:	49007375 	stmdbmi	r0, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1e6c:	5f474457 	svcpl	0x00474457
    1e70:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    1e74:	00666544 	rsbeq	r6, r6, r4, asr #10
    1e78:	706e6970 	rsbvc	r6, lr, r0, ror r9
    1e7c:	4200736f 	andmi	r7, r0, #-1140850687	; 0xbc000001
    1e80:	535f7469 	cmppl	pc, #1761607680	; 0x69000000
    1e84:	47005445 	strmi	r5, [r0, -r5, asr #8]
    1e88:	5f4f4950 	svcpl	0x004f4950
    1e8c:	64616552 	strbtvs	r6, [r1], #-1362	; 0x552
    1e90:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    1e94:	61447475 	hvcvs	18245	; 0x4745
    1e98:	47006174 	smlsdxmi	r0, r4, r1, r6
    1e9c:	5f4f4950 	svcpl	0x004f4950
    1ea0:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1ea4:	74754f74 	ldrbtvc	r4, [r5], #-3956	; 0xf74
    1ea8:	43747570 	cmnmi	r4, #112, 10	; 0x1c000000
    1eac:	4700646d 	strmi	r6, [r0, -sp, ror #8]
    1eb0:	5f4f4950 	svcpl	0x004f4950
    1eb4:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0x453
    1eb8:	6e497463 	cdpvs	4, 4, cr7, cr9, cr3, {3}
    1ebc:	42007469 	andmi	r7, r0, #1761607680	; 0x69000000
    1ec0:	61567469 	cmpvs	r6, r9, ror #8
    1ec4:	6942006c 	stmdbvs	r2, {r2, r3, r5, r6}^
    1ec8:	45525f74 	ldrbmi	r5, [r2, #-3956]	; 0xf74
    1ecc:	00544553 	subseq	r4, r4, r3, asr r5
    1ed0:	4f495047 	svcmi	0x00495047
    1ed4:	6972575f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
    1ed8:	69426574 	stmdbvs	r2, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1edc:	696c0074 	stmdbvs	ip!, {r2, r4, r5, r6}^
    1ee0:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    1ee4:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xf63
    1ee8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1eec:	5f783031 	svcpl	0x00783031
    1ef0:	6f697067 	svcvs	0x00697067
    1ef4:	4500632e 	strmi	r6, [r0, #-814]	; 0x32e
    1ef8:	43495458 	movtmi	r5, #37976	; 0x9458
    1efc:	69700052 	ldmdbvs	r0!, {r1, r4, r6}^
    1f00:	73616d6e 	cmnvc	r1, #7040	; 0x1b80
    1f04:	5047006b 	subpl	r0, r7, fp, rrx
    1f08:	505f4f49 	subspl	r4, pc, r9, asr #30
    1f0c:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    1f10:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    1f14:	50470065 	subpl	r0, r7, r5, rrx
    1f18:	445f4f49 	ldrbmi	r4, [pc], #-3913	; 1f20 <__Stack_Size+0x1b20>
    1f1c:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
    1f20:	50470074 	subpl	r0, r7, r4, ror r0
    1f24:	455f4f49 	ldrbmi	r4, [pc, #-3913]	; fe3 <__Stack_Size+0xbe3>
    1f28:	746e6576 	strbtvc	r6, [lr], #-1398	; 0x576
    1f2c:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    1f30:	6f437475 	svcvs	0x00437475
    1f34:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1f38:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1f3c:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xf4f
    1f40:	0070616d 	rsbseq	r6, r0, sp, ror #2
    1f44:	72706d74 	rsbsvc	r6, r0, #116, 26	; 0x1d00
    1f48:	50006765 	andpl	r6, r0, r5, ror #14
    1f4c:	5674726f 	ldrbtpl	r7, [r4], -pc, ror #4
    1f50:	63006c61 	movwvs	r6, #3169	; 0xc61
    1f54:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0x275
    1f58:	6f6d746e 	svcvs	0x006d746e
    1f5c:	47006564 	strmi	r6, [r0, -r4, ror #10]
    1f60:	5f4f4950 	svcpl	0x004f4950
    1f64:	536e6950 	cmnpl	lr, #80, 18	; 0x140000
    1f68:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    1f6c:	43520065 	cmpmi	r2, #101	; 0x65
    1f70:	50415f43 	subpl	r5, r1, r3, asr #30
    1f74:	65503242 	ldrbvs	r3, [r0, #-578]	; 0x242
    1f78:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1f7c:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0x552
    1f80:	646d4374 	strbtvs	r4, [sp], #-884	; 0x374
    1f84:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1f88:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xf4f
    1f8c:	6e496461 	cdpvs	4, 4, cr6, cr9, cr1, {3}
    1f90:	44747570 	ldrbtmi	r7, [r4], #-1392	; 0x570
    1f94:	00617461 	rsbeq	r7, r1, r1, ror #8
    1f98:	6d706d74 	ldclvs	13, cr6, [r0, #-464]!	; 0xfffffe30
    1f9c:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1fa0:	4f495047 	svcmi	0x00495047
    1fa4:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
    1fa8:	6b636f4c 	blvs	18ddce0 <__Stack_Size+0x18dd8e0>
    1fac:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1fb0:	63006769 	movwvs	r6, #1897	; 0x769
    1fb4:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0x275
    1fb8:	6970746e 	ldmdbvs	r0!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1fbc:	5047006e 	subpl	r0, r7, lr, rrx
    1fc0:	575f4f49 	ldrbpl	r4, [pc, -r9, asr #30]
    1fc4:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0x972
    1fc8:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    1fcc:	50470031 	subpl	r0, r7, r1, lsr r0
    1fd0:	455f4f49 	ldrbmi	r4, [pc, #-3913]	; 108f <__Stack_Size+0xc8f>
    1fd4:	4c495458 	cfstrdmi	mvd5, [r9], {88}	; 0x58
    1fd8:	43656e69 	cmnmi	r5, #1680	; 0x690
    1fdc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1fe0:	46410067 	strbmi	r0, [r1], -r7, rrx
    1fe4:	545f4f49 	ldrbpl	r4, [pc], #-3913	; 1fec <__Stack_Size+0x1bec>
    1fe8:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
    1fec:	42006665 	andmi	r6, r0, #105906176	; 0x6500000
    1ff0:	63417469 	movtvs	r7, #5225	; 0x1469
    1ff4:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1ff8:	50414d00 	subpl	r4, r1, r0, lsl #26
    1ffc:	50470052 	subpl	r0, r7, r2, asr r0
    2000:	00784f49 	rsbseq	r4, r8, r9, asr #30
    2004:	4f495047 	svcmi	0x00495047
    2008:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    200c:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
    2010:	00746375 	rsbseq	r6, r4, r5, ror r3
    2014:	52435645 	subpl	r5, r3, #72351744	; 0x4500000
    2018:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    201c:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xf4f
    2020:	754f6461 	strbvc	r6, [pc, #-1121]	; 1bc7 <__Stack_Size+0x17c7>
    2024:	74757074 	ldrbtvc	r7, [r5], #-116	; 0x74
    2028:	61746144 	cmnvs	r4, r4, asr #2
    202c:	00746942 	rsbseq	r6, r4, r2, asr #18
    2030:	4f495047 	svcmi	0x00495047
    2034:	4946415f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, lr}^
    2038:	4965444f 	stmdbmi	r5!, {r0, r1, r2, r3, r6, sl, lr}^
    203c:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2040:	52424149 	subpl	r4, r2, #1073741842	; 0x40000012
    2044:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    2048:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
    204c:	49726165 	ldmdbmi	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2050:	68435152 	stmdavs	r3, {r1, r4, r6, r8, ip, lr}^
    2054:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
    2058:	6e65506c 	cdpvs	0, 6, cr5, cr5, cr12, {3}
    205c:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    2060:	00746942 	rsbseq	r6, r4, r2, asr #18
    2064:	4349564e 	movtmi	r5, #38478	; 0x964e
    2068:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    206c:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
    2070:	00746375 	rsbseq	r6, r4, r5, ror r3
    2074:	4349564e 	movtmi	r5, #38478	; 0x964e
    2078:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    207c:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    2080:	50746e65 	rsbspl	r6, r4, r5, ror #28
    2084:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2088:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    208c:	61684351 	cmnvs	r8, r1, asr r3
    2090:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
    2094:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    2098:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xf43
    209c:	75614674 	strbvc	r4, [r1, #-1652]!	; 0x674
    20a0:	6441746c 	strbvs	r7, [r1], #-1132	; 0x46c
    20a4:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    20a8:	79530073 	ldmdbvc	r3, {r0, r1, r4, r5, r6}^
    20ac:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    20b0:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    20b4:	5372656c 	cmnpl	r2, #108, 10	; 0x1b000000
    20b8:	72506275 	subsvc	r6, r0, #1342177287	; 0x50000007
    20bc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    20c0:	4e007974 	mcrmi	9, 0, r7, cr0, cr4, {3}
    20c4:	5f434956 	svcpl	0x00434956
    20c8:	50544553 	subspl	r4, r4, r3, asr r5
    20cc:	414d4952 	cmpmi	sp, r2, asr r9
    20d0:	74004b53 	strvc	r4, [r0], #-2899	; 0xb53
    20d4:	7270706d 	rsbsvc	r7, r0, #109	; 0x6d
    20d8:	696c0065 	stmdbvs	ip!, {r0, r2, r5, r6}^
    20dc:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    20e0:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xf63
    20e4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    20e8:	5f783031 	svcpl	0x00783031
    20ec:	6369766e 	cmnvs	r9, #115343360	; 0x6e00000
    20f0:	4e00632e 	cdpmi	3, 0, cr6, cr0, cr14, {1}
    20f4:	5f434956 	svcpl	0x00434956
    20f8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
    20fc:	49525054 	ldmdbmi	r2, {r2, r4, r6, ip, lr}^
    2100:	4b53414d 	blmi	14d263c <__Stack_Size+0x14d223c>
    2104:	75616600 	strbvc	r6, [r1, #-1536]!	; 0x600
    2108:	6461746c 	strbtvs	r7, [r1], #-1132	; 0x46c
    210c:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    2110:	564e0073 			; <UNDEFINED> instruction: 0x564e0073
    2114:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    2118:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0x379
    211c:	6e61486d 	cdpvs	8, 6, cr4, cr1, cr13, {3}
    2120:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    2124:	6f697250 	svcvs	0x00697250
    2128:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    212c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2130:	5f006769 	svcpl	0x00006769
    2134:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    2138:	45534142 	ldrbmi	r4, [r3, #-322]	; 0x142
    213c:	00495250 	subeq	r5, r9, r0, asr r2
    2140:	4349564e 	movtmi	r5, #38478	; 0x964e
    2144:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    2148:	49555043 	ldmdbmi	r5, {r0, r1, r6, ip, lr}^
    214c:	564e0044 	strbpl	r0, [lr], -r4, asr #32
    2150:	505f4349 	subspl	r4, pc, r9, asr #6
    2154:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2158:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    215c:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    2160:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    2164:	45525f43 	ldrbmi	r5, [r2, #-3907]	; 0xf43
    2168:	46544553 			; <UNDEFINED> instruction: 0x46544553
    216c:	544c5541 	strbpl	r5, [ip], #-1345	; 0x541
    2170:	4b53414d 	blmi	14d26ac <__Stack_Size+0x14d22ac>
    2174:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    2178:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xf43
    217c:	72754374 	rsbsvc	r4, r5, #116, 6	; 0xd0000001
    2180:	746e6572 	strbtvc	r6, [lr], #-1394	; 0x572
    2184:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    2188:	61486576 	hvcvs	34390	; 0x8656
    218c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    2190:	79530072 	ldmdbvc	r3, {r1, r4, r5, r6}^
    2194:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2198:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    219c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    21a0:	52534349 	subspl	r4, r3, #603979777	; 0x24000001
    21a4:	45535200 	ldrbmi	r5, [r3, #-512]	; 0x200
    21a8:	44455652 	strbmi	r5, [r5], #-1618	; 0x652
    21ac:	5f5f0031 	svcpl	0x005f0031
    21b0:	46544553 			; <UNDEFINED> instruction: 0x46544553
    21b4:	544c5541 	strbpl	r5, [ip], #-1345	; 0x541
    21b8:	4b53414d 	blmi	14d26f4 <__Stack_Size+0x14d22f4>
    21bc:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    21c0:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xf43
    21c4:	6172656e 	cmnvs	r2, lr, ror #10
    21c8:	6f436574 	svcvs	0x00436574
    21cc:	65526572 	ldrbvs	r6, [r2, #-1394]	; 0x572
    21d0:	00746573 	rsbseq	r6, r4, r3, ror r5
    21d4:	4349564e 	movtmi	r5, #38478	; 0x964e
    21d8:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    21dc:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0x953
    21e0:	61486d65 	cmpvs	r8, r5, ror #26
    21e4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    21e8:	74634172 	strbtvc	r4, [r3], #-370	; 0x172
    21ec:	42657669 	rsbmi	r7, r5, #110100480	; 0x6900000
    21f0:	74537469 	ldrbvc	r7, [r3], #-1129	; 0x469
    21f4:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    21f8:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    21fc:	41425f43 	cmpmi	r2, r3, asr #30
    2200:	52504553 	subspl	r4, r0, #348127232	; 0x14c00000
    2204:	4e4f4349 	cdpmi	3, 4, cr4, cr15, cr9, {2}
    2208:	00474946 	subeq	r4, r7, r6, asr #18
    220c:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
    2210:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    2214:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xf43
    2218:	51524974 	cmppl	r2, r4, ror r9
    221c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
    2220:	506c656e 	rsbpl	r6, ip, lr, ror #10
    2224:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2228:	6942676e 	stmdbvs	r2, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    222c:	6d740074 	ldclvs	0, cr0, [r4, #-464]!	; 0xfffffe30
    2230:	736f7070 	cmnvc	pc, #112	; 0x70
    2234:	53464300 	movtpl	r4, #25344	; 0x6300
    2238:	564e0052 			; <UNDEFINED> instruction: 0x564e0052
    223c:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    2240:	79537465 	ldmdbvc	r3, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2244:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2248:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    224c:	5072656c 	rsbspl	r6, r2, ip, ror #10
    2250:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2254:	6942676e 	stmdbvs	r2, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2258:	49410074 	stmdbmi	r1, {r2, r4, r5, r6}^
    225c:	00524352 	subseq	r4, r2, r2, asr r3
    2260:	52504349 	subspl	r4, r0, #603979777	; 0x24000001
    2264:	425f5f00 	subsmi	r5, pc, #0, 30
    2268:	50455341 	subpl	r5, r5, r1, asr #6
    226c:	4f434952 	svcmi	0x00434952
    2270:	4749464e 	strbmi	r4, [r9, -lr, asr #12]
    2274:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 227c <__Stack_Size+0x1e7c>
    2278:	53004253 	movwpl	r4, #595	; 0x253
    227c:	00525048 	subseq	r5, r2, r8, asr #32
    2280:	53434853 	movtpl	r4, #14419	; 0x3853
    2284:	564e0052 			; <UNDEFINED> instruction: 0x564e0052
    2288:	545f4349 	ldrbpl	r4, [pc], #-841	; 2290 <__Stack_Size+0x1e90>
    228c:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
    2290:	4e006665 	cfmadd32mi	mvax3, mvfx6, mvfx0, mvfx5
    2294:	5f434956 	svcpl	0x00434956
    2298:	42746547 	rsbsmi	r6, r4, #297795584	; 0x11c00000
    229c:	50455341 	subpl	r5, r5, r1, asr #6
    22a0:	4d004952 	stcmi	9, cr4, [r0, #-328]	; 0xfffffeb8
    22a4:	5241464d 	subpl	r4, r1, #80740352	; 0x4d00000
    22a8:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    22ac:	00627573 	rsbeq	r7, r2, r3, ror r5
    22b0:	4349564e 	movtmi	r5, #38478	; 0x964e
    22b4:	7379535f 	cmnvc	r9, #2080374785	; 0x7c000001
    22b8:	486d6574 	stmdami	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    22bc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    22c0:	6f437265 	svcvs	0x00437265
    22c4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    22c8:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    22cc:	79535f43 	ldmdbvc	r3, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    22d0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    22d4:	6f43504c 	svcvs	0x0043504c
    22d8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    22dc:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    22e0:	74535f43 	ldrbvc	r5, [r3], #-3907	; 0xf43
    22e4:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    22e8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    22ec:	45434900 	strbmi	r4, [r3, #-2304]	; 0x900
    22f0:	6d740052 	ldclvs	0, cr0, [r4, #-328]!	; 0xfffffeb8
    22f4:	69727070 	ldmdbvs	r2!, {r4, r5, r6, ip, sp, lr}^
    22f8:	7469726f 	strbtvc	r7, [r9], #-623	; 0x26f
    22fc:	54560079 	ldrbpl	r0, [r6], #-121	; 0x79
    2300:	4900524f 	stmdbmi	r0, {r0, r1, r2, r3, r6, r9, ip, lr}
    2304:	00525053 	subseq	r5, r2, r3, asr r0
    2308:	52534644 	subspl	r4, r3, #68, 12	; 0x4400000
    230c:	53464800 	movtpl	r4, #26624	; 0x6800
    2310:	564e0052 			; <UNDEFINED> instruction: 0x564e0052
    2314:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    2318:	41465445 	cmpmi	r6, r5, asr #8
    231c:	4d544c55 	ldclmi	12, cr4, [r4, #-340]	; 0xfffffeac
    2320:	004b5341 	subeq	r5, fp, r1, asr #6
    2324:	32706d74 	rsbscc	r6, r0, #116, 26	; 0x1d00
    2328:	45534900 	ldrbmi	r4, [r3, #-2304]	; 0x900
    232c:	564e0052 			; <UNDEFINED> instruction: 0x564e0052
    2330:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    2334:	61467465 	cmpvs	r6, r5, ror #8
    2338:	48746c75 	ldmdami	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    233c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2340:	6f537265 	svcvs	0x00537265
    2344:	65637275 	strbvs	r7, [r3, #-629]!	; 0x275
    2348:	43530073 	cmpmi	r3, #115	; 0x73
    234c:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
    2350:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
    2354:	564e0066 	strbpl	r0, [lr], -r6, rrx
    2358:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    235c:	79537465 	ldmdbvc	r3, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2360:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2364:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    2368:	5072656c 	rsbspl	r6, r2, ip, ror #10
    236c:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2370:	6942676e 	stmdbvs	r2, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2374:	61745374 	cmnvs	r4, r4, ror r3
    2378:	00737574 	rsbseq	r7, r3, r4, ror r5
    237c:	4349564e 	movtmi	r5, #38478	; 0x964e
    2380:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    2384:	79537261 	ldmdbvc	r3, {r0, r5, r6, r9, ip, sp, lr}^
    2388:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    238c:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    2390:	5072656c 	rsbspl	r6, r2, ip, ror #10
    2394:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2398:	6942676e 	stmdbvs	r2, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    239c:	75760074 	ldrbvc	r0, [r6, #-116]!	; 0x74
    23a0:	00323363 	eorseq	r3, r2, r3, ror #6
    23a4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    23a8:	756f7374 	strbvc	r7, [pc, #-884]!	; 203c <__Stack_Size+0x1c3c>
    23ac:	73656372 	cmnvc	r5, #-939524095	; 0xc8000001
    23b0:	73795300 	cmnvc	r9, #0, 6
    23b4:	486d6574 	stmdami	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    23b8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    23bc:	72507265 	subsvc	r7, r0, #1342177286	; 0x50000006
    23c0:	706d6565 	rsbvc	r6, sp, r5, ror #10
    23c4:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    23c8:	6f697250 	svcvs	0x00697250
    23cc:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    23d0:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    23d4:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xf43
    23d8:	51524974 	cmppl	r2, r4, ror r9
    23dc:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
    23e0:	506c656e 	rsbpl	r6, ip, lr, ror #10
    23e4:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    23e8:	6942676e 	stmdbvs	r2, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    23ec:	61745374 	cmnvs	r4, r4, ror r3
    23f0:	00737574 	rsbseq	r7, r3, r4, ror r5
    23f4:	4349564e 	movtmi	r5, #38478	; 0x964e
    23f8:	4243535f 	submi	r5, r3, #2080374785	; 0x7c000001
    23fc:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    2400:	4e007469 	cdpmi	4, 0, cr7, cr0, cr9, {3}
    2404:	72507765 	subsvc	r7, r0, #26476544	; 0x1940000
    2408:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    240c:	4e007974 	mcrmi	9, 0, r7, cr0, cr4, {3}
    2410:	5f434956 	svcpl	0x00434956
    2414:	74636556 	strbtvc	r6, [r3], #-1366	; 0x556
    2418:	00626154 	rsbeq	r6, r2, r4, asr r1
    241c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
    2420:	72696576 	rsbvc	r6, r9, #494927872	; 0x1d800000
    2424:	61747371 	cmnvs	r4, r1, ror r3
    2428:	00737574 	rsbseq	r7, r3, r4, ror r5
    242c:	45535f5f 	ldrbmi	r5, [r3, #-3935]	; 0xf5f
    2430:	49525054 	ldmdbmi	r2, {r2, r4, r6, ip, lr}^
    2434:	4b53414d 	blmi	14d2970 <__Stack_Size+0x14d2570>
    2438:	53464100 	movtpl	r4, #24832	; 0x6100
    243c:	61680052 	qdsubvs	r0, r2, r8
    2440:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    2444:	73616d72 	cmnvc	r1, #7296	; 0x1c80
    2448:	5f5f006b 	svcpl	0x005f006b
    244c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
    2450:	49525054 	ldmdbmi	r2, {r2, r4, r6, ip, lr}^
    2454:	4b53414d 	blmi	14d2990 <__Stack_Size+0x14d2590>
    2458:	776f4c00 	strbvc	r4, [pc, -r0, lsl #24]!
    245c:	65776f50 	ldrbvs	r6, [r7, #-3920]!	; 0xf50
    2460:	646f4d72 	strbtvs	r4, [pc], #-3442	; 2468 <__Stack_Size+0x2068>
    2464:	5f5f0065 	svcpl	0x005f0065
    2468:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
    246c:	55414654 	strbpl	r4, [r1, #-1620]	; 0x654
    2470:	414d544c 	cmpmi	sp, ip, asr #8
    2474:	4e004b53 	mcrmi	11, 0, r4, cr0, cr3, {2}
    2478:	5f434956 	svcpl	0x00434956
    247c:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    2480:	68435152 	stmdavs	r3, {r1, r4, r6, r8, ip, lr}^
    2484:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
    2488:	7463416c 	strbtvc	r4, [r3], #-364	; 0x16c
    248c:	42657669 	rsbmi	r7, r5, #110100480	; 0x6900000
    2490:	74537469 	ldrbvc	r7, [r3], #-1129	; 0x469
    2494:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    2498:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    249c:	65445f43 	strbvs	r5, [r4, #-3907]	; 0xf43
    24a0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    24a4:	6e657000 	cdpvs	0, 6, cr7, cr5, cr0, {0}
    24a8:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    24ac:	73717269 	cmnvc	r1, #-1879048186	; 0x90000006
    24b0:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
    24b4:	43520073 	cmpmi	r2, #115	; 0x73
    24b8:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    24bc:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
    24c0:	50410066 	subpl	r0, r1, r6, rrx
    24c4:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
    24c8:	52005254 	andpl	r5, r0, #84, 4	; 0x40000005
    24cc:	485f4343 	ldmdami	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
    24d0:	004b4c43 	subeq	r4, fp, r3, asr #24
    24d4:	5f434352 	svcpl	0x00434352
    24d8:	43434441 	movtmi	r4, #13377	; 0x3441
    24dc:	6f434b4c 	svcvs	0x00434b4c
    24e0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    24e4:	43435200 	movtmi	r5, #12800	; 0x3200
    24e8:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    24ec:	54497261 	strbpl	r7, [r9], #-609	; 0x261
    24f0:	646e6550 	strbtvs	r6, [lr], #-1360	; 0x550
    24f4:	42676e69 	rsbmi	r6, r7, #1680	; 0x690
    24f8:	6c007469 	cfstrsvs	mvf7, [r0], {105}	; 0x69
    24fc:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    2500:	732f6372 	teqvc	pc, #-939524095	; 0xc8000001
    2504:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2508:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    250c:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    2510:	5200632e 	andpl	r6, r0, #-1207959552	; 0xb8000000
    2514:	4c5f4343 	mrrcmi	3, 4, r4, pc, cr3	; <UNPREDICTABLE>
    2518:	52004553 	andpl	r4, r0, #348127232	; 0x14c00000
    251c:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    2520:	54497465 	strbpl	r7, [r9], #-1125	; 0x465
    2524:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    2528:	42007375 	andmi	r7, r0, #-738197503	; 0xd4000001
    252c:	00524344 	subseq	r4, r2, r4, asr #6
    2530:	5f434352 	svcpl	0x00434352
    2534:	32425041 	subcc	r5, r2, #65	; 0x41
    2538:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    253c:	52006870 	andpl	r6, r0, #112, 16	; 0x700000
    2540:	505f4343 	subspl	r4, pc, r3, asr #6
    2544:	324b4c43 	subcc	r4, fp, #17152	; 0x4300
    2548:	43435200 	movtmi	r5, #12800	; 0x3200
    254c:	6f6c435f 	svcvs	0x006c435f
    2550:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xb63
    2554:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
    2558:	52006665 	andpl	r6, r0, #105906176	; 0x6500000
    255c:	505f4343 	subspl	r4, pc, r3, asr #6
    2560:	754d4c4c 	strbvc	r4, [sp, #-3148]	; 0xc4c
    2564:	4352006c 	cmpmi	r2, #108	; 0x6c
    2568:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    256c:	72655042 	rsbvc	r5, r5, #66	; 0x42
    2570:	43687069 	cmnmi	r8, #105	; 0x69
    2574:	6b636f6c 	blvs	18de32c <__Stack_Size+0x18ddf2c>
    2578:	00646d43 	rsbeq	r6, r4, r3, asr #26
    257c:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
    2580:	4c434800 	mcrrmi	8, 0, r4, r3, cr0
    2584:	72465f4b 	subvc	r5, r6, #300	; 0x12c
    2588:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0x165
    258c:	0079636e 	rsbseq	r6, r9, lr, ror #6
    2590:	31425041 	cmpcc	r2, r1, asr #32
    2594:	00524e45 	subseq	r4, r2, r5, asr #28
    2598:	5f434352 	svcpl	0x00434352
    259c:	434f434d 	movtmi	r4, #62285	; 0xf34d
    25a0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    25a4:	43520067 	cmpmi	r2, #103	; 0x67
    25a8:	54525f43 	ldrbpl	r5, [r2], #-3907	; 0xf43
    25ac:	4b4c4343 	blmi	13132c0 <__Stack_Size+0x1312ec0>
    25b0:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    25b4:	52006563 	andpl	r6, r0, #415236096	; 0x18c00000
    25b8:	415f4343 	cmpmi	pc, r3, asr #6
    25bc:	50314250 	eorspl	r4, r1, r0, asr r2
    25c0:	70697265 	rsbvc	r7, r9, r5, ror #4
    25c4:	73655268 	cmnvc	r5, #104, 4	; 0x80000006
    25c8:	6d437465 	cfstrdvs	mvd7, [r3, #-404]	; 0xfffffe6c
    25cc:	6c700064 	ldclvs	0, cr0, [r0], #-400	; 0xfffffe70
    25d0:	6c756d6c 	ldclvs	13, cr6, [r5], #-432	; 0xfffffe50
    25d4:	4352006c 	cmpmi	r2, #108	; 0x6c
    25d8:	534c5f43 	movtpl	r5, #53059	; 0xcf43
    25dc:	646d4349 	strbtvs	r4, [sp], #-841	; 0x349
    25e0:	42504100 	subsmi	r4, r0, #0, 2
    25e4:	54535232 	ldrbpl	r5, [r3], #-562	; 0x232
    25e8:	43520052 	cmpmi	r2, #82	; 0x52
    25ec:	50415f43 	subpl	r5, r1, r3, asr #30
    25f0:	65503142 	ldrbvs	r3, [r0, #-322]	; 0x142
    25f4:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    25f8:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    25fc:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
    2600:	41006563 	tstmi	r0, r3, ror #10
    2604:	4e454248 	cdpmi	2, 4, cr4, cr5, cr8, {2}
    2608:	74730052 	ldrbtvc	r0, [r3], #-82	; 0x52
    260c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    2610:	00676572 	rsbeq	r6, r7, r2, ror r5
    2614:	32425041 	subcc	r5, r2, #65	; 0x41
    2618:	00524e45 	subseq	r4, r2, r5, asr #28
    261c:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    2620:	43705574 	cmnmi	r0, #116, 10	; 0x1d000000
    2624:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    2628:	52007265 	andpl	r7, r0, #1342177286	; 0x50000006
    262c:	425f4343 	subsmi	r4, pc, #201326593	; 0xc000001
    2630:	756b6361 	strbvc	r6, [fp, #-865]!	; 0x361
    2634:	73655270 	cmnvc	r5, #112, 4
    2638:	6d437465 	cfstrdvs	mvd7, [r3, #-404]	; 0xfffffe6c
    263c:	43520064 	cmpmi	r2, #100	; 0x64
    2640:	64415f43 	strbvs	r5, [r1], #-3907	; 0xf43
    2644:	7473756a 	ldrbtvc	r7, [r3], #-1386	; 0x56a
    2648:	43495348 	movtmi	r5, #37704	; 0x9348
    264c:	62696c61 	rsbvs	r6, r9, #24832	; 0x6100
    2650:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    2654:	61566e6f 	cmpvs	r6, pc, ror #28
    2658:	0065756c 	rsbeq	r7, r5, ip, ror #10
    265c:	43434441 	movtmi	r4, #13377	; 0x3441
    2660:	465f4b4c 	ldrbmi	r4, [pc], -ip, asr #22
    2664:	75716572 	ldrbvc	r6, [r1, #-1394]!	; 0x572
    2668:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    266c:	43435200 	movtmi	r5, #12800	; 0x3200
    2670:	414c465f 	cmpmi	ip, pc, asr r6
    2674:	43520047 	cmpmi	r2, #71	; 0x47
    2678:	4c505f43 	mrrcmi	15, 4, r5, r0, cr3
    267c:	756f534c 	strbvc	r5, [pc, #-844]!	; 2338 <__Stack_Size+0x1f38>
    2680:	00656372 	rsbeq	r6, r5, r2, ror r3
    2684:	5f434352 	svcpl	0x00434352
    2688:	43435452 	movtmi	r5, #13394	; 0x3452
    268c:	6f434b4c 	svcvs	0x00434b4c
    2690:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2694:	43435200 	movtmi	r5, #12800	; 0x3200
    2698:	4253555f 	subsmi	r5, r3, #398458880	; 0x17c00000
    269c:	534b4c43 	movtpl	r4, #48195	; 0xbc43
    26a0:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    26a4:	43520065 	cmpmi	r2, #101	; 0x65
    26a8:	59535f43 	ldmdbpl	r3, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    26ac:	4b4c4353 	blmi	1313400 <__Stack_Size+0x1313000>
    26b0:	45534800 	ldrbmi	r4, [r3, #-2048]	; 0x800
    26b4:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    26b8:	52007375 	andpl	r7, r0, #-738197503	; 0xd4000001
    26bc:	435f4343 	cmpmi	pc, #201326593	; 0xc000001
    26c0:	6b636f6c 	blvs	18de478 <__Stack_Size+0x18de078>
    26c4:	75636553 	strbvc	r6, [r3, #-1363]!	; 0x553
    26c8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    26cc:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0x953
    26d0:	6d436d65 	stclvs	13, cr6, [r3, #-404]	; 0xfffffe6c
    26d4:	59530064 	ldmdbpl	r3, {r2, r5, r6}^
    26d8:	4b4c4353 	blmi	131342c <__Stack_Size+0x131302c>
    26dc:	6572465f 	ldrbvs	r4, [r2, #-1631]!	; 0x65f
    26e0:	6e657571 	mcrvs	5, 3, r7, cr5, cr1, {3}
    26e4:	52007963 	andpl	r7, r0, #1622016	; 0x18c000
    26e8:	435f4343 	cmpmi	pc, #201326593	; 0xc000001
    26ec:	6b636f6c 	blvs	18de4a4 <__Stack_Size+0x18de0a4>
    26f0:	43500073 	cmpmi	r0, #115	; 0x73
    26f4:	5f324b4c 	svcpl	0x00324b4c
    26f8:	71657246 	cmnvc	r5, r6, asr #4
    26fc:	636e6575 	cmnvs	lr, #490733568	; 0x1d400000
    2700:	43520079 	cmpmi	r2, #121	; 0x79
    2704:	54495f43 	strbpl	r5, [r9], #-3907	; 0xf43
    2708:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    270c:	70006769 	andvc	r6, r0, r9, ror #14
    2710:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    2714:	43435200 	movtmi	r5, #12800	; 0x3200
    2718:	4553485f 	ldrbmi	r4, [r3, #-2143]	; 0x85f
    271c:	43435200 	movtmi	r5, #12800	; 0x3200
    2720:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    2724:	534b4c43 	movtpl	r4, #48195	; 0xbc43
    2728:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    272c:	43500065 	cmpmi	r0, #101	; 0x65
    2730:	5f314b4c 	svcpl	0x00314b4c
    2734:	71657246 	cmnvc	r5, r6, asr #4
    2738:	636e6575 	cmnvs	lr, #490733568	; 0x1d400000
    273c:	43520079 	cmpmi	r2, #121	; 0x79
    2740:	534c5f43 	movtpl	r5, #53059	; 0xcf43
    2744:	6e6f4345 	cdpvs	3, 6, cr4, cr15, cr5, {2}
    2748:	00676966 	rsbeq	r6, r7, r6, ror #18
    274c:	41425041 	cmpmi	r2, r1, asr #32
    2750:	72504248 	subsvc	r4, r0, #72, 4	; 0x80000004
    2754:	54637365 	strbtpl	r7, [r3], #-869	; 0x365
    2758:	656c6261 	strbvs	r6, [ip, #-609]!	; 0x261
    275c:	43435200 	movtmi	r5, #12800	; 0x3200
    2760:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    2764:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    2768:	7246736b 	subvc	r7, r6, #-1409286143	; 0xac000001
    276c:	52007165 	andpl	r7, r0, #1073741849	; 0x40000019
    2770:	525f4343 	subspl	r4, pc, #201326593	; 0xc000001
    2774:	4c434354 	mcrrmi	3, 5, r4, r3, cr4
    2778:	646d434b 	strbtvs	r4, [sp], #-843	; 0x34b
    277c:	43435200 	movtmi	r5, #12800	; 0x3200
    2780:	4953485f 	ldmdbmi	r3, {r0, r1, r2, r3, r4, r6, fp, lr}^
    2784:	00646d43 	rsbeq	r6, r4, r3, asr #26
    2788:	5f434352 	svcpl	0x00434352
    278c:	004f434d 	subeq	r4, pc, sp, asr #6
    2790:	5f434352 	svcpl	0x00434352
    2794:	52005449 	andpl	r5, r0, #1224736768	; 0x49000000
    2798:	415f4343 	cmpmi	pc, r3, asr #6
    279c:	65504248 	ldrbvs	r4, [r0, #-584]	; 0x248
    27a0:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    27a4:	43444100 	movtmi	r4, #16640	; 0x4100
    27a8:	73657250 	cmnvc	r5, #80, 4
    27ac:	62615463 	rsbvs	r5, r1, #1660944384	; 0x63000000
    27b0:	5400656c 	strpl	r6, [r0], #-1388	; 0x56c
    27b4:	4f5f4d49 	svcmi	0x005f4d49
    27b8:	61463443 	cmpvs	r6, r3, asr #8
    27bc:	6f437473 	svcvs	0x00437473
    27c0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    27c4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    27c8:	31434f5f 	cmpcc	r3, pc, asr pc
    27cc:	616c6f50 	cmnvs	ip, r0, asr pc
    27d0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    27d4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    27d8:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    27dc:	495f4d49 	ldmdbmi	pc, {r0, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    27e0:	72745343 	rsbsvc	r5, r4, #201326593	; 0xc000001
    27e4:	49746375 	ldmdbmi	r4!, {r0, r2, r4, r5, r6, r8, r9, sp, lr}^
    27e8:	0074696e 	rsbseq	r6, r4, lr, ror #18
    27ec:	5f4d4954 	svcpl	0x004d4954
    27f0:	5034434f 	eorspl	r4, r4, pc, asr #6
    27f4:	6f6c6572 	svcvs	0x006c6572
    27f8:	6f436461 	svcvs	0x00436461
    27fc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2800:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2804:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2808:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    280c:	31657261 	cmncc	r5, r1, ror #4
    2810:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2814:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2818:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    281c:	32657261 	rsbcc	r7, r5, #268435462	; 0x10000006
    2820:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2824:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2828:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    282c:	34657261 	strbtcc	r7, [r5], #-609	; 0x261
    2830:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2834:	33434f5f 	movtcc	r4, #16223	; 0x3f5f
    2838:	6c6f504e 	stclvs	0, cr5, [pc], #-312	; 2708 <__Stack_Size+0x2308>
    283c:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    2840:	6e6f4379 	mcrvs	3, 3, r4, cr15, cr9, {3}
    2844:	00676966 	rsbeq	r6, r7, r6, ror #18
    2848:	5f4d4954 	svcpl	0x004d4954
    284c:	7250434f 	subsvc	r4, r0, #1006632961	; 0x3c000001
    2850:	616f6c65 	cmnvs	pc, r5, ror #24
    2854:	49540064 	ldmdbmi	r4, {r2, r5, r6}^
    2858:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    285c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    2860:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    2864:	00666544 	rsbeq	r6, r6, r4, asr #10
    2868:	5f4d4954 	svcpl	0x004d4954
    286c:	6f50434f 	svcvs	0x0050434f
    2870:	6972616c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, sp, lr}^
    2874:	54007974 	strpl	r7, [r0], #-2420	; 0x974
    2878:	4f5f4d49 	svcmi	0x005f4d49
    287c:	72503343 	subsvc	r3, r0, #201326593	; 0xc000001
    2880:	616f6c65 	cmnvs	pc, r5, ror #24
    2884:	6e6f4364 	cdpvs	3, 6, cr4, cr15, cr4, {3}
    2888:	00676966 	rsbeq	r6, r7, r6, ror #18
    288c:	5f4d4954 	svcpl	0x004d4954
    2890:	46746547 	ldrbtmi	r6, [r4], -r7, asr #10
    2894:	5367616c 	cmnpl	r7, #108, 2
    2898:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
    289c:	49540073 	ldmdbmi	r4, {r0, r1, r4, r5, r6}^
    28a0:	6f435f32 	svcvs	0x00435f32
    28a4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    28a8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    28ac:	46434f5f 			; <UNDEFINED> instruction: 0x46434f5f
    28b0:	00747361 	rsbseq	r7, r4, r1, ror #6
    28b4:	5f4d4954 	svcpl	0x004d4954
    28b8:	00444b43 	subeq	r4, r4, r3, asr #22
    28bc:	5f4d4954 	svcpl	0x004d4954
    28c0:	6e494349 	cdpvs	3, 4, cr4, cr9, cr9, {2}
    28c4:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
    28c8:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
    28cc:	49540066 	ldmdbmi	r4, {r1, r2, r5, r6}^
    28d0:	6e495f4d 	cdpvs	15, 4, cr5, cr9, cr13, {2}
    28d4:	54747570 	ldrbtpl	r7, [r4], #-1392	; 0x570
    28d8:	67676972 			; <UNDEFINED> instruction: 0x67676972
    28dc:	6f537265 	svcvs	0x00537265
    28e0:	65637275 	strbvs	r7, [r3, #-629]!	; 0x275
    28e4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    28e8:	7478455f 	ldrbtvc	r4, [r8], #-1375	; 0x55f
    28ec:	50475254 	subpl	r5, r7, r4, asr r2
    28f0:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    28f4:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
    28f8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    28fc:	7843435f 	stmdavc	r3, {r0, r1, r2, r3, r4, r6, r8, r9, lr}^
    2900:	646d434e 	strbtvs	r4, [sp], #-846	; 0x34e
    2904:	65746900 	ldrbvs	r6, [r4, #-2304]!	; 0x900
    2908:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    290c:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    2910:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    2914:	65725032 	ldrbvs	r5, [r2, #-50]!	; 0x32
    2918:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xf6c
    291c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2920:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2924:	465f4d49 	ldrbmi	r4, [pc], -r9, asr #26
    2928:	6563726f 	strbvs	r7, [r3, #-623]!	; 0x26f
    292c:	32434f64 	subcc	r4, r3, #100, 30	; 0x190
    2930:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2934:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2938:	4f5f4d49 	svcmi	0x005f4d49
    293c:	72745343 	rsbsvc	r5, r4, #201326593	; 0xc000001
    2940:	49746375 	ldmdbmi	r4!, {r0, r2, r4, r5, r6, r8, r9, sp, lr}^
    2944:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2948:	5f4d4954 	svcpl	0x004d4954
    294c:	61647055 	qdsubvs	r7, r5, r4
    2950:	65526574 	ldrbvs	r6, [r2, #-1396]	; 0x574
    2954:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
    2958:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    295c:	00676966 	rsbeq	r6, r7, r6, ror #18
    2960:	5f4d4954 	svcpl	0x004d4954
    2964:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0x553
    2968:	43437463 	movtmi	r7, #13411	; 0x3463
    296c:	00414d44 	subeq	r4, r1, r4, asr #26
    2970:	5f4d4954 	svcpl	0x004d4954
    2974:	6f4d504f 	svcvs	0x004d504f
    2978:	54006564 	strpl	r6, [r0], #-1380	; 0x564
    297c:	4f5f4d49 	svcmi	0x005f4d49
    2980:	6e493143 	dvfvsem	f3, f1, f3
    2984:	54007469 	strpl	r7, [r0], #-1129	; 0x469
    2988:	4f5f4d49 	svcmi	0x005f4d49
    298c:	72503143 	subsvc	r3, r0, #-1073741808	; 0xc0000010
    2990:	616f6c65 	cmnvs	pc, r5, ror #24
    2994:	6e6f4364 	cdpvs	3, 6, cr4, cr15, cr4, {3}
    2998:	00676966 	rsbeq	r6, r7, r6, ror #18
    299c:	5f4d4954 	svcpl	0x004d4954
    29a0:	50314349 	eorspl	r4, r1, r9, asr #6
    29a4:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    29a8:	00797469 	rsbseq	r7, r9, r9, ror #8
    29ac:	5f4d4954 	svcpl	0x004d4954
    29b0:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
    29b4:	75747061 	ldrbvc	r7, [r4, #-97]!	; 0x61
    29b8:	00316572 	eorseq	r6, r1, r2, ror r5
    29bc:	5f4d4954 	svcpl	0x004d4954
    29c0:	6449434f 	strbvs	r4, [r9], #-847	; 0x34f
    29c4:	7453656c 	ldrbvc	r6, [r3], #-1388	; 0x56c
    29c8:	00657461 	rsbeq	r7, r5, r1, ror #8
    29cc:	73706d74 	cmnvc	r0, #116, 26	; 0x1d00
    29d0:	0072636d 	rsbseq	r6, r2, sp, ror #6
    29d4:	5f4d4954 	svcpl	0x004d4954
    29d8:	4633434f 	ldrtmi	r4, [r3], -pc, asr #6
    29dc:	43747361 	cmnmi	r4, #-2080374783	; 0x84000001
    29e0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    29e4:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    29e8:	5400784d 	strpl	r7, [r0], #-2125	; 0x84d
    29ec:	465f4d49 	ldrbmi	r4, [pc], -r9, asr #26
    29f0:	6563726f 	strbvs	r7, [r3, #-623]!	; 0x26f
    29f4:	74634164 	strbtvc	r4, [r3], #-356	; 0x164
    29f8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    29fc:	5f4d4954 	svcpl	0x004d4954
    2a00:	50324349 	eorspl	r4, r2, r9, asr #6
    2a04:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    2a08:	00797469 	rsbseq	r7, r9, r9, ror #8
    2a0c:	5f4d4954 	svcpl	0x004d4954
    2a10:	49746553 	ldmdbmi	r4!, {r0, r1, r4, r6, r8, sl, sp, lr}^
    2a14:	72503443 	subsvc	r3, r0, #1124073472	; 0x43000000
    2a18:	61637365 	cmnvs	r3, r5, ror #6
    2a1c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    2a20:	5f4d4954 	svcpl	0x004d4954
    2a24:	76616c53 			; <UNDEFINED> instruction: 0x76616c53
    2a28:	646f4d65 	strbtvs	r4, [pc], #-3429	; 2a30 <__Stack_Size+0x2630>
    2a2c:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    2a30:	534f5f4d 	movtpl	r5, #65357	; 0xff4d
    2a34:	74534953 	ldrbvc	r4, [r3], #-2387	; 0x953
    2a38:	00657461 	rsbeq	r7, r5, r1, ror #8
    2a3c:	63706d74 	cmnvs	r0, #116, 26	; 0x1d00
    2a40:	54003172 	strpl	r3, [r0], #-370	; 0x172
    2a44:	4f5f4d49 	svcmi	0x005f4d49
    2a48:	6e493243 	cdpvs	2, 4, cr3, cr9, cr3, {2}
    2a4c:	54007469 	strpl	r7, [r0], #-1129	; 0x469
    2a50:	455f4d49 	ldrbmi	r4, [pc, #-3401]	; 1d0f <__Stack_Size+0x190f>
    2a54:	6c435254 	sfmvs	f5, 2, [r3], {84}	; 0x54
    2a58:	4d6b636f 	stclmi	3, cr6, [fp, #-444]!	; 0xfffffe44
    2a5c:	3265646f 	rsbcc	r6, r5, #1862270976	; 0x6f000000
    2a60:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2a64:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2a68:	435f3149 	cmpmi	pc, #1073741842	; 0x40000012
    2a6c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2a70:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2a74:	65475f4d 	strbvs	r5, [r7, #-3917]	; 0xf4d
    2a78:	70614374 	rsbvc	r4, r1, r4, ror r3
    2a7c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
    2a80:	49540032 	ldmdbmi	r4, {r1, r4, r5}^
    2a84:	65475f4d 	strbvs	r5, [r7, #-3917]	; 0xf4d
    2a88:	70614374 	rsbvc	r4, r1, r4, ror r3
    2a8c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
    2a90:	49540033 	ldmdbmi	r4, {r0, r1, r4, r5}^
    2a94:	65475f4d 	strbvs	r5, [r7, #-3917]	; 0xf4d
    2a98:	70614374 	rsbvc	r4, r1, r4, ror r3
    2a9c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
    2aa0:	49540034 	ldmdbmi	r4, {r2, r4, r5}^
    2aa4:	75505f4d 	ldrbvc	r5, [r0, #-3917]	; 0xf4d
    2aa8:	0065736c 	rsbeq	r7, r5, ip, ror #6
    2aac:	5f4d4954 	svcpl	0x004d4954
    2ab0:	42414d44 	submi	r4, r1, #68, 26	; 0x1100
    2ab4:	74737275 	ldrbtvc	r7, [r3], #-629	; 0x275
    2ab8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    2abc:	54006874 	strpl	r6, [r0], #-2164	; 0x874
    2ac0:	4f5f4d49 	svcmi	0x005f4d49
    2ac4:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0x475
    2ac8:	61745374 	cmnvs	r4, r4, ror r3
    2acc:	54006574 	strpl	r6, [r0], #-1396	; 0x574
    2ad0:	4f5f4d49 	svcmi	0x005f4d49
    2ad4:	6e493343 	cdpvs	3, 4, cr3, cr9, cr3, {2}
    2ad8:	54007469 	strpl	r7, [r0], #-1129	; 0x469
    2adc:	435f4d49 	cmpmi	pc, #4672	; 0x1240
    2ae0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    2ae4:	5234434f 	eorspl	r4, r4, #1006632961	; 0x3c000001
    2ae8:	54006665 	strpl	r6, [r0], #-1637	; 0x665
    2aec:	495f4d49 	ldmdbmi	pc, {r0, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    2af0:	45785254 	ldrbmi	r5, [r8, #-596]!	; 0x254
    2af4:	72657478 	rsbvc	r7, r5, #120, 8	; 0x78000000
    2af8:	436c616e 	cmnmi	ip, #-2147483621	; 0x8000001b
    2afc:	6b636f6c 	blvs	18de8b4 <__Stack_Size+0x18de4b4>
    2b00:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2b04:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2b08:	445f4d49 	ldrbmi	r4, [pc], #-3401	; 2b10 <__Stack_Size+0x2710>
    2b0c:	6f43414d 	svcvs	0x0043414d
    2b10:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2b14:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2b18:	5252415f 	subspl	r4, r2, #-1073741801	; 0xc0000017
    2b1c:	6c657250 	sfmvs	f7, 2, [r5], #-320	; 0xfffffec0
    2b20:	4364616f 	cmnmi	r4, #-1073741797	; 0xc000001b
    2b24:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2b28:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2b2c:	44425f4d 	strbmi	r5, [r2], #-3917	; 0xf4d
    2b30:	6e495254 	mcrvs	2, 2, r5, cr9, cr4, {2}
    2b34:	74537469 	ldrbvc	r7, [r3], #-1129	; 0x469
    2b38:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    2b3c:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    2b40:	72656363 	rsbvc	r6, r5, #-1946157055	; 0x8c000001
    2b44:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2b48:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2b4c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    2b50:	7669446b 	strbtvc	r4, [r9], -fp, ror #8
    2b54:	6f697369 	svcvs	0x00697369
    2b58:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    2b5c:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    2b60:	73614632 	cmnvc	r1, #52428800	; 0x3200000
    2b64:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    2b68:	00676966 	rsbeq	r6, r7, r6, ror #18
    2b6c:	5f4d4954 	svcpl	0x004d4954
    2b70:	61657242 	cmnvs	r5, r2, asr #4
    2b74:	6c6f506b 	stclvs	0, cr5, [pc], #-428	; 29d0 <__Stack_Size+0x25d0>
    2b78:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    2b7c:	49540079 	ldmdbmi	r4, {r0, r3, r4, r5, r6}^
    2b80:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    2b84:	7463656c 	strbtvc	r6, [r3], #-1388	; 0x56c
    2b88:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    2b8c:	72547475 	subsvc	r7, r4, #1962934272	; 0x75000000
    2b90:	65676769 	strbvs	r6, [r7, #-1897]!	; 0x769
    2b94:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2b98:	69545f4d 	ldmdbvs	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2b9c:	6142656d 	cmpvs	r2, sp, ror #10
    2ba0:	6e496573 	mcrvs	5, 2, r6, cr9, cr3, {3}
    2ba4:	74537469 	ldrbvc	r7, [r3], #-1129	; 0x469
    2ba8:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    2bac:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2bb0:	6c65535f 	stclvs	3, cr5, [r5], #-380	; 0xfffffe84
    2bb4:	4f746365 	svcmi	0x00746365
    2bb8:	004d7843 	subeq	r7, sp, r3, asr #16
    2bbc:	5f4d4954 	svcpl	0x004d4954
    2bc0:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
    2bc4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2bc8:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
    2bcc:	76654c4b 	strbtvc	r4, [r5], -fp, asr #24
    2bd0:	54006c65 	strpl	r6, [r0], #-3173	; 0xc65
    2bd4:	535f4d49 	cmppl	pc, #4672	; 0x1240
    2bd8:	6f437465 	svcvs	0x00437465
    2bdc:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xe75
    2be0:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2be4:	6e455f4d 	cdpvs	15, 4, cr5, cr5, cr13, {2}
    2be8:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xf63
    2bec:	646f4d72 	strbtvs	r4, [pc], #-3442	; 2bf4 <__Stack_Size+0x27f4>
    2bf0:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    2bf4:	43495f4d 	movtmi	r5, #40781	; 0x9f4d
    2bf8:	73657250 	cmnvc	r5, #80, 4
    2bfc:	656c6163 	strbvs	r6, [ip, #-355]!	; 0x163
    2c00:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2c04:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    2c08:	61656c43 	cmnvs	r5, r3, asr #24
    2c0c:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2c10:	53505f4d 	cmppl	r0, #308	; 0x134
    2c14:	6c655243 	sfmvs	f5, 2, [r5], #-268	; 0xfffffef4
    2c18:	4d64616f 	stfmie	f6, [r4, #-444]!	; 0xfffffe44
    2c1c:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2c20:	5f4d4954 	svcpl	0x004d4954
    2c24:	43784343 	cmnmi	r8, #201326593	; 0xc000001
    2c28:	5400646d 	strpl	r6, [r0], #-1133	; 0x46d
    2c2c:	475f4d49 	ldrbmi	r4, [pc, -r9, asr #26]
    2c30:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    2c34:	61637365 	cmnvs	r3, r5, ror #6
    2c38:	0072656c 	rsbseq	r6, r2, ip, ror #10
    2c3c:	5f4d4954 	svcpl	0x004d4954
    2c40:	42414d44 	submi	r4, r1, #68, 26	; 0x1100
    2c44:	00657361 	rsbeq	r7, r5, r1, ror #6
    2c48:	5f4d4954 	svcpl	0x004d4954
    2c4c:	52544442 	subspl	r4, r4, #1107296256	; 0x42000000
    2c50:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    2c54:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    2c58:	00666544 	rsbeq	r6, r6, r4, asr #10
    2c5c:	5f4d4954 	svcpl	0x004d4954
    2c60:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0x553
    2c64:	61487463 	cmpvs	r8, r3, ror #8
    2c68:	65536c6c 	ldrbvs	r6, [r3, #-3180]	; 0xc6c
    2c6c:	726f736e 	rsbvc	r7, pc, #-1207959551	; 0xb8000001
    2c70:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2c74:	6e65475f 	mcrvs	7, 3, r4, cr5, cr15, {2}
    2c78:	74617265 	strbtvc	r7, [r1], #-613	; 0x265
    2c7c:	65764565 	ldrbvs	r4, [r6, #-1381]!	; 0x565
    2c80:	5400746e 	strpl	r7, [r0], #-1134	; 0x46e
    2c84:	535f4d49 	cmppl	pc, #4672	; 0x1240
    2c88:	43497465 	movtmi	r7, #37989	; 0x9465
    2c8c:	65725032 	ldrbvs	r5, [r2, #-50]!	; 0x32
    2c90:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    2c94:	54007265 	strpl	r7, [r0], #-613	; 0x265
    2c98:	455f4d49 	ldrbmi	r4, [pc, #-3401]	; 1f57 <__Stack_Size+0x1b57>
    2c9c:	646f636e 	strbtvs	r6, [pc], #-878	; 2ca4 <__Stack_Size+0x28a4>
    2ca0:	6e497265 	cdpvs	2, 4, cr7, cr9, cr5, {3}
    2ca4:	66726574 			; <UNDEFINED> instruction: 0x66726574
    2ca8:	43656361 	cmnmi	r5, #-2080374783	; 0x84000001
    2cac:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2cb0:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2cb4:	43435f4d 	movtmi	r5, #16205	; 0x3f4d
    2cb8:	54004e78 	strpl	r4, [r0], #-3704	; 0xe78
    2cbc:	425f4d49 	subsmi	r4, pc, #4672	; 0x1240
    2cc0:	6b616572 	blvs	185c290 <__Stack_Size+0x185be90>
    2cc4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2cc8:	4e434f5f 	mcrmi	15, 2, r4, cr3, cr15, {2}
    2ccc:	616c6f50 	cmnvs	ip, r0, asr pc
    2cd0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2cd4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2cd8:	7849545f 	stmdavc	r9, {r0, r1, r2, r3, r4, r6, sl, ip, lr}^
    2cdc:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0x845
    2ce0:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
    2ce4:	534b4c43 	movtpl	r4, #48195	; 0xbc43
    2ce8:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    2cec:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    2cf0:	70555f4d 	subsvc	r5, r5, sp, asr #30
    2cf4:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0x164
    2cf8:	61736944 	cmnvs	r3, r4, asr #18
    2cfc:	43656c62 	cmnmi	r5, #25088	; 0x6200
    2d00:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2d04:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2d08:	70555f4d 	subsvc	r5, r5, sp, asr #30
    2d0c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0x164
    2d10:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    2d14:	54006563 	strpl	r6, [r0], #-1379	; 0x563
    2d18:	495f4d49 	ldmdbmi	pc, {r0, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    2d1c:	696e4943 	stmdbvs	lr!, {r0, r1, r6, r8, fp, lr}^
    2d20:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
    2d24:	00746375 	rsbseq	r6, r4, r5, ror r3
    2d28:	5f334954 	svcpl	0x00334954
    2d2c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2d30:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2d34:	435f4d49 	cmpmi	pc, #4672	; 0x1240
    2d38:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    2d3c:	6f4d7265 	svcvs	0x004d7265
    2d40:	6f436564 	svcvs	0x00436564
    2d44:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2d48:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2d4c:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2d50:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2d54:	33657261 	cmncc	r5, #268435462	; 0x10000006
    2d58:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2d5c:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    2d60:	434f7261 	movtmi	r7, #62049	; 0xf261
    2d64:	66655233 			; <UNDEFINED> instruction: 0x66655233
    2d68:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2d6c:	34434f5f 	strbcc	r4, [r3], #-3935	; 0xf5f
    2d70:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    2d74:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2d78:	726f465f 	rsbvc	r4, pc, #99614720	; 0x5f00000
    2d7c:	4f646563 	svcmi	0x00646563
    2d80:	6f433443 	svcvs	0x00433443
    2d84:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2d88:	62696c00 	rsbvs	r6, r9, #0, 24
    2d8c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2d90:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    2d94:	31663233 	cmncc	r6, r3, lsr r2
    2d98:	745f7830 	ldrbvc	r7, [pc], #-2096	; 2da0 <__Stack_Size+0x29a0>
    2d9c:	632e6d69 	teqvs	lr, #6720	; 0x1a40
    2da0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2da4:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    2da8:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    2dac:	00726574 	rsbseq	r6, r2, r4, ror r5
    2db0:	5f4d4954 	svcpl	0x004d4954
    2db4:	6e49434f 	cdpvs	3, 4, cr4, cr9, cr15, {2}
    2db8:	74537469 	ldrbvc	r7, [r3], #-1129	; 0x469
    2dbc:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    2dc0:	74784500 	ldrbtvc	r4, [r8], #-1280	; 0x500
    2dc4:	46475254 			; <UNDEFINED> instruction: 0x46475254
    2dc8:	65746c69 	ldrbvs	r6, [r4, #-3177]!	; 0xc69
    2dcc:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2dd0:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    2dd4:	7463656c 	strbtvc	r6, [r3], #-1388	; 0x56c
    2dd8:	76616c53 			; <UNDEFINED> instruction: 0x76616c53
    2ddc:	646f4d65 	strbtvs	r4, [pc], #-3429	; 2de4 <__Stack_Size+0x29e4>
    2de0:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    2de4:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    2de8:	73614631 	cmnvc	r1, #51380224	; 0x3100000
    2dec:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    2df0:	00676966 	rsbeq	r6, r7, r6, ror #18
    2df4:	5f4d4954 	svcpl	0x004d4954
    2df8:	494e434f 	stmdbmi	lr, {r0, r1, r2, r3, r6, r8, r9, lr}^
    2dfc:	53656c64 	cmnpl	r5, #100, 24	; 0x6400
    2e00:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0x174
    2e04:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2e08:	5254455f 	subspl	r4, r4, #398458880	; 0x17c00000
    2e0c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2e10:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2e14:	4f5f4d49 	svcmi	0x005f4d49
    2e18:	504e3143 	subpl	r3, lr, r3, asr #2
    2e1c:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    2e20:	43797469 	cmnmi	r9, #1761607680	; 0x69000000
    2e24:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2e28:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2e2c:	43495f4d 	movtmi	r5, #40781	; 0x9f4d
    2e30:	00435350 	subeq	r5, r3, r0, asr r3
    2e34:	5f4d4954 	svcpl	0x004d4954
    2e38:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    2e3c:	756f5374 	strbvc	r5, [pc, #-884]!	; 2ad0 <__Stack_Size+0x26d0>
    2e40:	00656372 	rsbeq	r6, r5, r2, ror r3
    2e44:	63706d74 	cmnvs	r0, #116, 26	; 0x1d00
    2e48:	31726d63 	cmncc	r2, r3, ror #26
    2e4c:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    2e50:	726d6363 	rsbvc	r6, sp, #-1946157055	; 0x8c000001
    2e54:	49540032 	ldmdbmi	r4, {r1, r4, r5}^
    2e58:	68435f4d 	stmdavs	r3, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2e5c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
    2e60:	4954006c 	ldmdbmi	r4, {r2, r3, r5, r6}^
    2e64:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    2e68:	7463656c 	strbtvc	r6, [r3], #-1388	; 0x56c
    2e6c:	004d4f43 	subeq	r4, sp, r3, asr #30
    2e70:	5f4d4954 	svcpl	0x004d4954
    2e74:	72504343 	subsvc	r4, r0, #201326593	; 0xc000001
    2e78:	616f6c65 	cmnvs	pc, r5, ror #24
    2e7c:	6e6f4364 	cdpvs	3, 6, cr4, cr15, cr4, {3}
    2e80:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2cb8 <__Stack_Size+0x28b8>
    2e84:	6f636900 	svcvs	0x00636900
    2e88:	736f7070 	cmnvc	pc, #112	; 0x70
    2e8c:	73657469 	cmnvc	r5, #1761607680	; 0x69000000
    2e90:	63656c65 	cmnvs	r5, #25856	; 0x6500
    2e94:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    2e98:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2e9c:	746e495f 	strbtvc	r4, [lr], #-2399	; 0x95f
    2ea0:	616e7265 	cmnvs	lr, r5, ror #4
    2ea4:	6f6c436c 	svcvs	0x006c436c
    2ea8:	6f436b63 	svcvs	0x00436b63
    2eac:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2eb0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2eb4:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2eb8:	50314349 	eorspl	r4, r1, r9, asr #6
    2ebc:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    2ec0:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
    2ec4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2ec8:	7843435f 	stmdavc	r3, {r0, r1, r2, r3, r4, r6, r8, r9, lr}^
    2ecc:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2ed0:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2ed4:	50334349 	eorspl	r4, r3, r9, asr #6
    2ed8:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    2edc:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
    2ee0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2ee4:	5343495f 	movtpl	r4, #14687	; 0x395f
    2ee8:	63656c65 	cmnvs	r5, #25856	; 0x6500
    2eec:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    2ef0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2ef4:	5254455f 	subspl	r4, r4, #398458880	; 0x17c00000
    2ef8:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    2efc:	646f4d6b 	strbtvs	r4, [pc], #-3435	; 2f04 <__Stack_Size+0x2b04>
    2f00:	6f433165 	svcvs	0x00433165
    2f04:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2f08:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    2f0c:	726d6363 	rsbvc	r6, sp, #-1946157055	; 0x8c000001
    2f10:	49540078 	ldmdbmi	r4, {r3, r4, r5, r6}^
    2f14:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    2f18:	7463656c 	strbtvc	r6, [r3], #-1388	; 0x56c
    2f1c:	50656e4f 	rsbpl	r6, r5, pc, asr #28
    2f20:	65736c75 	ldrbvs	r6, [r3, #-3189]!	; 0xc75
    2f24:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
    2f28:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2f2c:	4d434f5f 	stclmi	15, cr4, [r3, #-380]	; 0xfffffe84
    2f30:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2f34:	5f4d4954 	svcpl	0x004d4954
    2f38:	4f475254 	svcmi	0x00475254
    2f3c:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    2f40:	54006563 	strpl	r6, [r0], #-1379	; 0x563
    2f44:	4f5f4d49 	svcmi	0x005f4d49
    2f48:	53525353 	cmppl	r2, #1275068417	; 0x4c000001
    2f4c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0x174
    2f50:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2f54:	5043495f 	subpl	r4, r3, pc, asr r9
    2f58:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    2f5c:	00797469 	rsbseq	r7, r9, r9, ror #8
    2f60:	5f4d4954 	svcpl	0x004d4954
    2f64:	6c727443 	cfldrdvs	mvd7, [r2], #-268	; 0xfffffef4
    2f68:	4f4d5750 	svcmi	0x004d5750
    2f6c:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0x475
    2f70:	69007374 	stmdbvs	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    2f74:	70706f63 	rsbsvc	r6, r0, r3, ror #30
    2f78:	7469736f 	strbtvc	r7, [r9], #-879	; 0x36f
    2f7c:	6c6f7065 	stclvs	0, cr7, [pc], #-404	; 2df0 <__Stack_Size+0x29f0>
    2f80:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    2f84:	49540079 	ldmdbmi	r4, {r0, r3, r4, r5, r6}^
    2f88:	44425f4d 	strbmi	r5, [r2], #-3917	; 0xf4d
    2f8c:	6f435254 	svcvs	0x00435254
    2f90:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2f94:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2f98:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    2f9c:	434f7261 	movtmi	r7, #62049	; 0xf261
    2fa0:	66655232 			; <UNDEFINED> instruction: 0x66655232
    2fa4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2fa8:	7849545f 	stmdavc	r9, {r0, r1, r2, r3, r4, r6, sl, ip, lr}^
    2fac:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0x845
    2fb0:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
    2fb4:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    2fb8:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
    2fbc:	00676966 	rsbeq	r6, r7, r6, ror #18
    2fc0:	5f4d4954 	svcpl	0x004d4954
    2fc4:	7473614d 	ldrbtvc	r6, [r3], #-333	; 0x14d
    2fc8:	6c537265 	lfmvs	f7, 2, [r3], {101}	; 0x65
    2fcc:	4d657661 	stclmi	6, cr7, [r5, #-388]!	; 0xfffffe7c
    2fd0:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2fd4:	5f4d4954 	svcpl	0x004d4954
    2fd8:	6f747541 	svcvs	0x00747541
    2fdc:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    2fe0:	74754f63 	ldrbtvc	r4, [r5], #-3939	; 0xf63
    2fe4:	00747570 	rsbseq	r7, r4, r0, ror r5
    2fe8:	5f4d4954 	svcpl	0x004d4954
    2fec:	41746553 	cmnmi	r4, r3, asr r5
    2ff0:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    2ff4:	616f6c65 	cmnvs	pc, r5, ror #24
    2ff8:	49540064 	ldmdbmi	r4, {r2, r5, r6}^
    2ffc:	754f5f4d 	strbvc	r5, [pc, #-3917]	; 20b7 <__Stack_Size+0x1cb7>
    3000:	74757074 	ldrbtvc	r7, [r5], #-116	; 0x74
    3004:	6174534e 	cmnvs	r4, lr, asr #6
    3008:	54006574 	strpl	r6, [r0], #-1396	; 0x574
    300c:	445f4d49 	ldrbmi	r4, [pc], #-3401	; 3014 <__Stack_Size+0x2c14>
    3010:	6d43414d 	stfvse	f4, [r3, #-308]	; 0xfffffecc
    3014:	49540064 	ldmdbmi	r4, {r2, r5, r6}^
    3018:	69545f4d 	ldmdbvs	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    301c:	6142656d 	cmpvs	r2, sp, ror #10
    3020:	74536573 	ldrbvc	r6, [r3], #-1395	; 0x573
    3024:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    3028:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    302c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    3030:	726f465f 	rsbvc	r4, pc, #99614720	; 0x5f00000
    3034:	4f646563 	svcmi	0x00646563
    3038:	6f433143 	svcvs	0x00433143
    303c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    3040:	34495400 	strbcc	r5, [r9], #-1024	; 0x400
    3044:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    3048:	00676966 	rsbeq	r6, r7, r6, ror #18
    304c:	5f4d4954 	svcpl	0x004d4954
    3050:	64616544 	strbtvs	r6, [r1], #-1348	; 0x544
    3054:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
    3058:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    305c:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    3060:	0074696e 	rsbseq	r6, r4, lr, ror #18
    3064:	5f4d4954 	svcpl	0x004d4954
    3068:	4e32434f 	cdpmi	3, 3, cr4, cr2, cr15, {2}
    306c:	616c6f50 	cmnvs	ip, r0, asr pc
    3070:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    3074:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    3078:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    307c:	4f5f4d49 	svcmi	0x005f4d49
    3080:	6f503443 	svcvs	0x00503443
    3084:	6972616c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, sp, lr}^
    3088:	6f437974 	svcvs	0x00437974
    308c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    3090:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    3094:	5444425f 	strbpl	r4, [r4], #-607	; 0x25f
    3098:	72745352 	rsbsvc	r5, r4, #1207959553	; 0x48000001
    309c:	49746375 	ldmdbmi	r4!, {r0, r2, r4, r5, r6, r8, r9, sp, lr}^
    30a0:	0074696e 	rsbseq	r6, r4, lr, ror #18
    30a4:	5f4d4954 	svcpl	0x004d4954
    30a8:	61656c43 	cmnvs	r5, r3, asr #24
    30ac:	31434f72 	hvccc	13554	; 0x34f2
    30b0:	00666552 	rsbeq	r6, r6, r2, asr r5
    30b4:	5f4d4954 	svcpl	0x004d4954
    30b8:	5033434f 	eorspl	r4, r3, pc, asr #6
    30bc:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    30c0:	43797469 	cmnmi	r9, #1761607680	; 0x69000000
    30c4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    30c8:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    30cc:	78455f4d 	stmdavc	r5, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    30d0:	47525474 			; <UNDEFINED> instruction: 0x47525474
    30d4:	616c6f50 	cmnvs	ip, r0, asr pc
    30d8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    30dc:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    30e0:	4d57505f 	ldclmi	0, cr5, [r7, #-380]	; 0xfffffe84
    30e4:	6e6f4349 	cdpvs	3, 6, cr4, cr15, cr9, {2}
    30e8:	00676966 	rsbeq	r6, r7, r6, ror #18
    30ec:	5f4d4954 	svcpl	0x004d4954
    30f0:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    30f4:	61745354 	cmnvs	r4, r4, asr r3
    30f8:	00737574 	rsbseq	r7, r3, r4, ror r5
    30fc:	63706d74 	cmnvs	r0, #116, 26	; 0x1d00
    3100:	54003272 	strpl	r3, [r0], #-626	; 0x272
    3104:	495f4d49 	ldmdbmi	pc, {r0, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    3108:	49540054 	ldmdbmi	r4, {r2, r4, r6}^
    310c:	6f465f4d 	svcvs	0x00465f4d
    3110:	64656372 	strbtvs	r6, [r5], #-882	; 0x372
    3114:	4333434f 	teqmi	r3, #1006632961	; 0x3c000001
    3118:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    311c:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    3120:	43495f4d 	movtmi	r5, #40781	; 0x9f4d
    3124:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    3128:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    312c:	4643495f 			; <UNDEFINED> instruction: 0x4643495f
    3130:	65746c69 	ldrbvs	r6, [r4, #-3177]!	; 0xc69
    3134:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    3138:	4d445f4d 	stclmi	15, cr5, [r4, #-308]	; 0xfffffecc
    313c:	756f5341 	strbvc	r5, [pc, #-833]!	; 2e03 <__Stack_Size+0x2a03>
    3140:	00656372 	rsbeq	r6, r5, r2, ror r3
    3144:	5f4d4954 	svcpl	0x004d4954
    3148:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0x553
    314c:	614d7463 	cmpvs	sp, r3, ror #8
    3150:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    3154:	76616c53 			; <UNDEFINED> instruction: 0x76616c53
    3158:	646f4d65 	strbtvs	r4, [pc], #-3429	; 3160 <__Stack_Size+0x2d60>
    315c:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    3160:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    3164:	7463656c 	strbtvc	r6, [r3], #-1388	; 0x56c
    3168:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xe49
    316c:	69725474 	ldmdbvs	r2!, {r2, r4, r5, r6, sl, ip, lr}^
    3170:	72656767 	rsbvc	r6, r5, #27000832	; 0x19c0000
    3174:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    3178:	32434f5f 	subcc	r4, r3, #380	; 0x17c
    317c:	616c6f50 	cmnvs	ip, r0, asr pc
    3180:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    3184:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    3188:	53006769 	movwpl	r6, #1897	; 0x769
    318c:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    3190:	475f6b63 	ldrbmi	r6, [pc, -r3, ror #22]
    3194:	6f437465 	svcvs	0x00437465
    3198:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xe75
    319c:	696c0072 	stmdbvs	ip!, {r1, r4, r5, r6}^
    31a0:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    31a4:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xf63
    31a8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    31ac:	5f783031 	svcpl	0x00783031
    31b0:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0x973
    31b4:	2e6b6369 	cdpcs	3, 6, cr6, cr11, cr9, {3}
    31b8:	79530063 	ldmdbvc	r3, {r0, r1, r5, r6}^
    31bc:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    31c0:	65475f6b 	strbvs	r5, [r7, #-3947]	; 0xf6b
    31c4:	616c4674 	smcvs	50276	; 0xc464
    31c8:	61745367 	cmnvs	r4, r7, ror #6
    31cc:	00737574 	rsbseq	r7, r3, r4, ror r5
    31d0:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0x953
    31d4:	5f6b6369 	svcpl	0x006b6369
    31d8:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
    31dc:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
    31e0:	53004249 	movwpl	r4, #585	; 0x249
    31e4:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    31e8:	545f6b63 	ldrbpl	r6, [pc], #-2915	; 31f0 <__Stack_Size+0x2df0>
    31ec:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
    31f0:	43006665 	movwmi	r6, #1637	; 0x665
    31f4:	004c5254 	subeq	r5, ip, r4, asr r2
    31f8:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0x953
    31fc:	5f6b6369 	svcpl	0x006b6369
    3200:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    3204:	00726574 	rsbseq	r6, r2, r4, ror r5
    3208:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0x953
    320c:	5f6b6369 	svcpl	0x006b6369
    3210:	534b4c43 	movtpl	r4, #48195	; 0xbc43
    3214:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    3218:	6e6f4365 	cdpvs	3, 6, cr4, cr15, cr5, {3}
    321c:	00676966 	rsbeq	r6, r7, r6, ror #18
    3220:	44414f4c 	strbmi	r4, [r1], #-3916	; 0xf4c
    3224:	73795300 	cmnvc	r9, #0, 6
    3228:	6b636954 	blvs	18dd780 <__Stack_Size+0x18dd380>
    322c:	4b4c435f 	blmi	1313fb0 <__Stack_Size+0x1313bb0>
    3230:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    3234:	69006563 	stmdbvs	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
    3238:	6765746e 	strbvs	r7, [r5, -lr, ror #8]!
    323c:	69647265 	stmdbvs	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    3240:	65646976 	strbvs	r6, [r4, #-2422]!	; 0x976
    3244:	53550072 	cmppl	r5, #114	; 0x72
    3248:	5f545241 	svcpl	0x00545241
    324c:	41485043 	cmpmi	r8, r3, asr #32
    3250:	41535500 	cmpmi	r3, r0, lsl #10
    3254:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    3258:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    325c:	61637365 	cmnvs	r3, r5, ror #6
    3260:	0072656c 	rsbseq	r6, r2, ip, ror #10
    3264:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    3268:	494c5f54 	stmdbmi	ip, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    326c:	6572424e 	ldrbvs	r4, [r2, #-590]!	; 0x24e
    3270:	65446b61 	strbvs	r6, [r4, #-2913]	; 0xb61
    3274:	74636574 	strbtvc	r6, [r3], #-1396	; 0x574
    3278:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    327c:	55006874 	strpl	r6, [r0, #-2164]	; 0x874
    3280:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    3284:	6f6c435f 	svcvs	0x006c435f
    3288:	6e496b63 	vmlsvs.f64	d22, d9, d19
    328c:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
    3290:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
    3294:	53550066 	cmppl	r5, #102	; 0x66
    3298:	5f545241 	svcpl	0x00545241
    329c:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    32a0:	6c707544 	cfldr64vs	mvdx7, [r0], #-272	; 0xfffffef0
    32a4:	6d437865 	stclvs	8, cr7, [r3, #-404]	; 0xfffffe6c
    32a8:	53550064 	cmppl	r5, #100	; 0x64
    32ac:	5f545241 	svcpl	0x00545241
    32b0:	656b6157 	strbvs	r6, [fp, #-343]!	; 0x157
    32b4:	55007055 	strpl	r7, [r0, #-85]	; 0x55
    32b8:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    32bc:	414d445f 	cmpmi	sp, pc, asr r4
    32c0:	00646d43 	rsbeq	r6, r4, r3, asr #26
    32c4:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    32c8:	54495f54 	strbpl	r5, [r9], #-3924	; 0xf54
    32cc:	41535500 	cmpmi	r3, r0, lsl #10
    32d0:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    32d4:	4d414472 	cfstrdmi	mvd4, [r1, #-456]	; 0xfffffe38
    32d8:	0065646f 	rsbeq	r6, r5, pc, ror #8
    32dc:	63627061 	cmnvs	r2, #97	; 0x61
    32e0:	6b636f6c 	blvs	18df098 <__Stack_Size+0x18dec98>
    32e4:	41535500 	cmpmi	r3, r0, lsl #10
    32e8:	435f5452 	cmpmi	pc, #1375731712	; 0x52000000
    32ec:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    32f0:	65505449 	ldrbvs	r5, [r0, #-1097]	; 0x449
    32f4:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    32f8:	74694267 	strbtvc	r4, [r9], #-615	; 0x267
    32fc:	41535500 	cmpmi	r3, r0, lsl #10
    3300:	475f5452 			; <UNDEFINED> instruction: 0x475f5452
    3304:	64726175 	ldrbtvs	r6, [r2], #-373	; 0x175
    3308:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
    330c:	41535500 	cmpmi	r3, r0, lsl #10
    3310:	4c5f5452 	cfldrdmi	mvd5, [pc], {82}	; 0x52
    3314:	72424e49 	subvc	r4, r2, #1168	; 0x490
    3318:	446b6165 	strbtmi	r6, [fp], #-357	; 0x165
    331c:	63657465 	cmnvs	r5, #1694498816	; 0x65000000
    3320:	6e654c74 	mcrvs	12, 3, r4, cr5, cr4, {3}
    3324:	43687467 	cmnmi	r8, #1728053248	; 0x67000000
    3328:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    332c:	53550067 	cmppl	r5, #103	; 0x67
    3330:	5f545241 	svcpl	0x00545241
    3334:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
    3338:	41535500 	cmpmi	r3, r0, lsl #10
    333c:	435f5452 	cmpmi	pc, #1375731712	; 0x52000000
    3340:	6b636f6c 	blvs	18df0f8 <__Stack_Size+0x18decf8>
    3344:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    3348:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0x453
    334c:	55007463 	strpl	r7, [r0, #-1123]	; 0x463
    3350:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    3354:	414d445f 	cmpmi	sp, pc, asr r4
    3358:	00716552 	rsbseq	r6, r1, r2, asr r5
    335c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    3360:	6c435f54 	mcrrvs	15, 5, r5, r3, cr4
    3364:	536b636f 	cmnpl	fp, #-1140850687	; 0xbc000001
    3368:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
    336c:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
    3370:	73750074 	cmnvc	r5, #116	; 0x74
    3374:	78747261 	ldmdavc	r4!, {r0, r5, r6, r9, ip, sp, lr}^
    3378:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0x162
    337c:	43435200 	movtmi	r5, #12800	; 0x3200
    3380:	6f6c435f 	svcvs	0x006c435f
    3384:	53736b63 	cmnpl	r3, #101376	; 0x18c00
    3388:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
    338c:	53550073 	cmppl	r5, #115	; 0x73
    3390:	5f545241 	svcpl	0x00545241
    3394:	41746553 	cmnmi	r4, r3, asr r5
    3398:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0x464
    339c:	55007373 	strpl	r7, [r0, #-883]	; 0x373
    33a0:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    33a4:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    33a8:	72617547 	rsbvc	r7, r1, #297795584	; 0x11c00000
    33ac:	6d695464 	cfstrdvs	mvd5, [r9, #-400]!	; 0xfffffe70
    33b0:	53550065 	cmppl	r5, #101	; 0x65
    33b4:	5f545241 	svcpl	0x00545241
    33b8:	646e6553 	strbtvs	r6, [lr], #-1363	; 0x553
    33bc:	61657242 	cmnvs	r5, r2, asr #4
    33c0:	5355006b 	cmppl	r5, #107	; 0x6b
    33c4:	78545241 	ldmdavc	r4, {r0, r6, r9, ip, lr}^
    33c8:	62696c00 	rsbvs	r6, r9, #0, 24
    33cc:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    33d0:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    33d4:	31663233 	cmncc	r6, r3, lsr r2
    33d8:	755f7830 	ldrbvc	r7, [pc, #-2096]	; 2bb0 <__Stack_Size+0x27b0>
    33dc:	74726173 	ldrbtvc	r6, [r2], #-371	; 0x173
    33e0:	5500632e 	strpl	r6, [r0, #-814]	; 0x32e
    33e4:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    33e8:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    33ec:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
    33f0:	00746375 	rsbseq	r6, r4, r5, ror r3
    33f4:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    33f8:	64415f54 	strbvs	r5, [r1], #-3924	; 0xf54
    33fc:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    3400:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
    3404:	736f7074 	cmnvc	pc, #116	; 0x74
    3408:	41535500 	cmpmi	r3, r0, lsl #10
    340c:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    3410:	43414472 	movtmi	r4, #5234	; 0x1472
    3414:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    3418:	53550067 	cmppl	r5, #103	; 0x67
    341c:	5f545241 	svcpl	0x00545241
    3420:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    3424:	5355006b 	cmppl	r5, #107	; 0x6b
    3428:	5f545241 	svcpl	0x00545241
    342c:	65636552 	strbvs	r6, [r3, #-1362]!	; 0x552
    3430:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    3434:	656b6157 	strbvs	r6, [fp, #-343]!	; 0x157
    3438:	6d437055 	stclvs	0, cr7, [r3, #-340]	; 0xfffffeac
    343c:	53550064 	cmppl	r5, #100	; 0x64
    3440:	5f545241 	svcpl	0x00545241
    3444:	41447249 	cmpmi	r4, r9, asr #4
    3448:	00646d43 	rsbeq	r6, r4, r3, asr #26
    344c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    3450:	494c5f54 	stmdbmi	ip, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    3454:	646d434e 	strbtvs	r4, [sp], #-846	; 0x34e
    3458:	61726600 	cmnvs	r2, r0, lsl #12
    345c:	6f697463 	svcvs	0x00697463
    3460:	646c616e 	strbtvs	r6, [ip], #-366	; 0x16e
    3464:	64697669 	strbtvs	r7, [r9], #-1641	; 0x669
    3468:	55007265 	strpl	r7, [r0, #-613]	; 0x265
    346c:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    3470:	616d535f 	cmnvs	sp, pc, asr r3
    3474:	61437472 	hvcvs	14146	; 0x3742
    3478:	414e6472 	hvcmi	58946	; 0xe642
    347c:	6d434b43 	vstrvs	d20, [r3, #-268]	; 0xfffffef4
    3480:	53550064 	cmppl	r5, #100	; 0x64
    3484:	5f545241 	svcpl	0x00545241
    3488:	72616d53 	rsbvc	r6, r1, #5312	; 0x14c0
    348c:	72614374 	rsbvc	r4, r1, #116, 6	; 0xd0000001
    3490:	646d4364 	strbtvs	r4, [sp], #-868	; 0x364
    3494:	41535500 	cmpmi	r3, r0, lsl #10
    3498:	435f5452 	cmpmi	pc, #1375731712	; 0x52000000
    349c:	6b636f6c 	blvs	18df254 <__Stack_Size+0x18dee54>
    34a0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    34a4:	41535500 	cmpmi	r3, r0, lsl #10
    34a8:	575f5452 			; <UNDEFINED> instruction: 0x575f5452
    34ac:	55656b61 	strbpl	r6, [r5, #-2913]!	; 0xb61
    34b0:	6e6f4370 	mcrvs	3, 3, r4, cr15, cr0, {3}
    34b4:	00676966 	rsbeq	r6, r7, r6, ror #18
    34b8:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    34bc:	72505f54 	subsvc	r5, r0, #84, 30	; 0x150
    34c0:	61637365 	cmnvs	r3, r5, ror #6
    34c4:	0072656c 	rsbseq	r6, r2, ip, ror #10
    34c8:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    34cc:	50435f54 	subpl	r5, r3, r4, asr pc
    34d0:	69004c4f 	stmdbvs	r0, {r0, r1, r2, r3, r6, sl, fp, lr}
    34d4:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
    34d8:	5355006b 	cmppl	r5, #107	; 0x6b
    34dc:	5f545241 	svcpl	0x00545241
    34e0:	7473614c 	ldrbtvc	r6, [r3], #-332	; 0x14c
    34e4:	00746942 	rsbseq	r6, r4, r2, asr #18
    34e8:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
    34ec:	67657274 			; <UNDEFINED> instruction: 0x67657274
    34f0:	62655f00 	rsbvs	r5, r5, #0, 30
    34f4:	5f007373 	svcpl	0x00007373
    34f8:	61747365 	cmnvs	r4, r5, ror #6
    34fc:	6c006b63 	stcvs	11, cr6, [r0], {99}	; 0x63
    3500:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    3504:	732f6372 	teqvc	pc, #-939524095	; 0xc8000001
    3508:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    350c:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    3510:	6365765f 	cmnvs	r5, #99614720	; 0x5f00000
    3514:	2e726f74 	mrccs	15, 3, r6, cr2, cr4, {3}
    3518:	75700063 	ldrbvc	r0, [r0, #-99]!	; 0x63
    351c:	7365446c 	cmnvc	r5, #108, 8	; 0x6c000000
    3520:	735f0074 	cmpvc	pc, #116	; 0x74
    3524:	74616469 	strbtvc	r6, [r1], #-1129	; 0x469
    3528:	75700061 	ldrbvc	r0, [r0, #-97]!	; 0x61
    352c:	6372536c 	cmnvs	r2, #108, 6	; 0xb0000001
    3530:	73655200 	cmnvc	r5, #0, 4
    3534:	485f7465 	ldmdami	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    3538:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    353c:	67007265 	strvs	r7, [r0, -r5, ror #4]
    3540:	6e66705f 	mcrvs	0, 3, r7, cr6, cr15, {2}
    3544:	74636556 	strbtvc	r6, [r3], #-1366	; 0x556
    3548:	0073726f 	rsbseq	r7, r3, pc, ror #4
    354c:	7362735f 	cmnvc	r2, #2080374785	; 0x7c000001
    3550:	735f0073 	cmpvc	pc, #115	; 0x73
    3554:	61746164 	cmnvs	r4, r4, ror #2
    3558:	64655f00 	strbtvs	r5, [r5], #-3840	; 0xf00
    355c:	00617461 	rsbeq	r7, r1, r1, ror #8
    3560:	65766153 	ldrbvs	r6, [r6, #-339]!	; 0x153
    3564:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    3568:	55700065 	ldrbpl	r0, [r0, #-101]!	; 0x65
    356c:	5f726573 	svcpl	0x00726573
    3570:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    3574:	64726164 	ldrbtvs	r6, [r2], #-356	; 0x164
    3578:	7165525f 	cmnvc	r5, pc, asr r2
    357c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0x575
    3580:	696c0073 	stmdbvs	ip!, {r0, r1, r4, r5, r6}^
    3584:	53552f62 	cmppl	r5, #392	; 0x188
    3588:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
    358c:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    3590:	73752f63 	cmnvc	r5, #396	; 0x18c
    3594:	6e695f62 	cdpvs	15, 6, cr5, cr9, cr2, {3}
    3598:	632e7469 	teqvs	lr, #1761607680	; 0x69000000
    359c:	69504500 	ldmdbvs	r0, {r8, sl, lr}^
    35a0:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    35a4:	72507000 	subsvc	r7, r0, #0
    35a8:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    35ac:	5f007974 	svcpl	0x00007974
    35b0:	544e4f43 	strbpl	r4, [lr], #-3907	; 0xf43
    35b4:	5f4c4f52 	svcpl	0x004c4f52
    35b8:	54415453 	strbpl	r5, [r1], #-1107	; 0x453
    35bc:	445f0045 	ldrbmi	r0, [pc], #-69	; 35c4 <__Stack_Size+0x31c4>
    35c0:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    35c4:	4f545049 	svcmi	0x00545049
    35c8:	59545f52 	ldmdbpl	r4, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
    35cc:	6c004550 	cfstr32vs	mvfx4, [r0], {80}	; 0x50
    35d0:	552f6269 	strpl	r6, [pc, #-617]!	; 336f <__Stack_Size+0x2f6f>
    35d4:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    35d8:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    35dc:	752f6372 	strvc	r6, [pc, #-882]!	; 3272 <__Stack_Size+0x2e72>
    35e0:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
    35e4:	2e65726f 	cdpcs	2, 6, cr7, cr5, cr15, {3}
    35e8:	74530063 	ldrbvc	r0, [r3], #-99	; 0x63
    35ec:	61646e61 	cmnvs	r4, r1, ror #28
    35f0:	435f6472 	cmpmi	pc, #1912602624	; 0x72000000
    35f4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    35f8:	74616546 	strbtvc	r6, [r1], #-1350	; 0x546
    35fc:	00657275 	rsbeq	r7, r5, r5, ror r2
    3600:	5453414c 	ldrbpl	r4, [r3], #-332	; 0x14c
    3604:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xf5f
    3608:	5441445f 	strbpl	r4, [r1], #-1119	; 0x45f
    360c:	754f0041 	strbvc	r0, [pc, #-65]	; 35d3 <__Stack_Size+0x31d3>
    3610:	505f3074 	subspl	r3, pc, r4, ror r0	; <UNPREDICTABLE>
    3614:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xf72
    3618:	54007373 	strpl	r7, [r0], #-883	; 0x373
    361c:	5f657079 	svcpl	0x00657079
    3620:	00636552 	rsbeq	r6, r3, r2, asr r5
    3624:	66754270 			; <UNDEFINED> instruction: 0x66754270
    3628:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    362c:	78525045 	ldmdavc	r2, {r0, r2, r6, ip, lr}^
    3630:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    3634:	61745300 	cmnvs	r4, r0, lsl #6
    3638:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
    363c:	65475f64 	strbvs	r5, [r7, #-3940]	; 0xf64
    3640:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    3644:	75676966 	strbvc	r6, [r7, #-2406]!	; 0x966
    3648:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    364c:	43006e6f 	movwmi	r6, #3695	; 0xe6f
    3650:	49464e4f 	stmdbmi	r6, {r0, r1, r2, r3, r6, r9, sl, fp, lr}^
    3654:	45445f47 	strbmi	r5, [r4, #-3911]	; 0xf47
    3658:	49524353 	ldmdbmi	r2, {r0, r1, r4, r6, r8, r9, lr}^
    365c:	524f5450 	subpl	r5, pc, #80, 8	; 0x50000000
    3660:	73655200 	cmnvc	r5, #0, 4
    3664:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0x265
    3668:	6e490064 	cdpvs	0, 4, cr0, cr9, cr4, {3}
    366c:	72505f30 	subsvc	r5, r0, #48, 30	; 0xc0
    3670:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3674:	45530073 	ldrbmi	r0, [r3, #-115]	; 0x73
    3678:	45465f54 	strbmi	r5, [r6, #-3924]	; 0xf54
    367c:	52555441 	subspl	r5, r5, #1090519040	; 0x41000000
    3680:	465f0045 	ldrbmi	r0, [pc], -r5, asr #32
    3684:	55544145 	ldrbpl	r4, [r4, #-325]	; 0x145
    3688:	535f4552 	cmppl	pc, #343932928	; 0x14800000
    368c:	43454c45 	movtmi	r4, #23621	; 0x5c45
    3690:	00524f54 	subseq	r4, r2, r4, asr pc
    3694:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
    3698:	525f4543 	subspl	r4, pc, #281018368	; 0x10c00000
    369c:	544f4d45 	strbpl	r4, [pc], #-3397	; 36a4 <__Stack_Size+0x32a4>
    36a0:	41575f45 	cmpmi	r7, r5, asr #30
    36a4:	5055454b 	subspl	r4, r5, fp, asr #10
    36a8:	49415700 	stmdbmi	r1, {r8, r9, sl, ip, lr}^
    36ac:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xf54
    36b0:	53555441 	cmppl	r5, #1090519040	; 0x41000000
    36b4:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xf5f
    36b8:	49415700 	stmdbmi	r1, {r8, r9, sl, ip, lr}^
    36bc:	45535f54 	ldrbmi	r5, [r3, #-3924]	; 0xf54
    36c0:	00505554 	subseq	r5, r0, r4, asr r5
    36c4:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    36c8:	4c007465 	cfstrsmi	mvf7, [r0], {101}	; 0x65
    36cc:	5f545341 	svcpl	0x00545341
    36d0:	445f4e49 	ldrbmi	r4, [pc], #-3657	; 36d8 <__Stack_Size+0x32d8>
    36d4:	00415441 	subeq	r5, r1, r1, asr #8
    36d8:	5f544553 	svcpl	0x00544553
    36dc:	52444441 	subpl	r4, r4, #1090519040	; 0x41000000
    36e0:	00535345 	subseq	r5, r3, r5, asr #6
    36e4:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0x547
    36e8:	41785450 	cmnmi	r8, r0, asr r4
    36ec:	00726464 	rsbseq	r6, r2, r4, ror #8
    36f0:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    36f4:	6e497375 	mcrvs	3, 2, r7, cr9, cr5, {3}
    36f8:	54006f66 	strpl	r6, [r0], #-3942	; 0xf66
    36fc:	4c41544f 	cfstrdmi	mvd5, [r1], {79}	; 0x4f
    3700:	4552735f 	ldrbmi	r7, [r2, #-863]	; 0x35f
    3704:	53455551 	movtpl	r5, #21841	; 0x5551
    3708:	49770054 	ldmdbmi	r7!, {r2, r4, r6}^
    370c:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    3710:	61730030 	cmnvs	r3, r0, lsr r0
    3714:	775f6576 			; <UNDEFINED> instruction: 0x775f6576
    3718:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    371c:	65006874 	strvs	r6, [r0, #-2164]	; 0x874
    3720:	5f746978 	svcpl	0x00746978
    3724:	61446f4e 	cmpvs	r4, lr, asr #30
    3728:	535f6174 	cmppl	pc, #116, 2
    372c:	70757465 	rsbsvc	r7, r5, r5, ror #8
    3730:	45530030 	ldrbmi	r0, [r3, #-48]	; 0x30
    3734:	45445f54 	strbmi	r5, [r4, #-3924]	; 0xf54
    3738:	49524353 	ldmdbmi	r2, {r0, r1, r4, r6, r8, r9, lr}^
    373c:	524f5450 	subpl	r5, pc, #80, 8	; 0x50000000
    3740:	74614400 	strbtvc	r4, [r1], #-1024	; 0x400
    3744:	754d5f61 	strbvc	r5, [sp, #-3937]	; 0xf61
    3748:	614d5f6c 	cmpvs	sp, ip, ror #30
    374c:	63615078 	cmnvs	r1, #120	; 0x78
    3750:	5374656b 	cmnpl	r4, #448790528	; 0x1ac00000
    3754:	00657a69 	rsbeq	r7, r5, r9, ror #20
    3758:	69504570 	ldmdbvs	r0, {r4, r5, r6, r8, sl, lr}^
    375c:	006f666e 	rsbeq	r6, pc, lr, ror #12
    3760:	54544553 	ldrbpl	r4, [r4], #-1363	; 0x553
    3764:	5f474e49 	svcpl	0x00474e49
    3768:	53005055 	movwpl	r5, #85	; 0x55
    376c:	646e6174 	strbtvs	r6, [lr], #-372	; 0x174
    3770:	5f647261 	svcpl	0x00647261
    3774:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    3778:	6f50646e 	svcvs	0x0050646e
    377c:	46746e69 	ldrbtmi	r6, [r4], -r9, ror #28
    3780:	75746165 	ldrbvc	r6, [r4, #-357]!	; 0x165
    3784:	50006572 	andpl	r6, r0, r2, ror r5
    3788:	3074736f 	rsbscc	r7, r4, pc, ror #6
    378c:	6f72505f 	svcvs	0x0072505f
    3790:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3794:	444e4500 	strbmi	r4, [lr], #-1280	; 0x500
    3798:	4e494f50 	mcrmi	15, 2, r4, cr9, cr0, {2}
    379c:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xf54
    37a0:	004c4c41 	subeq	r4, ip, r1, asr #24
    37a4:	5f544547 	svcpl	0x00544547
    37a8:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xe49
    37ac:	43414652 	movtmi	r4, #5714	; 0x1652
    37b0:	56770045 	ldrbtpl	r0, [r7], -r5, asr #32
    37b4:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
    37b8:	79420031 	stmdbvc	r2, {r0, r4, r5}^
    37bc:	77536574 			; <UNDEFINED> instruction: 0x77536574
    37c0:	43007061 	movwmi	r7, #97	; 0x61
    37c4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    37c8:	474f5444 	strbmi	r5, [pc, -r4, asr #8]
    37cc:	0058525f 	subseq	r5, r8, pc, asr r2
    37d0:	65766173 	ldrbvs	r6, [r6, #-371]!	; 0x173
    37d4:	654c725f 	strbvs	r7, [ip, #-607]	; 0x25f
    37d8:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    37dc:	454c4300 	strbmi	r4, [ip, #-768]	; 0x300
    37e0:	465f5241 	ldrbmi	r5, [pc], -r1, asr #4
    37e4:	55544145 	ldrbpl	r4, [r4, #-325]	; 0x145
    37e8:	53004552 	movwpl	r4, #1362	; 0x552
    37ec:	4c4c4154 	stfmie	f4, [ip], {84}	; 0x54
    37f0:	44004445 	strmi	r4, [r0], #-1093	; 0x445
    37f4:	53617461 	cmnpl	r1, #1627389952	; 0x61000000
    37f8:	65676174 	strbvs	r6, [r7, #-372]!	; 0x174
    37fc:	0074754f 	rsbseq	r7, r4, pc, asr #10
    3800:	5f544553 	svcpl	0x00544553
    3804:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xe49
    3808:	43414652 	movtmi	r4, #5714	; 0x1652
    380c:	74530045 	ldrbvc	r0, [r3], #-69	; 0x45
    3810:	61646e61 	cmnvs	r4, r1, ror #28
    3814:	475f6472 			; <UNDEFINED> instruction: 0x475f6472
    3818:	6e497465 	cdpvs	4, 4, cr7, cr9, cr5, {3}
    381c:	66726574 			; <UNDEFINED> instruction: 0x66726574
    3820:	00656361 	rsbeq	r6, r5, r1, ror #6
    3824:	616c6552 	cmnvs	ip, r2, asr r5
    3828:	5f646574 	svcpl	0x00646574
    382c:	70646e45 	rsbvc	r6, r4, r5, asr #28
    3830:	746e696f 	strbtvc	r6, [lr], #-2415	; 0x96f
    3834:	54454700 	strbpl	r4, [r5], #-1792	; 0x700
    3838:	5345445f 	movtpl	r4, #21599	; 0x545f
    383c:	50495243 	subpl	r5, r9, r3, asr #4
    3840:	00524f54 	subseq	r4, r2, r4, asr pc
    3844:	49525453 	ldmdbmi	r2, {r0, r1, r4, r6, sl, ip, lr}^
    3848:	445f474e 	ldrbmi	r4, [pc], #-1870	; 3850 <__Stack_Size+0x3450>
    384c:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    3850:	4f545049 	svcmi	0x00545049
    3854:	61440052 	qdaddvs	r0, r2, r4
    3858:	74536174 	ldrbvc	r6, [r3], #-372	; 0x174
    385c:	49656761 	stmdbmi	r5!, {r0, r5, r6, r8, r9, sl, sp, lr}^
    3860:	6c43006e 	mcrrvs	0, 6, r0, r3, cr14
    3864:	44726165 	ldrbtmi	r6, [r2], #-357	; 0x165
    3868:	5f474f54 	svcpl	0x00474f54
    386c:	5f005854 	svcpl	0x00005854
    3870:	67655277 			; <UNDEFINED> instruction: 0x67655277
    3874:	006c6156 	rsbeq	r6, ip, r6, asr r1
    3878:	75746553 	ldrbvc	r6, [r4, #-1363]!	; 0x553
    387c:	505f3070 	subspl	r3, pc, r0, ror r0	; <UNPREDICTABLE>
    3880:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xf72
    3884:	45007373 	strmi	r7, [r0, #-883]	; 0x373
    3888:	63657078 	cmnvs	r5, #120	; 0x78
    388c:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xf74
    3890:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    3894:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xf5f
    3898:	49415700 	stmdbmi	r1, {r8, r9, sl, ip, lr}^
    389c:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xf54
    38a0:	53555441 	cmppl	r5, #1090519040	; 0x41000000
    38a4:	004e495f 	subeq	r4, lr, pc, asr r9
    38a8:	53554150 	cmppl	r5, #80, 2
    38ac:	74530045 	ldrbvc	r0, [r3], #-69	; 0x45
    38b0:	61646e61 	cmnvs	r4, r1, ror #28
    38b4:	535f6472 	cmppl	pc, #1912602624	; 0x72000000
    38b8:	6e497465 	cdpvs	4, 4, cr7, cr9, cr5, {3}
    38bc:	66726574 			; <UNDEFINED> instruction: 0x66726574
    38c0:	00656361 	rsbeq	r6, r5, r1, ror #6
    38c4:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0x552
    38c8:	5f747365 	svcpl	0x00747365
    38cc:	53006f4e 	movwpl	r6, #3918	; 0xf4e
    38d0:	646e6174 	strbtvs	r6, [lr], #-372	; 0x174
    38d4:	5f647261 	svcpl	0x00647261
    38d8:	44746553 	ldrbtmi	r6, [r4], #-1363	; 0x553
    38dc:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    38e0:	61654665 	cmnvs	r5, r5, ror #12
    38e4:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
    38e8:	4e595300 	cdpmi	3, 5, cr5, cr9, cr0, {0}
    38ec:	465f4843 	ldrbmi	r4, [pc], -r3, asr #16
    38f0:	454d4152 	strbmi	r4, [sp, #-338]	; 0x152
    38f4:	414d5000 	mrsmi	r5, (UNDEF: 77)
    38f8:	73556f54 	cmpvc	r5, #84, 30	; 0x150
    38fc:	75427265 	strbvc	r7, [r2, #-613]	; 0x265
    3900:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    3904:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
    3908:	65447000 	strbvs	r7, [r4, #-0]
    390c:	47006373 	smlsdxmi	r0, r3, r3, r6
    3910:	535f5445 	cmppl	pc, #1157627904	; 0x45000000
    3914:	55544154 	ldrbpl	r4, [r4, #-340]	; 0x154
    3918:	4e450053 	mcrmi	0, 2, r0, cr5, cr3, {2}
    391c:	494f5044 	stmdbmi	pc, {r2, r6, ip, lr}^	; <UNPREDICTABLE>
    3920:	445f544e 	ldrbmi	r5, [pc], #-1102	; 3928 <__Stack_Size+0x3528>
    3924:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    3928:	4f545049 	svcmi	0x00545049
    392c:	65520052 	ldrbvs	r0, [r2, #-82]	; 0x52
    3930:	746c7573 	strbtvc	r7, [ip], #-1395	; 0x573
    3934:	76615300 	strbtvc	r5, [r1], -r0, lsl #6
    3938:	74535265 	ldrbvc	r5, [r3], #-613	; 0x265
    393c:	00657461 	rsbeq	r7, r5, r1, ror #8
    3940:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xe49
    3944:	43414652 	movtmi	r4, #5714	; 0x1652
    3948:	45445f45 	strbmi	r5, [r4, #-3909]	; 0xf45
    394c:	49524353 	ldmdbmi	r2, {r0, r1, r4, r6, r8, r9, lr}^
    3950:	524f5450 	subpl	r5, pc, #80, 8	; 0x50000000
    3954:	65447000 	strbvs	r7, [r4, #-0]
    3958:	45470076 	strbmi	r0, [r7, #-118]	; 0x76
    395c:	4f435f54 	svcmi	0x00435f54
    3960:	4749464e 	strbmi	r4, [r9, -lr, asr #12]
    3964:	54415255 	strbpl	r5, [r1], #-597	; 0x255
    3968:	004e4f49 	subeq	r4, lr, r9, asr #30
    396c:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
    3970:	445f4543 	ldrbmi	r4, [pc], #-1347	; 3978 <__Stack_Size+0x3578>
    3974:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    3978:	4f545049 	svcmi	0x00545049
    397c:	74530052 	ldrbvc	r0, [r3], #-82	; 0x52
    3980:	61646e61 	cmnvs	r4, r1, ror #28
    3984:	475f6472 			; <UNDEFINED> instruction: 0x475f6472
    3988:	74537465 	ldrbvc	r7, [r3], #-1125	; 0x465
    398c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    3990:	76615300 	strbtvc	r5, [r1], -r0, lsl #6
    3994:	74535465 	ldrbvc	r5, [r3], #-1125	; 0x465
    3998:	00657461 	rsbeq	r7, r5, r1, ror #8
    399c:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    39a0:	64726164 	ldrbtvs	r6, [r2], #-356	; 0x164
    39a4:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    39a8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    39ac:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
    39b0:	6f697461 	svcvs	0x00697461
    39b4:	4553006e 	ldrbmi	r0, [r3, #-110]	; 0x6e
    39b8:	4f435f54 	svcmi	0x00435f54
    39bc:	4749464e 	strbmi	r4, [r9, -lr, asr #12]
    39c0:	54415255 	strbpl	r5, [r1], #-597	; 0x255
    39c4:	004e4f49 	subeq	r4, lr, r9, asr #30
    39c8:	5f504f4e 	svcpl	0x00504f4e
    39cc:	636f7250 	cmnvs	pc, #80, 4
    39d0:	00737365 	rsbseq	r7, r3, r5, ror #6
    39d4:	73556270 	cmpvc	r5, #112, 4
    39d8:	66754272 			; <UNDEFINED> instruction: 0x66754272
    39dc:	424e7700 	submi	r7, lr, #0, 14
    39e0:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    39e4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    39e8:	74003170 	strvc	r3, [r0], #-368	; 0x170
    39ec:	32706d65 	rsbscc	r6, r0, #6464	; 0x1940
    39f0:	4d507700 	ldclmi	7, cr7, [r0, #-0]
    39f4:	66754241 	ldrbtvs	r4, [r5], -r1, asr #4
    39f8:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    39fc:	77647000 	strbvc	r7, [r4, -r0]!
    3a00:	006c6156 	rsbeq	r6, ip, r6, asr r1
    3a04:	2f62696c 	svccs	0x0062696c
    3a08:	5f425355 	svcpl	0x00425355
    3a0c:	2f62696c 	svccs	0x0062696c
    3a10:	2f637273 	svccs	0x00637273
    3a14:	5f627375 	svcpl	0x00627375
    3a18:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
    3a1c:	50450063 	subpl	r0, r5, r3, rrx
    3a20:	5542445f 	strbpl	r4, [r2, #-1119]	; 0x45f
    3a24:	52455f46 	subpl	r5, r5, #280	; 0x118
    3a28:	54620052 	strbtpl	r0, [r2], #-82	; 0x52
    3a2c:	00706d65 	rsbseq	r6, r0, r5, ror #26
    3a30:	67676f54 			; <UNDEFINED> instruction: 0x67676f54
    3a34:	5444656c 	strbpl	r6, [r4], #-1388	; 0x56c
    3a38:	525f474f 	subspl	r4, pc, #20709376	; 0x13c0000
    3a3c:	6c430058 	mcrrvs	0, 5, r0, r3, cr8
    3a40:	45726165 	ldrbmi	r6, [r2, #-357]!	; 0x165
    3a44:	756f4450 	strbvc	r4, [pc, #-1104]!	; 35fc <__Stack_Size+0x31fc>
    3a48:	42656c62 	rsbmi	r6, r5, #25088	; 0x6200
    3a4c:	00666675 	rsbeq	r6, r6, r5, ror r6
    3a50:	42746547 	rsbsmi	r6, r4, #297795584	; 0x11c00000
    3a54:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
    3a58:	65530045 	ldrbvs	r0, [r3, #-69]	; 0x45
    3a5c:	54534974 	ldrbpl	r4, [r3], #-2420	; 0x974
    3a60:	65530052 	ldrbvs	r0, [r3, #-82]	; 0x52
    3a64:	41504574 	cmpmi	r0, r4, ror r5
    3a68:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0x464
    3a6c:	45007373 	strmi	r7, [r0, #-883]	; 0x373
    3a70:	6f70646e 	svcvs	0x0070646e
    3a74:	5f746e69 	svcpl	0x00746e69
    3a78:	474f5444 	strbmi	r5, [pc, -r4, asr #8]
    3a7c:	6174535f 	cmnvs	r4, pc, asr r3
    3a80:	00737574 	rsbseq	r7, r3, r4, ror r5
    3a84:	5f50455f 	svcpl	0x0050455f
    3a88:	46554244 	ldrbmi	r4, [r5], -r4, asr #4
    3a8c:	5249445f 	subpl	r4, r9, #1593835520	; 0x5f000000
    3a90:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    3a94:	52544e43 	subspl	r4, r4, #1072	; 0x430
    3a98:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    3a9c:	62445045 	subvs	r5, r4, #69	; 0x45
    3aa0:	6675426c 	ldrbtvs	r4, [r5], -ip, ror #4
    3aa4:	756f4331 	strbvc	r4, [pc, #-817]!	; 377b <__Stack_Size+0x337b>
    3aa8:	7700746e 	strvc	r7, [r0, -lr, ror #8]
    3aac:	6f6c424e 	svcvs	0x006c424e
    3ab0:	00736b63 	rsbseq	r6, r3, r3, ror #22
    3ab4:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    3ab8:	4f50444e 	svcmi	0x0050444e
    3abc:	00544e49 	subseq	r4, r4, r9, asr #28
    3ac0:	445f5045 	ldrbmi	r5, [pc], #-69	; 3ac8 <__Stack_Size+0x36c8>
    3ac4:	5f465542 	svcpl	0x00465542
    3ac8:	43004e49 	movwmi	r4, #3657	; 0xe49
    3acc:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    3ad0:	4b5f5045 	blmi	17d7bec <__Stack_Size+0x17d77ec>
    3ad4:	00444e49 	subeq	r4, r4, r9, asr #28
    3ad8:	61656c43 	cmnvs	r5, r3, asr #24
    3adc:	5f504572 	svcpl	0x00504572
    3ae0:	5f525443 	svcpl	0x00525443
    3ae4:	62005854 	andvs	r5, r0, #84, 16	; 0x540000
    3ae8:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    3aec:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    3af0:	52544e43 	subspl	r4, r4, #1072	; 0x430
    3af4:	77647000 	strbvc	r7, [r4, -r0]!
    3af8:	00676552 	rsbeq	r6, r7, r2, asr r5
    3afc:	46746547 	ldrbtmi	r6, [r4], -r7, asr #10
    3b00:	7700524e 	strvc	r5, [r0, -lr, asr #4]
    3b04:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    3b08:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    3b0c:	44444144 	strbmi	r4, [r4], #-324	; 0x144
    3b10:	65470052 	strbvs	r0, [r7, #-82]	; 0x52
    3b14:	44504574 	ldrbmi	r4, [r0], #-1396	; 0x574
    3b18:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xc62
    3b1c:	64413066 	strbvs	r3, [r1], #-102	; 0x66
    3b20:	47007264 	strmi	r7, [r0, -r4, ror #4]
    3b24:	50457465 	subpl	r7, r5, r5, ror #8
    3b28:	74537854 	ldrbvc	r7, [r3], #-2132	; 0x854
    3b2c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    3b30:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    3b34:	62445045 	subvs	r5, r4, #69	; 0x45
    3b38:	6675426c 	ldrbtvs	r4, [r5], -ip, ror #4
    3b3c:	64644166 	strbtvs	r4, [r4], #-358	; 0x166
    3b40:	65470072 	strbvs	r0, [r7, #-114]	; 0x72
    3b44:	44504574 	ldrbmi	r4, [r0], #-1396	; 0x574
    3b48:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xc62
    3b4c:	72694466 	rsbvc	r4, r9, #1711276032	; 0x66000000
    3b50:	62696c00 	rsbvs	r6, r9, #0, 24
    3b54:	4253552f 	subsmi	r5, r3, #197132288	; 0xbc00000
    3b58:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    3b5c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    3b60:	6273752f 	rsbsvs	r7, r3, #197132288	; 0xbc00000
    3b64:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    3b68:	00632e73 	rsbeq	r2, r3, r3, ror lr
    3b6c:	57775377 			; <UNDEFINED> instruction: 0x57775377
    3b70:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    3b74:	78525045 	ldmdavc	r2, {r0, r2, r6, ip, lr}^
    3b78:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    3b7c:	53007375 	movwpl	r7, #885	; 0x375
    3b80:	50457465 	subpl	r7, r5, r5, ror #8
    3b84:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    3b88:	41306675 	teqmi	r0, r5, ror r6
    3b8c:	00726464 	rsbseq	r6, r2, r4, ror #8
    3b90:	44746553 	ldrbtmi	r6, [r4], #-1363	; 0x553
    3b94:	52444441 	subpl	r4, r4, #1090519040	; 0x41000000
    3b98:	70456200 	subvc	r6, r5, r0, lsl #4
    3b9c:	006d754e 	rsbeq	r7, sp, lr, asr #10
    3ba0:	61656c43 	cmnvs	r5, r3, asr #24
    3ba4:	5f504572 	svcpl	0x00504572
    3ba8:	5f525443 	svcpl	0x00525443
    3bac:	53005852 	movwpl	r5, #2130	; 0x852
    3bb0:	50457465 	subpl	r7, r5, r5, ror #8
    3bb4:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    3bb8:	52785274 	rsbspl	r5, r8, #116, 4	; 0x40000007
    3bbc:	54006765 	strpl	r6, [r0], #-1893	; 0x765
    3bc0:	6c67676f 	stclvs	7, cr6, [r7], #-444	; 0xfffffe44
    3bc4:	4f544465 	svcmi	0x00544465
    3bc8:	58545f47 	ldmdapl	r4, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    3bcc:	75427700 	strbvc	r7, [r2, #-1792]	; 0x700
    3bd0:	64413066 	strbvs	r3, [r1], #-102	; 0x66
    3bd4:	47007264 	strmi	r7, [r0, -r4, ror #4]
    3bd8:	78527465 	ldmdavc	r2, {r0, r2, r5, r6, sl, ip, sp, lr}^
    3bdc:	6c617453 	cfstrdvs	mvd7, [r1], #-332	; 0xfffffeb4
    3be0:	6174536c 	cmnvs	r4, ip, ror #6
    3be4:	00737574 	rsbseq	r7, r3, r4, ror r5
    3be8:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0x547
    3bec:	6c624450 	cfstrdvs	mvd4, [r2], #-320	; 0xfffffec0
    3bf0:	30667542 	rsbcc	r7, r6, r2, asr #10
    3bf4:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    3bf8:	65530074 	ldrbvs	r0, [r3, #-116]	; 0x74
    3bfc:	44504574 	ldrbmi	r4, [r0], #-1396	; 0x574
    3c00:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xc62
    3c04:	6f433066 	svcvs	0x00433066
    3c08:	00746e75 	rsbseq	r6, r4, r5, ror lr
    3c0c:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0x547
    3c10:	61745378 	cmnvs	r4, r8, ror r3
    3c14:	74536c6c 	ldrbvc	r6, [r3], #-3180	; 0xc6c
    3c18:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    3c1c:	5f504500 	svcpl	0x00504500
    3c20:	46554244 	ldrbmi	r4, [r5], -r4, asr #4
    3c24:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xf5f
    3c28:	69446200 	stmdbvs	r4, {r9, sp, lr}^
    3c2c:	65470072 	strbvs	r0, [r7, #-114]	; 0x72
    3c30:	44504574 	ldrbmi	r4, [r0], #-1396	; 0x574
    3c34:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xc62
    3c38:	6f433166 	svcvs	0x00433166
    3c3c:	00746e75 	rsbseq	r6, r4, r5, ror lr
    3c40:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0x547
    3c44:	64644150 	strbtvs	r4, [r4], #-336	; 0x150
    3c48:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    3c4c:	576f5400 	strbpl	r5, [pc, -r0, lsl #8]!
    3c50:	0064726f 	rsbeq	r7, r4, pc, ror #4
    3c54:	5f746553 	svcpl	0x00746553
    3c58:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    3c5c:	4f5f7375 	svcmi	0x005f7375
    3c60:	77007475 	smlsdxvc	r0, r5, r4, r7
    3c64:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    3c68:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    3c6c:	52545349 	subspl	r5, r4, #603979777	; 0x24000001
    3c70:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    3c74:	78525045 	ldmdavc	r2, {r0, r2, r6, ip, lr}^
    3c78:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    3c7c:	65470074 	strbvs	r0, [r7, #-116]	; 0x74
    3c80:	44504574 	ldrbmi	r4, [r0], #-1396	; 0x574
    3c84:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xc62
    3c88:	64413166 	strbvs	r3, [r1], #-358	; 0x166
    3c8c:	53007264 	movwpl	r7, #612	; 0x264
    3c90:	50457465 	subpl	r7, r5, r5, ror #8
    3c94:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    3c98:	43666675 	cmnmi	r6, #122683392	; 0x7500000
    3c9c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    3ca0:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    3ca4:	42756f44 	rsbsmi	r6, r5, #68, 30	; 0x110
    3ca8:	7542656c 	strbvc	r6, [r2, #-1388]	; 0x56c
    3cac:	50456666 	subpl	r6, r5, r6, ror #12
    3cb0:	6c617453 	cfstrdvs	mvd7, [r1], #-332	; 0xfffffeb4
    3cb4:	5277006c 	rsbspl	r0, r7, #108	; 0x6c
    3cb8:	61566765 	cmpvs	r6, r5, ror #14
    3cbc:	0065756c 	rsbeq	r7, r5, ip, ror #10
    3cc0:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0x547
    3cc4:	4f50444e 	svcmi	0x0050444e
    3cc8:	00544e49 	subseq	r4, r4, r9, asr #28
    3ccc:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0x547
    3cd0:	43785450 	cmnmi	r8, #80, 8	; 0x50000000
    3cd4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    3cd8:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    3cdc:	62445045 	subvs	r5, r4, #69	; 0x45
    3ce0:	6675426c 	ldrbtvs	r4, [r5], -ip, ror #4
    3ce4:	64644131 	strbtvs	r4, [r4], #-305	; 0x131
    3ce8:	65530072 	ldrbvs	r0, [r3, #-114]	; 0x72
    3cec:	5f504574 	svcpl	0x00504574
    3cf0:	444e494b 	strbmi	r4, [lr], #-2379	; 0x94b
    3cf4:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    3cf8:	6f445045 	svcvs	0x00445045
    3cfc:	656c6275 	strbvs	r6, [ip, #-629]!	; 0x275
    3d00:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    3d04:	65527700 	ldrbvs	r7, [r2, #-1792]	; 0x700
    3d08:	42770074 	rsbsmi	r0, r7, #116	; 0x74
    3d0c:	41316675 	teqmi	r1, r5, ror r6
    3d10:	00726464 	rsbseq	r6, r2, r4, ror #8
    3d14:	65657246 	strbvs	r7, [r5, #-582]!	; 0x246
    3d18:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3d1c:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    3d20:	47007265 	strmi	r7, [r0, -r5, ror #4]
    3d24:	50457465 	subpl	r7, r5, r5, ror #8
    3d28:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    3d2c:	70456200 	subvc	r6, r5, r0, lsl #4
    3d30:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    3d34:	74614400 	strbtvc	r4, [r1], #-1024	; 0x400
    3d38:	6e654c61 	cdpvs	12, 6, cr4, cr5, cr1, {3}
    3d3c:	00687467 	rsbeq	r7, r8, r7, ror #8
    3d40:	66754270 			; <UNDEFINED> instruction: 0x66754270
    3d44:	50726566 	rsbspl	r6, r2, r6, ror #10
    3d48:	746e696f 	strbtvc	r6, [lr], #-2415	; 0x96f
    3d4c:	6c007265 	sfmvs	f7, 4, [r0], {101}	; 0x65
    3d50:	552f6269 	strpl	r6, [pc, #-617]!	; 3aef <__Stack_Size+0x36ef>
    3d54:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    3d58:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    3d5c:	752f6372 	strvc	r6, [pc, #-882]!	; 39f2 <__Stack_Size+0x35f2>
    3d60:	735f6273 	cmpvc	pc, #805306375	; 0x30000007
    3d64:	632e6c69 	teqvs	lr, #26880	; 0x6900
    3d68:	52544300 	subspl	r4, r4, #0, 6
    3d6c:	0050485f 	subseq	r4, r0, pc, asr r8
    3d70:	56504577 			; <UNDEFINED> instruction: 0x56504577
    3d74:	6c006c61 	stcvs	12, cr6, [r0], {97}	; 0x61
    3d78:	552f6269 	strpl	r6, [pc, #-617]!	; 3b17 <__Stack_Size+0x3717>
    3d7c:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    3d80:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    3d84:	752f6372 	strvc	r6, [pc, #-882]!	; 3a1a <__Stack_Size+0x361a>
    3d88:	695f6273 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    3d8c:	632e746e 	teqvs	lr, #1845493760	; 0x6e000000
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	...
*******************************************************************************/
void CTR_HP(void)
{
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
       8:	00500001 	subseq	r0, r0, r1
       c:	00000000 	andeq	r0, r0, r0
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
      10:	04000000 	streq	r0, [r0], #-0
      14:	5001f300 	andpl	pc, r1, r0, lsl #6
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
      18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      1c:	00000000 	andeq	r0, r0, r0
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
      20:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    if ((wEPVal & EP_CTR_RX) != 0)
      2c:	7f700003 	svcvc	0x00700003
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      34:	00000000 	andeq	r0, r0, r0
      38:	f3000400 	vshl.u8	d0, d0, d0

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	009f5001 	addseq	r5, pc, r1

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	00000000 	andeq	r0, r0, r0
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	01000000 	mrseq	r0, (UNDEF: 0)
      48:	00005000 	andeq	r5, r0, r0
      4c:	00000000 	andeq	r0, r0, r0

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	00040000 	andeq	r0, r4, r0
      54:	9f5001f3 	svcls	0x005001f3
	...


    } /* if((wEPVal & EP_CTR_TX) != 0) */

  }/* while(...) */
}
      68:	9f310002 	svcls	0x00310002
	...
      74:	9f310002 	svcls	0x00310002
	...
      88:	00500001 	subseq	r0, r0, r1
      8c:	00000000 	andeq	r0, r0, r0
      90:	04000000 	streq	r0, [r0], #-0
      94:	5001f300 	andpl	pc, r1, r0, lsl #6
      98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      9c:	00000000 	andeq	r0, r0, r0
      a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
      ac:	01f30004 	mvnseq	r0, r4
      b0:	00009f50 	andeq	r9, r0, r0, asr pc
      break; 
      
    default:
      break;
  }
}
      b4:	00000000 	andeq	r0, r0, r0
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	02280000 	eoreq	r0, r8, #0
      bc:	02300800 	eorseq	r0, r0, #0, 16
      c0:	00010800 	andeq	r0, r1, r0, lsl #16
      c4:	00023050 	andeq	r3, r2, r0, asr r0
      c8:	00025008 	andeq	r5, r2, r8
      cc:	f3000408 	vshl.u8	d0, d8, d0
      d0:	009f5001 	addseq	r5, pc, r1
	...
      e0:	01000000 	mrseq	r0, (UNDEF: 0)
      e4:	00005000 	andeq	r5, r0, r0
      e8:	00000000 	andeq	r0, r0, r0
      ec:	00040000 	andeq	r0, r4, r0
      f0:	9f5001f3 	svcls	0x005001f3
	...
      fc:	00540001 	subseq	r0, r4, r1
     100:	00000000 	andeq	r0, r0, r0
     104:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     108:	09007500 	stmdbeq	r0, {r8, sl, ip, sp, lr}
     10c:	00741ef6 	ldrshteq	r1, [r4], #-230	; 0xffffff1a
     110:	00009f22 	andeq	r9, r0, r2, lsr #30
     114:	00000000 	andeq	r0, r0, r0
     118:	00090000 	andeq	r0, r9, r0
     11c:	f6090075 			; <UNDEFINED> instruction: 0xf6090075
     120:	2250741e 	subscs	r7, r0, #503316480	; 0x1e000000
     124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     134:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
     140:	0075000c 	rsbseq	r0, r5, ip
     144:	640825f7 	strvs	r2, [r8], #-1527	; 0x5f7
     148:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
     14c:	00009f00 	andeq	r9, r0, r0, lsl #30
     150:	00000000 	andeq	r0, r0, r0
     154:	00010000 	andeq	r0, r1, r0
     158:	00000055 	andeq	r0, r0, r5, asr r0
     15c:	00000000 	andeq	r0, r0, r0
     160:	00025000 	andeq	r5, r2, r0
     164:	00025408 	andeq	r5, r2, r8, lsl #8
     168:	50000108 	andpl	r0, r0, r8, lsl #2
     16c:	08000254 	stmdaeq	r0, {r2, r4, r6, r9}
     170:	08000262 	stmdaeq	r0, {r1, r5, r6, r9}
     174:	01f30004 	mvnseq	r0, r4
     178:	00009f50 	andeq	r9, r0, r0, asr pc
     17c:	00000000 	andeq	r0, r0, r0
     180:	02500000 	subseq	r0, r0, #0
     184:	02540800 	subseq	r0, r4, #0, 16
     188:	00020800 	andeq	r0, r2, r0, lsl #16
     18c:	02549f30 	subseq	r9, r4, #48, 30	; 0xc0
     190:	02580800 	subseq	r0, r8, #0, 16
     194:	00090800 	andeq	r0, r9, r0, lsl #16
     198:	01f30074 	mvnseq	r0, r4, ror r0
     19c:	01231c50 	teqeq	r3, r0, asr ip
     1a0:	0002589f 	muleq	r2, pc, r8	; <UNPREDICTABLE>
     1a4:	00025e08 	andeq	r5, r2, r8, lsl #28
     1a8:	74000708 	strvc	r0, [r0], #-1800	; 0x708
     1ac:	5001f300 	andpl	pc, r1, r0, lsl #6
     1b0:	025e9f1c 	subseq	r9, lr, #28, 30	; 0x70
     1b4:	02600800 	rsbeq	r0, r0, #0, 16
     1b8:	00090800 	andeq	r0, r9, r0, lsl #16
     1bc:	01f30074 	mvnseq	r0, r4, ror r0
     1c0:	01231c50 	teqeq	r3, r0, asr ip
     1c4:	0002609f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
     1c8:	00026208 	andeq	r6, r2, r8, lsl #4
     1cc:	74000708 	strvc	r0, [r0], #-1800	; 0x708
     1d0:	5001f300 	andpl	pc, r1, r0, lsl #6
     1d4:	00009f1c 	andeq	r9, r0, ip, lsl pc
     1d8:	00000000 	andeq	r0, r0, r0
     1dc:	02620000 	rsbeq	r0, r2, #0
     1e0:	026e0800 	rsbeq	r0, lr, #0, 16
     1e4:	00010800 	andeq	r0, r1, r0, lsl #16
     1e8:	00026e50 	andeq	r6, r2, r0, asr lr
     1ec:	00029608 	andeq	r9, r2, r8, lsl #12
     1f0:	f3000408 	vshl.u8	d0, d8, d0
     1f4:	009f5001 	addseq	r5, pc, r1
     1f8:	00000000 	andeq	r0, r0, r0
     1fc:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
     200:	7c080002 	stcvc	0, cr0, [r8], {2}
     204:	01080002 	tsteq	r8, r2
     208:	02845000 	addeq	r5, r4, #0
     20c:	028e0800 	addeq	r0, lr, #0, 16
     210:	00010800 	andeq	r0, r1, r0, lsl #16
     214:	00000050 	andeq	r0, r0, r0, asr r0
     218:	00000000 	andeq	r0, r0, r0
     21c:	00029600 	andeq	r9, r2, r0, lsl #12
     220:	00029c08 	andeq	r9, r2, r8, lsl #24
     224:	50000108 	andpl	r0, r0, r8, lsl #2
     228:	0800029c 	stmdaeq	r0, {r2, r3, r4, r7, r9}
     22c:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
     230:	01f30004 	mvnseq	r0, r4
     234:	00009f50 	andeq	r9, r0, r0, asr pc
     238:	00000000 	andeq	r0, r0, r0
     23c:	02aa0000 	adceq	r0, sl, #0
     240:	02b00800 	adcseq	r0, r0, #0, 16
     244:	00010800 	andeq	r0, r1, r0, lsl #16
     248:	0002b050 	andeq	fp, r2, r0, asr r0
     24c:	0002ba08 	andeq	fp, r2, r8, lsl #20
     250:	54000108 	strpl	r0, [r0], #-264	; 0x108
     254:	080002ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r9}
     258:	080002be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9}
     25c:	01f30004 	mvnseq	r0, r4
     260:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     270:	00010000 	andeq	r0, r1, r0
     274:	00000050 	andeq	r0, r0, r0, asr r0
     278:	00000000 	andeq	r0, r0, r0
     27c:	f3000400 	vshl.u8	d0, d0, d0
     280:	009f5001 	addseq	r5, pc, r1
     284:	00000000 	andeq	r0, r0, r0
     288:	01000000 	mrseq	r0, (UNDEF: 0)
     28c:	00005400 	andeq	r5, r0, r0, lsl #8
     290:	00000000 	andeq	r0, r0, r0
     294:	00090000 	andeq	r0, r9, r0
     298:	f6090075 			; <UNDEFINED> instruction: 0xf6090075
     29c:	2200741e 	andcs	r7, r0, #503316480	; 0x1e000000
     2a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     2a4:	00000000 	andeq	r0, r0, r0
     2a8:	75000900 	strvc	r0, [r0, #-2304]	; 0x900
     2ac:	1ef60900 	cdpne	9, 15, cr0, cr6, cr0, {0}
     2b0:	9f225074 	svcls	0x00225074
	...
     2c4:	00540001 	subseq	r0, r4, r1
     2c8:	00000000 	andeq	r0, r0, r0
     2cc:	0c000000 	stceq	0, cr0, [r0], {-0}
     2d0:	f7007500 			; <UNDEFINED> instruction: 0xf7007500
     2d4:	f7640825 			; <UNDEFINED> instruction: 0xf7640825
     2d8:	00f71b25 	rscseq	r1, r7, r5, lsr #22
     2dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     2e0:	00000000 	andeq	r0, r0, r0
     2e4:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
     2f0:	080002be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9}
     2f4:	080002c2 	stmdaeq	r0, {r1, r6, r7, r9}
     2f8:	c2500001 	subsgt	r0, r0, #1
     2fc:	d0080002 	andle	r0, r8, r2
     300:	04080002 	streq	r0, [r8], #-2
     304:	5001f300 	andpl	pc, r1, r0, lsl #6
     308:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     30c:	00000000 	andeq	r0, r0, r0
     310:	0002be00 	andeq	fp, r2, r0, lsl #28
     314:	0002c208 	andeq	ip, r2, r8, lsl #4
     318:	30000208 	andcc	r0, r0, r8, lsl #4
     31c:	0002c29f 	muleq	r2, pc, r2	; <UNPREDICTABLE>
     320:	0002c608 	andeq	ip, r2, r8, lsl #12
     324:	74000908 	strvc	r0, [r0], #-2312	; 0x908
     328:	5001f300 	andpl	pc, r1, r0, lsl #6
     32c:	9f01231c 	svcls	0x0001231c
     330:	080002c6 	stmdaeq	r0, {r1, r2, r6, r7, r9}
     334:	080002cc 	stmdaeq	r0, {r2, r3, r6, r7, r9}
     338:	00740007 	rsbseq	r0, r4, r7
     33c:	1c5001f3 	ldfnee	f0, [r0], {243}	; 0xf3
     340:	0002cc9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
     344:	0002ce08 	andeq	ip, r2, r8, lsl #28
     348:	74000908 	strvc	r0, [r0], #-2312	; 0x908
     34c:	5001f300 	andpl	pc, r1, r0, lsl #6
     350:	9f01231c 	svcls	0x0001231c
     354:	080002ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9}
     358:	080002d0 	stmdaeq	r0, {r4, r6, r7, r9}
     35c:	00740007 	rsbseq	r0, r4, r7
     360:	1c5001f3 	ldfnee	f0, [r0], {243}	; 0xf3
     364:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     374:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     380:	01f30004 	mvnseq	r0, r4
     384:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     394:	00010000 	andeq	r0, r1, r0
     398:	00000050 	andeq	r0, r0, r0, asr r0
     39c:	00000000 	andeq	r0, r0, r0
     3a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     3b4:	00500001 	subseq	r0, r0, r1
     3b8:	00000000 	andeq	r0, r0, r0
     3bc:	04000000 	streq	r0, [r0], #-0
     3c0:	5001f300 	andpl	pc, r1, r0, lsl #6
     3c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     3d4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     3e0:	00540001 	subseq	r0, r4, r1
     3e4:	00000000 	andeq	r0, r0, r0
     3e8:	04000000 	streq	r0, [r0], #-0
     3ec:	5001f300 	andpl	pc, r1, r0, lsl #6
     3f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     3f4:	00000000 	andeq	r0, r0, r0
     3f8:	0002d000 	andeq	sp, r2, r0
     3fc:	0002d608 	andeq	sp, r2, r8, lsl #12
     400:	50000108 	andpl	r0, r0, r8, lsl #2
     404:	080002d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9}
     408:	080002de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9}
     40c:	de540001 	cdple	0, 5, cr0, cr4, cr1, {0}
     410:	eb080002 	bl	200420 <__Stack_Size+0x200020>
     414:	05080002 	streq	r0, [r8, #-2]
     418:	01380300 	teqeq	r8, r0, lsl #6
     41c:	02eb2000 	rsceq	r2, fp, #0
     420:	02fc0800 	rscseq	r0, ip, #0, 16
     424:	00040800 	andeq	r0, r4, r0, lsl #16
     428:	9f5001f3 	svcls	0x005001f3
	...
     434:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
     438:	08000302 	stmdaeq	r0, {r1, r8, r9}
     43c:	02500001 	subseq	r0, r0, #1
     440:	2a080003 	bcs	200454 <__Stack_Size+0x200054>
     444:	04080003 	streq	r0, [r8], #-3
     448:	5001f300 	andpl	pc, r1, r0, lsl #6
     44c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     450:	00000000 	andeq	r0, r0, r0
     454:	0002fc00 	andeq	pc, r2, r0, lsl #24
     458:	00030208 	andeq	r0, r3, r8, lsl #4
     45c:	51000108 	tstpl	r0, r8, lsl #2
     460:	08000302 	stmdaeq	r0, {r1, r8, r9}
     464:	0800032a 	stmdaeq	r0, {r1, r3, r5, r8, r9}
     468:	01f30004 	mvnseq	r0, r4
     46c:	00009f51 	andeq	r9, r0, r1, asr pc
     470:	00000000 	andeq	r0, r0, r0
     474:	02fc0000 	rscseq	r0, ip, #0
     478:	03020800 	movweq	r0, #10240	; 0x2800
     47c:	00020800 	andeq	r0, r2, r0, lsl #16
     480:	03029f30 	movweq	r9, #12080	; 0x2f30
     484:	03120800 	tsteq	r2, #0, 16
     488:	00030800 	andeq	r0, r3, r0, lsl #16
     48c:	129f7f73 	addsne	r7, pc, #460	; 0x1cc
     490:	24080003 	strcs	r0, [r8], #-3
     494:	01080003 	tsteq	r8, r3
     498:	03265000 	teqeq	r6, #0
     49c:	03280800 	teqeq	r8, #0, 16
     4a0:	00030800 	andeq	r0, r3, r0, lsl #16
     4a4:	009f7f73 	addseq	r7, pc, r3, ror pc	; <UNPREDICTABLE>
     4a8:	00000000 	andeq	r0, r0, r0
     4ac:	2a000000 	bcs	4b4 <__Stack_Size+0xb4>
     4b0:	4c080003 	stcmi	0, cr0, [r8], {3}
     4b4:	01080003 	tsteq	r8, r3
     4b8:	034c5000 	movteq	r5, #49152	; 0xc000
     4bc:	034e0800 	movteq	r0, #59392	; 0xe800
     4c0:	00030800 	andeq	r0, r3, r0, lsl #16
     4c4:	009f7674 	addseq	r7, pc, r4, ror r6	; <UNPREDICTABLE>
     4c8:	00000000 	andeq	r0, r0, r0
     4cc:	2a000000 	bcs	4d4 <__Stack_Size+0xd4>
     4d0:	30080003 	andcc	r0, r8, r3
     4d4:	01080003 	tsteq	r8, r3
     4d8:	03305100 	teqeq	r0, #0, 2
     4dc:	03340800 	teqeq	r4, #0, 16
     4e0:	00030800 	andeq	r0, r3, r0, lsl #16
     4e4:	349f0171 	ldrcc	r0, [pc], #369	; 4ec <__Stack_Size+0xec>
     4e8:	4e080003 	cdpmi	0, 0, cr0, cr8, cr3, {0}
     4ec:	04080003 	streq	r0, [r8], #-3
     4f0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     4f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     4f8:	00000000 	andeq	r0, r0, r0
     4fc:	00032a00 	andeq	r2, r3, r0, lsl #20
     500:	00033408 	andeq	r3, r3, r8, lsl #8
     504:	30000208 	andcc	r0, r0, r8, lsl #4
     508:	0003429f 	muleq	r3, pc, r2	; <UNPREDICTABLE>
     50c:	00034408 	andeq	r4, r3, r8, lsl #8
     510:	53000108 	movwpl	r0, #264	; 0x108
     514:	08000344 	stmdaeq	r0, {r2, r6, r8, r9}
     518:	0800034a 	stmdaeq	r0, {r1, r3, r6, r8, r9}
     51c:	00720006 	rsbseq	r0, r2, r6
     520:	9f1c0070 	svcls	0x001c0070
	...
     52c:	08000350 	stmdaeq	r0, {r4, r6, r8, r9}
     530:	0800035a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9}
     534:	5a500001 	bpl	1400540 <__Stack_Size+0x1400140>
     538:	08080003 	stmdaeq	r8, {r0, r1}
     53c:	04080004 	streq	r0, [r8], #-4
     540:	5001f300 	andpl	pc, r1, r0, lsl #6
     544:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     548:	00000000 	andeq	r0, r0, r0
     54c:	00035000 	andeq	r5, r3, r0
     550:	00035d08 	andeq	r5, r3, r8, lsl #26
     554:	51000108 	tstpl	r0, r8, lsl #2
     558:	0800035d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9}
     55c:	080003fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9}
     560:	fc550001 	mrrc2	0, 0, r0, r5, cr1
     564:	08080003 	stmdaeq	r8, {r0, r1}
     568:	04080004 	streq	r0, [r8], #-4
     56c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     570:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     574:	00000000 	andeq	r0, r0, r0
     578:	00040800 	andeq	r0, r4, r0, lsl #16
     57c:	00043a08 	andeq	r3, r4, r8, lsl #20
     580:	30000208 	andcc	r0, r0, r8, lsl #4
     584:	0006569f 	muleq	r6, pc, r6	; <UNPREDICTABLE>
     588:	00079e08 	andeq	r9, r7, r8, lsl #28
     58c:	58000108 	stmdapl	r0, {r3, r8}
     590:	080007c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, sl}
     594:	080007fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl}
     598:	00580001 	subseq	r0, r8, r1
     59c:	00000000 	andeq	r0, r0, r0
     5a0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     5a4:	10080004 	andne	r0, r8, r4
     5a8:	02080004 	andeq	r0, r8, #4
     5ac:	109f3000 	addsne	r3, pc, r0
     5b0:	29080004 	stmdbcs	r8, {r2}
     5b4:	01080004 	tsteq	r8, r4
     5b8:	04645300 	strbteq	r5, [r4], #-768	; 0x300
     5bc:	047c0800 	ldrbteq	r0, [ip], #-2048	; 0x800
     5c0:	00010800 	andeq	r0, r1, r0, lsl #16
     5c4:	0006d453 	andeq	sp, r6, r3, asr r4
     5c8:	0006d808 	andeq	sp, r6, r8, lsl #16
     5cc:	30000208 	andcc	r0, r0, r8, lsl #4
     5d0:	0006d89f 	muleq	r6, pc, r8	; <UNPREDICTABLE>
     5d4:	00076808 	andeq	r6, r7, r8, lsl #16
     5d8:	59000108 	stmdbpl	r0, {r3, r8}
     5dc:	080007cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl}
     5e0:	080007fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl}
     5e4:	00530001 	subseq	r0, r3, r1
     5e8:	00000000 	andeq	r0, r0, r0
     5ec:	1c000000 	stcne	0, cr0, [r0], {-0}
     5f0:	3a080004 	bcc	200608 <__Stack_Size+0x200208>
     5f4:	02080004 	andeq	r0, r8, #4
     5f8:	c89f3000 	ldmgt	pc, {ip, sp}	; <UNPREDICTABLE>
     5fc:	fc080007 	stc2	0, cr0, [r8], {7}
     600:	02080007 	andeq	r0, r8, #7
     604:	00007d00 	andeq	r7, r0, r0, lsl #26
     608:	00000000 	andeq	r0, r0, r0
     60c:	a0000000 	andge	r0, r0, r0
     610:	e2080004 	and	r0, r8, #4
     614:	02080004 	andeq	r0, r8, #4
     618:	e29f3000 	adds	r3, pc, #0
     61c:	1c080004 	stcne	0, cr0, [r8], {4}
     620:	01080005 	tsteq	r8, r5
     624:	051c5b00 	ldreq	r5, [ip, #-2816]	; 0xb00
     628:	05220800 	streq	r0, [r2, #-2048]!	; 0x800
     62c:	00030800 	andeq	r0, r3, r0, lsl #16
     630:	229f7f7b 	addscs	r7, pc, #492	; 0x1ec
     634:	c2080005 	andgt	r0, r8, #5
     638:	01080005 	tsteq	r8, r5
     63c:	00005b00 	andeq	r5, r0, r0, lsl #22
     640:	00000000 	andeq	r0, r0, r0
     644:	05d40000 	ldrbeq	r0, [r4]
     648:	05d70800 	ldrbeq	r0, [r7, #2048]	; 0x800
     64c:	00020800 	andeq	r0, r2, r0, lsl #16
     650:	05d70073 	ldrbeq	r0, [r7, #115]	; 0x73
     654:	05e20800 	strbeq	r0, [r2, #2048]!	; 0x800
     658:	00010800 	andeq	r0, r1, r0, lsl #16
     65c:	00000059 	andeq	r0, r0, r9, asr r0
     660:	00000000 	andeq	r0, r0, r0
     664:	0005ce00 	andeq	ip, r5, r0, lsl #28
     668:	0005d008 	andeq	sp, r5, r8
     66c:	0c000508 	cfstr32eq	mvfx0, [r0], {8}
     670:	08003004 	stmdaeq	r0, {r2, ip, sp}
     674:	080005d0 	stmdaeq	r0, {r4, r6, r7, r8, sl}
     678:	080005d7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r8, sl}
     67c:	00730002 	rsbseq	r0, r3, r2
     680:	080005d7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r8, sl}
     684:	080005e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, sl}
     688:	00590001 	subseq	r0, r9, r1
     68c:	00000000 	andeq	r0, r0, r0
     690:	5a000000 	bpl	698 <__Stack_Size+0x298>
     694:	68080006 	stmdavs	r8, {r1, r2}
     698:	02080006 	andeq	r0, r8, #6
     69c:	009f3000 	addseq	r3, pc, r0
     6a0:	00000000 	andeq	r0, r0, r0
     6a4:	5a000000 	bpl	6ac <__Stack_Size+0x2ac>
     6a8:	68080006 	stmdavs	r8, {r1, r2}
     6ac:	06080006 	streq	r0, [r8], -r6
     6b0:	08007800 	stmdaeq	r0, {fp, ip, sp, lr}
     6b4:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     6b8:	00000000 	andeq	r0, r0, r0
     6bc:	8c000000 	stchi	0, cr0, [r0], {-0}
     6c0:	9208000a 	andls	r0, r8, #10
     6c4:	0208000a 	andeq	r0, r8, #10
     6c8:	929f3000 	addsls	r3, pc, #0
     6cc:	9a08000a 	bls	2006fc <__Stack_Size+0x2002fc>
     6d0:	0908000a 	stmdbeq	r8, {r1, r3}
     6d4:	09007600 	stmdbeq	r0, {r9, sl, ip, sp, lr}
     6d8:	ff0829ff 			; <UNDEFINED> instruction: 0xff0829ff
     6dc:	0aa09f1a 	beq	fe82834c <SCS_BASE+0x1e81a34c>
     6e0:	0aae0800 	beq	feb826e8 <SCS_BASE+0x1eb746e8>
     6e4:	00090800 	andeq	r0, r9, r0, lsl #16
     6e8:	ff090076 			; <UNDEFINED> instruction: 0xff090076
     6ec:	1aff0829 	bne	fffc2798 <SCS_BASE+0x1ffb4798>
     6f0:	000aae9f 	muleq	sl, pc, lr	; <UNPREDICTABLE>
     6f4:	000ab808 	andeq	fp, sl, r8, lsl #16
     6f8:	76000808 	strvc	r0, [r0], -r8, lsl #16
     6fc:	08293000 	stmdaeq	r9!, {ip, sp}
     700:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     704:	00000000 	andeq	r0, r0, r0
     708:	b0000000 	andlt	r0, r0, r0
     70c:	b308000a 	movwlt	r0, #32778	; 0x800a
     710:	0208000a 	andeq	r0, r8, #10
     714:	00007500 	andeq	r7, r0, r0, lsl #10
     718:	00000000 	andeq	r0, r0, r0
     71c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
     720:	1608000b 	strne	r0, [r8], -fp
     724:	0108000c 	tsteq	r8, ip
     728:	0c165000 	ldceq	0, cr5, [r6], {-0}
     72c:	0cdc0800 	ldcleq	8, cr0, [ip], {0}
     730:	00010800 	andeq	r0, r1, r0, lsl #16
     734:	000cdc56 	andeq	sp, ip, r6, asr ip
     738:	000cfc08 	andeq	pc, ip, r8, lsl #24
     73c:	f3000408 	vshl.u8	d0, d8, d0
     740:	009f5001 	addseq	r5, pc, r1
     744:	00000000 	andeq	r0, r0, r0
     748:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
     74c:	1608000b 	strne	r0, [r8], -fp
     750:	0108000c 	tsteq	r8, ip
     754:	0c165100 	ldfeqs	f5, [r6], {-0}
     758:	0cfc0800 	ldcleq	8, cr0, [ip]
     75c:	00040800 	andeq	r0, r4, r0, lsl #16
     760:	9f5101f3 	svcls	0x005101f3
	...
     76c:	08000c14 	stmdaeq	r0, {r2, r4, sl, fp}
     770:	08000c16 	stmdaeq	r0, {r1, r2, r4, sl, fp}
     774:	9f300002 	svcls	0x00300002
     778:	08000c16 	stmdaeq	r0, {r1, r2, r4, sl, fp}
     77c:	08000c9c 	stmdaeq	r0, {r2, r3, r4, r7, sl, fp}
     780:	a4550001 	ldrbge	r0, [r5], #-1
     784:	d408000c 	strle	r0, [r8], #-12
     788:	0108000c 	tsteq	r8, ip
     78c:	00005500 	andeq	r5, r0, r0, lsl #10
     790:	00000000 	andeq	r0, r0, r0
     794:	0bf80000 	bleq	ffe0079c <SCS_BASE+0x1fdf279c>
     798:	0c140800 	ldceq	8, cr0, [r4], {-0}
     79c:	00020800 	andeq	r0, r2, r0, lsl #16
     7a0:	0c149f30 	ldceq	15, cr9, [r4], {48}	; 0x30
     7a4:	0cd00800 	ldcleq	8, cr0, [r0], {0}
     7a8:	00010800 	andeq	r0, r1, r0, lsl #16
     7ac:	00000054 	andeq	r0, r0, r4, asr r0
     7b0:	00000000 	andeq	r0, r0, r0
     7b4:	000c4400 	andeq	r4, ip, r0, lsl #8
     7b8:	000c5108 	andeq	r5, ip, r8, lsl #2
     7bc:	53000108 	movwpl	r0, #264	; 0x108
     7c0:	08000c51 	stmdaeq	r0, {r0, r4, r6, sl, fp}
     7c4:	08000cb4 	stmdaeq	r0, {r2, r4, r5, r7, sl, fp}
     7c8:	007d0002 	rsbseq	r0, sp, r2
	...
     7d4:	08000e00 	stmdaeq	r0, {r9, sl, fp}
     7d8:	08000e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp}
     7dc:	16500001 	ldrbne	r0, [r0], -r1
     7e0:	1808000e 	stmdane	r8, {r1, r2, r3}
     7e4:	0408000e 	streq	r0, [r8], #-14
     7e8:	5001f300 	andpl	pc, r1, r0, lsl #6
     7ec:	000e189f 	muleq	lr, pc, r8	; <UNPREDICTABLE>
     7f0:	000e4008 	andeq	r4, lr, r8
     7f4:	50000108 	andpl	r0, r0, r8, lsl #2
     7f8:	08000e40 	stmdaeq	r0, {r6, r9, sl, fp}
     7fc:	08000e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp}
     800:	01f30004 	mvnseq	r0, r4
     804:	00009f50 	andeq	r9, r0, r0, asr pc
     808:	00000000 	andeq	r0, r0, r0
     80c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     810:	0e140800 	cdpeq	8, 1, cr0, cr4, cr0, {0}
     814:	00020800 	andeq	r0, r2, r0, lsl #16
     818:	0e189f30 	mrceq	15, 0, r9, cr8, cr0, {1}
     81c:	0e320800 	cdpeq	8, 3, cr0, cr2, cr0, {0}
     820:	00020800 	andeq	r0, r2, r0, lsl #16
     824:	0e329f30 	mrceq	15, 1, r9, cr2, cr0, {1}
     828:	0e360800 	cdpeq	8, 3, cr0, cr6, cr0, {0}
     82c:	00010800 	andeq	r0, r1, r0, lsl #16
     830:	000e3653 	andeq	r3, lr, r3, asr r6
     834:	000e3808 	andeq	r3, lr, r8, lsl #16
     838:	30000208 	andcc	r0, r0, r8, lsl #4
     83c:	000e389f 	muleq	lr, pc, r8	; <UNPREDICTABLE>
     840:	000e4508 	andeq	r4, lr, r8, lsl #10
     844:	53000108 	movwpl	r0, #264	; 0x108
	...
     850:	08000e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp}
     854:	08000e6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9, sl, fp}
     858:	6e500001 	cdpvs	0, 5, cr0, cr0, cr1, {0}
     85c:	7808000e 	stmdavc	r8, {r1, r2, r3}
     860:	0408000e 	streq	r0, [r8], #-14
     864:	5001f300 	andpl	pc, r1, r0, lsl #6
     868:	000e789f 	muleq	lr, pc, r8	; <UNPREDICTABLE>
     86c:	000e7a08 	andeq	r7, lr, r8, lsl #20
     870:	50000108 	andpl	r0, r0, r8, lsl #2
     874:	08000e7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, sl, fp}
     878:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
     87c:	01f30004 	mvnseq	r0, r4
     880:	00009f50 	andeq	r9, r0, r0, asr pc
     884:	00000000 	andeq	r0, r0, r0
     888:	0e800000 	cdpeq	0, 8, cr0, cr0, cr0, {0}
     88c:	0e880800 	cdpeq	8, 8, cr0, cr8, cr0, {0}
     890:	00010800 	andeq	r0, r1, r0, lsl #16
     894:	000e8850 	andeq	r8, lr, r0, asr r8
     898:	000e8c08 	andeq	r8, lr, r8, lsl #24
     89c:	f3000408 	vshl.u8	d0, d8, d0
     8a0:	8c9f5001 	ldchi	0, cr5, [pc], {1}
     8a4:	8e08000e 	cdphi	0, 0, cr0, cr8, cr14, {0}
     8a8:	0108000e 	tsteq	r8, lr
     8ac:	0e8e5000 	cdpeq	0, 8, cr5, cr14, cr0, {0}
     8b0:	0e900800 	cdpeq	8, 9, cr0, cr0, cr0, {0}
     8b4:	00040800 	andeq	r0, r4, r0, lsl #16
     8b8:	9f5001f3 	svcls	0x005001f3
	...
     8c4:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
     8c8:	08000e9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, sl, fp}
     8cc:	9e500001 	cdpls	0, 5, cr0, cr0, cr1, {0}
     8d0:	a808000e 	stmdage	r8, {r1, r2, r3}
     8d4:	0408000e 	streq	r0, [r8], #-14
     8d8:	5001f300 	andpl	pc, r1, r0, lsl #6
     8dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     8e0:	00000000 	andeq	r0, r0, r0
     8e4:	000ea800 	andeq	sl, lr, r0, lsl #16
     8e8:	000ec608 	andeq	ip, lr, r8, lsl #12
     8ec:	50000108 	andpl	r0, r0, r8, lsl #2
     8f0:	08000ec6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl, fp}
     8f4:	08000ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp}
     8f8:	01f30004 	mvnseq	r0, r4
     8fc:	00009f50 	andeq	r9, r0, r0, asr pc
     900:	00000000 	andeq	r0, r0, r0
     904:	0fd80000 	svceq	0x00d80000
     908:	0fdd0800 	svceq	0x00dd0800
     90c:	00010800 	andeq	r0, r1, r0, lsl #16
     910:	000fdd50 	andeq	sp, pc, r0, asr sp	; <UNPREDICTABLE>
     914:	000fe408 	andeq	lr, pc, r8, lsl #8
     918:	f3000408 	vshl.u8	d0, d8, d0
     91c:	009f5001 	addseq	r5, pc, r1
     920:	00000000 	andeq	r0, r0, r0
     924:	e4000000 	str	r0, [r0], #-0
     928:	e908000f 	stmdb	r8, {r0, r1, r2, r3}
     92c:	0108000f 	tsteq	r8, pc
     930:	0fe95000 	svceq	0x00e95000
     934:	0ff00800 	svceq	0x00f00800
     938:	00040800 	andeq	r0, r4, r0, lsl #16
     93c:	9f5001f3 	svcls	0x005001f3
	...
     948:	08000ff0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, fp}
     94c:	08001003 	stmdaeq	r0, {r0, r1, ip}
     950:	03500001 	cmpeq	r0, #1
     954:	04080010 	streq	r0, [r8], #-16
     958:	04080010 	streq	r0, [r8], #-16
     95c:	5001f300 	andpl	pc, r1, r0, lsl #6
     960:	0010049f 	mulseq	r0, pc, r4	; <UNPREDICTABLE>
     964:	00100608 	andseq	r0, r0, r8, lsl #12
     968:	50000108 	andpl	r0, r0, r8, lsl #2
     96c:	08001006 	stmdaeq	r0, {r1, r2, ip}
     970:	08001010 	stmdaeq	r0, {r4, ip}
     974:	01f30004 	mvnseq	r0, r4
     978:	00009f50 	andeq	r9, r0, r0, asr pc
     97c:	00000000 	andeq	r0, r0, r0
     980:	0ff60000 	svceq	0x00f60000
     984:	10030800 	andne	r0, r3, r0, lsl #16
     988:	00010800 	andeq	r0, r1, r0, lsl #16
     98c:	00100453 	andseq	r0, r0, r3, asr r4
     990:	00101008 	andseq	r1, r0, r8
     994:	53000108 	movwpl	r0, #264	; 0x108
	...
     9a0:	08001010 	stmdaeq	r0, {r4, ip}
     9a4:	08001030 	stmdaeq	r0, {r4, r5, ip}
     9a8:	30500001 	subscc	r0, r0, r1
     9ac:	38080010 	stmdacc	r8, {r4}
     9b0:	01080010 	tsteq	r8, r0, lsl r0
     9b4:	00005000 	andeq	r5, r0, r0
     9b8:	00000000 	andeq	r0, r0, r0
     9bc:	10100000 	andsne	r0, r0, r0
     9c0:	10140800 	andsne	r0, r4, r0, lsl #16
     9c4:	00020800 	andeq	r0, r2, r0, lsl #16
     9c8:	10149f30 	andsne	r9, r4, r0, lsr pc
     9cc:	10320800 	eorsne	r0, r2, r0, lsl #16
     9d0:	00010800 	andeq	r0, r1, r0, lsl #16
     9d4:	00103254 	andseq	r3, r0, r4, asr r2
     9d8:	00103408 	andseq	r3, r0, r8, lsl #8
     9dc:	74000308 	strvc	r0, [r0], #-776	; 0x308
     9e0:	10369f01 	eorsne	r9, r6, r1, lsl #30
     9e4:	10380800 	eorsne	r0, r8, r0, lsl #16
     9e8:	00010800 	andeq	r0, r1, r0, lsl #16
     9ec:	00000054 	andeq	r0, r0, r4, asr r0
     9f0:	00000000 	andeq	r0, r0, r0
     9f4:	00107000 	andseq	r7, r0, r0
     9f8:	00107408 	andseq	r7, r0, r8, lsl #8
     9fc:	50000108 	andpl	r0, r0, r8, lsl #2
     a00:	08001074 	stmdaeq	r0, {r2, r4, r5, r6, ip}
     a04:	0800107c 	stmdaeq	r0, {r2, r3, r4, r5, r6, ip}
     a08:	01f30004 	mvnseq	r0, r4
     a0c:	107c9f50 	rsbsne	r9, ip, r0, asr pc
     a10:	107e0800 	rsbsne	r0, lr, r0, lsl #16
     a14:	00010800 	andeq	r0, r1, r0, lsl #16
     a18:	00107e50 	andseq	r7, r0, r0, asr lr
     a1c:	00108c08 	andseq	r8, r0, r8, lsl #24
     a20:	f3000408 	vshl.u8	d0, d8, d0
     a24:	009f5001 	addseq	r5, pc, r1
     a28:	00000000 	andeq	r0, r0, r0
     a2c:	72000000 	andvc	r0, r0, #0
     a30:	74080010 	strvc	r0, [r8], #-16
     a34:	01080010 	tsteq	r8, r0, lsl r0
     a38:	00005000 	andeq	r5, r0, r0
     a3c:	00000000 	andeq	r0, r0, r0
     a40:	10ba0000 	adcsne	r0, sl, r0
     a44:	10c00800 	sbcne	r0, r0, r0, lsl #16
     a48:	00010800 	andeq	r0, r1, r0, lsl #16
     a4c:	0010c050 	andseq	ip, r0, r0, asr r0
     a50:	0010c208 	andseq	ip, r0, r8, lsl #4
     a54:	73000608 	movwvc	r0, #1544	; 0x608
     a58:	22007000 	andcs	r7, r0, #0
     a5c:	0010c29f 	mulseq	r0, pc, r2	; <UNPREDICTABLE>
     a60:	0010cb08 	andseq	ip, r0, r8, lsl #22
     a64:	50000108 	andpl	r0, r0, r8, lsl #2
     a68:	080010da 	stmdaeq	r0, {r1, r3, r4, r6, r7, ip}
     a6c:	080010e8 	stmdaeq	r0, {r3, r5, r6, r7, ip}
     a70:	00500001 	subseq	r0, r0, r1
     a74:	00000000 	andeq	r0, r0, r0
     a78:	bc000000 	stclt	0, cr0, [r0], {-0}
     a7c:	d2080010 	andle	r0, r8, #16
     a80:	01080010 	tsteq	r8, r0, lsl r0
     a84:	10d25400 	sbcsne	r5, r2, r0, lsl #8
     a88:	10d90800 	sbcsne	r0, r9, r0, lsl #16
     a8c:	00010800 	andeq	r0, r1, r0, lsl #16
     a90:	0010da50 	andseq	sp, r0, r0, asr sl
     a94:	0010dc08 	andseq	sp, r0, r8, lsl #24
     a98:	54000108 	strpl	r0, [r0], #-264	; 0x108
	...
     aa4:	080010c0 	stmdaeq	r0, {r6, r7, ip}
     aa8:	080010cb 	stmdaeq	r0, {r0, r1, r3, r6, r7, ip}
     aac:	da530001 	ble	14c0ab8 <__Stack_Size+0x14c06b8>
     ab0:	e8080010 	stmda	r8, {r4}
     ab4:	01080010 	tsteq	r8, r0, lsl r0
     ab8:	00005300 	andeq	r5, r0, r0, lsl #6
     abc:	00000000 	andeq	r0, r0, r0
     ac0:	10e80000 	rscne	r0, r8, r0
     ac4:	10f20800 	rscsne	r0, r2, r0, lsl #16
     ac8:	00010800 	andeq	r0, r1, r0, lsl #16
     acc:	0010f250 	andseq	pc, r0, r0, asr r2	; <UNPREDICTABLE>
     ad0:	00111208 	andseq	r1, r1, r8, lsl #4
     ad4:	74000208 	strvc	r0, [r0], #-520	; 0x208
	...
     ae0:	00111400 	andseq	r1, r1, r0, lsl #8
     ae4:	00112208 	andseq	r2, r1, r8, lsl #4
     ae8:	50000108 	andpl	r0, r0, r8, lsl #2
     aec:	08001122 	stmdaeq	r0, {r1, r5, r8, ip}
     af0:	0800112c 	stmdaeq	r0, {r2, r3, r5, r8, ip}
     af4:	01f30004 	mvnseq	r0, r4
     af8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     b08:	00010000 	andeq	r0, r1, r0
     b0c:	00000050 	andeq	r0, r0, r0, asr r0
     b10:	00000000 	andeq	r0, r0, r0
     b14:	f3000400 	vshl.u8	d0, d0, d0
     b18:	009f5001 	addseq	r5, pc, r1
     b1c:	00000000 	andeq	r0, r0, r0
     b20:	2c000000 	stccs	0, cr0, [r0], {-0}
     b24:	3a080011 	bcc	200b70 <__Stack_Size+0x200770>
     b28:	01080011 	tsteq	r8, r1, lsl r0
     b2c:	113a5000 	teqne	sl, r0
     b30:	11440800 	cmpne	r4, r0, lsl #16
     b34:	00040800 	andeq	r0, r4, r0, lsl #16
     b38:	9f5001f3 	svcls	0x005001f3
	...
     b4c:	9f300002 	svcls	0x00300002
	...
     b58:	00700007 	rsbseq	r0, r0, r7
     b5c:	2e301a32 	mrccs	10, 1, r1, cr0, cr2, {1}
     b60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     b70:	30000200 	andcc	r0, r0, r0, lsl #4
     b74:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b78:	00000000 	andeq	r0, r0, r0
     b7c:	70000800 	andvc	r0, r0, r0, lsl #16
     b80:	1a200800 	bne	802b88 <__Stack_Size+0x802788>
     b84:	009f2e30 	addseq	r2, pc, r0, lsr lr	; <UNPREDICTABLE>
	...
     b94:	01000000 	mrseq	r0, (UNDEF: 0)
     b98:	00005000 	andeq	r5, r0, r0
     b9c:	00000000 	andeq	r0, r0, r0
     ba0:	00040000 	andeq	r0, r4, r0
     ba4:	9f5001f3 	svcls	0x005001f3
	...
     bb0:	00500001 	subseq	r0, r0, r1
     bb4:	00000000 	andeq	r0, r0, r0
     bb8:	04000000 	streq	r0, [r0], #-0
     bbc:	5001f300 	andpl	pc, r1, r0, lsl #6
     bc0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     bd0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     bdc:	01f30004 	mvnseq	r0, r4
     be0:	00009f50 	andeq	r9, r0, r0, asr pc
     be4:	00000000 	andeq	r0, r0, r0
     be8:	00010000 	andeq	r0, r1, r0
     bec:	00000050 	andeq	r0, r0, r0, asr r0
     bf0:	00000000 	andeq	r0, r0, r0
     bf4:	f3000400 	vshl.u8	d0, d0, d0
     bf8:	009f5001 	addseq	r5, pc, r1
	...
     c08:	02000000 	andeq	r0, r0, #0
     c0c:	009f3000 	addseq	r3, pc, r0
     c10:	00000000 	andeq	r0, r0, r0
     c14:	01000000 	mrseq	r0, (UNDEF: 0)
     c18:	00005000 	andeq	r5, r0, r0
     c1c:	00000000 	andeq	r0, r0, r0
     c20:	11780000 	cmnne	r8, r0
     c24:	119a0800 	orrsne	r0, sl, r0, lsl #16
     c28:	00020800 	andeq	r0, r2, r0, lsl #16
     c2c:	119a9f34 	orrsne	r9, sl, r4, lsr pc
     c30:	11a00800 	lslne	r0, r0, #16
     c34:	00010800 	andeq	r0, r1, r0, lsl #16
     c38:	00000050 	andeq	r0, r0, r0, asr r0
     c3c:	00000000 	andeq	r0, r0, r0
     c40:	0011a000 	andseq	sl, r1, r0
     c44:	0011a708 	andseq	sl, r1, r8, lsl #14
     c48:	50000108 	andpl	r0, r0, r8, lsl #2
     c4c:	080011a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, ip}
     c50:	080011d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, ip}
     c54:	00540001 	subseq	r0, r4, r1
     c58:	00000000 	andeq	r0, r0, r0
     c5c:	a0000000 	andge	r0, r0, r0
     c60:	a8080011 	stmdage	r8, {r0, r4}
     c64:	02080011 	andeq	r0, r8, #17
     c68:	a89f3400 	ldmge	pc, {sl, ip, sp}	; <UNPREDICTABLE>
     c6c:	c3080011 	movwgt	r0, #32785	; 0x8011
     c70:	01080011 	tsteq	r8, r1, lsl r0
     c74:	11c45000 	bicne	r5, r4, r0
     c78:	11ca0800 	bicne	r0, sl, r0, lsl #16
     c7c:	00010800 	andeq	r0, r1, r0, lsl #16
     c80:	0011cc50 	andseq	ip, r1, r0, asr ip
     c84:	0011d608 	andseq	sp, r1, r8, lsl #12
     c88:	50000108 	andpl	r0, r0, r8, lsl #2
	...
     c94:	080011d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, ip}
     c98:	080011e0 	stmdaeq	r0, {r5, r6, r7, r8, ip}
     c9c:	e0500001 	subs	r0, r0, r1
     ca0:	14080011 	strne	r0, [r8], #-17
     ca4:	01080012 	tsteq	r8, r2, lsl r0
     ca8:	12145500 	andsne	r5, r4, #0, 10
     cac:	12180800 	andsne	r0, r8, #0, 16
     cb0:	00040800 	andeq	r0, r4, r0, lsl #16
     cb4:	9f5001f3 	svcls	0x005001f3
	...
     cc0:	080011d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, ip}
     cc4:	080011e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, ip}
     cc8:	9f340002 	svcls	0x00340002
     ccc:	080011e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, ip}
     cd0:	080011ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, ip}
     cd4:	04500001 	ldrbeq	r0, [r0], #-1
     cd8:	18080012 	stmdane	r8, {r1, r4}
     cdc:	01080012 	tsteq	r8, r2, lsl r0
     ce0:	00005000 	andeq	r5, r0, r0
	...
     cf0:	00020000 	andeq	r0, r2, r0
     cf4:	00009f34 	andeq	r9, r0, r4, lsr pc
     cf8:	00000000 	andeq	r0, r0, r0
     cfc:	00010000 	andeq	r0, r1, r0
     d00:	00000050 	andeq	r0, r0, r0, asr r0
     d04:	00000000 	andeq	r0, r0, r0
     d08:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     d1c:	9f340002 	svcls	0x00340002
	...
     d28:	00500001 	subseq	r0, r0, r1
     d2c:	00000000 	andeq	r0, r0, r0
     d30:	01000000 	mrseq	r0, (UNDEF: 0)
     d34:	00005000 	andeq	r5, r0, r0
     d38:	00000000 	andeq	r0, r0, r0
     d3c:	00010000 	andeq	r0, r1, r0
     d40:	00000050 	andeq	r0, r0, r0, asr r0
     d44:	00000000 	andeq	r0, r0, r0
     d48:	00121800 	andseq	r1, r2, r0, lsl #16
     d4c:	00121e08 	andseq	r1, r2, r8, lsl #28
     d50:	50000108 	andpl	r0, r0, r8, lsl #2
     d54:	0800121e 	stmdaeq	r0, {r1, r2, r3, r4, r9, ip}
     d58:	0800125a 	stmdaeq	r0, {r1, r3, r4, r6, r9, ip}
     d5c:	5a560001 	bpl	1580d68 <__Stack_Size+0x1580968>
     d60:	60080012 	andvs	r0, r8, r2, lsl r0
     d64:	04080012 	streq	r0, [r8], #-18
     d68:	5001f300 	andpl	pc, r1, r0, lsl #6
     d6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d70:	00000000 	andeq	r0, r0, r0
     d74:	00121800 	andseq	r1, r2, r0, lsl #16
     d78:	00122308 	andseq	r2, r2, r8, lsl #6
     d7c:	51000108 	tstpl	r0, r8, lsl #2
     d80:	08001223 	stmdaeq	r0, {r0, r1, r5, r9, ip}
     d84:	08001242 	stmdaeq	r0, {r1, r6, r9, ip}
     d88:	42550001 	subsmi	r0, r5, #1
     d8c:	60080012 	andvs	r0, r8, r2, lsl r0
     d90:	04080012 	streq	r0, [r8], #-18
     d94:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     d98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d9c:	00000000 	andeq	r0, r0, r0
     da0:	00121800 	andseq	r1, r2, r0, lsl #16
     da4:	00122408 	andseq	r2, r2, r8, lsl #8
     da8:	34000208 	strcc	r0, [r0], #-520	; 0x208
     dac:	0012249f 	mulseq	r2, pc, r4	; <UNPREDICTABLE>
     db0:	00122c08 	andseq	r2, r2, r8, lsl #24
     db4:	50000108 	andpl	r0, r0, r8, lsl #2
     db8:	0800123c 	stmdaeq	r0, {r2, r3, r4, r5, r9, ip}
     dbc:	08001246 	stmdaeq	r0, {r1, r2, r6, r9, ip}
     dc0:	4a500001 	bmi	1400dcc <__Stack_Size+0x14009cc>
     dc4:	60080012 	andvs	r0, r8, r2, lsl r0
     dc8:	01080012 	tsteq	r8, r2, lsl r0
     dcc:	00005000 	andeq	r5, r0, r0
	...
     ddc:	00010000 	andeq	r0, r1, r0
     de0:	00000050 	andeq	r0, r0, r0, asr r0
     de4:	00000000 	andeq	r0, r0, r0
     de8:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
     df4:	01f30004 	mvnseq	r0, r4
     df8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     e08:	00010000 	andeq	r0, r1, r0
     e0c:	00000051 	andeq	r0, r0, r1, asr r0
     e10:	00000000 	andeq	r0, r0, r0
     e14:	f3000400 	vshl.u8	d0, d0, d0
     e18:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     e28:	02000000 	andeq	r0, r0, #0
     e2c:	009f3400 	addseq	r3, pc, r0, lsl #8
     e30:	00000000 	andeq	r0, r0, r0
     e34:	01000000 	mrseq	r0, (UNDEF: 0)
     e38:	00005000 	andeq	r5, r0, r0
     e3c:	00000000 	andeq	r0, r0, r0
     e40:	00010000 	andeq	r0, r1, r0
     e44:	00000050 	andeq	r0, r0, r0, asr r0
	...
     e54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     e60:	00560001 	subseq	r0, r6, r1
     e64:	00000000 	andeq	r0, r0, r0
     e68:	04000000 	streq	r0, [r0], #-0
     e6c:	5001f300 	andpl	pc, r1, r0, lsl #6
     e70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     e80:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     e8c:	01f30004 	mvnseq	r0, r4
     e90:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     ea0:	00020000 	andeq	r0, r2, r0
     ea4:	00009f34 	andeq	r9, r0, r4, lsr pc
     ea8:	00000000 	andeq	r0, r0, r0
     eac:	00010000 	andeq	r0, r1, r0
     eb0:	00000050 	andeq	r0, r0, r0, asr r0
     eb4:	00000000 	andeq	r0, r0, r0
     eb8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     ecc:	00500001 	subseq	r0, r0, r1
     ed0:	00000000 	andeq	r0, r0, r0
     ed4:	04000000 	streq	r0, [r0], #-0
     ed8:	20007000 	andcs	r7, r0, r0
     edc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ee0:	00000000 	andeq	r0, r0, r0
     ee4:	74000400 	strvc	r0, [r0], #-1024	; 0x400
     ee8:	009f2000 	addseq	r2, pc, r0
     eec:	00000000 	andeq	r0, r0, r0
     ef0:	01000000 	mrseq	r0, (UNDEF: 0)
     ef4:	00005400 	andeq	r5, r0, r0, lsl #8
     ef8:	00000000 	andeq	r0, r0, r0
     efc:	00050000 	andeq	r0, r5, r0
     f00:	205001f3 	ldrshcs	r0, [r0], #-19	; 0xffffffed
     f04:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     f14:	70000700 	andvc	r0, r0, r0, lsl #14
     f18:	ff082000 			; <UNDEFINED> instruction: 0xff082000
     f1c:	00009f1a 	andeq	r9, r0, sl, lsl pc
     f20:	00000000 	andeq	r0, r0, r0
     f24:	00070000 	andeq	r0, r7, r0
     f28:	08200074 	stmdaeq	r0!, {r2, r4, r5, r6}
     f2c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     f30:	00000000 	andeq	r0, r0, r0
     f34:	06000000 	streq	r0, [r0], -r0
     f38:	08007400 	stmdaeq	r0, {sl, ip, sp, lr}
     f3c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     f40:	00000000 	andeq	r0, r0, r0
     f44:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     f48:	5001f300 	andpl	pc, r1, r0, lsl #6
     f4c:	1aff0820 	bne	fffc2fd4 <SCS_BASE+0x1ffb4fd4>
     f50:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     f60:	70000a00 	andvc	r0, r0, r0, lsl #20
     f64:	000a2000 	andeq	r2, sl, r0
     f68:	25381aff 	ldrcs	r1, [r8, #-2815]!	; 0xaff
     f6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f70:	00000000 	andeq	r0, r0, r0
     f74:	74000a00 	strvc	r0, [r0], #-2560	; 0xa00
     f78:	000a2000 	andeq	r2, sl, r0
     f7c:	25381aff 	ldrcs	r1, [r8, #-2815]!	; 0xaff
     f80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f84:	00000000 	andeq	r0, r0, r0
     f88:	74000900 	strvc	r0, [r0], #-2304	; 0x900
     f8c:	ff000a00 			; <UNDEFINED> instruction: 0xff000a00
     f90:	9f25381a 	svcls	0x0025381a
	...
     f9c:	01f3000b 	mvnseq	r0, fp
     fa0:	000a2050 	andeq	r2, sl, r0, asr r0
     fa4:	25381aff 	ldrcs	r1, [r8, #-2815]!	; 0xaff
     fa8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     fb8:	70000b00 	andvc	r0, r0, r0, lsl #22
     fbc:	ff082000 			; <UNDEFINED> instruction: 0xff082000
     fc0:	401a2440 	andsmi	r2, sl, r0, asr #8
     fc4:	00009f25 	andeq	r9, r0, r5, lsr #30
     fc8:	00000000 	andeq	r0, r0, r0
     fcc:	000b0000 	andeq	r0, fp, r0
     fd0:	08200074 	stmdaeq	r0!, {r2, r4, r5, r6}
     fd4:	1a2440ff 	bne	9113d8 <__Stack_Size+0x910fd8>
     fd8:	009f2540 	addseq	r2, pc, r0, asr #10
     fdc:	00000000 	andeq	r0, r0, r0
     fe0:	0a000000 	beq	fe8 <__Stack_Size+0xbe8>
     fe4:	08007400 	stmdaeq	r0, {sl, ip, sp, lr}
     fe8:	1a2440ff 	bne	9113ec <__Stack_Size+0x910fec>
     fec:	009f2540 	addseq	r2, pc, r0, asr #10
     ff0:	00000000 	andeq	r0, r0, r0
     ff4:	0c000000 	stceq	0, cr0, [r0], {-0}
     ff8:	5001f300 	andpl	pc, r1, r0, lsl #6
     ffc:	40ff0820 	rscsmi	r0, pc, r0, lsr #16
    1000:	25401a24 	strbcs	r1, [r0, #-2596]	; 0xa24
    1004:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1014:	70000600 	andvc	r0, r0, r0, lsl #12
    1018:	25482000 	strbcs	r2, [r8, #-0]
    101c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1020:	00000000 	andeq	r0, r0, r0
    1024:	74000600 	strvc	r0, [r0], #-1536	; 0x600
    1028:	25482000 	strbcs	r2, [r8, #-0]
    102c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1030:	00000000 	andeq	r0, r0, r0
    1034:	74000500 	strvc	r0, [r0], #-1280	; 0x500
    1038:	9f254800 	svcls	0x00254800
	...
    1044:	01f30007 	mvnseq	r0, r7
    1048:	25482050 	strbcs	r2, [r8, #-80]	; 0x50
    104c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    105c:	34000200 	strcc	r0, [r0], #-512	; 0x200
    1060:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1064:	00000000 	andeq	r0, r0, r0
    1068:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1074:	00500001 	subseq	r0, r0, r1
    1078:	00000000 	andeq	r0, r0, r0
    107c:	01000000 	mrseq	r0, (UNDEF: 0)
    1080:	00005000 	andeq	r5, r0, r0
    1084:	00000000 	andeq	r0, r0, r0
    1088:	00010000 	andeq	r0, r1, r0
    108c:	00000050 	andeq	r0, r0, r0, asr r0
    1090:	00000000 	andeq	r0, r0, r0
    1094:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    10a0:	00500001 	subseq	r0, r0, r1
	...
    10b0:	01000000 	mrseq	r0, (UNDEF: 0)
    10b4:	00005000 	andeq	r5, r0, r0
    10b8:	00000000 	andeq	r0, r0, r0
    10bc:	00040000 	andeq	r0, r4, r0
    10c0:	9f5001f3 	svcls	0x005001f3
	...
    10d4:	9f340002 	svcls	0x00340002
	...
    10e0:	00500001 	subseq	r0, r0, r1
    10e4:	00000000 	andeq	r0, r0, r0
    10e8:	01000000 	mrseq	r0, (UNDEF: 0)
    10ec:	00005000 	andeq	r5, r0, r0
    10f0:	00000000 	andeq	r0, r0, r0
    10f4:	00010000 	andeq	r0, r1, r0
    10f8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1108:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1114:	01f30004 	mvnseq	r0, r4
    1118:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1128:	00010000 	andeq	r0, r1, r0
    112c:	00000051 	andeq	r0, r0, r1, asr r0
    1130:	00000000 	andeq	r0, r0, r0
    1134:	f3000400 	vshl.u8	d0, d0, d0
    1138:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    1148:	01000000 	mrseq	r0, (UNDEF: 0)
    114c:	00005200 	andeq	r5, r0, r0, lsl #4
    1150:	00000000 	andeq	r0, r0, r0
    1154:	00040000 	andeq	r0, r4, r0
    1158:	9f5201f3 	svcls	0x005201f3
	...
    116c:	9f340002 	svcls	0x00340002
	...
    1178:	00500001 	subseq	r0, r0, r1
    117c:	00000000 	andeq	r0, r0, r0
    1180:	01000000 	mrseq	r0, (UNDEF: 0)
    1184:	00005000 	andeq	r5, r0, r0
	...
    1194:	00010000 	andeq	r0, r1, r0
    1198:	00000050 	andeq	r0, r0, r0, asr r0
    119c:	00000000 	andeq	r0, r0, r0
    11a0:	f3000400 	vshl.u8	d0, d0, d0
    11a4:	009f5001 	addseq	r5, pc, r1
	...
    11b4:	02000000 	andeq	r0, r0, #0
    11b8:	009f3000 	addseq	r3, pc, r0
    11bc:	00000000 	andeq	r0, r0, r0
    11c0:	0c000000 	stceq	0, cr0, [r0], {-0}
    11c4:	0a007000 	beq	1d1cc <__Stack_Size+0x1cdcc>
    11c8:	731affff 	tstvc	sl, #1020	; 0x3fc
    11cc:	2e301a00 	vaddcs.f32	s2, s0, s0
    11d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    11d4:	00000000 	andeq	r0, r0, r0
    11d8:	f3000d00 	vpadd.f32	d0, d0, d0
    11dc:	ff0a5001 			; <UNDEFINED> instruction: 0xff0a5001
    11e0:	00731aff 	ldrshteq	r1, [r3], #-175	; 0xffffff51
    11e4:	9f2e301a 	svcls	0x002e301a
	...
    11f8:	00500001 	subseq	r0, r0, r1
    11fc:	00000000 	andeq	r0, r0, r0
    1200:	04000000 	streq	r0, [r0], #-0
    1204:	5001f300 	andpl	pc, r1, r0, lsl #6
    1208:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    120c:	00000000 	andeq	r0, r0, r0
    1210:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    121c:	01f30004 	mvnseq	r0, r4
    1220:	00009f50 	andeq	r9, r0, r0, asr pc
    1224:	00000000 	andeq	r0, r0, r0
    1228:	00010000 	andeq	r0, r1, r0
    122c:	00000050 	andeq	r0, r0, r0, asr r0
    1230:	00000000 	andeq	r0, r0, r0
    1234:	f3000400 	vshl.u8	d0, d0, d0
    1238:	009f5001 	addseq	r5, pc, r1
    123c:	00000000 	andeq	r0, r0, r0
    1240:	01000000 	mrseq	r0, (UNDEF: 0)
    1244:	00005000 	andeq	r5, r0, r0
    1248:	00000000 	andeq	r0, r0, r0
    124c:	00040000 	andeq	r0, r4, r0
    1250:	9f5001f3 	svcls	0x005001f3
	...
    125c:	00500001 	subseq	r0, r0, r1
    1260:	00000000 	andeq	r0, r0, r0
    1264:	04000000 	streq	r0, [r0], #-0
    1268:	5001f300 	andpl	pc, r1, r0, lsl #6
    126c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1270:	00000000 	andeq	r0, r0, r0
    1274:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1280:	01f30004 	mvnseq	r0, r4
    1284:	00009f50 	andeq	r9, r0, r0, asr pc
    1288:	00000000 	andeq	r0, r0, r0
    128c:	00010000 	andeq	r0, r1, r0
    1290:	00000050 	andeq	r0, r0, r0, asr r0
    1294:	00000000 	andeq	r0, r0, r0
    1298:	f3000400 	vshl.u8	d0, d0, d0
    129c:	009f5001 	addseq	r5, pc, r1
    12a0:	00000000 	andeq	r0, r0, r0
    12a4:	01000000 	mrseq	r0, (UNDEF: 0)
    12a8:	00005000 	andeq	r5, r0, r0
    12ac:	00000000 	andeq	r0, r0, r0
    12b0:	12840000 	addne	r0, r4, #0
    12b4:	12a00800 	adcne	r0, r0, #0, 16
    12b8:	00010800 	andeq	r0, r1, r0, lsl #16
    12bc:	0012a051 	andseq	sl, r2, r1, asr r0
    12c0:	00132008 	andseq	r2, r3, r8
    12c4:	f3000408 	vshl.u8	d0, d8, d0
    12c8:	009f5101 	addseq	r5, pc, r1, lsl #2
    12cc:	00000000 	andeq	r0, r0, r0
    12d0:	84000000 	strhi	r0, [r0], #-0
    12d4:	94080012 	strls	r0, [r8], #-18
    12d8:	02080012 	andeq	r0, r8, #18
    12dc:	949f3000 	ldrls	r3, [pc], #0	; 12e4 <__Stack_Size+0xee4>
    12e0:	98080012 	stmdals	r8, {r1, r4}
    12e4:	06080012 			; <UNDEFINED> instruction: 0x06080012
    12e8:	08007300 	stmdaeq	r0, {r8, r9, ip, sp, lr}
    12ec:	989f1aff 	ldmls	pc, {r0, r1, r2, r3, r4, r5, r6, r7, r9, fp, ip}	; <UNPREDICTABLE>
    12f0:	20080012 	andcs	r0, r8, r2, lsl r0
    12f4:	01080013 	tsteq	r8, r3, lsl r0
    12f8:	00005300 	andeq	r5, r0, r0, lsl #6
    12fc:	00000000 	andeq	r0, r0, r0
    1300:	12840000 	addne	r0, r4, #0
    1304:	12a20800 	adcne	r0, r2, #0, 16
    1308:	00020800 	andeq	r0, r2, r0, lsl #16
    130c:	12aa9f30 	adcne	r9, sl, #48, 30	; 0xc0
    1310:	12da0800 	sbcsne	r0, sl, #0, 16
    1314:	00010800 	andeq	r0, r1, r0, lsl #16
    1318:	0012ee57 	andseq	lr, r2, r7, asr lr
    131c:	00131e08 	andseq	r1, r3, r8, lsl #28
    1320:	57000108 	strpl	r0, [r0, -r8, lsl #2]
	...
    132c:	08001284 	stmdaeq	r0, {r2, r7, r9, ip}
    1330:	080012a2 	stmdaeq	r0, {r1, r5, r7, r9, ip}
    1334:	9f300002 	svcls	0x00300002
    1338:	080012a2 	stmdaeq	r0, {r1, r5, r7, r9, ip}
    133c:	080012da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r9, ip}
    1340:	e0540001 	subs	r0, r4, r1
    1344:	e2080012 	and	r0, r8, #18
    1348:	02080012 	andeq	r0, r8, #18
    134c:	e29f3000 	adds	r3, pc, #0
    1350:	1e080012 	mcrne	0, 0, r0, cr8, cr2, {0}
    1354:	01080013 	tsteq	r8, r3, lsl r0
    1358:	00005400 	andeq	r5, r0, r0, lsl #8
    135c:	00000000 	andeq	r0, r0, r0
    1360:	12840000 	addne	r0, r4, #0
    1364:	12a20800 	adcne	r0, r2, #0, 16
    1368:	00020800 	andeq	r0, r2, r0, lsl #16
    136c:	12a69f30 	adcne	r9, r6, #48, 30	; 0xc0
    1370:	12ae0800 	adcne	r0, lr, #0, 16
    1374:	00010800 	andeq	r0, r1, r0, lsl #16
    1378:	0012ae56 	andseq	sl, r2, r6, asr lr
    137c:	0012b208 	andseq	fp, r2, r8, lsl #4
    1380:	74000508 	strvc	r0, [r0], #-1288	; 0x508
    1384:	9f243200 	svcls	0x00243200
    1388:	080012b2 	stmdaeq	r0, {r1, r4, r5, r7, r9, ip}
    138c:	080012d2 	stmdaeq	r0, {r1, r4, r6, r7, r9, ip}
    1390:	ea5e0001 	b	178139c <__Stack_Size+0x1780f9c>
    1394:	f2080012 	vqadd.s8	d0, d8, d2
    1398:	01080012 	tsteq	r8, r2, lsl r0
    139c:	12f25600 	rscsne	r5, r2, #0, 12
    13a0:	12f60800 	rscsne	r0, r6, #0, 16
    13a4:	00050800 	andeq	r0, r5, r0, lsl #16
    13a8:	24320074 	ldrtcs	r0, [r2], #-116	; 0x74
    13ac:	0012f69f 	mulseq	r2, pc, r6	; <UNPREDICTABLE>
    13b0:	00131608 	andseq	r1, r3, r8, lsl #12
    13b4:	5e000108 	adfpls	f0, f0, #0.0
	...
    13c0:	08001284 	stmdaeq	r0, {r2, r7, r9, ip}
    13c4:	080012a0 	stmdaeq	r0, {r5, r7, r9, ip}
    13c8:	9f300002 	svcls	0x00300002
    13cc:	080012a0 	stmdaeq	r0, {r5, r7, r9, ip}
    13d0:	080012da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r9, ip}
    13d4:	e0510001 	subs	r0, r1, r1
    13d8:	1e080012 	mcrne	0, 0, r0, cr8, cr2, {0}
    13dc:	01080013 	tsteq	r8, r3, lsl r0
    13e0:	00005100 	andeq	r5, r0, r0, lsl #2
    13e4:	00000000 	andeq	r0, r0, r0
    13e8:	12840000 	addne	r0, r4, #0
    13ec:	12a20800 	adcne	r0, r2, #0, 16
    13f0:	00020800 	andeq	r0, r2, r0, lsl #16
    13f4:	12b29f30 	adcsne	r9, r2, #48, 30	; 0xc0
    13f8:	12b80800 	adcsne	r0, r8, #0, 16
    13fc:	00050800 	andeq	r0, r5, r0, lsl #16
    1400:	24007e3f 	strcs	r7, [r0], #-3647	; 0xe3f
    1404:	0012b89f 	mulseq	r2, pc, r8	; <UNPREDICTABLE>
    1408:	0012c208 	andseq	ip, r2, r8, lsl #4
    140c:	56000108 	strpl	r0, [r0], -r8, lsl #2
    1410:	080012c2 	stmdaeq	r0, {r1, r6, r7, r9, ip}
    1414:	080012d2 	stmdaeq	r0, {r1, r4, r6, r7, r9, ip}
    1418:	7e3f0005 	cdpvc	0, 3, cr0, cr15, cr5, {0}
    141c:	f69f2400 			; <UNDEFINED> instruction: 0xf69f2400
    1420:	fc080012 	stc2	0, cr0, [r8], {18}
    1424:	05080012 	streq	r0, [r8, #-18]
    1428:	007e3f00 	rsbseq	r3, lr, r0, lsl #30
    142c:	12fc9f24 	rscsne	r9, ip, #36, 30	; 0x90
    1430:	13060800 	movwne	r0, #26624	; 0x6800
    1434:	00010800 	andeq	r0, r1, r0, lsl #16
    1438:	00130656 	andseq	r0, r3, r6, asr r6
    143c:	00131608 	andseq	r1, r3, r8, lsl #12
    1440:	3f000508 	svccc	0x00000508
    1444:	9f24007e 	svcls	0x0024007e
	...
    1450:	08001320 	stmdaeq	r0, {r5, r8, r9, ip}
    1454:	08001328 	stmdaeq	r0, {r3, r5, r8, r9, ip}
    1458:	28500001 	ldmdacs	r0, {r0}^
    145c:	2c080013 	stccs	0, cr0, [r8], {19}
    1460:	04080013 	streq	r0, [r8], #-19
    1464:	5001f300 	andpl	pc, r1, r0, lsl #6
    1468:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    146c:	00000000 	andeq	r0, r0, r0
    1470:	00132000 	andseq	r2, r3, r0
    1474:	00132208 	andseq	r2, r3, r8, lsl #4
    1478:	30000208 	andcc	r0, r0, r8, lsl #4
    147c:	0013229f 	mulseq	r3, pc, r2	; <UNPREDICTABLE>
    1480:	00132c08 	andseq	r2, r3, r8, lsl #24
    1484:	71000c08 	tstvc	r0, r8, lsl #24
    1488:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    148c:	1a00731a 	bne	1e0fc <__Stack_Size+0x1dcfc>
    1490:	009f2e30 	addseq	r2, pc, r0, lsr lr	; <UNPREDICTABLE>
	...
    14a0:	01000000 	mrseq	r0, (UNDEF: 0)
    14a4:	00005000 	andeq	r5, r0, r0
    14a8:	00000000 	andeq	r0, r0, r0
    14ac:	00040000 	andeq	r0, r4, r0
    14b0:	9f5001f3 	svcls	0x005001f3
	...
    14c4:	00500001 	subseq	r0, r0, r1
    14c8:	00000000 	andeq	r0, r0, r0
    14cc:	04000000 	streq	r0, [r0], #-0
    14d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    14d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    14e4:	30000200 	andcc	r0, r0, r0, lsl #4
    14e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    14ec:	00000000 	andeq	r0, r0, r0
    14f0:	71000c00 	tstvc	r0, r0, lsl #24
    14f4:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    14f8:	1a00731a 	bne	1e168 <__Stack_Size+0x1dd68>
    14fc:	009f2e30 	addseq	r2, pc, r0, lsr lr	; <UNPREDICTABLE>
	...
    150c:	01000000 	mrseq	r0, (UNDEF: 0)
    1510:	00005000 	andeq	r5, r0, r0
    1514:	00000000 	andeq	r0, r0, r0
    1518:	00040000 	andeq	r0, r4, r0
    151c:	9f5001f3 	svcls	0x005001f3
	...
    1530:	3c400004 	mcrrcc	0, 0, r0, r0, cr4
    1534:	00009f24 	andeq	r9, r0, r4, lsr #30
    1538:	00000000 	andeq	r0, r0, r0
    153c:	00010000 	andeq	r0, r1, r0
    1540:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1550:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    155c:	01f30004 	mvnseq	r0, r4
    1560:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1570:	00010000 	andeq	r0, r1, r0
    1574:	00000051 	andeq	r0, r0, r1, asr r0
    1578:	00000000 	andeq	r0, r0, r0
    157c:	f3000400 	vshl.u8	d0, d0, d0
    1580:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    1590:	02000000 	andeq	r0, r0, #0
    1594:	009f3000 	addseq	r3, pc, r0
    1598:	00000000 	andeq	r0, r0, r0
    159c:	0f000000 	svceq	0x00000000
    15a0:	0a007300 	beq	1e1a8 <__Stack_Size+0x1dda8>
    15a4:	701aff80 	andsvc	pc, sl, r0, lsl #31
    15a8:	1aff0800 	bne	fffc35b0 <SCS_BASE+0x1ffb55b0>
    15ac:	9f212434 	svcls	0x00212434
	...
    15b8:	00500001 	subseq	r0, r0, r1
    15bc:	00000000 	andeq	r0, r0, r0
    15c0:	34000000 	strcc	r0, [r0], #-0
    15c4:	76080013 			; <UNDEFINED> instruction: 0x76080013
    15c8:	01080013 	tsteq	r8, r3, lsl r0
    15cc:	13765000 	cmnne	r6, #0
    15d0:	13880800 	orrne	r0, r8, #0, 16
    15d4:	00040800 	andeq	r0, r4, r0, lsl #16
    15d8:	9f5001f3 	svcls	0x005001f3
	...
    15e4:	08001334 	stmdaeq	r0, {r2, r4, r5, r8, r9, ip}
    15e8:	08001344 	stmdaeq	r0, {r2, r6, r8, r9, ip}
    15ec:	9f300002 	svcls	0x00300002
    15f0:	08001344 	stmdaeq	r0, {r2, r6, r8, r9, ip}
    15f4:	0800137a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, ip}
    15f8:	7a520001 	bvc	1481604 <__Stack_Size+0x1481204>
    15fc:	88080013 	stmdahi	r8, {r0, r1, r4}
    1600:	08080013 	stmdaeq	r8, {r0, r1, r4}
    1604:	5001f300 	andpl	pc, r1, r0, lsl #6
    1608:	1affff0a 	bne	1238 <__Stack_Size+0xe38>
    160c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1610:	00000000 	andeq	r0, r0, r0
    1614:	00133400 	andseq	r3, r3, r0, lsl #8
    1618:	00135608 	andseq	r5, r3, r8, lsl #12
    161c:	30000208 	andcc	r0, r0, r8, lsl #4
    1620:	0013569f 	mulseq	r3, pc, r6	; <UNPREDICTABLE>
    1624:	00137208 	andseq	r7, r3, r8, lsl #4
    1628:	33000b08 	movwcc	r0, #2824	; 0xb08
    162c:	3f4e0070 	svccc	0x004e0070
    1630:	25401a24 	strbcs	r1, [r0, #-2596]	; 0xa24
    1634:	00009f24 	andeq	r9, r0, r4, lsr #30
    1638:	00000000 	andeq	r0, r0, r0
    163c:	13340000 	teqne	r4, #0
    1640:	13420800 	movtne	r0, #10240	; 0x2800
    1644:	00020800 	andeq	r0, r2, r0, lsl #16
    1648:	13429f30 	movtne	r9, #12080	; 0x2f30
    164c:	13880800 	orrne	r0, r8, #0, 16
    1650:	00010800 	andeq	r0, r1, r0, lsl #16
    1654:	00000053 	andeq	r0, r0, r3, asr r0
    1658:	00000000 	andeq	r0, r0, r0
    165c:	00133400 	andseq	r3, r3, r0, lsl #8
    1660:	00134208 	andseq	r4, r3, r8, lsl #4
    1664:	30000208 	andcc	r0, r0, r8, lsl #4
    1668:	0013429f 	mulseq	r3, pc, r2	; <UNPREDICTABLE>
    166c:	00137608 	andseq	r7, r3, r8, lsl #12
    1670:	70000908 	andvc	r0, r0, r8, lsl #18
    1674:	243f4e00 	ldrtcs	r4, [pc], #-3584	; 167c <__Stack_Size+0x127c>
    1678:	9f25401a 	svcls	0x0025401a
    167c:	08001376 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, ip}
    1680:	08001388 	stmdaeq	r0, {r3, r7, r8, r9, ip}
    1684:	01f3000a 	mvnseq	r0, sl
    1688:	243f4e50 	ldrtcs	r4, [pc], #-3664	; 1690 <__Stack_Size+0x1290>
    168c:	9f25401a 	svcls	0x0025401a
	...
    16a0:	00500001 	subseq	r0, r0, r1
    16a4:	00000000 	andeq	r0, r0, r0
    16a8:	04000000 	streq	r0, [r0], #-0
    16ac:	5001f300 	andpl	pc, r1, r0, lsl #6
    16b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    16c0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    16cc:	01f30004 	mvnseq	r0, r4
    16d0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    16e0:	00020000 	andeq	r0, r2, r0
    16e4:	00009f30 	andeq	r9, r0, r0, lsr pc
    16e8:	00000000 	andeq	r0, r0, r0
    16ec:	00050000 	andeq	r0, r5, r0
    16f0:	2400733f 	strcs	r7, [r0], #-831	; 0x33f
    16f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    16f8:	00000000 	andeq	r0, r0, r0
    16fc:	52000100 	andpl	r0, r0, #0, 2
	...
    1708:	733f0005 	teqvc	pc, #5
    170c:	009f2400 	addseq	r2, pc, r0, lsl #8
	...
    171c:	02000000 	andeq	r0, r0, #0
    1720:	009f3000 	addseq	r3, pc, r0
    1724:	00000000 	andeq	r0, r0, r0
    1728:	01000000 	mrseq	r0, (UNDEF: 0)
    172c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    173c:	00020000 	andeq	r0, r2, r0
    1740:	00009f30 	andeq	r9, r0, r0, lsr pc
    1744:	00000000 	andeq	r0, r0, r0
    1748:	00020000 	andeq	r0, r2, r0
    174c:	00009f31 	andeq	r9, r0, r1, lsr pc
    1750:	00000000 	andeq	r0, r0, r0
    1754:	00020000 	andeq	r0, r2, r0
    1758:	00009f32 	andeq	r9, r0, r2, lsr pc
    175c:	00000000 	andeq	r0, r0, r0
    1760:	00020000 	andeq	r0, r2, r0
    1764:	00009f33 	andeq	r9, r0, r3, lsr pc
    1768:	00000000 	andeq	r0, r0, r0
    176c:	13880000 	orrne	r0, r8, #0
    1770:	138c0800 	orrne	r0, ip, #0, 16
    1774:	00010800 	andeq	r0, r1, r0, lsl #16
    1778:	00138c50 	andseq	r8, r3, r0, asr ip
    177c:	00139c08 	andseq	r9, r3, r8, lsl #24
    1780:	f3000408 	vshl.u8	d0, d8, d0
    1784:	009f5001 	addseq	r5, pc, r1
    1788:	00000000 	andeq	r0, r0, r0
    178c:	9c000000 	stcls	0, cr0, [r0], {-0}
    1790:	b4080013 	strlt	r0, [r8], #-19
    1794:	02080013 	andeq	r0, r8, #19
    1798:	b49f3000 	ldrlt	r3, [pc], #0	; 17a0 <__Stack_Size+0x13a0>
    179c:	bc080013 	stclt	0, cr0, [r8], {19}
    17a0:	01080013 	tsteq	r8, r3, lsl r0
    17a4:	13bc5400 			; <UNDEFINED> instruction: 0x13bc5400
    17a8:	13d20800 	bicsne	r0, r2, #0, 16
    17ac:	00010800 	andeq	r0, r1, r0, lsl #16
    17b0:	0013d251 	andseq	sp, r3, r1, asr r2
    17b4:	0013e408 	andseq	lr, r3, r8, lsl #8
    17b8:	52000108 	andpl	r0, r0, #8, 2
    17bc:	080013e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, ip}
    17c0:	080013e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, ip}
    17c4:	00720006 	rsbseq	r0, r2, r6
    17c8:	9f1a0071 	svcls	0x001a0071
    17cc:	080013e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, ip}
    17d0:	080013e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, ip}
    17d4:	02520001 	subseq	r0, r2, #1
    17d8:	20080014 	andcs	r0, r8, r4, lsl r0
    17dc:	02080014 	andeq	r0, r8, #20
    17e0:	009f3000 	addseq	r3, pc, r0
    17e4:	00000000 	andeq	r0, r0, r0
    17e8:	9c000000 	stcls	0, cr0, [r0], {-0}
    17ec:	d6080013 			; <UNDEFINED> instruction: 0xd6080013
    17f0:	02080013 	andeq	r0, r8, #19
    17f4:	e09f3000 	adds	r3, pc, r0
    17f8:	e8080013 	stmda	r8, {r0, r1, r4}
    17fc:	01080013 	tsteq	r8, r3, lsl r0
    1800:	13e85400 	mvnne	r5, #0, 8
    1804:	13f00800 	mvnsne	r0, #0, 16
    1808:	00010800 	andeq	r0, r1, r0, lsl #16
    180c:	00140252 	andseq	r0, r4, r2, asr r2
    1810:	00142008 	andseq	r2, r4, r8
    1814:	30000208 	andcc	r0, r0, r8, lsl #4
    1818:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    181c:	00000000 	andeq	r0, r0, r0
    1820:	00139c00 	andseq	r9, r3, r0, lsl #24
    1824:	0013e008 	andseq	lr, r3, r8
    1828:	30000208 	andcc	r0, r0, r8, lsl #4
    182c:	0013e09f 	mulseq	r3, pc, r0	; <UNPREDICTABLE>
    1830:	0013f208 	andseq	pc, r3, r8, lsl #4
    1834:	51000108 	tstpl	r0, r8, lsl #2
    1838:	080013f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, r9, ip}
    183c:	08001402 	stmdaeq	r0, {r1, sl, ip}
    1840:	ff080006 			; <UNDEFINED> instruction: 0xff080006
    1844:	9f240075 	svcls	0x00240075
    1848:	08001402 	stmdaeq	r0, {r1, sl, ip}
    184c:	08001420 	stmdaeq	r0, {r5, sl, ip}
    1850:	9f300002 	svcls	0x00300002
	...
    185c:	0800139c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, ip}
    1860:	080013b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, ip}
    1864:	9f300002 	svcls	0x00300002
    1868:	080013b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, ip}
    186c:	080013b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, ip}
    1870:	74340005 	ldrtvc	r0, [r4], #-5
    1874:	b89f1c00 	ldmlt	pc, {sl, fp, ip}	; <UNPREDICTABLE>
    1878:	bc080013 	stclt	0, cr0, [r8], {19}
    187c:	01080013 	tsteq	r8, r3, lsl r0
    1880:	13bc5100 			; <UNDEFINED> instruction: 0x13bc5100
    1884:	13c20800 	bicne	r0, r2, #0, 16
    1888:	00050800 	andeq	r0, r5, r0, lsl #16
    188c:	1c007434 	cfstrsne	mvf7, [r0], {52}	; 0x34
    1890:	0014029f 	mulseq	r4, pc, r2	; <UNPREDICTABLE>
    1894:	00142008 	andseq	r2, r4, r8
    1898:	30000208 	andcc	r0, r0, r8, lsl #4
    189c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    18a0:	00000000 	andeq	r0, r0, r0
    18a4:	00139c00 	andseq	r9, r3, r0, lsl #24
    18a8:	0013b408 	andseq	fp, r3, r8, lsl #8
    18ac:	3f000208 	svccc	0x00000208
    18b0:	0013b49f 	mulseq	r3, pc, r4	; <UNPREDICTABLE>
    18b4:	0013c008 	andseq	ip, r3, r8
    18b8:	3f000508 	svccc	0x00000508
    18bc:	9f250074 	svcls	0x00250074
    18c0:	080013c0 	stmdaeq	r0, {r6, r7, r8, r9, ip}
    18c4:	080013c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, ip}
    18c8:	02520001 	subseq	r0, r2, #1
    18cc:	20080014 	andcs	r0, r8, r4, lsl r0
    18d0:	02080014 	andeq	r0, r8, #20
    18d4:	009f3f00 	addseq	r3, pc, r0, lsl #30
	...
    18e4:	01000000 	mrseq	r0, (UNDEF: 0)
    18e8:	00005000 	andeq	r5, r0, r0
    18ec:	00000000 	andeq	r0, r0, r0
    18f0:	00040000 	andeq	r0, r4, r0
    18f4:	9f5001f3 	svcls	0x005001f3
	...
    1908:	00500001 	subseq	r0, r0, r1
    190c:	00000000 	andeq	r0, r0, r0
    1910:	04000000 	streq	r0, [r0], #-0
    1914:	5001f300 	andpl	pc, r1, r0, lsl #6
    1918:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1928:	30000200 	andcc	r0, r0, r0, lsl #4
    192c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1930:	00000000 	andeq	r0, r0, r0
    1934:	70000900 	andvc	r0, r0, r0, lsl #18
    1938:	1a007200 	bne	1e140 <__Stack_Size+0x1dd40>
    193c:	9f290072 	svcls	0x00290072
	...
    1950:	9f300002 	svcls	0x00300002
	...
    195c:	00520001 	subseq	r0, r2, r1
	...
    196c:	01000000 	mrseq	r0, (UNDEF: 0)
    1970:	00005000 	andeq	r5, r0, r0
    1974:	00000000 	andeq	r0, r0, r0
    1978:	00040000 	andeq	r0, r4, r0
    197c:	9f5001f3 	svcls	0x005001f3
	...
    1990:	00500001 	subseq	r0, r0, r1
    1994:	00000000 	andeq	r0, r0, r0
    1998:	04000000 	streq	r0, [r0], #-0
    199c:	5001f300 	andpl	pc, r1, r0, lsl #6
    19a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    19b0:	30000200 	andcc	r0, r0, r0, lsl #4
    19b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    19b8:	00000000 	andeq	r0, r0, r0
    19bc:	70000900 	andvc	r0, r0, r0, lsl #18
    19c0:	1a007200 	bne	1e1c8 <__Stack_Size+0x1ddc8>
    19c4:	9f290072 	svcls	0x00290072
	...
    19d8:	9f300002 	svcls	0x00300002
	...
    19e4:	00520001 	subseq	r0, r2, r1
    19e8:	00000000 	andeq	r0, r0, r0
    19ec:	20000000 	andcs	r0, r0, r0
    19f0:	2c080014 	stccs	0, cr0, [r8], {20}
    19f4:	01080014 	tsteq	r8, r4, lsl r0
    19f8:	142c5000 	strtne	r5, [ip], #-0
    19fc:	14340800 	ldrtne	r0, [r4], #-2048	; 0x800
    1a00:	00040800 	andeq	r0, r4, r0, lsl #16
    1a04:	9f5001f3 	svcls	0x005001f3
	...
    1a10:	08001420 	stmdaeq	r0, {r5, sl, ip}
    1a14:	08001424 	stmdaeq	r0, {r2, r5, sl, ip}
    1a18:	24510001 	ldrbcs	r0, [r1], #-1
    1a1c:	34080014 	strcc	r0, [r8], #-20
    1a20:	04080014 	streq	r0, [r8], #-20
    1a24:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1a28:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1a38:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1a44:	01f30004 	mvnseq	r0, r4
    1a48:	00009f50 	andeq	r9, r0, r0, asr pc
    1a4c:	00000000 	andeq	r0, r0, r0
    1a50:	00010000 	andeq	r0, r1, r0
    1a54:	00000050 	andeq	r0, r0, r0, asr r0
    1a58:	00000000 	andeq	r0, r0, r0
    1a5c:	f3000400 	vshl.u8	d0, d0, d0
    1a60:	009f5001 	addseq	r5, pc, r1
	...
    1a70:	01000000 	mrseq	r0, (UNDEF: 0)
    1a74:	00005000 	andeq	r5, r0, r0
    1a78:	00000000 	andeq	r0, r0, r0
    1a7c:	00040000 	andeq	r0, r4, r0
    1a80:	9f5001f3 	svcls	0x005001f3
	...
    1a94:	00510001 	subseq	r0, r1, r1
    1a98:	00000000 	andeq	r0, r0, r0
    1a9c:	04000000 	streq	r0, [r0], #-0
    1aa0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1aa4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1aa8:	00000000 	andeq	r0, r0, r0
    1aac:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1ab8:	01f30004 	mvnseq	r0, r4
    1abc:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    1acc:	00020000 	andeq	r0, r2, r0
    1ad0:	00009f30 	andeq	r9, r0, r0, lsr pc
    1ad4:	00000000 	andeq	r0, r0, r0
    1ad8:	00010000 	andeq	r0, r1, r0
    1adc:	00000052 	andeq	r0, r0, r2, asr r0
    1ae0:	00000000 	andeq	r0, r0, r0
    1ae4:	31000500 	tstcc	r0, r0, lsl #10
    1ae8:	9f240070 	svcls	0x00240070
	...
    1af4:	00520001 	subseq	r0, r2, r1
    1af8:	00000000 	andeq	r0, r0, r0
    1afc:	05000000 	streq	r0, [r0, #-0]
    1b00:	00703100 	rsbseq	r3, r0, r0, lsl #2
    1b04:	00009f24 	andeq	r9, r0, r4, lsr #30
	...
    1b14:	00010000 	andeq	r0, r1, r0
    1b18:	00000050 	andeq	r0, r0, r0, asr r0
    1b1c:	00000000 	andeq	r0, r0, r0
    1b20:	f3000400 	vshl.u8	d0, d0, d0
    1b24:	009f5001 	addseq	r5, pc, r1
	...
    1b34:	01000000 	mrseq	r0, (UNDEF: 0)
    1b38:	00005100 	andeq	r5, r0, r0, lsl #2
    1b3c:	00000000 	andeq	r0, r0, r0
    1b40:	00040000 	andeq	r0, r4, r0
    1b44:	9f5101f3 	svcls	0x005101f3
	...
    1b58:	00520001 	subseq	r0, r2, r1
    1b5c:	00000000 	andeq	r0, r0, r0
    1b60:	04000000 	streq	r0, [r0], #-0
    1b64:	5201f300 	andpl	pc, r1, #0, 6
    1b68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1b78:	30000200 	andcc	r0, r0, r0, lsl #4
    1b7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b80:	00000000 	andeq	r0, r0, r0
    1b84:	34000500 	strcc	r0, [r0], #-1280	; 0x500
    1b88:	9f1c0073 	svcls	0x001c0073
	...
    1b94:	00540001 	subseq	r0, r4, r1
    1b98:	00000000 	andeq	r0, r0, r0
    1b9c:	05000000 	streq	r0, [r0, #-0]
    1ba0:	00733400 	rsbseq	r3, r3, r0, lsl #8
    1ba4:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
    1bb4:	00030000 	andeq	r0, r3, r0
    1bb8:	009fff08 	addseq	pc, pc, r8, lsl #30
    1bbc:	00000000 	andeq	r0, r0, r0
    1bc0:	06000000 	streq	r0, [r0], -r0
    1bc4:	73ff0800 	mvnsvc	r0, #0, 16
    1bc8:	009f2500 	addseq	r2, pc, r0, lsl #10
    1bcc:	00000000 	andeq	r0, r0, r0
    1bd0:	01000000 	mrseq	r0, (UNDEF: 0)
    1bd4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1be4:	00020000 	andeq	r0, r2, r0
    1be8:	00009f30 	andeq	r9, r0, r0, lsr pc
    1bec:	00000000 	andeq	r0, r0, r0
    1bf0:	00060000 	andeq	r0, r6, r0
    1bf4:	0073ff08 	rsbseq	pc, r3, r8, lsl #30
    1bf8:	00009f24 	andeq	r9, r0, r4, lsr #30
	...
    1c08:	00020000 	andeq	r0, r2, r0
    1c0c:	00009f30 	andeq	r9, r0, r0, lsr pc
    1c10:	00000000 	andeq	r0, r0, r0
    1c14:	00010000 	andeq	r0, r1, r0
    1c18:	00000053 	andeq	r0, r0, r3, asr r0
    1c1c:	00000000 	andeq	r0, r0, r0
    1c20:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1c2c:	00710006 	rsbseq	r0, r1, r6
    1c30:	9f240073 	svcls	0x00240073
	...
    1c3c:	00510001 	subseq	r0, r1, r1
	...
    1c4c:	01000000 	mrseq	r0, (UNDEF: 0)
    1c50:	00005000 	andeq	r5, r0, r0
    1c54:	00000000 	andeq	r0, r0, r0
    1c58:	00040000 	andeq	r0, r4, r0
    1c5c:	9f5001f3 	svcls	0x005001f3
	...
    1c70:	9f300002 	svcls	0x00300002
	...
    1c7c:	00730009 	rsbseq	r0, r3, r9
    1c80:	731a0070 	tstvc	sl, #112	; 0x70
    1c84:	009f2900 	addseq	r2, pc, r0, lsl #18
	...
    1c94:	02000000 	andeq	r0, r0, #0
    1c98:	009f3000 	addseq	r3, pc, r0
    1c9c:	00000000 	andeq	r0, r0, r0
    1ca0:	06000000 	streq	r0, [r0], -r0
    1ca4:	70007300 	andvc	r7, r0, r0, lsl #6
    1ca8:	009f1a00 	addseq	r1, pc, r0, lsl #20
    1cac:	00000000 	andeq	r0, r0, r0
    1cb0:	01000000 	mrseq	r0, (UNDEF: 0)
    1cb4:	00005000 	andeq	r5, r0, r0
	...
    1cc4:	00070000 	andeq	r0, r7, r0
    1cc8:	253a0070 	ldrcs	r0, [sl, #-112]!	; 0x70
    1ccc:	009f1a3f 	addseq	r1, pc, pc, lsr sl	; <UNPREDICTABLE>
    1cd0:	00000000 	andeq	r0, r0, r0
    1cd4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1cd8:	5001f300 	andpl	pc, r1, r0, lsl #6
    1cdc:	1a3f253a 	bne	fcb1cc <__Stack_Size+0xfcadcc>
    1ce0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ce4:	00000000 	andeq	r0, r0, r0
    1ce8:	53000100 	movwpl	r0, #256	; 0x100
	...
    1cf4:	f3310009 	vhadd.u<illegal width 64>	d0, d1, d9
    1cf8:	f6095001 			; <UNDEFINED> instruction: 0xf6095001
    1cfc:	009f2424 	addseq	r2, pc, r4, lsr #8
	...
    1d0c:	01000000 	mrseq	r0, (UNDEF: 0)
    1d10:	00005000 	andeq	r5, r0, r0
    1d14:	00000000 	andeq	r0, r0, r0
    1d18:	00040000 	andeq	r0, r4, r0
    1d1c:	9f5001f3 	svcls	0x005001f3
	...
    1d30:	00700005 	rsbseq	r0, r0, r5
    1d34:	009f1a4f 	addseq	r1, pc, pc, asr #20
    1d38:	00000000 	andeq	r0, r0, r0
    1d3c:	01000000 	mrseq	r0, (UNDEF: 0)
    1d40:	00005000 	andeq	r5, r0, r0
	...
    1d50:	00010000 	andeq	r0, r1, r0
    1d54:	00000050 	andeq	r0, r0, r0, asr r0
    1d58:	00000000 	andeq	r0, r0, r0
    1d5c:	f3000400 	vshl.u8	d0, d0, d0
    1d60:	009f5001 	addseq	r5, pc, r1
	...
    1d70:	05000000 	streq	r0, [r0, #-0]
    1d74:	4f007000 	svcmi	0x00007000
    1d78:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1d7c:	00000000 	andeq	r0, r0, r0
    1d80:	00010000 	andeq	r0, r1, r0
    1d84:	00000050 	andeq	r0, r0, r0, asr r0
    1d88:	00000000 	andeq	r0, r0, r0
    1d8c:	70000300 	andvc	r0, r0, r0, lsl #6
    1d90:	00009f01 	andeq	r9, r0, r1, lsl #30
	...
    1da0:	00010000 	andeq	r0, r1, r0
    1da4:	00000050 	andeq	r0, r0, r0, asr r0
    1da8:	00000000 	andeq	r0, r0, r0
    1dac:	f3000400 	vshl.u8	d0, d0, d0
    1db0:	009f5001 	addseq	r5, pc, r1
	...
    1dc0:	02000000 	andeq	r0, r0, #0
    1dc4:	009f3000 	addseq	r3, pc, r0
    1dc8:	00000000 	andeq	r0, r0, r0
    1dcc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1dd0:	70007300 	andvc	r7, r0, r0, lsl #6
    1dd4:	00731a00 	rsbseq	r1, r3, r0, lsl #20
    1dd8:	00009f29 	andeq	r9, r0, r9, lsr #30
	...
    1de8:	00020000 	andeq	r0, r2, r0
    1dec:	00009f30 	andeq	r9, r0, r0, lsr pc
    1df0:	00000000 	andeq	r0, r0, r0
    1df4:	00060000 	andeq	r0, r6, r0
    1df8:	00700073 	rsbseq	r0, r0, r3, ror r0
    1dfc:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1e00:	00000000 	andeq	r0, r0, r0
    1e04:	00010000 	andeq	r0, r1, r0
    1e08:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1e18:	70000700 	andvc	r0, r0, r0, lsl #14
    1e1c:	3f253e00 	svccc	0x00253e00
    1e20:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1e24:	00000000 	andeq	r0, r0, r0
    1e28:	00080000 	andeq	r0, r8, r0
    1e2c:	3e5001f3 	mrccc	1, 2, r0, cr0, cr3, {7}
    1e30:	9f1a3f25 	svcls	0x001a3f25
	...
    1e3c:	00530001 	subseq	r0, r3, r1
    1e40:	00000000 	andeq	r0, r0, r0
    1e44:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1e48:	01f33100 	mvnseq	r3, r0, lsl #2
    1e4c:	24f20950 	ldrbtcs	r0, [r2], #2384	; 0x950
    1e50:	00009f24 	andeq	r9, r0, r4, lsr #30
	...
    1e60:	00010000 	andeq	r0, r1, r0
    1e64:	00000050 	andeq	r0, r0, r0, asr r0
    1e68:	00000000 	andeq	r0, r0, r0
    1e6c:	f3000400 	vshl.u8	d0, d0, d0
    1e70:	009f5001 	addseq	r5, pc, r1
    1e74:	00000000 	andeq	r0, r0, r0
    1e78:	01000000 	mrseq	r0, (UNDEF: 0)
    1e7c:	00005000 	andeq	r5, r0, r0
    1e80:	00000000 	andeq	r0, r0, r0
    1e84:	00040000 	andeq	r0, r4, r0
    1e88:	9f5001f3 	svcls	0x005001f3
	...
    1e94:	00500001 	subseq	r0, r0, r1
    1e98:	00000000 	andeq	r0, r0, r0
    1e9c:	04000000 	streq	r0, [r0], #-0
    1ea0:	5001f300 	andpl	pc, r1, r0, lsl #6
    1ea4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1eb4:	30000200 	andcc	r0, r0, r0, lsl #4
    1eb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ebc:	00000000 	andeq	r0, r0, r0
    1ec0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1ecc:	9f300002 	svcls	0x00300002
	...
    1ed8:	00500001 	subseq	r0, r0, r1
    1edc:	00000000 	andeq	r0, r0, r0
    1ee0:	02000000 	andeq	r0, r0, #0
    1ee4:	009f3000 	addseq	r3, pc, r0
    1ee8:	00000000 	andeq	r0, r0, r0
    1eec:	01000000 	mrseq	r0, (UNDEF: 0)
    1ef0:	00005000 	andeq	r5, r0, r0
	...
    1f00:	00020000 	andeq	r0, r2, r0
    1f04:	00009f30 	andeq	r9, r0, r0, lsr pc
    1f08:	00000000 	andeq	r0, r0, r0
    1f0c:	00010000 	andeq	r0, r1, r0
    1f10:	00000053 	andeq	r0, r0, r3, asr r0
    1f14:	00000000 	andeq	r0, r0, r0
    1f18:	70000800 	andvc	r0, r0, r0, lsl #16
    1f1c:	24f00900 	ldrbtcs	r0, [r0], #2304	; 0x900
    1f20:	009f2532 	addseq	r2, pc, r2, lsr r5	; <UNPREDICTABLE>
    1f24:	00000000 	andeq	r0, r0, r0
    1f28:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1f2c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1f30:	3224f009 	eorcc	pc, r4, #9
    1f34:	00009f25 	andeq	r9, r0, r5, lsr #30
    1f38:	00000000 	andeq	r0, r0, r0
    1f3c:	00010000 	andeq	r0, r1, r0
    1f40:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1f50:	30000200 	andcc	r0, r0, r0, lsl #4
    1f54:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1f58:	00000000 	andeq	r0, r0, r0
    1f5c:	70000700 	andvc	r0, r0, r0, lsl #14
    1f60:	33254400 	teqcc	r5, #0, 8
    1f64:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1f68:	00000000 	andeq	r0, r0, r0
    1f6c:	00080000 	andeq	r0, r8, r0
    1f70:	445001f3 	ldrbmi	r0, [r0], #-499	; 0x1f3
    1f74:	9f1a3325 	svcls	0x001a3325
	...
    1f80:	00700007 	rsbseq	r0, r0, r7
    1f84:	1a332544 	bne	ccb49c <__Stack_Size+0xccb09c>
    1f88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1f8c:	00000000 	andeq	r0, r0, r0
    1f90:	f3000800 	vsub.i8	d0, d0, d0
    1f94:	25445001 	strbcs	r5, [r4, #-1]
    1f98:	009f1a33 	addseq	r1, pc, r3, lsr sl	; <UNPREDICTABLE>
    1f9c:	00000000 	andeq	r0, r0, r0
    1fa0:	07000000 	streq	r0, [r0, -r0]
    1fa4:	44007000 	strmi	r7, [r0], #-0
    1fa8:	9f1a3325 	svcls	0x001a3325
	...
    1fb4:	01f30008 	mvnseq	r0, r8
    1fb8:	33254450 	teqcc	r5, #80, 8	; 0x50000000
    1fbc:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    1fcc:	00010000 	andeq	r0, r1, r0
    1fd0:	00000050 	andeq	r0, r0, r0, asr r0
    1fd4:	00000000 	andeq	r0, r0, r0
    1fd8:	f3000400 	vshl.u8	d0, d0, d0
    1fdc:	009f5001 	addseq	r5, pc, r1
	...
    1fec:	02000000 	andeq	r0, r0, #0
    1ff0:	009f3000 	addseq	r3, pc, r0
    1ff4:	00000000 	andeq	r0, r0, r0
    1ff8:	01000000 	mrseq	r0, (UNDEF: 0)
    1ffc:	00005000 	andeq	r5, r0, r0
	...
    200c:	00070000 	andeq	r0, r7, r0
    2010:	25460070 	strbcs	r0, [r6, #-112]	; 0x70
    2014:	009f1a31 	addseq	r1, pc, r1, lsr sl	; <UNPREDICTABLE>
    2018:	00000000 	andeq	r0, r0, r0
    201c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2020:	5001f300 	andpl	pc, r1, r0, lsl #6
    2024:	1a312546 	bne	c4b544 <__Stack_Size+0xc4b144>
    2028:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2038:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2044:	01f30004 	mvnseq	r0, r4
    2048:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    2058:	00020000 	andeq	r0, r2, r0
    205c:	00009f30 	andeq	r9, r0, r0, lsr pc
    2060:	00000000 	andeq	r0, r0, r0
    2064:	00010000 	andeq	r0, r1, r0
    2068:	00000053 	andeq	r0, r0, r3, asr r0
    206c:	00000000 	andeq	r0, r0, r0
    2070:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    207c:	080014c0 	stmdaeq	r0, {r6, r7, sl, ip}
    2080:	080014cc 	stmdaeq	r0, {r2, r3, r6, r7, sl, ip}
    2084:	cc500001 	mrrcgt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    2088:	d4080014 	strle	r0, [r8], #-20
    208c:	04080014 	streq	r0, [r8], #-20
    2090:	5001f300 	andpl	pc, r1, r0, lsl #6
    2094:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2098:	00000000 	andeq	r0, r0, r0
    209c:	0014c000 	andseq	ip, r4, r0
    20a0:	0014ca08 	andseq	ip, r4, r8, lsl #20
    20a4:	51000108 	tstpl	r0, r8, lsl #2
    20a8:	080014ca 	stmdaeq	r0, {r1, r3, r6, r7, sl, ip}
    20ac:	080014d4 	stmdaeq	r0, {r2, r4, r6, r7, sl, ip}
    20b0:	01f30004 	mvnseq	r0, r4
    20b4:	00009f51 	andeq	r9, r0, r1, asr pc
    20b8:	00000000 	andeq	r0, r0, r0
    20bc:	14c00000 	strbne	r0, [r0], #0
    20c0:	14c40800 	strbne	r0, [r4], #2048	; 0x800
    20c4:	00020800 	andeq	r0, r2, r0, lsl #16
    20c8:	14c49f30 	strbne	r9, [r4], #3888	; 0xf30
    20cc:	14c80800 	strbne	r0, [r8], #2048	; 0x800
    20d0:	00090800 	andeq	r0, r9, r0, lsl #16
    20d4:	ff110073 			; <UNDEFINED> instruction: 0xff110073
    20d8:	1a7e83ff 	bne	1fa30dc <__Stack_Size+0x1fa2cdc>
    20dc:	0014c89f 	mulseq	r4, pc, r8	; <UNPREDICTABLE>
    20e0:	0014cc08 	andseq	ip, r4, r8, lsl #24
    20e4:	53000108 	movwpl	r0, #264	; 0x108
    20e8:	080014cc 	stmdaeq	r0, {r2, r3, r6, r7, sl, ip}
    20ec:	080014d4 	stmdaeq	r0, {r2, r4, r6, r7, sl, ip}
    20f0:	00500001 	subseq	r0, r0, r1
    20f4:	00000000 	andeq	r0, r0, r0
    20f8:	e0000000 	and	r0, r0, r0
    20fc:	ea080014 	b	202154 <__Stack_Size+0x201d54>
    2100:	01080014 	tsteq	r8, r4, lsl r0
    2104:	14ea5000 	strbtne	r5, [sl], #0
    2108:	14f40800 	ldrbtne	r0, [r4], #2048	; 0x800
    210c:	00040800 	andeq	r0, r4, r0, lsl #16
    2110:	9f5001f3 	svcls	0x005001f3
	...
    211c:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
    2120:	080014e4 	stmdaeq	r0, {r2, r5, r6, r7, sl, ip}
    2124:	9f300002 	svcls	0x00300002
    2128:	080014e4 	stmdaeq	r0, {r2, r5, r6, r7, sl, ip}
    212c:	080014ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, sl, ip}
    2130:	ea530001 	b	14c213c <__Stack_Size+0x14c1d3c>
    2134:	f4080014 	vst4.8	{d0-d3}, [r8 :64], r4
    2138:	01080014 	tsteq	r8, r4, lsl r0
    213c:	00005000 	andeq	r5, r0, r0
    2140:	00000000 	andeq	r0, r0, r0
    2144:	15040000 	strne	r0, [r4, #-0]
    2148:	150e0800 	strne	r0, [lr, #-2048]	; 0x800
    214c:	00010800 	andeq	r0, r1, r0, lsl #16
    2150:	00150e50 	andseq	r0, r5, r0, asr lr
    2154:	00151808 	andseq	r1, r5, r8, lsl #16
    2158:	f3000408 	vshl.u8	d0, d8, d0
    215c:	009f5001 	addseq	r5, pc, r1
    2160:	00000000 	andeq	r0, r0, r0
    2164:	04000000 	streq	r0, [r0], #-0
    2168:	08080015 	stmdaeq	r8, {r0, r2, r4}
    216c:	02080015 	andeq	r0, r8, #21
    2170:	089f3000 	ldmeq	pc, {ip, sp}	; <UNPREDICTABLE>
    2174:	0e080015 	mcreq	0, 0, r0, cr8, cr5, {0}
    2178:	01080015 	tsteq	r8, r5, lsl r0
    217c:	150e5300 	strne	r5, [lr, #-768]	; 0x300
    2180:	15180800 	ldrne	r0, [r8, #-2048]	; 0x800
    2184:	00010800 	andeq	r0, r1, r0, lsl #16
    2188:	00000050 	andeq	r0, r0, r0, asr r0
    218c:	00000000 	andeq	r0, r0, r0
    2190:	00151800 	andseq	r1, r5, r0, lsl #16
    2194:	00152208 	andseq	r2, r5, r8, lsl #4
    2198:	50000108 	andpl	r0, r0, r8, lsl #2
    219c:	08001522 	stmdaeq	r0, {r1, r5, r8, sl, ip}
    21a0:	0800152c 	stmdaeq	r0, {r2, r3, r5, r8, sl, ip}
    21a4:	01f30004 	mvnseq	r0, r4
    21a8:	00009f50 	andeq	r9, r0, r0, asr pc
    21ac:	00000000 	andeq	r0, r0, r0
    21b0:	15180000 	ldrne	r0, [r8, #-0]
    21b4:	151c0800 	ldrne	r0, [ip, #-2048]	; 0x800
    21b8:	00020800 	andeq	r0, r2, r0, lsl #16
    21bc:	151c9f30 	ldrne	r9, [ip, #-3888]	; 0xf30
    21c0:	15220800 	strne	r0, [r2, #-2048]!	; 0x800
    21c4:	00010800 	andeq	r0, r1, r0, lsl #16
    21c8:	00152253 	andseq	r2, r5, r3, asr r2
    21cc:	00152c08 	andseq	r2, r5, r8, lsl #24
    21d0:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    21dc:	0800152c 	stmdaeq	r0, {r2, r3, r5, r8, sl, ip}
    21e0:	08001538 	stmdaeq	r0, {r3, r4, r5, r8, sl, ip}
    21e4:	38500001 	ldmdacc	r0, {r0}^
    21e8:	40080015 	andmi	r0, r8, r5, lsl r0
    21ec:	04080015 	streq	r0, [r8], #-21
    21f0:	5001f300 	andpl	pc, r1, r0, lsl #6
    21f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    21f8:	00000000 	andeq	r0, r0, r0
    21fc:	00152c00 	andseq	r2, r5, r0, lsl #24
    2200:	00153008 	andseq	r3, r5, r8
    2204:	30000208 	andcc	r0, r0, r8, lsl #4
    2208:	0015309f 	mulseq	r5, pc, r0	; <UNPREDICTABLE>
    220c:	00153808 	andseq	r3, r5, r8, lsl #16
    2210:	53000108 	movwpl	r0, #264	; 0x108
    2214:	08001538 	stmdaeq	r0, {r3, r4, r5, r8, sl, ip}
    2218:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    221c:	00500001 	subseq	r0, r0, r1
	...
    222c:	01000000 	mrseq	r0, (UNDEF: 0)
    2230:	00005000 	andeq	r5, r0, r0
    2234:	00000000 	andeq	r0, r0, r0
    2238:	00040000 	andeq	r0, r4, r0
    223c:	9f5001f3 	svcls	0x005001f3
	...
    2248:	00500001 	subseq	r0, r0, r1
    224c:	00000000 	andeq	r0, r0, r0
    2250:	04000000 	streq	r0, [r0], #-0
    2254:	5001f300 	andpl	pc, r1, r0, lsl #6
    2258:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2268:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2274:	01f30004 	mvnseq	r0, r4
    2278:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    2288:	00020000 	andeq	r0, r2, r0
    228c:	00009f30 	andeq	r9, r0, r0, lsr pc
    2290:	00000000 	andeq	r0, r0, r0
    2294:	00010000 	andeq	r0, r1, r0
    2298:	00000053 	andeq	r0, r0, r3, asr r0
    229c:	00000000 	andeq	r0, r0, r0
    22a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    22b4:	00500001 	subseq	r0, r0, r1
    22b8:	00000000 	andeq	r0, r0, r0
    22bc:	04000000 	streq	r0, [r0], #-0
    22c0:	5001f300 	andpl	pc, r1, r0, lsl #6
    22c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    22c8:	00000000 	andeq	r0, r0, r0
    22cc:	00154c00 	andseq	r4, r5, r0, lsl #24
    22d0:	00155208 	andseq	r5, r5, r8, lsl #4
    22d4:	30000208 	andcc	r0, r0, r8, lsl #4
    22d8:	0015529f 	mulseq	r5, pc, r2	; <UNPREDICTABLE>
    22dc:	00155608 	andseq	r5, r5, r8, lsl #12
    22e0:	73000508 	movwvc	r0, #1288	; 0x508
    22e4:	9f1a3c00 	svcls	0x001a3c00
    22e8:	08001556 	stmdaeq	r0, {r1, r2, r4, r6, r8, sl, ip}
    22ec:	08001560 	stmdaeq	r0, {r5, r6, r8, sl, ip}
    22f0:	62530001 	subsvs	r0, r3, #1
    22f4:	64080015 	strvs	r0, [r8], #-21
    22f8:	01080015 	tsteq	r8, r5, lsl r0
    22fc:	15845300 	strne	r5, [r4, #768]	; 0x300
    2300:	158a0800 	strne	r0, [sl, #2048]	; 0x800
    2304:	00080800 	andeq	r0, r8, r0, lsl #16
    2308:	f0080073 			; <UNDEFINED> instruction: 0xf0080073
    230c:	9f25341a 	svcls	0x0025341a
    2310:	08001594 	stmdaeq	r0, {r2, r4, r7, r8, sl, ip}
    2314:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
    2318:	00740009 	rsbseq	r0, r4, r9
    231c:	1a07000a 	bne	1c234c <__Stack_Size+0x1c1f4c>
    2320:	a29f2538 	addsge	r2, pc, #56, 10	; 0xe000000
    2324:	a6080015 			; <UNDEFINED> instruction: 0xa6080015
    2328:	09080015 	stmdbeq	r8, {r0, r2, r4}
    232c:	0a007400 	beq	1f334 <__Stack_Size+0x1ef34>
    2330:	3b1a3800 	blcc	690338 <__Stack_Size+0x68ff38>
    2334:	15ae9f25 	strne	r9, [lr, #3877]!	; 0xf25
    2338:	15b20800 	ldrne	r0, [r2, #2048]!	; 0x800
    233c:	00090800 	andeq	r0, r9, r0, lsl #16
    2340:	000a0072 	andeq	r0, sl, r2, ror r0
    2344:	253e1ac0 	ldrcs	r1, [lr, #-2752]!	; 0xac0
    2348:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    234c:	00000000 	andeq	r0, r0, r0
    2350:	00154c00 	andseq	r4, r5, r0, lsl #24
    2354:	00156408 	andseq	r6, r5, r8, lsl #8
    2358:	30000208 	andcc	r0, r0, r8, lsl #4
    235c:	0015649f 	mulseq	r5, pc, r4	; <UNPREDICTABLE>
    2360:	00156a08 	andseq	r6, r5, r8, lsl #20
    2364:	73000708 	movwvc	r0, #1800	; 0x708
    2368:	24414e00 	strbcs	r4, [r1], #-3584	; 0xe00
    236c:	15709f1a 	ldrbne	r9, [r0, #-3866]!	; 0xf1a
    2370:	15800800 	strne	r0, [r0, #2048]	; 0x800
    2374:	00010800 	andeq	r0, r1, r0, lsl #16
    2378:	00000053 	andeq	r0, r0, r3, asr r0
    237c:	00000000 	andeq	r0, r0, r0
    2380:	00154c00 	andseq	r4, r5, r0, lsl #24
    2384:	00157008 	andseq	r7, r5, r8
    2388:	30000208 	andcc	r0, r0, r8, lsl #4
    238c:	0015709f 	mulseq	r5, pc, r0	; <UNPREDICTABLE>
    2390:	00157408 	andseq	r7, r5, r8, lsl #8
    2394:	71000708 	tstvc	r0, r8, lsl #14
    2398:	243c4000 	ldrtcs	r4, [ip], #-0
    239c:	00009f1a 	andeq	r9, r0, sl, lsl pc
    23a0:	00000000 	andeq	r0, r0, r0
    23a4:	154c0000 	strbne	r0, [ip, #-0]
    23a8:	15840800 	strne	r0, [r4, #2048]	; 0x800
    23ac:	00020800 	andeq	r0, r2, r0, lsl #16
    23b0:	15849f30 	strne	r9, [r4, #3888]	; 0xf30
    23b4:	158a0800 	strne	r0, [sl, #2048]	; 0x800
    23b8:	00130800 	andseq	r0, r3, r0, lsl #16
    23bc:	f0080073 			; <UNDEFINED> instruction: 0xf0080073
    23c0:	0325341a 	teqeq	r5, #436207616	; 0x1a000000
    23c4:	0800270d 	stmdaeq	r0, {r0, r2, r3, r8, r9, sl, sp}
    23c8:	08019422 	stmdaeq	r1, {r1, r5, sl, ip, pc}
    23cc:	949f1aff 	ldrls	r1, [pc], #2815	; 23d4 <__Stack_Size+0x1fd4>
    23d0:	98080015 	stmdals	r8, {r0, r2, r4}
    23d4:	14080015 	strne	r0, [r8], #-21
    23d8:	0a007400 	beq	1f3e0 <__Stack_Size+0x1efe0>
    23dc:	381a0700 	ldmdacc	sl, {r8, r9, sl}
    23e0:	270d0325 	strcs	r0, [sp, -r5, lsr #6]
    23e4:	94220800 	strtls	r0, [r2], #-2048	; 0x800
    23e8:	1aff0801 	bne	fffc43f4 <SCS_BASE+0x1ffb63f4>
    23ec:	0015a29f 	mulseq	r5, pc, r2	; <UNPREDICTABLE>
    23f0:	0015a608 	andseq	sl, r5, r8, lsl #12
    23f4:	74001408 	strvc	r1, [r0], #-1032	; 0x408
    23f8:	38000a00 	stmdacc	r0, {r9, fp}
    23fc:	03253b1a 	teqeq	r5, #26624	; 0x6800
    2400:	0800270d 	stmdaeq	r0, {r0, r2, r3, r8, r9, sl, sp}
    2404:	08019422 	stmdaeq	r1, {r1, r5, sl, ip, pc}
    2408:	ae9f1aff 	mrcge	10, 4, r1, cr15, cr15, {7}
    240c:	b2080015 	andlt	r0, r8, #21
    2410:	14080015 	strne	r0, [r8], #-21
    2414:	0a007200 	beq	1ec1c <__Stack_Size+0x1e81c>
    2418:	3e1ac000 	cdpcc	0, 1, cr12, cr10, cr0, {0}
    241c:	271d0325 	ldrcs	r0, [sp, -r5, lsr #6]
    2420:	94220800 	strtls	r0, [r2], #-2048	; 0x800
    2424:	1aff0801 	bne	fffc4430 <SCS_BASE+0x1ffb6430>
    2428:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2438:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2444:	01f30004 	mvnseq	r0, r4
    2448:	00009f50 	andeq	r9, r0, r0, asr pc
    244c:	00000000 	andeq	r0, r0, r0
    2450:	00010000 	andeq	r0, r1, r0
    2454:	00000050 	andeq	r0, r0, r0, asr r0
    2458:	00000000 	andeq	r0, r0, r0
    245c:	f3000400 	vshl.u8	d0, d0, d0
    2460:	009f5001 	addseq	r5, pc, r1
    2464:	00000000 	andeq	r0, r0, r0
    2468:	d0000000 	andle	r0, r0, r0
    246c:	d8080015 	stmdale	r8, {r0, r2, r4}
    2470:	01080015 	tsteq	r8, r5, lsl r0
    2474:	15d85000 	ldrbne	r5, [r8]
    2478:	15da0800 	ldrbne	r0, [sl, #2048]	; 0x800
    247c:	00040800 	andeq	r0, r4, r0, lsl #16
    2480:	9f5001f3 	svcls	0x005001f3
    2484:	080015da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, sl, ip}
    2488:	080015de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, sl, ip}
    248c:	de500001 	cdple	0, 5, cr0, cr0, cr1, {0}
    2490:	e8080015 	stmda	r8, {r0, r2, r4}
    2494:	04080015 	streq	r0, [r8], #-21
    2498:	5001f300 	andpl	pc, r1, r0, lsl #6
    249c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    24a0:	00000000 	andeq	r0, r0, r0
    24a4:	0015e800 	andseq	lr, r5, r0, lsl #16
    24a8:	0015f008 	andseq	pc, r5, r8
    24ac:	50000108 	andpl	r0, r0, r8, lsl #2
    24b0:	080015f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl, ip}
    24b4:	080015f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, sl, ip}
    24b8:	01f30004 	mvnseq	r0, r4
    24bc:	15f29f50 	ldrbne	r9, [r2, #3920]!	; 0xf50
    24c0:	15f60800 	ldrbne	r0, [r6, #2048]!	; 0x800
    24c4:	00010800 	andeq	r0, r1, r0, lsl #16
    24c8:	0015f650 	andseq	pc, r5, r0, asr r6	; <UNPREDICTABLE>
    24cc:	00160008 	andseq	r0, r6, r8
    24d0:	f3000408 	vshl.u8	d0, d8, d0
    24d4:	009f5001 	addseq	r5, pc, r1
	...
    24e0:	08080016 	stmdaeq	r8, {r1, r2, r4}
    24e4:	01080016 	tsteq	r8, r6, lsl r0
    24e8:	16085000 	strne	r5, [r8], -r0
    24ec:	160a0800 	strne	r0, [sl], -r0, lsl #16
    24f0:	00040800 	andeq	r0, r4, r0, lsl #16
    24f4:	9f5001f3 	svcls	0x005001f3
    24f8:	0800160a 	stmdaeq	r0, {r1, r3, r9, sl, ip}
    24fc:	0800160e 	stmdaeq	r0, {r1, r2, r3, r9, sl, ip}
    2500:	0e500001 	cdpeq	0, 5, cr0, cr0, cr1, {0}
    2504:	18080016 	stmdane	r8, {r1, r2, r4}
    2508:	04080016 	streq	r0, [r8], #-22
    250c:	5001f300 	andpl	pc, r1, r0, lsl #6
    2510:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2514:	00000000 	andeq	r0, r0, r0
    2518:	00161800 	andseq	r1, r6, r0, lsl #16
    251c:	00162008 	andseq	r2, r6, r8
    2520:	50000108 	andpl	r0, r0, r8, lsl #2
    2524:	08001620 	stmdaeq	r0, {r5, r9, sl, ip}
    2528:	08001622 	stmdaeq	r0, {r1, r5, r9, sl, ip}
    252c:	01f30004 	mvnseq	r0, r4
    2530:	16229f50 	qsaxne	r9, r2, r0
    2534:	16260800 	strtne	r0, [r6], -r0, lsl #16
    2538:	00010800 	andeq	r0, r1, r0, lsl #16
    253c:	00162650 	andseq	r2, r6, r0, asr r6
    2540:	00163008 	andseq	r3, r6, r8
    2544:	f3000408 	vshl.u8	d0, d8, d0
    2548:	009f5001 	addseq	r5, pc, r1
    254c:	00000000 	andeq	r0, r0, r0
    2550:	30000000 	andcc	r0, r0, r0
    2554:	48080016 	stmdami	r8, {r1, r2, r4}
    2558:	01080016 	tsteq	r8, r6, lsl r0
    255c:	16485000 	strbne	r5, [r8], -r0
    2560:	16580800 	ldrbne	r0, [r8], -r0, lsl #16
    2564:	00040800 	andeq	r0, r4, r0, lsl #16
    2568:	9f5001f3 	svcls	0x005001f3
	...
    2574:	08001630 	stmdaeq	r0, {r4, r5, r9, sl, ip}
    2578:	08001632 	stmdaeq	r0, {r1, r4, r5, r9, sl, ip}
    257c:	9f300002 	svcls	0x00300002
    2580:	08001632 	stmdaeq	r0, {r1, r4, r5, r9, sl, ip}
    2584:	08001644 	stmdaeq	r0, {r2, r6, r9, sl, ip}
    2588:	00720006 	rsbseq	r0, r2, r6
    258c:	9f1aff08 	svcls	0x001aff08
    2590:	08001644 	stmdaeq	r0, {r2, r6, r9, sl, ip}
    2594:	08001648 	stmdaeq	r0, {r3, r6, r9, sl, ip}
    2598:	00700008 	rsbseq	r0, r0, r8
    259c:	ff081a4f 			; <UNDEFINED> instruction: 0xff081a4f
    25a0:	16489f1a 			; <UNDEFINED> instruction: 0x16489f1a
    25a4:	16580800 	ldrbne	r0, [r8], -r0, lsl #16
    25a8:	00090800 	andeq	r0, r9, r0, lsl #16
    25ac:	4f5001f3 	svcmi	0x005001f3
    25b0:	1aff081a 	bne	fffc4620 <SCS_BASE+0x1ffb6620>
    25b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    25b8:	00000000 	andeq	r0, r0, r0
    25bc:	00163000 	andseq	r3, r6, r0
    25c0:	00163a08 	andseq	r3, r6, r8, lsl #20
    25c4:	30000208 	andcc	r0, r0, r8, lsl #4
    25c8:	00163a9f 	mulseq	r6, pc, sl	; <UNPREDICTABLE>
    25cc:	00163c08 	andseq	r3, r6, r8, lsl #24
    25d0:	53000108 	movwpl	r0, #264	; 0x108
    25d4:	0800163c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, ip}
    25d8:	08001642 	stmdaeq	r0, {r1, r6, r9, sl, ip}
    25dc:	9f300002 	svcls	0x00300002
    25e0:	08001642 	stmdaeq	r0, {r1, r6, r9, sl, ip}
    25e4:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
    25e8:	00530001 	subseq	r0, r3, r1
    25ec:	00000000 	andeq	r0, r0, r0
    25f0:	30000000 	andcc	r0, r0, r0
    25f4:	44080016 	strmi	r0, [r8], #-22
    25f8:	02080016 	andeq	r0, r8, #22
    25fc:	449f3000 	ldrmi	r3, [pc], #0	; 2604 <__Stack_Size+0x2204>
    2600:	48080016 	stmdami	r8, {r1, r2, r4}
    2604:	0d080016 	stceq	0, cr0, [r8, #-88]	; 0xffffffa8
    2608:	70007300 	andvc	r7, r0, r0, lsl #6
    260c:	081a4f00 	ldmdaeq	sl, {r8, r9, sl, fp, lr}
    2610:	31251aff 	strdcc	r1, [r5, -pc]!
    2614:	16489f1a 			; <UNDEFINED> instruction: 0x16489f1a
    2618:	16580800 	ldrbne	r0, [r8], -r0, lsl #16
    261c:	000e0800 	andeq	r0, lr, r0, lsl #16
    2620:	01f30073 	mvnseq	r0, r3, ror r0
    2624:	081a4f50 	ldmdaeq	sl, {r4, r6, r8, r9, sl, fp, lr}
    2628:	31251aff 	strdcc	r1, [r5, -pc]!
    262c:	00009f1a 	andeq	r9, r0, sl, lsl pc
    2630:	00000000 	andeq	r0, r0, r0
    2634:	165e0000 	ldrbne	r0, [lr], -r0
    2638:	167a0800 	ldrbtne	r0, [sl], -r0, lsl #16
    263c:	00020800 	andeq	r0, r2, r0, lsl #16
    2640:	167a9f30 	uhasxne	r9, sl, r0
    2644:	167c0800 	ldrbtne	r0, [ip], -r0, lsl #16
    2648:	00070800 	andeq	r0, r7, r0, lsl #16
    264c:	24480070 	strbcs	r0, [r8], #-112	; 0x70
    2650:	009f2e30 	addseq	r2, pc, r0, lsr lr	; <UNPREDICTABLE>
    2654:	00000000 	andeq	r0, r0, r0
    2658:	64000000 	strvs	r0, [r0], #-0
    265c:	76080016 			; <UNDEFINED> instruction: 0x76080016
    2660:	01080016 	tsteq	r8, r6, lsl r0
    2664:	00005000 	andeq	r5, r0, r0
	...
    2674:	00010000 	andeq	r0, r1, r0
    2678:	00000050 	andeq	r0, r0, r0, asr r0
    267c:	00000000 	andeq	r0, r0, r0
    2680:	f3000400 	vshl.u8	d0, d0, d0
    2684:	009f5001 	addseq	r5, pc, r1
	...
    2694:	02000000 	andeq	r0, r0, #0
    2698:	009f3000 	addseq	r3, pc, r0
    269c:	00000000 	andeq	r0, r0, r0
    26a0:	0b000000 	bleq	26a8 <__Stack_Size+0x22a8>
    26a4:	08007000 	stmdaeq	r0, {ip, sp, lr}
    26a8:	00731aff 	ldrshteq	r1, [r3], #-175	; 0xffffff51
    26ac:	9f2e301a 	svcls	0x002e301a
	...
    26b8:	01f3000c 	mvnseq	r0, ip
    26bc:	1aff0850 	bne	fffc4804 <SCS_BASE+0x1ffb6804>
    26c0:	301a0073 	andscc	r0, sl, r3, ror r0
    26c4:	00009f2e 	andeq	r9, r0, lr, lsr #30
	...
    26d4:	00010000 	andeq	r0, r1, r0
    26d8:	00000051 	andeq	r0, r0, r1, asr r0
    26dc:	00000000 	andeq	r0, r0, r0
    26e0:	f3000400 	vshl.u8	d0, d0, d0
    26e4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    26f4:	01000000 	mrseq	r0, (UNDEF: 0)
    26f8:	00005200 	andeq	r5, r0, r0, lsl #4
    26fc:	00000000 	andeq	r0, r0, r0
    2700:	00040000 	andeq	r0, r4, r0
    2704:	9f5201f3 	svcls	0x005201f3
	...
    2718:	00530001 	subseq	r0, r3, r1
    271c:	00000000 	andeq	r0, r0, r0
    2720:	04000000 	streq	r0, [r0], #-0
    2724:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    2728:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2738:	30000200 	andcc	r0, r0, r0, lsl #4
    273c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2740:	00000000 	andeq	r0, r0, r0
    2744:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
    2750:	00740007 	rsbseq	r0, r4, r7
    2754:	1aff0c0b 	bne	fffc5788 <SCS_BASE+0x1ffb7788>
    2758:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    275c:	00000000 	andeq	r0, r0, r0
    2760:	52000100 	andpl	r0, r0, #0, 2
	...
    2774:	9f300002 	svcls	0x00300002
	...
    2780:	00550001 	subseq	r0, r5, r1
    2784:	00000000 	andeq	r0, r0, r0
    2788:	01000000 	mrseq	r0, (UNDEF: 0)
    278c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    279c:	00010000 	andeq	r0, r1, r0
    27a0:	00000051 	andeq	r0, r0, r1, asr r0
    27a4:	00000000 	andeq	r0, r0, r0
    27a8:	f3000400 	vshl.u8	d0, d0, d0
    27ac:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    27bc:	01000000 	mrseq	r0, (UNDEF: 0)
    27c0:	00005200 	andeq	r5, r0, r0, lsl #4
    27c4:	00000000 	andeq	r0, r0, r0
    27c8:	00040000 	andeq	r0, r4, r0
    27cc:	9f5201f3 	svcls	0x005201f3
	...
    27e0:	00530001 	subseq	r0, r3, r1
    27e4:	00000000 	andeq	r0, r0, r0
    27e8:	04000000 	streq	r0, [r0], #-0
    27ec:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    27f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2800:	30000200 	andcc	r0, r0, r0, lsl #4
    2804:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2808:	00000000 	andeq	r0, r0, r0
    280c:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
    2818:	00530001 	subseq	r0, r3, r1
	...
    2828:	02000000 	andeq	r0, r0, #0
    282c:	009f3000 	addseq	r3, pc, r0
    2830:	00000000 	andeq	r0, r0, r0
    2834:	01000000 	mrseq	r0, (UNDEF: 0)
    2838:	00005400 	andeq	r5, r0, r0, lsl #8
    283c:	00000000 	andeq	r0, r0, r0
    2840:	00010000 	andeq	r0, r1, r0
    2844:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2854:	30000200 	andcc	r0, r0, r0, lsl #4
    2858:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    285c:	00000000 	andeq	r0, r0, r0
    2860:	71000500 	tstvc	r0, r0, lsl #10
    2864:	9f243400 	svcls	0x00243400
	...
    2870:	01f30006 	mvnseq	r0, r6
    2874:	9f243451 	svcls	0x00243451
	...
    2888:	00500001 	subseq	r0, r0, r1
    288c:	00000000 	andeq	r0, r0, r0
    2890:	04000000 	streq	r0, [r0], #-0
    2894:	5001f300 	andpl	pc, r1, r0, lsl #6
    2898:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    289c:	00000000 	andeq	r0, r0, r0
    28a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    28ac:	01f30004 	mvnseq	r0, r4
    28b0:	00009f50 	andeq	r9, r0, r0, asr pc
    28b4:	00000000 	andeq	r0, r0, r0
    28b8:	00010000 	andeq	r0, r1, r0
    28bc:	00000050 	andeq	r0, r0, r0, asr r0
    28c0:	00000000 	andeq	r0, r0, r0
    28c4:	f3000400 	vshl.u8	d0, d0, d0
    28c8:	009f5001 	addseq	r5, pc, r1
    28cc:	00000000 	andeq	r0, r0, r0
    28d0:	01000000 	mrseq	r0, (UNDEF: 0)
    28d4:	00005000 	andeq	r5, r0, r0
    28d8:	00000000 	andeq	r0, r0, r0
    28dc:	00040000 	andeq	r0, r4, r0
    28e0:	9f5001f3 	svcls	0x005001f3
	...
    28ec:	00500001 	subseq	r0, r0, r1
    28f0:	00000000 	andeq	r0, r0, r0
    28f4:	04000000 	streq	r0, [r0], #-0
    28f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    28fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2900:	00000000 	andeq	r0, r0, r0
    2904:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2910:	01f30004 	mvnseq	r0, r4
    2914:	00009f50 	andeq	r9, r0, r0, asr pc
    2918:	00000000 	andeq	r0, r0, r0
    291c:	00010000 	andeq	r0, r1, r0
    2920:	00000050 	andeq	r0, r0, r0, asr r0
    2924:	00000000 	andeq	r0, r0, r0
    2928:	f3000400 	vshl.u8	d0, d0, d0
    292c:	009f5001 	addseq	r5, pc, r1
    2930:	00000000 	andeq	r0, r0, r0
    2934:	01000000 	mrseq	r0, (UNDEF: 0)
    2938:	00005000 	andeq	r5, r0, r0
    293c:	00000000 	andeq	r0, r0, r0
    2940:	00040000 	andeq	r0, r4, r0
    2944:	9f5001f3 	svcls	0x005001f3
	...
    2950:	00500001 	subseq	r0, r0, r1
	...
    2960:	02000000 	andeq	r0, r0, #0
    2964:	009f3000 	addseq	r3, pc, r0
    2968:	00000000 	andeq	r0, r0, r0
    296c:	01000000 	mrseq	r0, (UNDEF: 0)
    2970:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    2980:	00020000 	andeq	r0, r2, r0
    2984:	00009f30 	andeq	r9, r0, r0, lsr pc
    2988:	00000000 	andeq	r0, r0, r0
    298c:	00010000 	andeq	r0, r1, r0
    2990:	00000053 	andeq	r0, r0, r3, asr r0
    2994:	00000000 	andeq	r0, r0, r0
    2998:	53000100 	movwpl	r0, #256	; 0x100
	...
    29ac:	9f300002 	svcls	0x00300002
	...
    29b8:	00540001 	subseq	r0, r4, r1
    29bc:	00000000 	andeq	r0, r0, r0
    29c0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    29c4:	940c7100 	strls	r7, [ip], #-256	; 0x100
    29c8:	21007502 	tstcs	r0, r2, lsl #10
    29cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    29d0:	00000000 	andeq	r0, r0, r0
    29d4:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
    29e8:	9f300002 	svcls	0x00300002
	...
    29f4:	00540001 	subseq	r0, r4, r1
	...
    2a04:	02000000 	andeq	r0, r0, #0
    2a08:	009f3000 	addseq	r3, pc, r0
    2a0c:	00000000 	andeq	r0, r0, r0
    2a10:	01000000 	mrseq	r0, (UNDEF: 0)
    2a14:	00005300 	andeq	r5, r0, r0, lsl #6
    2a18:	00000000 	andeq	r0, r0, r0
    2a1c:	00010000 	andeq	r0, r1, r0
    2a20:	00000053 	andeq	r0, r0, r3, asr r0
    2a24:	00000000 	andeq	r0, r0, r0
    2a28:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a34:	00530001 	subseq	r0, r3, r1
    2a38:	00000000 	andeq	r0, r0, r0
    2a3c:	01000000 	mrseq	r0, (UNDEF: 0)
    2a40:	00005200 	andeq	r5, r0, r0, lsl #4
    2a44:	00000000 	andeq	r0, r0, r0
    2a48:	00010000 	andeq	r0, r1, r0
    2a4c:	00000053 	andeq	r0, r0, r3, asr r0
    2a50:	00000000 	andeq	r0, r0, r0
    2a54:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a68:	9f300002 	svcls	0x00300002
	...
    2a74:	00550001 	subseq	r0, r5, r1
    2a78:	00000000 	andeq	r0, r0, r0
    2a7c:	01000000 	mrseq	r0, (UNDEF: 0)
    2a80:	00005200 	andeq	r5, r0, r0, lsl #4
    2a84:	00000000 	andeq	r0, r0, r0
    2a88:	00010000 	andeq	r0, r1, r0
    2a8c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    2a9c:	30000200 	andcc	r0, r0, r0, lsl #4
    2aa0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2aa4:	00000000 	andeq	r0, r0, r0
    2aa8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    2abc:	9f300002 	svcls	0x00300002
	...
    2ac8:	00530001 	subseq	r0, r3, r1
    2acc:	00000000 	andeq	r0, r0, r0
    2ad0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ad4:	00005300 	andeq	r5, r0, r0, lsl #6
    2ad8:	00000000 	andeq	r0, r0, r0
    2adc:	00010000 	andeq	r0, r1, r0
    2ae0:	00000053 	andeq	r0, r0, r3, asr r0
    2ae4:	00000000 	andeq	r0, r0, r0
    2ae8:	53000100 	movwpl	r0, #256	; 0x100
	...
    2af4:	00520001 	subseq	r0, r2, r1
    2af8:	00000000 	andeq	r0, r0, r0
    2afc:	01000000 	mrseq	r0, (UNDEF: 0)
    2b00:	00005300 	andeq	r5, r0, r0, lsl #6
    2b04:	00000000 	andeq	r0, r0, r0
    2b08:	00010000 	andeq	r0, r1, r0
    2b0c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2b1c:	30000200 	andcc	r0, r0, r0, lsl #4
    2b20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2b24:	00000000 	andeq	r0, r0, r0
    2b28:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
    2b34:	00550001 	subseq	r0, r5, r1
    2b38:	00000000 	andeq	r0, r0, r0
    2b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    2b40:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2b50:	00010000 	andeq	r0, r1, r0
    2b54:	00000051 	andeq	r0, r0, r1, asr r0
    2b58:	00000000 	andeq	r0, r0, r0
    2b5c:	f3000400 	vshl.u8	d0, d0, d0
    2b60:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2b70:	02000000 	andeq	r0, r0, #0
    2b74:	009f3000 	addseq	r3, pc, r0
    2b78:	00000000 	andeq	r0, r0, r0
    2b7c:	01000000 	mrseq	r0, (UNDEF: 0)
    2b80:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    2b90:	00020000 	andeq	r0, r2, r0
    2b94:	00009f30 	andeq	r9, r0, r0, lsr pc
    2b98:	00000000 	andeq	r0, r0, r0
    2b9c:	00010000 	andeq	r0, r1, r0
    2ba0:	00000053 	andeq	r0, r0, r3, asr r0
    2ba4:	00000000 	andeq	r0, r0, r0
    2ba8:	53000100 	movwpl	r0, #256	; 0x100
	...
    2bbc:	9f300002 	svcls	0x00300002
	...
    2bc8:	00540001 	subseq	r0, r4, r1
    2bcc:	00000000 	andeq	r0, r0, r0
    2bd0:	01000000 	mrseq	r0, (UNDEF: 0)
    2bd4:	00005400 	andeq	r5, r0, r0, lsl #8
    2bd8:	00000000 	andeq	r0, r0, r0
    2bdc:	16ec0000 	strbtne	r0, [ip], r0
    2be0:	16f40800 	ldrbtne	r0, [r4], r0, lsl #16
    2be4:	00010800 	andeq	r0, r1, r0, lsl #16
    2be8:	0016f451 	andseq	pc, r6, r1, asr r4	; <UNPREDICTABLE>
    2bec:	0016f608 	andseq	pc, r6, r8, lsl #12
    2bf0:	f3000408 	vshl.u8	d0, d8, d0
    2bf4:	f69f5101 			; <UNDEFINED> instruction: 0xf69f5101
    2bf8:	fa080016 	blx	202c58 <__Stack_Size+0x202858>
    2bfc:	01080016 	tsteq	r8, r6, lsl r0
    2c00:	16fa5100 	ldrbtne	r5, [sl], r0, lsl #2
    2c04:	16fe0800 	ldrbtne	r0, [lr], r0, lsl #16
    2c08:	00040800 	andeq	r0, r4, r0, lsl #16
    2c0c:	9f5101f3 	svcls	0x005101f3
	...
    2c20:	00520001 	subseq	r0, r2, r1
    2c24:	00000000 	andeq	r0, r0, r0
    2c28:	04000000 	streq	r0, [r0], #-0
    2c2c:	5201f300 	andpl	pc, r1, #0, 6
    2c30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2c40:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2c4c:	01f30004 	mvnseq	r0, r4
    2c50:	00009f51 	andeq	r9, r0, r1, asr pc
    2c54:	00000000 	andeq	r0, r0, r0
    2c58:	00010000 	andeq	r0, r1, r0
    2c5c:	00000051 	andeq	r0, r0, r1, asr r0
    2c60:	00000000 	andeq	r0, r0, r0
    2c64:	f3000400 	vshl.u8	d0, d0, d0
    2c68:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2c78:	01000000 	mrseq	r0, (UNDEF: 0)
    2c7c:	00005100 	andeq	r5, r0, r0, lsl #2
    2c80:	00000000 	andeq	r0, r0, r0
    2c84:	00040000 	andeq	r0, r4, r0
    2c88:	9f5101f3 	svcls	0x005101f3
	...
    2c9c:	9f300002 	svcls	0x00300002
	...
    2ca8:	00530001 	subseq	r0, r3, r1
    2cac:	00000000 	andeq	r0, r0, r0
    2cb0:	01000000 	mrseq	r0, (UNDEF: 0)
    2cb4:	00005300 	andeq	r5, r0, r0, lsl #6
    2cb8:	00000000 	andeq	r0, r0, r0
    2cbc:	00010000 	andeq	r0, r1, r0
    2cc0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2cd0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2cdc:	00540001 	subseq	r0, r4, r1
    2ce0:	00000000 	andeq	r0, r0, r0
    2ce4:	01000000 	mrseq	r0, (UNDEF: 0)
    2ce8:	00005000 	andeq	r5, r0, r0
    2cec:	00000000 	andeq	r0, r0, r0
    2cf0:	00010000 	andeq	r0, r1, r0
    2cf4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2d04:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2d10:	01f30004 	mvnseq	r0, r4
    2d14:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2d24:	00010000 	andeq	r0, r1, r0
    2d28:	00000052 	andeq	r0, r0, r2, asr r0
    2d2c:	00000000 	andeq	r0, r0, r0
    2d30:	f3000400 	vshl.u8	d0, d0, d0
    2d34:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    2d44:	01000000 	mrseq	r0, (UNDEF: 0)
    2d48:	00005300 	andeq	r5, r0, r0, lsl #6
    2d4c:	00000000 	andeq	r0, r0, r0
    2d50:	00040000 	andeq	r0, r4, r0
    2d54:	9f5301f3 	svcls	0x005301f3
	...
    2d60:	00530001 	subseq	r0, r3, r1
    2d64:	00000000 	andeq	r0, r0, r0
    2d68:	04000000 	streq	r0, [r0], #-0
    2d6c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    2d70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2d80:	30000200 	andcc	r0, r0, r0, lsl #4
    2d84:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2d88:	00000000 	andeq	r0, r0, r0
    2d8c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2d98:	00510001 	subseq	r0, r1, r1
	...
    2da8:	01000000 	mrseq	r0, (UNDEF: 0)
    2dac:	00005100 	andeq	r5, r0, r0, lsl #2
    2db0:	00000000 	andeq	r0, r0, r0
    2db4:	00040000 	andeq	r0, r4, r0
    2db8:	9f5101f3 	svcls	0x005101f3
	...
    2dcc:	00530001 	subseq	r0, r3, r1
    2dd0:	00000000 	andeq	r0, r0, r0
    2dd4:	04000000 	streq	r0, [r0], #-0
    2dd8:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    2ddc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2dec:	30000200 	andcc	r0, r0, r0, lsl #4
    2df0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2df4:	00000000 	andeq	r0, r0, r0
    2df8:	74000600 	strvc	r0, [r0], #-1536	; 0x600
    2dfc:	1aff0800 	bne	fffc4e04 <SCS_BASE+0x1ffb6e04>
    2e00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2e04:	00000000 	andeq	r0, r0, r0
    2e08:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2e1c:	00500001 	subseq	r0, r0, r1
    2e20:	00000000 	andeq	r0, r0, r0
    2e24:	01000000 	mrseq	r0, (UNDEF: 0)
    2e28:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2e38:	00010000 	andeq	r0, r1, r0
    2e3c:	00000051 	andeq	r0, r0, r1, asr r0
    2e40:	00000000 	andeq	r0, r0, r0
    2e44:	f3000400 	vshl.u8	d0, d0, d0
    2e48:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2e58:	01000000 	mrseq	r0, (UNDEF: 0)
    2e5c:	00005200 	andeq	r5, r0, r0, lsl #4
    2e60:	00000000 	andeq	r0, r0, r0
    2e64:	00040000 	andeq	r0, r4, r0
    2e68:	9f5201f3 	svcls	0x005201f3
	...
    2e7c:	00530001 	subseq	r0, r3, r1
    2e80:	00000000 	andeq	r0, r0, r0
    2e84:	04000000 	streq	r0, [r0], #-0
    2e88:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    2e8c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2e9c:	30000200 	andcc	r0, r0, r0, lsl #4
    2ea0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2ea4:	00000000 	andeq	r0, r0, r0
    2ea8:	73000500 	movwvc	r0, #1280	; 0x500
    2eac:	9f213700 	svcls	0x00213700
	...
    2eb8:	00730005 	rsbseq	r0, r3, r5
    2ebc:	009f2137 	addseq	r2, pc, r7, lsr r1	; <UNPREDICTABLE>
    2ec0:	00000000 	andeq	r0, r0, r0
    2ec4:	01000000 	mrseq	r0, (UNDEF: 0)
    2ec8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2ed8:	00010000 	andeq	r0, r1, r0
    2edc:	00000050 	andeq	r0, r0, r0, asr r0
    2ee0:	00000000 	andeq	r0, r0, r0
    2ee4:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
    2ef8:	00510001 	subseq	r0, r1, r1
    2efc:	00000000 	andeq	r0, r0, r0
    2f00:	04000000 	streq	r0, [r0], #-0
    2f04:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2f08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2f18:	52000100 	andpl	r0, r0, #0, 2
	...
    2f24:	01f30004 	mvnseq	r0, r4
    2f28:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    2f38:	00010000 	andeq	r0, r1, r0
    2f3c:	00000053 	andeq	r0, r0, r3, asr r0
    2f40:	00000000 	andeq	r0, r0, r0
    2f44:	f3000400 	vshl.u8	d0, d0, d0
    2f48:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    2f58:	01000000 	mrseq	r0, (UNDEF: 0)
    2f5c:	00005100 	andeq	r5, r0, r0, lsl #2
    2f60:	00000000 	andeq	r0, r0, r0
    2f64:	00040000 	andeq	r0, r4, r0
    2f68:	9f5101f3 	svcls	0x005101f3
	...
    2f7c:	9f300002 	svcls	0x00300002
	...
    2f88:	00530001 	subseq	r0, r3, r1
    2f8c:	00000000 	andeq	r0, r0, r0
    2f90:	01000000 	mrseq	r0, (UNDEF: 0)
    2f94:	00005300 	andeq	r5, r0, r0, lsl #6
    2f98:	00000000 	andeq	r0, r0, r0
    2f9c:	00010000 	andeq	r0, r1, r0
    2fa0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2fb0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2fbc:	01f30004 	mvnseq	r0, r4
    2fc0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2fd0:	00020000 	andeq	r0, r2, r0
    2fd4:	00009f30 	andeq	r9, r0, r0, lsr pc
    2fd8:	00000000 	andeq	r0, r0, r0
    2fdc:	00010000 	andeq	r0, r1, r0
    2fe0:	00000053 	andeq	r0, r0, r3, asr r0
    2fe4:	00000000 	andeq	r0, r0, r0
    2fe8:	53000100 	movwpl	r0, #256	; 0x100
	...
    2ff4:	00510001 	subseq	r0, r1, r1
	...
    3004:	01000000 	mrseq	r0, (UNDEF: 0)
    3008:	00005100 	andeq	r5, r0, r0, lsl #2
    300c:	00000000 	andeq	r0, r0, r0
    3010:	00040000 	andeq	r0, r4, r0
    3014:	9f5101f3 	svcls	0x005101f3
	...
    3028:	00520001 	subseq	r0, r2, r1
    302c:	00000000 	andeq	r0, r0, r0
    3030:	04000000 	streq	r0, [r0], #-0
    3034:	5201f300 	andpl	pc, r1, #0, 6
    3038:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3048:	53000100 	movwpl	r0, #256	; 0x100
	...
    3054:	01f30004 	mvnseq	r0, r4
    3058:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    3068:	00020000 	andeq	r0, r2, r0
    306c:	00009f30 	andeq	r9, r0, r0, lsr pc
    3070:	00000000 	andeq	r0, r0, r0
    3074:	00010000 	andeq	r0, r1, r0
    3078:	00000056 	andeq	r0, r0, r6, asr r0
    307c:	00000000 	andeq	r0, r0, r0
    3080:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    308c:	00510001 	subseq	r0, r1, r1
	...
    309c:	02000000 	andeq	r0, r0, #0
    30a0:	009f3000 	addseq	r3, pc, r0
    30a4:	00000000 	andeq	r0, r0, r0
    30a8:	01000000 	mrseq	r0, (UNDEF: 0)
    30ac:	00005400 	andeq	r5, r0, r0, lsl #8
    30b0:	00000000 	andeq	r0, r0, r0
    30b4:	00010000 	andeq	r0, r1, r0
    30b8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    30c8:	30000200 	andcc	r0, r0, r0, lsl #4
    30cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    30d0:	00000000 	andeq	r0, r0, r0
    30d4:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
    30e0:	00550001 	subseq	r0, r5, r1
	...
    30f0:	01000000 	mrseq	r0, (UNDEF: 0)
    30f4:	00005100 	andeq	r5, r0, r0, lsl #2
    30f8:	00000000 	andeq	r0, r0, r0
    30fc:	00040000 	andeq	r0, r4, r0
    3100:	9f5101f3 	svcls	0x005101f3
	...
    3114:	9f300002 	svcls	0x00300002
	...
    3120:	00530001 	subseq	r0, r3, r1
    3124:	00000000 	andeq	r0, r0, r0
    3128:	01000000 	mrseq	r0, (UNDEF: 0)
    312c:	00005300 	andeq	r5, r0, r0, lsl #6
    3130:	00000000 	andeq	r0, r0, r0
    3134:	00010000 	andeq	r0, r1, r0
    3138:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3148:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3154:	01f30004 	mvnseq	r0, r4
    3158:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3168:	00020000 	andeq	r0, r2, r0
    316c:	00009f30 	andeq	r9, r0, r0, lsr pc
    3170:	00000000 	andeq	r0, r0, r0
    3174:	00010000 	andeq	r0, r1, r0
    3178:	00000053 	andeq	r0, r0, r3, asr r0
    317c:	00000000 	andeq	r0, r0, r0
    3180:	53000100 	movwpl	r0, #256	; 0x100
	...
    318c:	00510001 	subseq	r0, r1, r1
	...
    319c:	01000000 	mrseq	r0, (UNDEF: 0)
    31a0:	00005100 	andeq	r5, r0, r0, lsl #2
    31a4:	00000000 	andeq	r0, r0, r0
    31a8:	00040000 	andeq	r0, r4, r0
    31ac:	9f5101f3 	svcls	0x005101f3
	...
    31c0:	9f300002 	svcls	0x00300002
	...
    31cc:	00530001 	subseq	r0, r3, r1
    31d0:	00000000 	andeq	r0, r0, r0
    31d4:	01000000 	mrseq	r0, (UNDEF: 0)
    31d8:	00005300 	andeq	r5, r0, r0, lsl #6
    31dc:	00000000 	andeq	r0, r0, r0
    31e0:	00010000 	andeq	r0, r1, r0
    31e4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    31f4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3200:	01f30004 	mvnseq	r0, r4
    3204:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3214:	00020000 	andeq	r0, r2, r0
    3218:	00009f30 	andeq	r9, r0, r0, lsr pc
    321c:	00000000 	andeq	r0, r0, r0
    3220:	00010000 	andeq	r0, r1, r0
    3224:	00000053 	andeq	r0, r0, r3, asr r0
    3228:	00000000 	andeq	r0, r0, r0
    322c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3238:	00510001 	subseq	r0, r1, r1
	...
    3248:	01000000 	mrseq	r0, (UNDEF: 0)
    324c:	00005100 	andeq	r5, r0, r0, lsl #2
    3250:	00000000 	andeq	r0, r0, r0
    3254:	00040000 	andeq	r0, r4, r0
    3258:	9f5101f3 	svcls	0x005101f3
	...
    326c:	9f300002 	svcls	0x00300002
	...
    3278:	00530001 	subseq	r0, r3, r1
    327c:	00000000 	andeq	r0, r0, r0
    3280:	01000000 	mrseq	r0, (UNDEF: 0)
    3284:	00005300 	andeq	r5, r0, r0, lsl #6
    3288:	00000000 	andeq	r0, r0, r0
    328c:	00010000 	andeq	r0, r1, r0
    3290:	00000051 	andeq	r0, r0, r1, asr r0
	...
    32a0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    32ac:	01f30004 	mvnseq	r0, r4
    32b0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    32c0:	00020000 	andeq	r0, r2, r0
    32c4:	00009f30 	andeq	r9, r0, r0, lsr pc
    32c8:	00000000 	andeq	r0, r0, r0
    32cc:	00010000 	andeq	r0, r1, r0
    32d0:	00000053 	andeq	r0, r0, r3, asr r0
    32d4:	00000000 	andeq	r0, r0, r0
    32d8:	53000100 	movwpl	r0, #256	; 0x100
	...
    32e4:	00510001 	subseq	r0, r1, r1
	...
    32f4:	01000000 	mrseq	r0, (UNDEF: 0)
    32f8:	00005100 	andeq	r5, r0, r0, lsl #2
    32fc:	00000000 	andeq	r0, r0, r0
    3300:	00040000 	andeq	r0, r4, r0
    3304:	9f5101f3 	svcls	0x005101f3
	...
    3318:	9f300002 	svcls	0x00300002
	...
    3324:	00530001 	subseq	r0, r3, r1
    3328:	00000000 	andeq	r0, r0, r0
    332c:	01000000 	mrseq	r0, (UNDEF: 0)
    3330:	00005300 	andeq	r5, r0, r0, lsl #6
    3334:	00000000 	andeq	r0, r0, r0
    3338:	00010000 	andeq	r0, r1, r0
    333c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    334c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3358:	01f30004 	mvnseq	r0, r4
    335c:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    336c:	00020000 	andeq	r0, r2, r0
    3370:	00009f30 	andeq	r9, r0, r0, lsr pc
    3374:	00000000 	andeq	r0, r0, r0
    3378:	00010000 	andeq	r0, r1, r0
    337c:	00000053 	andeq	r0, r0, r3, asr r0
    3380:	00000000 	andeq	r0, r0, r0
    3384:	53000100 	movwpl	r0, #256	; 0x100
	...
    3390:	00510001 	subseq	r0, r1, r1
	...
    33a0:	01000000 	mrseq	r0, (UNDEF: 0)
    33a4:	00005100 	andeq	r5, r0, r0, lsl #2
    33a8:	00000000 	andeq	r0, r0, r0
    33ac:	00040000 	andeq	r0, r4, r0
    33b0:	9f5101f3 	svcls	0x005101f3
	...
    33c4:	9f300002 	svcls	0x00300002
	...
    33d0:	00530001 	subseq	r0, r3, r1
    33d4:	00000000 	andeq	r0, r0, r0
    33d8:	01000000 	mrseq	r0, (UNDEF: 0)
    33dc:	00005300 	andeq	r5, r0, r0, lsl #6
    33e0:	00000000 	andeq	r0, r0, r0
    33e4:	00010000 	andeq	r0, r1, r0
    33e8:	00000051 	andeq	r0, r0, r1, asr r0
	...
    33f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3404:	01f30004 	mvnseq	r0, r4
    3408:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3418:	00020000 	andeq	r0, r2, r0
    341c:	00009f30 	andeq	r9, r0, r0, lsr pc
    3420:	00000000 	andeq	r0, r0, r0
    3424:	00010000 	andeq	r0, r1, r0
    3428:	00000053 	andeq	r0, r0, r3, asr r0
    342c:	00000000 	andeq	r0, r0, r0
    3430:	53000100 	movwpl	r0, #256	; 0x100
	...
    343c:	00510001 	subseq	r0, r1, r1
	...
    344c:	01000000 	mrseq	r0, (UNDEF: 0)
    3450:	00005100 	andeq	r5, r0, r0, lsl #2
    3454:	00000000 	andeq	r0, r0, r0
    3458:	00040000 	andeq	r0, r4, r0
    345c:	9f5101f3 	svcls	0x005101f3
	...
    3470:	9f300002 	svcls	0x00300002
	...
    347c:	00530001 	subseq	r0, r3, r1
    3480:	00000000 	andeq	r0, r0, r0
    3484:	01000000 	mrseq	r0, (UNDEF: 0)
    3488:	00005300 	andeq	r5, r0, r0, lsl #6
    348c:	00000000 	andeq	r0, r0, r0
    3490:	00010000 	andeq	r0, r1, r0
    3494:	00000051 	andeq	r0, r0, r1, asr r0
	...
    34a4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    34b0:	01f30004 	mvnseq	r0, r4
    34b4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    34c4:	00020000 	andeq	r0, r2, r0
    34c8:	00009f30 	andeq	r9, r0, r0, lsr pc
    34cc:	00000000 	andeq	r0, r0, r0
    34d0:	00010000 	andeq	r0, r1, r0
    34d4:	00000053 	andeq	r0, r0, r3, asr r0
    34d8:	00000000 	andeq	r0, r0, r0
    34dc:	53000100 	movwpl	r0, #256	; 0x100
	...
    34e8:	00510001 	subseq	r0, r1, r1
	...
    34f8:	01000000 	mrseq	r0, (UNDEF: 0)
    34fc:	00005100 	andeq	r5, r0, r0, lsl #2
    3500:	00000000 	andeq	r0, r0, r0
    3504:	00040000 	andeq	r0, r4, r0
    3508:	9f5101f3 	svcls	0x005101f3
	...
    351c:	9f300002 	svcls	0x00300002
	...
    3528:	00530001 	subseq	r0, r3, r1
    352c:	00000000 	andeq	r0, r0, r0
    3530:	01000000 	mrseq	r0, (UNDEF: 0)
    3534:	00005300 	andeq	r5, r0, r0, lsl #6
    3538:	00000000 	andeq	r0, r0, r0
    353c:	00010000 	andeq	r0, r1, r0
    3540:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3550:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    355c:	01f30004 	mvnseq	r0, r4
    3560:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3570:	00020000 	andeq	r0, r2, r0
    3574:	00009f30 	andeq	r9, r0, r0, lsr pc
    3578:	00000000 	andeq	r0, r0, r0
    357c:	00010000 	andeq	r0, r1, r0
    3580:	00000053 	andeq	r0, r0, r3, asr r0
    3584:	00000000 	andeq	r0, r0, r0
    3588:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    359c:	00510001 	subseq	r0, r1, r1
    35a0:	00000000 	andeq	r0, r0, r0
    35a4:	04000000 	streq	r0, [r0], #-0
    35a8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    35ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    35bc:	30000200 	andcc	r0, r0, r0, lsl #4
    35c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    35c4:	00000000 	andeq	r0, r0, r0
    35c8:	53000100 	movwpl	r0, #256	; 0x100
	...
    35d4:	00530001 	subseq	r0, r3, r1
    35d8:	00000000 	andeq	r0, r0, r0
    35dc:	01000000 	mrseq	r0, (UNDEF: 0)
    35e0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    35f0:	00010000 	andeq	r0, r1, r0
    35f4:	00000051 	andeq	r0, r0, r1, asr r0
    35f8:	00000000 	andeq	r0, r0, r0
    35fc:	f3000400 	vshl.u8	d0, d0, d0
    3600:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3610:	02000000 	andeq	r0, r0, #0
    3614:	009f3000 	addseq	r3, pc, r0
    3618:	00000000 	andeq	r0, r0, r0
    361c:	01000000 	mrseq	r0, (UNDEF: 0)
    3620:	00005300 	andeq	r5, r0, r0, lsl #6
    3624:	00000000 	andeq	r0, r0, r0
    3628:	00010000 	andeq	r0, r1, r0
    362c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    363c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3648:	01f30004 	mvnseq	r0, r4
    364c:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    365c:	00020000 	andeq	r0, r2, r0
    3660:	00009f30 	andeq	r9, r0, r0, lsr pc
    3664:	00000000 	andeq	r0, r0, r0
    3668:	00010000 	andeq	r0, r1, r0
    366c:	00000053 	andeq	r0, r0, r3, asr r0
    3670:	00000000 	andeq	r0, r0, r0
    3674:	53000100 	movwpl	r0, #256	; 0x100
	...
    3680:	00510001 	subseq	r0, r1, r1
	...
    3690:	01000000 	mrseq	r0, (UNDEF: 0)
    3694:	00005100 	andeq	r5, r0, r0, lsl #2
    3698:	00000000 	andeq	r0, r0, r0
    369c:	00040000 	andeq	r0, r4, r0
    36a0:	9f5101f3 	svcls	0x005101f3
	...
    36b4:	9f300002 	svcls	0x00300002
	...
    36c0:	00530001 	subseq	r0, r3, r1
    36c4:	00000000 	andeq	r0, r0, r0
    36c8:	01000000 	mrseq	r0, (UNDEF: 0)
    36cc:	00005300 	andeq	r5, r0, r0, lsl #6
    36d0:	00000000 	andeq	r0, r0, r0
    36d4:	00010000 	andeq	r0, r1, r0
    36d8:	00000051 	andeq	r0, r0, r1, asr r0
	...
    36e8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    36f4:	01f30004 	mvnseq	r0, r4
    36f8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3708:	00020000 	andeq	r0, r2, r0
    370c:	00009f30 	andeq	r9, r0, r0, lsr pc
    3710:	00000000 	andeq	r0, r0, r0
    3714:	00010000 	andeq	r0, r1, r0
    3718:	00000053 	andeq	r0, r0, r3, asr r0
    371c:	00000000 	andeq	r0, r0, r0
    3720:	53000100 	movwpl	r0, #256	; 0x100
	...
    372c:	00510001 	subseq	r0, r1, r1
	...
    373c:	01000000 	mrseq	r0, (UNDEF: 0)
    3740:	00005100 	andeq	r5, r0, r0, lsl #2
    3744:	00000000 	andeq	r0, r0, r0
    3748:	00040000 	andeq	r0, r4, r0
    374c:	9f5101f3 	svcls	0x005101f3
	...
    3760:	9f300002 	svcls	0x00300002
	...
    376c:	00530001 	subseq	r0, r3, r1
    3770:	00000000 	andeq	r0, r0, r0
    3774:	01000000 	mrseq	r0, (UNDEF: 0)
    3778:	00005300 	andeq	r5, r0, r0, lsl #6
    377c:	00000000 	andeq	r0, r0, r0
    3780:	00010000 	andeq	r0, r1, r0
    3784:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3794:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    37a0:	01f30004 	mvnseq	r0, r4
    37a4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    37b4:	00020000 	andeq	r0, r2, r0
    37b8:	00009f30 	andeq	r9, r0, r0, lsr pc
    37bc:	00000000 	andeq	r0, r0, r0
    37c0:	00010000 	andeq	r0, r1, r0
    37c4:	00000053 	andeq	r0, r0, r3, asr r0
    37c8:	00000000 	andeq	r0, r0, r0
    37cc:	53000100 	movwpl	r0, #256	; 0x100
	...
    37d8:	00510001 	subseq	r0, r1, r1
	...
    37e8:	01000000 	mrseq	r0, (UNDEF: 0)
    37ec:	00005100 	andeq	r5, r0, r0, lsl #2
    37f0:	00000000 	andeq	r0, r0, r0
    37f4:	00040000 	andeq	r0, r4, r0
    37f8:	9f5101f3 	svcls	0x005101f3
	...
    380c:	9f300002 	svcls	0x00300002
	...
    3818:	00530001 	subseq	r0, r3, r1
    381c:	00000000 	andeq	r0, r0, r0
    3820:	01000000 	mrseq	r0, (UNDEF: 0)
    3824:	00005300 	andeq	r5, r0, r0, lsl #6
    3828:	00000000 	andeq	r0, r0, r0
    382c:	00010000 	andeq	r0, r1, r0
    3830:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3840:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    384c:	01f30004 	mvnseq	r0, r4
    3850:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3860:	00020000 	andeq	r0, r2, r0
    3864:	00009f30 	andeq	r9, r0, r0, lsr pc
    3868:	00000000 	andeq	r0, r0, r0
    386c:	00010000 	andeq	r0, r1, r0
    3870:	00000053 	andeq	r0, r0, r3, asr r0
    3874:	00000000 	andeq	r0, r0, r0
    3878:	53000100 	movwpl	r0, #256	; 0x100
	...
    3884:	00510001 	subseq	r0, r1, r1
	...
    3894:	01000000 	mrseq	r0, (UNDEF: 0)
    3898:	00005200 	andeq	r5, r0, r0, lsl #4
    389c:	00000000 	andeq	r0, r0, r0
    38a0:	00040000 	andeq	r0, r4, r0
    38a4:	9f5201f3 	svcls	0x005201f3
	...
    38b8:	00520001 	subseq	r0, r2, r1
    38bc:	00000000 	andeq	r0, r0, r0
    38c0:	04000000 	streq	r0, [r0], #-0
    38c4:	5201f300 	andpl	pc, r1, #0, 6
    38c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    38d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    38e4:	68700003 	ldmdavs	r0!, {r0, r1}^
    38e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    38f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3904:	01f30004 	mvnseq	r0, r4
    3908:	00009f51 	andeq	r9, r0, r1, asr pc
    390c:	00000000 	andeq	r0, r0, r0
    3910:	00010000 	andeq	r0, r1, r0
    3914:	00000051 	andeq	r0, r0, r1, asr r0
    3918:	00000000 	andeq	r0, r0, r0
    391c:	f3000400 	vshl.u8	d0, d0, d0
    3920:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3930:	01000000 	mrseq	r0, (UNDEF: 0)
    3934:	00005200 	andeq	r5, r0, r0, lsl #4
    3938:	00000000 	andeq	r0, r0, r0
    393c:	00040000 	andeq	r0, r4, r0
    3940:	9f5201f3 	svcls	0x005201f3
	...
    3954:	00510001 	subseq	r0, r1, r1
    3958:	00000000 	andeq	r0, r0, r0
    395c:	04000000 	streq	r0, [r0], #-0
    3960:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3964:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3974:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3980:	01f30004 	mvnseq	r0, r4
    3984:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3994:	00010000 	andeq	r0, r1, r0
    3998:	00000051 	andeq	r0, r0, r1, asr r0
    399c:	00000000 	andeq	r0, r0, r0
    39a0:	f3000400 	vshl.u8	d0, d0, d0
    39a4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    39b4:	01000000 	mrseq	r0, (UNDEF: 0)
    39b8:	00005100 	andeq	r5, r0, r0, lsl #2
    39bc:	00000000 	andeq	r0, r0, r0
    39c0:	00040000 	andeq	r0, r4, r0
    39c4:	9f5101f3 	svcls	0x005101f3
	...
    39d8:	00510001 	subseq	r0, r1, r1
    39dc:	00000000 	andeq	r0, r0, r0
    39e0:	04000000 	streq	r0, [r0], #-0
    39e4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    39e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    39f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3a04:	01f30004 	mvnseq	r0, r4
    3a08:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3a18:	00010000 	andeq	r0, r1, r0
    3a1c:	00000050 	andeq	r0, r0, r0, asr r0
    3a20:	00000000 	andeq	r0, r0, r0
    3a24:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
    3a30:	00500001 	subseq	r0, r0, r1
    3a34:	00000000 	andeq	r0, r0, r0
    3a38:	04000000 	streq	r0, [r0], #-0
    3a3c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3a40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3a44:	00000000 	andeq	r0, r0, r0
    3a48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a54:	00550001 	subseq	r0, r5, r1
    3a58:	00000000 	andeq	r0, r0, r0
    3a5c:	01000000 	mrseq	r0, (UNDEF: 0)
    3a60:	00005000 	andeq	r5, r0, r0
    3a64:	00000000 	andeq	r0, r0, r0
    3a68:	00040000 	andeq	r0, r4, r0
    3a6c:	9f5001f3 	svcls	0x005001f3
	...
    3a80:	00510001 	subseq	r0, r1, r1
    3a84:	00000000 	andeq	r0, r0, r0
    3a88:	01000000 	mrseq	r0, (UNDEF: 0)
    3a8c:	00005400 	andeq	r5, r0, r0, lsl #8
    3a90:	00000000 	andeq	r0, r0, r0
    3a94:	00040000 	andeq	r0, r4, r0
    3a98:	9f5101f3 	svcls	0x005101f3
	...
    3aa4:	00540001 	subseq	r0, r4, r1
    3aa8:	00000000 	andeq	r0, r0, r0
    3aac:	04000000 	streq	r0, [r0], #-0
    3ab0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3ab4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3ac4:	30000200 	andcc	r0, r0, r0, lsl #4
    3ac8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3acc:	00000000 	andeq	r0, r0, r0
    3ad0:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    3adc:	00570001 	subseq	r0, r7, r1
	...
    3aec:	02000000 	andeq	r0, r0, #0
    3af0:	009f3100 	addseq	r3, pc, r0, lsl #2
    3af4:	00000000 	andeq	r0, r0, r0
    3af8:	01000000 	mrseq	r0, (UNDEF: 0)
    3afc:	00005600 	andeq	r5, r0, r0, lsl #12
    3b00:	00000000 	andeq	r0, r0, r0
    3b04:	00010000 	andeq	r0, r1, r0
    3b08:	00000056 	andeq	r0, r0, r6, asr r0
	...
    3b18:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3b24:	01f30004 	mvnseq	r0, r4
    3b28:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3b38:	00010000 	andeq	r0, r1, r0
    3b3c:	00000051 	andeq	r0, r0, r1, asr r0
    3b40:	00000000 	andeq	r0, r0, r0
    3b44:	f3000400 	vshl.u8	d0, d0, d0
    3b48:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3b58:	01000000 	mrseq	r0, (UNDEF: 0)
    3b5c:	00005000 	andeq	r5, r0, r0
    3b60:	00000000 	andeq	r0, r0, r0
    3b64:	00010000 	andeq	r0, r1, r0
    3b68:	00000054 	andeq	r0, r0, r4, asr r0
    3b6c:	00000000 	andeq	r0, r0, r0
    3b70:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3b7c:	01f30004 	mvnseq	r0, r4
    3b80:	00009f50 	andeq	r9, r0, r0, asr pc
    3b84:	00000000 	andeq	r0, r0, r0
    3b88:	00010000 	andeq	r0, r1, r0
    3b8c:	00000050 	andeq	r0, r0, r0, asr r0
    3b90:	00000000 	andeq	r0, r0, r0
    3b94:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
    3ba0:	00500001 	subseq	r0, r0, r1
    3ba4:	00000000 	andeq	r0, r0, r0
    3ba8:	04000000 	streq	r0, [r0], #-0
    3bac:	5001f300 	andpl	pc, r1, r0, lsl #6
    3bb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3bb4:	00000000 	andeq	r0, r0, r0
    3bb8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3bc4:	01f30004 	mvnseq	r0, r4
    3bc8:	00009f50 	andeq	r9, r0, r0, asr pc
    3bcc:	00000000 	andeq	r0, r0, r0
    3bd0:	00010000 	andeq	r0, r1, r0
    3bd4:	00000050 	andeq	r0, r0, r0, asr r0
    3bd8:	00000000 	andeq	r0, r0, r0
    3bdc:	f3000400 	vshl.u8	d0, d0, d0
    3be0:	009f5001 	addseq	r5, pc, r1
	...
    3bf0:	01000000 	mrseq	r0, (UNDEF: 0)
    3bf4:	00005100 	andeq	r5, r0, r0, lsl #2
    3bf8:	00000000 	andeq	r0, r0, r0
    3bfc:	00010000 	andeq	r0, r1, r0
    3c00:	00000055 	andeq	r0, r0, r5, asr r0
    3c04:	00000000 	andeq	r0, r0, r0
    3c08:	f3000400 	vshl.u8	d0, d0, d0
    3c0c:	009f5101 	addseq	r5, pc, r1, lsl #2
    3c10:	00000000 	andeq	r0, r0, r0
    3c14:	01000000 	mrseq	r0, (UNDEF: 0)
    3c18:	00005500 	andeq	r5, r0, r0, lsl #10
    3c1c:	00000000 	andeq	r0, r0, r0
    3c20:	00040000 	andeq	r0, r4, r0
    3c24:	9f5101f3 	svcls	0x005101f3
	...
    3c30:	00550001 	subseq	r0, r5, r1
    3c34:	00000000 	andeq	r0, r0, r0
    3c38:	04000000 	streq	r0, [r0], #-0
    3c3c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3c40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3c50:	53000100 	movwpl	r0, #256	; 0x100
	...
    3c64:	00520001 	subseq	r0, r2, r1
	...
    3c74:	01000000 	mrseq	r0, (UNDEF: 0)
    3c78:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3c88:	00010000 	andeq	r0, r1, r0
    3c8c:	00000050 	andeq	r0, r0, r0, asr r0
    3c90:	00000000 	andeq	r0, r0, r0
    3c94:	f3000400 	vshl.u8	d0, d0, d0
    3c98:	009f5001 	addseq	r5, pc, r1
	...
    3ca8:	02000000 	andeq	r0, r0, #0
    3cac:	009f3000 	addseq	r3, pc, r0
    3cb0:	00000000 	andeq	r0, r0, r0
    3cb4:	01000000 	mrseq	r0, (UNDEF: 0)
    3cb8:	00005700 	andeq	r5, r0, r0, lsl #14
    3cbc:	00000000 	andeq	r0, r0, r0
    3cc0:	00070000 	andeq	r0, r7, r0
    3cc4:	0c0b0077 	stceq	0, cr0, [fp], {119}	; 0x77
    3cc8:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    3ccc:	00000000 	andeq	r0, r0, r0
    3cd0:	01000000 	mrseq	r0, (UNDEF: 0)
    3cd4:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    3ce4:	00020000 	andeq	r0, r2, r0
    3ce8:	00009f30 	andeq	r9, r0, r0, lsr pc
    3cec:	00000000 	andeq	r0, r0, r0
    3cf0:	00010000 	andeq	r0, r1, r0
    3cf4:	00000056 	andeq	r0, r0, r6, asr r0
    3cf8:	00000000 	andeq	r0, r0, r0
    3cfc:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3d08:	20700002 	rsbscs	r0, r0, r2
	...
    3d1c:	9f300002 	svcls	0x00300002
	...
    3d28:	00710005 	rsbseq	r0, r1, r5
    3d2c:	009f2438 	addseq	r2, pc, r8, lsr r4	; <UNPREDICTABLE>
	...
    3d3c:	01000000 	mrseq	r0, (UNDEF: 0)
    3d40:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3d50:	00010000 	andeq	r0, r1, r0
    3d54:	00000052 	andeq	r0, r0, r2, asr r0
	...
    3d64:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3d78:	00500001 	subseq	r0, r0, r1
    3d7c:	00000000 	andeq	r0, r0, r0
    3d80:	04000000 	streq	r0, [r0], #-0
    3d84:	5001f300 	andpl	pc, r1, r0, lsl #6
    3d88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3d98:	30000200 	andcc	r0, r0, r0, lsl #4
    3d9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3da0:	00000000 	andeq	r0, r0, r0
    3da4:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3db0:	00760007 	rsbseq	r0, r6, r7
    3db4:	1a0cff0a 	bne	3439e4 <__Stack_Size+0x3435e4>
    3db8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3dbc:	00000000 	andeq	r0, r0, r0
    3dc0:	53000100 	movwpl	r0, #256	; 0x100
	...
    3dcc:	1c700002 	ldclne	0, cr0, [r0], #-8
	...
    3de0:	9f300002 	svcls	0x00300002
	...
    3dec:	00570001 	subseq	r0, r7, r1
    3df0:	00000000 	andeq	r0, r0, r0
    3df4:	07000000 	streq	r0, [r0, -r0]
    3df8:	0b007700 	bleq	21a00 <__Stack_Size+0x21600>
    3dfc:	9f1adfff 	svcls	0x001adfff
	...
    3e08:	00520001 	subseq	r0, r2, r1
	...
    3e18:	02000000 	andeq	r0, r0, #0
    3e1c:	009f3000 	addseq	r3, pc, r0
    3e20:	00000000 	andeq	r0, r0, r0
    3e24:	05000000 	streq	r0, [r0, #-0]
    3e28:	3c007100 	stfccs	f7, [r0], {-0}
    3e2c:	00009f24 	andeq	r9, r0, r4, lsr #30
	...
    3e3c:	00010000 	andeq	r0, r1, r0
    3e40:	00000051 	andeq	r0, r0, r1, asr r0
    3e44:	00000000 	andeq	r0, r0, r0
    3e48:	f3000400 	vshl.u8	d0, d0, d0
    3e4c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3e5c:	01000000 	mrseq	r0, (UNDEF: 0)
    3e60:	00005000 	andeq	r5, r0, r0
    3e64:	00000000 	andeq	r0, r0, r0
    3e68:	00040000 	andeq	r0, r4, r0
    3e6c:	9f5001f3 	svcls	0x005001f3
	...
    3e80:	00500001 	subseq	r0, r0, r1
    3e84:	00000000 	andeq	r0, r0, r0
    3e88:	04000000 	streq	r0, [r0], #-0
    3e8c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3ea0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3eac:	01f30004 	mvnseq	r0, r4
    3eb0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3ec0:	00010000 	andeq	r0, r1, r0
    3ec4:	00000050 	andeq	r0, r0, r0, asr r0
    3ec8:	00000000 	andeq	r0, r0, r0
    3ecc:	f3000400 	vshl.u8	d0, d0, d0
    3ed0:	009f5001 	addseq	r5, pc, r1
	...
    3ee0:	01000000 	mrseq	r0, (UNDEF: 0)
    3ee4:	00005000 	andeq	r5, r0, r0
    3ee8:	00000000 	andeq	r0, r0, r0
    3eec:	00040000 	andeq	r0, r4, r0
    3ef0:	9f5001f3 	svcls	0x005001f3
	...
    3f04:	00500001 	subseq	r0, r0, r1
    3f08:	00000000 	andeq	r0, r0, r0
    3f0c:	04000000 	streq	r0, [r0], #-0
    3f10:	5001f300 	andpl	pc, r1, r0, lsl #6
    3f14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3f24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3f30:	01f30004 	mvnseq	r0, r4
    3f34:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3f44:	00020000 	andeq	r0, r2, r0
    3f48:	00009f30 	andeq	r9, r0, r0, lsr pc
    3f4c:	00000000 	andeq	r0, r0, r0
    3f50:	000a0000 	andeq	r0, sl, r0
    3f54:	00730071 	rsbseq	r0, r3, r1, ror r0
    3f58:	3024401a 	eorcc	r4, r4, sl, lsl r0
    3f5c:	00009f2e 	andeq	r9, r0, lr, lsr #30
    3f60:	00000000 	andeq	r0, r0, r0
    3f64:	17040000 	strne	r0, [r4, -r0]
    3f68:	17060800 	strne	r0, [r6, -r0, lsl #16]
    3f6c:	00010800 	andeq	r0, r1, r0, lsl #16
    3f70:	00170651 	andseq	r0, r7, r1, asr r6
    3f74:	00170c08 	andseq	r0, r7, r8, lsl #24
    3f78:	f3000408 	vshl.u8	d0, d8, d0
    3f7c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3f8c:	01000000 	mrseq	r0, (UNDEF: 0)
    3f90:	00005000 	andeq	r5, r0, r0
    3f94:	00000000 	andeq	r0, r0, r0
    3f98:	00040000 	andeq	r0, r4, r0
    3f9c:	9f5001f3 	svcls	0x005001f3
	...
    3fb0:	9f300002 	svcls	0x00300002
	...
    3fbc:	00500001 	subseq	r0, r0, r1
	...
    3fcc:	02000000 	andeq	r0, r0, #0
    3fd0:	009f3000 	addseq	r3, pc, r0
    3fd4:	00000000 	andeq	r0, r0, r0
    3fd8:	06000000 	streq	r0, [r0], -r0
    3fdc:	71007300 	mrsvc	r7, LR_irq
    3fe0:	009f1a00 	addseq	r1, pc, r0, lsl #20
	...
    3ff0:	02000000 	andeq	r0, r0, #0
    3ff4:	009f3000 	addseq	r3, pc, r0
    3ff8:	00000000 	andeq	r0, r0, r0
    3ffc:	06000000 	streq	r0, [r0], -r0
    4000:	72007100 	andvc	r7, r0, #0, 2
    4004:	009f1a00 	addseq	r1, pc, r0, lsl #20
    4008:	00000000 	andeq	r0, r0, r0
    400c:	0c000000 	stceq	0, cr0, [r0], {-0}
    4010:	0e080017 	mcreq	0, 0, r0, cr8, cr7, {0}
    4014:	01080017 	tsteq	r8, r7, lsl r0
    4018:	170e5100 	strne	r5, [lr, -r0, lsl #2]
    401c:	17140800 	ldrne	r0, [r4, -r0, lsl #16]
    4020:	00040800 	andeq	r0, r4, r0, lsl #16
    4024:	9f5101f3 	svcls	0x005101f3
	...
    4030:	08001720 	stmdaeq	r0, {r5, r8, r9, sl, ip}
    4034:	08001730 	stmdaeq	r0, {r4, r5, r8, r9, sl, ip}
    4038:	30500001 	subscc	r0, r0, r1
    403c:	38080017 	stmdacc	r8, {r0, r1, r2, r4}
    4040:	03080017 	movweq	r0, #32791	; 0x8017
    4044:	9f7e7000 	svcls	0x007e7000
    4048:	08001738 	stmdaeq	r0, {r3, r4, r5, r8, r9, sl, ip}
    404c:	0800173c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl, ip}
    4050:	01f30004 	mvnseq	r0, r4
    4054:	173c9f50 			; <UNDEFINED> instruction: 0x173c9f50
    4058:	17480800 	strbne	r0, [r8, -r0, lsl #16]
    405c:	00030800 	andeq	r0, r3, r0, lsl #16
    4060:	009f7e70 	addseq	r7, pc, r0, ror lr	; <UNPREDICTABLE>
	...
    4070:	01000000 	mrseq	r0, (UNDEF: 0)
    4074:	00005000 	andeq	r5, r0, r0
    4078:	00000000 	andeq	r0, r0, r0
    407c:	00040000 	andeq	r0, r4, r0
    4080:	9f5001f3 	svcls	0x005001f3
	...
    4094:	9f300002 	svcls	0x00300002
	...
    40a0:	00530001 	subseq	r0, r3, r1
	...
    40b0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    40b4:	33007000 	movwcc	r7, #0
    40b8:	1aff0825 	bne	fffc6154 <SCS_BASE+0x1ffb8154>
    40bc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    40c0:	00000000 	andeq	r0, r0, r0
    40c4:	f3000900 	vmls.i8	d0, d0, d0
    40c8:	25335001 	ldrcs	r5, [r3, #-1]!
    40cc:	9f1aff08 	svcls	0x001aff08
	...
    40e0:	9f300002 	svcls	0x00300002
	...
    40ec:	0073000b 	rsbseq	r0, r3, fp
    40f0:	ff080070 			; <UNDEFINED> instruction: 0xff080070
    40f4:	1a31251a 	bne	c4d564 <__Stack_Size+0xc4d164>
    40f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    40fc:	00000000 	andeq	r0, r0, r0
    4100:	73000c00 	movwvc	r0, #3072	; 0xc00
    4104:	5001f300 	andpl	pc, r1, r0, lsl #6
    4108:	251aff08 	ldrcs	pc, [sl, #-3848]	; 0xf08
    410c:	009f1a31 	addseq	r1, pc, r1, lsr sl	; <UNPREDICTABLE>
    4110:	00000000 	andeq	r0, r0, r0
    4114:	60000000 	andvs	r0, r0, r0
    4118:	8e080017 	mcrhi	0, 0, r0, cr8, cr7, {0}
    411c:	01080017 	tsteq	r8, r7, lsl r0
    4120:	178e5000 	strne	r5, [lr, r0]
    4124:	17a20800 	strne	r0, [r2, r0, lsl #16]!
    4128:	00040800 	andeq	r0, r4, r0, lsl #16
    412c:	9f5001f3 	svcls	0x005001f3
    4130:	080017a2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, ip}
    4134:	080017a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, ip}
    4138:	a6500001 	ldrbge	r0, [r0], -r1
    413c:	b2080017 	andlt	r0, r8, #23
    4140:	04080017 	streq	r0, [r8], #-23
    4144:	5001f300 	andpl	pc, r1, r0, lsl #6
    4148:	0017b29f 	mulseq	r7, pc, r2	; <UNPREDICTABLE>
    414c:	0017b608 	andseq	fp, r7, r8, lsl #12
    4150:	50000108 	andpl	r0, r0, r8, lsl #2
    4154:	080017b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sl, ip}
    4158:	080017c2 	stmdaeq	r0, {r1, r6, r7, r8, r9, sl, ip}
    415c:	01f30004 	mvnseq	r0, r4
    4160:	17c29f50 			; <UNDEFINED> instruction: 0x17c29f50
    4164:	17c60800 	strbne	r0, [r6, r0, lsl #16]
    4168:	00010800 	andeq	r0, r1, r0, lsl #16
    416c:	0017c650 	andseq	ip, r7, r0, asr r6
    4170:	0017d208 	andseq	sp, r7, r8, lsl #4
    4174:	f3000408 	vshl.u8	d0, d8, d0
    4178:	d29f5001 	addsle	r5, pc, #1
    417c:	d6080017 			; <UNDEFINED> instruction: 0xd6080017
    4180:	01080017 	tsteq	r8, r7, lsl r0
    4184:	17d65000 	ldrbne	r5, [r6, r0]
    4188:	17ea0800 	strbne	r0, [sl, r0, lsl #16]!
    418c:	00040800 	andeq	r0, r4, r0, lsl #16
    4190:	9f5001f3 	svcls	0x005001f3
    4194:	080017ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, r9, sl, ip}
    4198:	080017f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, ip}
    419c:	00500001 	subseq	r0, r0, r1
    41a0:	00000000 	andeq	r0, r0, r0
    41a4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    41a8:	36080017 			; <UNDEFINED> instruction: 0x36080017
    41ac:	01080018 	tsteq	r8, r8, lsl r0
    41b0:	18365000 	ldmdane	r6!, {ip, lr}
    41b4:	18760800 	ldmdane	r6!, {fp}^
    41b8:	00010800 	andeq	r0, r1, r0, lsl #16
    41bc:	00187654 	andseq	r7, r8, r4, asr r6
    41c0:	00187c08 	andseq	r7, r8, r8, lsl #24
    41c4:	f3000408 	vshl.u8	d0, d8, d0
    41c8:	009f5001 	addseq	r5, pc, r1
    41cc:	00000000 	andeq	r0, r0, r0
    41d0:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    41d4:	0c080017 	stceq	0, cr0, [r8], {23}
    41d8:	01080018 	tsteq	r8, r8, lsl r0
    41dc:	180c5100 	stmdane	ip, {r8, ip, lr}
    41e0:	18760800 	ldmdane	r6!, {fp}^
    41e4:	00010800 	andeq	r0, r1, r0, lsl #16
    41e8:	00187655 	andseq	r7, r8, r5, asr r6
    41ec:	00187c08 	andseq	r7, r8, r8, lsl #24
    41f0:	f3000408 	vshl.u8	d0, d8, d0
    41f4:	009f5101 	addseq	r5, pc, r1, lsl #2
    41f8:	00000000 	andeq	r0, r0, r0
    41fc:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    4200:	00080017 	andeq	r0, r8, r7, lsl r0
    4204:	02080018 	andeq	r0, r8, #24
    4208:	009f3000 	addseq	r3, pc, r0
    420c:	04080018 	streq	r0, [r8], #-24
    4210:	0b080018 	bleq	204278 <__Stack_Size+0x203e78>
    4214:	0b007300 	bleq	20e1c <__Stack_Size+0x20a1c>
    4218:	0a1acfff 	beq	6b821c <__Stack_Size+0x6b7e1c>
    421c:	9f1affff 	svcls	0x001affff
    4220:	08001806 	stmdaeq	r0, {r1, r2, fp, ip}
    4224:	0800180e 	stmdaeq	r0, {r1, r2, r3, fp, ip}
    4228:	00730007 	rsbseq	r0, r3, r7
    422c:	1affff0a 	bne	3e5c <__Stack_Size+0x3a5c>
    4230:	00180e9f 	mulseq	r8, pc, lr	; <UNPREDICTABLE>
    4234:	00181008 	andseq	r1, r8, r8
    4238:	70000908 	andvc	r0, r0, r8, lsl #18
    423c:	0a029410 	beq	a9284 <__Stack_Size+0xa8e84>
    4240:	9f1affff 	svcls	0x001affff
    4244:	08001810 	stmdaeq	r0, {r4, fp, ip}
    4248:	08001818 	stmdaeq	r0, {r3, r4, fp, ip}
    424c:	0072000b 	rsbseq	r0, r2, fp
    4250:	1ae9f30b 	bne	ffa80e84 <SCS_BASE+0x1fa72e84>
    4254:	1affff0a 	bne	3e84 <__Stack_Size+0x3a84>
    4258:	0018229f 	mulseq	r8, pc, r2	; <UNPREDICTABLE>
    425c:	00182608 	andseq	r2, r8, r8, lsl #12
    4260:	73000708 	movwvc	r0, #1800	; 0x708
    4264:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    4268:	18269f1a 	stmdane	r6!, {r1, r3, r4, r8, r9, sl, fp, ip, pc}
    426c:	182a0800 	stmdane	sl!, {fp}
    4270:	00090800 	andeq	r0, r9, r0, lsl #16
    4274:	02940c70 	addseq	r0, r4, #112, 24	; 0x7000
    4278:	1affff0a 	bne	3ea8 <__Stack_Size+0x3aa8>
    427c:	00182a9f 	mulseq	r8, pc, sl	; <UNPREDICTABLE>
    4280:	00182e08 	andseq	r2, r8, r8, lsl #28
    4284:	73000b08 	movwvc	r0, #2824	; 0xb08
    4288:	fcff0b00 	ldc2l	11, cr0, [pc]	; 4290 <__Stack_Size+0x3e90>
    428c:	ffff0a1a 			; <UNDEFINED> instruction: 0xffff0a1a
    4290:	18329f1a 	ldmdane	r2!, {r1, r3, r4, r8, r9, sl, fp, ip, pc}
    4294:	18390800 	ldmdane	r9!, {fp}
    4298:	00070800 	andeq	r0, r7, r0, lsl #16
    429c:	ff0a0073 			; <UNDEFINED> instruction: 0xff0a0073
    42a0:	5a9f1aff 	bpl	fe7caea4 <SCS_BASE+0x1e7bcea4>
    42a4:	6c080018 	stcvs	0, cr0, [r8], {24}
    42a8:	01080018 	tsteq	r8, r8, lsl r0
    42ac:	186c5000 	stmdane	ip!, {ip, lr}^
    42b0:	186e0800 	stmdane	lr!, {fp}^
    42b4:	00060800 	andeq	r0, r6, r0, lsl #16
    42b8:	00700073 	rsbseq	r0, r0, r3, ror r0
    42bc:	186e9f21 	stmdane	lr!, {r0, r5, r8, r9, sl, fp, ip, pc}^
    42c0:	18700800 	ldmdane	r0!, {fp}^
    42c4:	00010800 	andeq	r0, r1, r0, lsl #16
    42c8:	00187053 	andseq	r7, r8, r3, asr r0
    42cc:	00187c08 	andseq	r7, r8, r8, lsl #24
    42d0:	72001108 	andvc	r1, r0, #8, 2
    42d4:	0825f700 	stmdaeq	r5!, {r8, r9, sl, ip, sp, lr, pc}
    42d8:	1b25f764 	blne	982070 <__Stack_Size+0x981c70>
    42dc:	1a3f00f7 	bne	fc46c0 <__Stack_Size+0xfc42c0>
    42e0:	9f210070 	svcls	0x00210070
	...
    42ec:	080017f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, ip}
    42f0:	08001846 	stmdaeq	r0, {r1, r2, r6, fp, ip}
    42f4:	9f300002 	svcls	0x00300002
    42f8:	08001846 	stmdaeq	r0, {r1, r2, r6, fp, ip}
    42fc:	0800184c 	stmdaeq	r0, {r2, r3, r6, fp, ip}
    4300:	4c520001 	mrrcmi	0, 0, r0, r2, cr1
    4304:	5c080018 	stcpl	0, cr0, [r8], {24}
    4308:	11080018 	tstne	r8, r8, lsl r0
    430c:	06689100 	strbteq	r9, [r8], -r0, lsl #2
    4310:	74066491 	strvc	r6, [r6], #-1169	; 0x491
    4314:	29007100 	stmdbcs	r0, {r8, ip, sp, lr}
    4318:	16000128 	strne	r0, [r0], -r8, lsr #2
    431c:	185c9f13 	ldmdane	ip, {r0, r1, r4, r8, r9, sl, fp, ip, pc}^
    4320:	18760800 	ldmdane	r6!, {fp}^
    4324:	00140800 	andseq	r0, r4, r0, lsl #16
    4328:	91066891 			; <UNDEFINED> instruction: 0x91066891
    432c:	00740664 	rsbseq	r0, r4, r4, ror #12
    4330:	0138000c 	teqeq	r8, ip
    4334:	01282940 	teqeq	r8, r0, asr #18
    4338:	9f131600 	svcls	0x00131600
    433c:	08001876 	stmdaeq	r0, {r1, r2, r4, r5, r6, fp, ip}
    4340:	0800187c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip}
    4344:	687d0015 	ldmdavs	sp!, {r0, r2, r4}^
    4348:	06647d06 	strbteq	r7, [r4], -r6, lsl #26
    434c:	0c5001f3 	ldfeqe	f0, [r0], {243}	; 0xf3
    4350:	40013800 	andmi	r3, r1, r0, lsl #16
    4354:	00012829 	andeq	r2, r1, r9, lsr #16
    4358:	009f1316 	addseq	r1, pc, r6, lsl r3	; <UNPREDICTABLE>
    435c:	00000000 	andeq	r0, r0, r0
    4360:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    4364:	52080017 	andpl	r0, r8, #23
    4368:	02080018 	andeq	r0, r8, #24
    436c:	529f3000 	addspl	r3, pc, #0
    4370:	60080018 	andvs	r0, r8, r8, lsl r0
    4374:	01080018 	tsteq	r8, r8, lsl r0
    4378:	18605200 	stmdane	r0!, {r9, ip, lr}^
    437c:	18760800 	ldmdane	r6!, {fp}^
    4380:	00220800 	eoreq	r0, r2, r0, lsl #16
    4384:	91066891 			; <UNDEFINED> instruction: 0x91066891
    4388:	00740664 	rsbseq	r0, r4, r4, ror #12
    438c:	0138000c 	teqeq	r8, ip
    4390:	01282940 	teqeq	r8, r0, asr #18
    4394:	49131600 	ldmdbmi	r3, {r9, sl, ip}
    4398:	7525f71e 	strvc	pc, [r5, #-1822]!	; 0x71e
    439c:	24320600 	ldrtcs	r0, [r2], #-1536	; 0x600
    43a0:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
    43a4:	18769f00 	ldmdane	r6!, {r8, r9, sl, fp, ip, pc}^
    43a8:	187c0800 	ldmdane	ip!, {fp}^
    43ac:	00240800 	eoreq	r0, r4, r0, lsl #16
    43b0:	7d06687d 	stcvc	8, cr6, [r6, #-500]	; 0xfffffe0c
    43b4:	01f30664 	mvnseq	r0, r4, ror #12
    43b8:	38000c50 	stmdacc	r0, {r4, r6, sl, fp}
    43bc:	28294001 	stmdacs	r9!, {r0, lr}
    43c0:	13160001 	tstne	r6, #1
    43c4:	25f71e49 	ldrbcs	r1, [r7, #3657]!	; 0xe49
    43c8:	065101f3 			; <UNDEFINED> instruction: 0x065101f3
    43cc:	25f72432 	ldrbcs	r2, [r7, #1074]!	; 0x432
    43d0:	9f00f71b 	svcls	0x0000f71b
	...
    43dc:	080017f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, ip}
    43e0:	0800185a 	stmdaeq	r0, {r1, r3, r4, r6, fp, ip}
    43e4:	9f300002 	svcls	0x00300002
    43e8:	0800185a 	stmdaeq	r0, {r1, r3, r4, r6, fp, ip}
    43ec:	08001860 	stmdaeq	r0, {r5, r6, fp, ip}
    43f0:	0072000b 	rsbseq	r0, r2, fp
    43f4:	25340070 	ldrcs	r0, [r4, #-112]!	; 0x70
    43f8:	1c1e6408 	cfldrsne	mvf6, [lr], {8}
    43fc:	0018609f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    4400:	00186208 	andseq	r6, r8, r8, lsl #4
    4404:	52000108 	andpl	r0, r0, #8, 2
    4408:	08001862 	stmdaeq	r0, {r1, r5, r6, fp, ip}
    440c:	08001876 	stmdaeq	r0, {r1, r2, r4, r5, r6, fp, ip}
    4410:	6891002a 	ldmvs	r1, {r1, r3, r5}
    4414:	06649106 	strbteq	r9, [r4], -r6, lsl #2
    4418:	000c0074 	andeq	r0, ip, r4, ror r0
    441c:	29400138 	stmdbcs	r0, {r3, r4, r5, r8}^
    4420:	16000128 	strne	r0, [r0], -r8, lsr #2
    4424:	f71e4913 			; <UNDEFINED> instruction: 0xf71e4913
    4428:	06007525 	streq	r7, [r0], -r5, lsr #10
    442c:	25f72432 	ldrbcs	r2, [r7, #1074]!	; 0x432
    4430:	7000f71b 	andvc	pc, r0, fp, lsl r7	; <UNPREDICTABLE>
    4434:	08253400 	stmdaeq	r5!, {sl, ip, sp}
    4438:	9f1c1e64 	svcls	0x001c1e64
    443c:	08001876 	stmdaeq	r0, {r1, r2, r4, r5, r6, fp, ip}
    4440:	0800187c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip}
    4444:	687d002c 	ldmdavs	sp!, {r2, r3, r5}^
    4448:	06647d06 	strbteq	r7, [r4], -r6, lsl #26
    444c:	0c5001f3 	ldfeqe	f0, [r0], {243}	; 0xf3
    4450:	40013800 	andmi	r3, r1, r0, lsl #16
    4454:	00012829 	andeq	r2, r1, r9, lsr #16
    4458:	1e491316 	mcrne	3, 2, r1, cr9, cr6, {0}
    445c:	01f325f7 	ldrsheq	r2, [r3, #87]!	; 0x57
    4460:	24320651 	ldrtcs	r0, [r2], #-1617	; 0x651
    4464:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
    4468:	34007000 	strcc	r7, [r0], #-0
    446c:	1e640825 	cdpne	8, 6, cr0, cr4, cr5, {1}
    4470:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
    4480:	00010000 	andeq	r0, r1, r0
    4484:	00000051 	andeq	r0, r0, r1, asr r0
    4488:	00000000 	andeq	r0, r0, r0
    448c:	f3000400 	vshl.u8	d0, d0, d0
    4490:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    44a0:	02000000 	andeq	r0, r0, #0
    44a4:	009f3000 	addseq	r3, pc, r0
    44a8:	00000000 	andeq	r0, r0, r0
    44ac:	0b000000 	bleq	44b4 <__Stack_Size+0x40b4>
    44b0:	0b007200 	bleq	20cb8 <__Stack_Size+0x208b8>
    44b4:	0a1af0ff 	beq	6c08b8 <__Stack_Size+0x6c04b8>
    44b8:	9f1affff 	svcls	0x001affff
	...
    44c4:	00730007 	rsbseq	r0, r3, r7
    44c8:	1affff0a 	bne	40f8 <__Stack_Size+0x3cf8>
    44cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    44d0:	00000000 	andeq	r0, r0, r0
    44d4:	0018aa00 	andseq	sl, r8, r0, lsl #20
    44d8:	0018c008 	andseq	ip, r8, r8
    44dc:	50000108 	andpl	r0, r0, r8, lsl #2
    44e0:	080018c0 	stmdaeq	r0, {r6, r7, fp, ip}
    44e4:	080018c2 	stmdaeq	r0, {r1, r6, r7, fp, ip}
    44e8:	74700003 	ldrbtvc	r0, [r0], #-3
    44ec:	0018c29f 	mulseq	r8, pc, r2	; <UNPREDICTABLE>
    44f0:	0018c808 	andseq	ip, r8, r8, lsl #16
    44f4:	50000108 	andpl	r0, r0, r8, lsl #2
    44f8:	080018c8 	stmdaeq	r0, {r3, r6, r7, fp, ip}
    44fc:	080018dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip}
    4500:	01f30004 	mvnseq	r0, r4
    4504:	00009f50 	andeq	r9, r0, r0, asr pc
    4508:	00000000 	andeq	r0, r0, r0
    450c:	18aa0000 	stmiane	sl!, {}	; <UNPREDICTABLE>
    4510:	18b60800 	ldmne	r6!, {fp}
    4514:	00010800 	andeq	r0, r1, r0, lsl #16
    4518:	0018b651 	andseq	fp, r8, r1, asr r6
    451c:	0018dc08 	andseq	sp, r8, r8, lsl #24
    4520:	f3000408 	vshl.u8	d0, d8, d0
    4524:	009f5101 	addseq	r5, pc, r1, lsl #2
    4528:	00000000 	andeq	r0, r0, r0
    452c:	aa000000 	bge	4534 <__Stack_Size+0x4134>
    4530:	ce080018 	mcrgt	0, 0, r0, cr8, cr8, {0}
    4534:	01080018 	tsteq	r8, r8, lsl r0
    4538:	18ce5200 	stmiane	lr, {r9, ip, lr}^
    453c:	18d20800 	ldmne	r2, {fp}^
    4540:	00040800 	andeq	r0, r4, r0, lsl #16
    4544:	9f5201f3 	svcls	0x005201f3
    4548:	080018d2 	stmdaeq	r0, {r1, r4, r6, r7, fp, ip}
    454c:	080018d4 	stmdaeq	r0, {r2, r4, r6, r7, fp, ip}
    4550:	d4520001 	ldrble	r0, [r2], #-1
    4554:	dc080018 	stcle	0, cr0, [r8], {24}
    4558:	04080018 	streq	r0, [r8], #-24
    455c:	5201f300 	andpl	pc, r1, #0, 6
    4560:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4564:	00000000 	andeq	r0, r0, r0
    4568:	0018aa00 	andseq	sl, r8, r0, lsl #20
    456c:	0018b008 	andseq	fp, r8, r8
    4570:	30000208 	andcc	r0, r0, r8, lsl #4
    4574:	0018b09f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    4578:	0018dc08 	andseq	sp, r8, r8, lsl #24
    457c:	74000608 	strvc	r0, [r0], #-1544	; 0x608
    4580:	1aff0800 	bne	fffc6588 <SCS_BASE+0x1ffb8588>
    4584:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4588:	00000000 	andeq	r0, r0, r0
    458c:	0018aa00 	andseq	sl, r8, r0, lsl #20
    4590:	0018b008 	andseq	fp, r8, r8
    4594:	30000208 	andcc	r0, r0, r8, lsl #4
    4598:	0018b09f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    459c:	0018b608 	andseq	fp, r8, r8, lsl #12
    45a0:	71000908 	tstvc	r0, r8, lsl #18
    45a4:	0a1a4f00 	beq	6981ac <__Stack_Size+0x697dac>
    45a8:	9f1affff 	svcls	0x001affff
    45ac:	080018b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, fp, ip}
    45b0:	080018dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip}
    45b4:	01f3000a 	mvnseq	r0, sl
    45b8:	0a1a4f51 	beq	698304 <__Stack_Size+0x697f04>
    45bc:	9f1affff 	svcls	0x001affff
	...
    45c8:	080018aa 	stmdaeq	r0, {r1, r3, r5, r7, fp, ip}
    45cc:	080018bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, fp, ip}
    45d0:	9f300002 	svcls	0x00300002
    45d4:	080018bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, fp, ip}
    45d8:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
    45dc:	d0530001 	subsle	r0, r3, r1
    45e0:	d2080018 	andle	r0, r8, #24
    45e4:	05080018 	streq	r0, [r8, #-24]
    45e8:	00713100 	rsbseq	r3, r1, r0, lsl #2
    45ec:	18d29f24 	ldmne	r2, {r2, r5, r8, r9, sl, fp, ip, pc}^
    45f0:	18d80800 	ldmne	r8, {fp}^
    45f4:	00010800 	andeq	r0, r1, r0, lsl #16
    45f8:	0018d853 	andseq	sp, r8, r3, asr r8
    45fc:	0018dc08 	andseq	sp, r8, r8, lsl #24
    4600:	31000508 	tstcc	r0, r8, lsl #10
    4604:	9f240071 	svcls	0x00240071
	...
    4618:	00510001 	subseq	r0, r1, r1
    461c:	00000000 	andeq	r0, r0, r0
    4620:	04000000 	streq	r0, [r0], #-0
    4624:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4628:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    462c:	00000000 	andeq	r0, r0, r0
    4630:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    463c:	01f30004 	mvnseq	r0, r4
    4640:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    4650:	00010000 	andeq	r0, r1, r0
    4654:	00000051 	andeq	r0, r0, r1, asr r0
    4658:	00000000 	andeq	r0, r0, r0
    465c:	f3000400 	vshl.u8	d0, d0, d0
    4660:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    4670:	01000000 	mrseq	r0, (UNDEF: 0)
    4674:	00005100 	andeq	r5, r0, r0, lsl #2
    4678:	00000000 	andeq	r0, r0, r0
    467c:	00040000 	andeq	r0, r4, r0
    4680:	9f5101f3 	svcls	0x005101f3
	...
    4694:	00510001 	subseq	r0, r1, r1
    4698:	00000000 	andeq	r0, r0, r0
    469c:	04000000 	streq	r0, [r0], #-0
    46a0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    46a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    46a8:	00000000 	andeq	r0, r0, r0
    46ac:	0018dc00 	andseq	sp, r8, r0, lsl #24
    46b0:	0018e008 	andseq	lr, r8, r8
    46b4:	51000108 	tstpl	r0, r8, lsl #2
    46b8:	080018e0 	stmdaeq	r0, {r5, r6, r7, fp, ip}
    46bc:	080018e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, ip}
    46c0:	01f30004 	mvnseq	r0, r4
    46c4:	00009f51 	andeq	r9, r0, r1, asr pc
    46c8:	00000000 	andeq	r0, r0, r0
    46cc:	18e40000 	stmiane	r4!, {}^	; <UNPREDICTABLE>
    46d0:	18e60800 	stmiane	r6!, {fp}^
    46d4:	00010800 	andeq	r0, r1, r0, lsl #16
    46d8:	0018e650 	andseq	lr, r8, r0, asr r6
    46dc:	0018ec08 	andseq	lr, r8, r8, lsl #24
    46e0:	f3000408 	vshl.u8	d0, d8, d0
    46e4:	009f5001 	addseq	r5, pc, r1
	...
    46f4:	01000000 	mrseq	r0, (UNDEF: 0)
    46f8:	00005100 	andeq	r5, r0, r0, lsl #2
    46fc:	00000000 	andeq	r0, r0, r0
    4700:	00040000 	andeq	r0, r4, r0
    4704:	9f5101f3 	svcls	0x005101f3
	...
    4718:	00510001 	subseq	r0, r1, r1
    471c:	00000000 	andeq	r0, r0, r0
    4720:	04000000 	streq	r0, [r0], #-0
    4724:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4728:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4738:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4744:	01f30004 	mvnseq	r0, r4
    4748:	00009f51 	andeq	r9, r0, r1, asr pc
    474c:	00000000 	andeq	r0, r0, r0
    4750:	18ec0000 	stmiane	ip!, {}^	; <UNPREDICTABLE>
    4754:	18f40800 	ldmne	r4!, {fp}^
    4758:	00010800 	andeq	r0, r1, r0, lsl #16
    475c:	0018f450 	andseq	pc, r8, r0, asr r4	; <UNPREDICTABLE>
    4760:	0018f808 	andseq	pc, r8, r8, lsl #16
    4764:	f3000408 	vshl.u8	d0, d8, d0
    4768:	009f5001 	addseq	r5, pc, r1
    476c:	00000000 	andeq	r0, r0, r0
    4770:	ec000000 	stc	0, cr0, [r0], {-0}
    4774:	ee080018 	mcr	0, 0, r0, cr8, cr8, {0}
    4778:	02080018 	andeq	r0, r8, #24
    477c:	ee9f3000 	cdp	0, 9, cr3, cr15, cr0, {0}
    4780:	f8080018 			; <UNDEFINED> instruction: 0xf8080018
    4784:	0a080018 	beq	2047ec <__Stack_Size+0x2043ec>
    4788:	73007100 	movwvc	r7, #256	; 0x100
    478c:	24401a00 	strbcs	r1, [r0], #-2560	; 0xa00
    4790:	009f2e30 	addseq	r2, pc, r0, lsr lr	; <UNPREDICTABLE>
    4794:	00000000 	andeq	r0, r0, r0
    4798:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    479c:	fa080018 	blx	204804 <__Stack_Size+0x204404>
    47a0:	01080018 	tsteq	r8, r8, lsl r0
    47a4:	18fa5100 	ldmne	sl!, {r8, ip, lr}^
    47a8:	19000800 	stmdbne	r0, {fp}
    47ac:	00040800 	andeq	r0, r4, r0, lsl #16
    47b0:	9f5101f3 	svcls	0x005101f3
	...
    47bc:	08001900 	stmdaeq	r0, {r8, fp, ip}
    47c0:	08001936 	stmdaeq	r0, {r1, r2, r4, r5, r8, fp, ip}
    47c4:	36500001 	ldrbcc	r0, [r0], -r1
    47c8:	3a080019 	bcc	204834 <__Stack_Size+0x204434>
    47cc:	04080019 	streq	r0, [r8], #-25
    47d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    47d4:	00193a9f 	mulseq	r9, pc, sl	; <UNPREDICTABLE>
    47d8:	00193c08 	andseq	r3, r9, r8, lsl #24
    47dc:	50000108 	andpl	r0, r0, r8, lsl #2
    47e0:	0800193c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, ip}
    47e4:	0800193e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, fp, ip}
    47e8:	01f30004 	mvnseq	r0, r4
    47ec:	00009f50 	andeq	r9, r0, r0, asr pc
    47f0:	00000000 	andeq	r0, r0, r0
    47f4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    47f8:	192c0800 	stmdbne	ip!, {fp}
    47fc:	00010800 	andeq	r0, r1, r0, lsl #16
    4800:	00192c51 	andseq	r2, r9, r1, asr ip
    4804:	00193a08 	andseq	r3, r9, r8, lsl #20
    4808:	f3000408 	vshl.u8	d0, d8, d0
    480c:	3a9f5101 	bcc	fe7d8c18 <SCS_BASE+0x1e7cac18>
    4810:	3e080019 	mcrcc	0, 0, r0, cr8, cr9, {0}
    4814:	01080019 	tsteq	r8, r9, lsl r0
    4818:	00005100 	andeq	r5, r0, r0, lsl #2
    481c:	00000000 	andeq	r0, r0, r0
    4820:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    4824:	19240800 	stmdbne	r4!, {fp}
    4828:	00020800 	andeq	r0, r2, r0, lsl #16
    482c:	19249f30 	stmdbne	r4!, {r4, r5, r8, r9, sl, fp, ip, pc}
    4830:	19280800 	stmdbne	r8!, {fp}
    4834:	000b0800 	andeq	r0, fp, r0, lsl #16
    4838:	38007131 	stmdacc	r0, {r0, r4, r5, r8, ip, sp, lr}
    483c:	ffff0a25 			; <UNDEFINED> instruction: 0xffff0a25
    4840:	289f241a 	ldmcs	pc, {r1, r3, r4, sl, sp}	; <UNPREDICTABLE>
    4844:	2c080019 	stccs	0, cr0, [r8], {25}
    4848:	12080019 	andne	r0, r8, #25
    484c:	00713100 	rsbseq	r3, r1, r0, lsl #2
    4850:	ff0a2538 			; <UNDEFINED> instruction: 0xff0a2538
    4854:	72241aff 	eorvc	r1, r4, #1044480	; 0xff000
    4858:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    485c:	2c9f1a1a 	vldmiacs	pc, {s2-s27}
    4860:	3a080019 	bcc	2048cc <__Stack_Size+0x2044cc>
    4864:	13080019 	movwne	r0, #32793	; 0x8019
    4868:	01f33100 	mvnseq	r3, r0, lsl #2
    486c:	0a253851 	beq	9529b8 <__Stack_Size+0x9525b8>
    4870:	241affff 	ldrcs	pc, [sl], #-4095	; 0xfff
    4874:	ff0a0072 			; <UNDEFINED> instruction: 0xff0a0072
    4878:	9f1a1aff 	svcls	0x001a1aff
    487c:	0800193a 	stmdaeq	r0, {r1, r3, r4, r5, r8, fp, ip}
    4880:	0800193e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, fp, ip}
    4884:	71310012 	teqvc	r1, r2, lsl r0
    4888:	0a253800 	beq	952890 <__Stack_Size+0x952490>
    488c:	241affff 	ldrcs	pc, [sl], #-4095	; 0xfff
    4890:	ff0a0072 			; <UNDEFINED> instruction: 0xff0a0072
    4894:	9f1a1aff 	svcls	0x001a1aff
	...
    48a0:	08001900 	stmdaeq	r0, {r8, fp, ip}
    48a4:	08001908 	stmdaeq	r0, {r3, r8, fp, ip}
    48a8:	9f300002 	svcls	0x00300002
    48ac:	08001908 	stmdaeq	r0, {r3, r8, fp, ip}
    48b0:	08001912 	stmdaeq	r0, {r1, r4, r8, fp, ip}
    48b4:	00710009 	rsbseq	r0, r1, r9
    48b8:	ff0a1a4f 			; <UNDEFINED> instruction: 0xff0a1a4f
    48bc:	129f1aff 	addsne	r1, pc, #1044480	; 0xff000
    48c0:	24080019 	strcs	r0, [r8], #-25
    48c4:	01080019 	tsteq	r8, r9, lsl r0
    48c8:	19245200 	stmdbne	r4!, {r9, ip, lr}
    48cc:	192e0800 	stmdbne	lr!, {fp}
    48d0:	00010800 	andeq	r0, r1, r0, lsl #16
    48d4:	00193a53 	andseq	r3, r9, r3, asr sl
    48d8:	00193e08 	andseq	r3, r9, r8, lsl #28
    48dc:	53000108 	movwpl	r0, #264	; 0x108
	...
    48e8:	08001900 	stmdaeq	r0, {r8, fp, ip}
    48ec:	08001908 	stmdaeq	r0, {r3, r8, fp, ip}
    48f0:	9f300002 	svcls	0x00300002
    48f4:	08001908 	stmdaeq	r0, {r3, r8, fp, ip}
    48f8:	0800193e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, fp, ip}
    48fc:	00740006 	rsbseq	r0, r4, r6
    4900:	9f1aff08 	svcls	0x001aff08
	...
    490c:	08001900 	stmdaeq	r0, {r8, fp, ip}
    4910:	0800193c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, ip}
    4914:	9f300002 	svcls	0x00300002
    4918:	0800193c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, ip}
    491c:	0800193e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, fp, ip}
    4920:	00500001 	subseq	r0, r0, r1
	...
    4930:	01000000 	mrseq	r0, (UNDEF: 0)
    4934:	00005100 	andeq	r5, r0, r0, lsl #2
    4938:	00000000 	andeq	r0, r0, r0
    493c:	00040000 	andeq	r0, r4, r0
    4940:	9f5101f3 	svcls	0x005101f3
	...
    4954:	00710005 	rsbseq	r0, r1, r5
    4958:	009f2538 	addseq	r2, pc, r8, lsr r5	; <UNPREDICTABLE>
    495c:	00000000 	andeq	r0, r0, r0
    4960:	06000000 	streq	r0, [r0], -r0
    4964:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4968:	009f2538 	addseq	r2, pc, r8, lsr r5	; <UNPREDICTABLE>
    496c:	00000000 	andeq	r0, r0, r0
    4970:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    4974:	54080019 	strpl	r0, [r8], #-25
    4978:	01080019 	tsteq	r8, r9, lsl r0
    497c:	19545300 	ldmdbne	r4, {r8, r9, ip, lr}^
    4980:	195c0800 	ldmdbne	ip, {fp}^
    4984:	00030800 	andeq	r0, r3, r0, lsl #16
    4988:	5c9f0473 	cfldrspl	mvf0, [pc], {115}	; 0x73
    498c:	6c080019 	stcvs	0, cr0, [r8], {25}
    4990:	01080019 	tsteq	r8, r9, lsl r0
    4994:	196c5300 	stmdbne	ip!, {r8, r9, ip, lr}^
    4998:	196e0800 	stmdbne	lr!, {fp}^
    499c:	00030800 	andeq	r0, r3, r0, lsl #16
    49a0:	6e9f7c73 	mrcvs	12, 4, r7, cr15, cr3, {3}
    49a4:	71080019 	tstvc	r8, r9, lsl r0
    49a8:	01080019 	tsteq	r8, r9, lsl r0
    49ac:	00005300 	andeq	r5, r0, r0, lsl #6
    49b0:	00000000 	andeq	r0, r0, r0
    49b4:	19c40000 	stmibne	r4, {}^	; <UNPREDICTABLE>
    49b8:	19d90800 	ldmibne	r9, {fp}^
    49bc:	00010800 	andeq	r0, r1, r0, lsl #16
    49c0:	0019d950 	andseq	sp, r9, r0, asr r9
    49c4:	0019e808 	andseq	lr, r9, r8, lsl #16
    49c8:	f3000408 	vshl.u8	d0, d8, d0
    49cc:	009f5001 	addseq	r5, pc, r1
    49d0:	00000000 	andeq	r0, r0, r0
    49d4:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    49d8:	fd080019 	stc2	0, cr0, [r8, #-100]	; 0xffffff9c
    49dc:	01080019 	tsteq	r8, r9, lsl r0
    49e0:	19fd5000 	ldmibne	sp!, {ip, lr}^
    49e4:	1a0c0800 	bne	3069ec <__Stack_Size+0x3065ec>
    49e8:	00040800 	andeq	r0, r4, r0, lsl #16
    49ec:	9f5001f3 	svcls	0x005001f3
	...
    49f8:	08001a0c 	stmdaeq	r0, {r2, r3, r9, fp, ip}
    49fc:	08001a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp, ip}
    4a00:	1c500001 	mrrcne	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    4a04:	9c08001a 	stcls	0, cr0, [r8], {26}
    4a08:	0408001a 	streq	r0, [r8], #-26
    4a0c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a14:	00000000 	andeq	r0, r0, r0
    4a18:	001a2e00 	andseq	r2, sl, r0, lsl #28
    4a1c:	001a3c08 	andseq	r3, sl, r8, lsl #24
    4a20:	53000108 	movwpl	r0, #264	; 0x108
    4a24:	08001a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp, ip}
    4a28:	08001a48 	stmdaeq	r0, {r3, r6, r9, fp, ip}
    4a2c:	09740002 	ldmdbeq	r4!, {r1}^
	...
    4a38:	08001a56 	stmdaeq	r0, {r1, r2, r4, r6, r9, fp, ip}
    4a3c:	08001a58 	stmdaeq	r0, {r3, r4, r6, r9, fp, ip}
    4a40:	58530001 	ldmdapl	r3, {r0}^
    4a44:	7208001a 	andvc	r0, r8, #26
    4a48:	0508001a 	streq	r0, [r8, #-26]
    4a4c:	3f007100 	svccc	0x00007100
    4a50:	1a769f1a 	bne	1dac6c0 <__Stack_Size+0x1dac2c0>
    4a54:	1a800800 	bne	fe006a5c <SCS_BASE+0x1dff8a5c>
    4a58:	00050800 	andeq	r0, r5, r0, lsl #16
    4a5c:	1a3f0071 	bne	fc4c28 <__Stack_Size+0xfc4828>
    4a60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a64:	00000000 	andeq	r0, r0, r0
    4a68:	001a5200 	andseq	r5, sl, r0, lsl #4
    4a6c:	001a7208 	andseq	r7, sl, r8, lsl #4
    4a70:	51000108 	tstpl	r0, r8, lsl #2
    4a74:	08001a76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, fp, ip}
    4a78:	08001a80 	stmdaeq	r0, {r7, r9, fp, ip}
    4a7c:	00510001 	subseq	r0, r1, r1
    4a80:	00000000 	andeq	r0, r0, r0
    4a84:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    4a88:	3008001a 	andcc	r0, r8, sl, lsl r0
    4a8c:	0308001b 	movweq	r0, #32795	; 0x801b
    4a90:	9f107500 	svcls	0x00107500
	...
    4a9c:	08001aaa 	stmdaeq	r0, {r1, r3, r5, r7, r9, fp, ip}
    4aa0:	08001ad6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, fp, ip}
    4aa4:	d6530001 	ldrble	r0, [r3], -r1
    4aa8:	de08001a 	mcrle	0, 0, r0, cr8, cr10, {0}
    4aac:	0908001a 	stmdbeq	r8, {r1, r3, r4}
    4ab0:	94107500 	ldrls	r7, [r0], #-1280	; 0x500
    4ab4:	ffff0a02 			; <UNDEFINED> instruction: 0xffff0a02
    4ab8:	1ade9f1a 	bne	ff7ac728 <SCS_BASE+0x1f79e728>
    4abc:	1af00800 	bne	ffc06ac4 <SCS_BASE+0x1fbf8ac4>
    4ac0:	00010800 	andeq	r0, r1, r0, lsl #16
    4ac4:	001af053 	andseq	pc, sl, r3, asr r0	; <UNPREDICTABLE>
    4ac8:	001af308 	andseq	pc, sl, r8, lsl #6
    4acc:	75000908 	strvc	r0, [r0, #-2312]	; 0x908
    4ad0:	0a029410 	beq	a9b18 <__Stack_Size+0xa9718>
    4ad4:	9f1affff 	svcls	0x001affff
	...
    4ae0:	08001aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp, ip}
    4ae4:	08001ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp, ip}
    4ae8:	00760006 	rsbseq	r0, r6, r6
    4aec:	9f1aff08 	svcls	0x001aff08
    4af0:	08001ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp, ip}
    4af4:	08001ad4 	stmdaeq	r0, {r2, r4, r6, r7, r9, fp, ip}
    4af8:	9f340002 	svcls	0x00340002
    4afc:	08001ad4 	stmdaeq	r0, {r2, r4, r6, r7, r9, fp, ip}
    4b00:	08001ade 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, fp, ip}
    4b04:	9f370002 	svcls	0x00370002
    4b08:	08001ade 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, fp, ip}
    4b0c:	08001ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp, ip}
    4b10:	00760006 	rsbseq	r0, r6, r6
    4b14:	9f1aff08 	svcls	0x001aff08
    4b18:	08001ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp, ip}
    4b1c:	08001b30 	stmdaeq	r0, {r4, r5, r8, r9, fp, ip}
    4b20:	00560001 	subseq	r0, r6, r1
    4b24:	00000000 	andeq	r0, r0, r0
    4b28:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    4b2c:	f808001a 			; <UNDEFINED> instruction: 0xf808001a
    4b30:	0108001a 	tsteq	r8, sl, lsl r0
    4b34:	1af85000 	bne	ffe18b3c <SCS_BASE+0x1fe0ab3c>
    4b38:	1b280800 	blne	a06b40 <__Stack_Size+0xa06740>
    4b3c:	00010800 	andeq	r0, r1, r0, lsl #16
    4b40:	00000059 	andeq	r0, r0, r9, asr r0
    4b44:	00000000 	andeq	r0, r0, r0
    4b48:	001ae000 	andseq	lr, sl, r0
    4b4c:	001ae808 	andseq	lr, sl, r8, lsl #16
    4b50:	54000108 	strpl	r0, [r0], #-264	; 0x108
    4b54:	08001ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp, ip}
    4b58:	08001aee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, fp, ip}
    4b5c:	00740016 	rsbseq	r0, r4, r6, lsl r0
    4b60:	244b4012 	strbcs	r4, [fp], #-18
    4b64:	16007322 	strne	r7, [r0], -r2, lsr #6
    4b68:	244b4014 	strbcs	r4, [fp], #-20
    4b6c:	01282d22 	teqeq	r8, r2, lsr #26
    4b70:	9f131600 	svcls	0x00131600
    4b74:	08001aee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, fp, ip}
    4b78:	08001af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp, ip}
    4b7c:	1475001c 	ldrbtne	r0, [r5], #-28
    4b80:	ff0a0294 			; <UNDEFINED> instruction: 0xff0a0294
    4b84:	40121aff 			; <UNDEFINED> instruction: 0x40121aff
    4b88:	7322244b 	teqvc	r2, #1258291200	; 0x4b000000
    4b8c:	40141600 	andsmi	r1, r4, r0, lsl #12
    4b90:	2d22244b 	cfstrscs	mvf2, [r2, #-300]!	; 0xfffffed4
    4b94:	16000128 	strne	r0, [r0], -r8, lsr #2
    4b98:	1af09f13 	bne	ffc2c7ec <SCS_BASE+0x1fc1e7ec>
    4b9c:	1af30800 	bne	ffcc6ba4 <SCS_BASE+0x1fcb8ba4>
    4ba0:	00220800 	eoreq	r0, r2, r0, lsl #16
    4ba4:	02941475 	addseq	r1, r4, #1962934272	; 0x75000000
    4ba8:	1affff0a 	bne	47d8 <__Stack_Size+0x43d8>
    4bac:	244b4012 	strbcs	r4, [fp], #-18
    4bb0:	94107522 	ldrls	r7, [r0], #-1314	; 0x522
    4bb4:	ffff0a02 			; <UNDEFINED> instruction: 0xffff0a02
    4bb8:	4014161a 	andsmi	r1, r4, sl, lsl r6
    4bbc:	2d22244b 	cfstrscs	mvf2, [r2, #-300]!	; 0xfffffed4
    4bc0:	16000128 	strne	r0, [r0], -r8, lsr #2
    4bc4:	00009f13 	andeq	r9, r0, r3, lsl pc
    4bc8:	00000000 	andeq	r0, r0, r0
    4bcc:	1b920000 	blne	fe484bd4 <SCS_BASE+0x1e476bd4>
    4bd0:	1ba90800 	blne	fea46bd8 <SCS_BASE+0x1ea38bd8>
    4bd4:	00010800 	andeq	r0, r1, r0, lsl #16
    4bd8:	001bb850 	andseq	fp, fp, r0, asr r8
    4bdc:	001bba08 	andseq	fp, fp, r8, lsl #20
    4be0:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    4bec:	08001bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp, ip}
    4bf0:	08001bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp, ip}
    4bf4:	00700006 	rsbseq	r0, r0, r6
    4bf8:	9f1a7f08 	svcls	0x001a7f08
    4bfc:	08001bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp, ip}
    4c00:	08001bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip}
    4c04:	f8500001 			; <UNDEFINED> instruction: 0xf8500001
    4c08:	1e08001b 	mcrne	0, 0, r0, cr8, cr11, {0}
    4c0c:	0b08001c 	bleq	204c84 <__Stack_Size+0x204884>
    4c10:	94007300 	strls	r7, [r0], #-768	; 0x300
    4c14:	1a7f0801 	bne	1fc6c20 <__Stack_Size+0x1fc6820>
    4c18:	9f1aff08 	svcls	0x001aff08
	...
    4c24:	08001c10 	stmdaeq	r0, {r4, sl, fp, ip}
    4c28:	08001c2c 	stmdaeq	r0, {r2, r3, r5, sl, fp, ip}
    4c2c:	00520001 	subseq	r0, r2, r1
    4c30:	00000000 	andeq	r0, r0, r0
    4c34:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    4c38:	3c08001b 	stccc	0, cr0, [r8], {27}
    4c3c:	0108001c 	tsteq	r8, ip, lsl r0
    4c40:	1c3c5000 	ldcne	0, cr5, [ip], #-0
    4c44:	1c3f0800 	ldcne	8, cr0, [pc], #-0	; 4c4c <__Stack_Size+0x484c>
    4c48:	00070800 	andeq	r0, r7, r0, lsl #16
    4c4c:	7f0b0071 	svcvc	0x000b0071
    4c50:	4a9f1aff 	bmi	fe7cb854 <SCS_BASE+0x1e7bd854>
    4c54:	5f08001c 	svcpl	0x0008001c
    4c58:	0108001c 	tsteq	r8, ip, lsl r0
    4c5c:	1c625000 	stclne	0, cr5, [r2], #-0
    4c60:	1c650800 	stclne	8, cr0, [r5], #-0
    4c64:	00010800 	andeq	r0, r1, r0, lsl #16
    4c68:	00000050 	andeq	r0, r0, r0, asr r0
    4c6c:	00000000 	andeq	r0, r0, r0
    4c70:	001bf200 	andseq	pc, fp, r0, lsl #4
    4c74:	001c3f08 	andseq	r3, ip, r8, lsl #30
    4c78:	71000608 	tstvc	r0, r8, lsl #12
    4c7c:	1aff0800 	bne	fffc6c84 <SCS_BASE+0x1ffb8c84>
    4c80:	001c4a9f 	mulseq	ip, pc, sl	; <UNPREDICTABLE>
    4c84:	001c5c08 	andseq	r5, ip, r8, lsl #24
    4c88:	71000608 	tstvc	r0, r8, lsl #12
    4c8c:	1aff0800 	bne	fffc6c94 <SCS_BASE+0x1ffb8c94>
    4c90:	001c629f 	mulseq	ip, pc, r2	; <UNPREDICTABLE>
    4c94:	001c6508 	andseq	r6, ip, r8, lsl #10
    4c98:	71000608 	tstvc	r0, r8, lsl #12
    4c9c:	1aff0800 	bne	fffc6ca4 <SCS_BASE+0x1ffb8ca4>
    4ca0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ca4:	00000000 	andeq	r0, r0, r0
    4ca8:	001c7200 	andseq	r7, ip, r0, lsl #4
    4cac:	001c7608 	andseq	r7, ip, r8, lsl #12
    4cb0:	73000708 	movwvc	r0, #1800	; 0x708
    4cb4:	30000a00 	andcc	r0, r0, r0, lsl #20
    4cb8:	1c769f27 	ldclne	15, cr9, [r6], #-156	; 0xffffff64
    4cbc:	1c7a0800 	ldclne	8, cr0, [sl], #-0
    4cc0:	000b0800 	andeq	r0, fp, r0, lsl #16
    4cc4:	000a0073 	andeq	r0, sl, r3, ror r0
    4cc8:	000a2730 	andeq	r2, sl, r0, lsr r7
    4ccc:	009f2730 	addseq	r2, pc, r0, lsr r7	; <UNPREDICTABLE>
    4cd0:	00000000 	andeq	r0, r0, r0
    4cd4:	ac000000 	stcge	0, cr0, [r0], {-0}
    4cd8:	e408001c 	str	r0, [r8], #-28
    4cdc:	0608001c 			; <UNDEFINED> instruction: 0x0608001c
    4ce0:	08007100 	stmdaeq	r0, {r8, ip, sp, lr}
    4ce4:	e49f1aff 	ldr	r1, [pc], #2815	; 4cec <__Stack_Size+0x48ec>
    4ce8:	0e08001c 	mcreq	0, 0, r0, cr8, cr12, {0}
    4cec:	0808001d 	stmdaeq	r8, {r0, r2, r3, r4}
    4cf0:	94057000 	strls	r7, [r5], #-0
    4cf4:	1aff0801 	bne	fffc6d00 <SCS_BASE+0x1ffb8d00>
    4cf8:	001d1a9f 	mulseq	sp, pc, sl	; <UNPREDICTABLE>
    4cfc:	001d2c08 	andseq	r2, sp, r8, lsl #24
    4d00:	71000608 	tstvc	r0, r8, lsl #12
    4d04:	1aff0800 	bne	fffc6d0c <SCS_BASE+0x1ffb8d0c>
    4d08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4d0c:	00000000 	andeq	r0, r0, r0
    4d10:	001cb000 	andseq	fp, ip, r0
    4d14:	001cd008 	andseq	sp, ip, r8
    4d18:	54000108 	strpl	r0, [r0], #-264	; 0x108
    4d1c:	08001cd0 	stmdaeq	r0, {r4, r6, r7, sl, fp, ip}
    4d20:	08001ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip}
    4d24:	00710007 	rsbseq	r0, r1, r7
    4d28:	1aff7f0b 	bne	fffe495c <SCS_BASE+0x1ffd695c>
    4d2c:	001ce49f 	mulseq	ip, pc, r4	; <UNPREDICTABLE>
    4d30:	001d0e08 	andseq	r0, sp, r8, lsl #28
    4d34:	70000c08 	andvc	r0, r0, r8, lsl #24
    4d38:	08019405 	stmdaeq	r1, {r0, r2, sl, ip, pc}
    4d3c:	7f0b1aff 	svcvc	0x000b1aff
    4d40:	1a9f1aff 	bne	fe7cb944 <SCS_BASE+0x1e7bd944>
    4d44:	2c08001d 	stccs	0, cr0, [r8], {29}
    4d48:	0708001d 	smladeq	r8, sp, r0, r0
    4d4c:	0b007100 	bleq	21154 <__Stack_Size+0x20d54>
    4d50:	9f1aff7f 	svcls	0x001aff7f
	...
    4d5c:	08001cc6 	stmdaeq	r0, {r1, r2, r6, r7, sl, fp, ip}
    4d60:	08001cd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, sl, fp, ip}
    4d64:	00520001 	subseq	r0, r2, r1
	...
    4d70:	0408001d 	streq	r0, [r8], #-29
    4d74:	0708001d 	smladeq	r8, sp, r0, r0
    4d78:	0a007200 	beq	21580 <__Stack_Size+0x21180>
    4d7c:	9f271000 	svcls	0x00271000
	...
    4d88:	08001d50 	stmdaeq	r0, {r4, r6, r8, sl, fp, ip}
    4d8c:	08001d64 	stmdaeq	r0, {r2, r5, r6, r8, sl, fp, ip}
    4d90:	64500001 	ldrbvs	r0, [r0], #-1
    4d94:	6c08001d 	stcvs	0, cr0, [r8], {29}
    4d98:	0408001d 	streq	r0, [r8], #-29
    4d9c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4da0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4da4:	00000000 	andeq	r0, r0, r0
    4da8:	001dc400 	andseq	ip, sp, r0, lsl #8
    4dac:	001dcc08 	andseq	ip, sp, r8, lsl #24
    4db0:	74001108 	strvc	r1, [r0], #-264	; 0x108
    4db4:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    4db8:	2324311a 	teqcs	r4, #-2147483642	; 0x80000006
    4dbc:	8081c080 	addhi	ip, r1, r0, lsl #1
    4dc0:	04939f04 	ldreq	r9, [r3], #3844	; 0xf04
	...
    4dcc:	08001e04 	stmdaeq	r0, {r2, r9, sl, fp, ip}
    4dd0:	08001e14 	stmdaeq	r0, {r2, r4, r9, sl, fp, ip}
    4dd4:	9f320002 	svcls	0x00320002
    4dd8:	08001e14 	stmdaeq	r0, {r2, r4, r9, sl, fp, ip}
    4ddc:	08001e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp, ip}
    4de0:	16500001 	ldrbne	r0, [r0], -r1
    4de4:	2208001e 	andcs	r0, r8, #30
    4de8:	0208001e 	andeq	r0, r8, #30
    4dec:	269f3200 	ldrcs	r3, [pc], r0, lsl #4
    4df0:	4408001e 	strmi	r0, [r8], #-30
    4df4:	0208001e 	andeq	r0, r8, #30
    4df8:	4e9f3200 	cdpmi	2, 9, cr3, cr15, cr0, {0}
    4dfc:	5408001e 	strpl	r0, [r8], #-30
    4e00:	0108001e 	tsteq	r8, lr, lsl r0
    4e04:	1e545000 	cdpne	0, 5, cr5, cr4, cr0, {0}
    4e08:	1e640800 	cdpne	8, 6, cr0, cr4, cr0, {0}
    4e0c:	00020800 	andeq	r0, r2, r0, lsl #16
    4e10:	1e649f32 	mcrne	15, 3, r9, cr4, cr2, {1}
    4e14:	1e660800 	cdpne	8, 6, cr0, cr6, cr0, {0}
    4e18:	00010800 	andeq	r0, r1, r0, lsl #16
    4e1c:	001e6650 	andseq	r6, lr, r0, asr r6
    4e20:	001e8008 	andseq	r8, lr, r8
    4e24:	32000208 	andcc	r0, r0, #8, 4	; 0x80000000
    4e28:	001e809f 	mulseq	lr, pc, r0	; <UNPREDICTABLE>
    4e2c:	001e8208 	andseq	r8, lr, r8, lsl #4
    4e30:	50000108 	andpl	r0, r0, r8, lsl #2
    4e34:	08001e82 	stmdaeq	r0, {r1, r7, r9, sl, fp, ip}
    4e38:	08001e8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl, fp, ip}
    4e3c:	9f320002 	svcls	0x00320002
    4e40:	08001e8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl, fp, ip}
    4e44:	08001e90 	stmdaeq	r0, {r4, r7, r9, sl, fp, ip}
    4e48:	90500001 	subsls	r0, r0, r1
    4e4c:	a008001e 	andge	r0, r8, lr, lsl r0
    4e50:	0208001e 	andeq	r0, r8, #30
    4e54:	a09f3200 	addsge	r3, pc, r0, lsl #4
    4e58:	a808001e 	stmdage	r8, {r1, r2, r3, r4}
    4e5c:	0108001e 	tsteq	r8, lr, lsl r0
    4e60:	1ec25000 	cdpne	0, 12, cr5, cr2, cr0, {0}
    4e64:	1ec40800 	cdpne	8, 12, cr0, cr4, cr0, {0}
    4e68:	00010800 	andeq	r0, r1, r0, lsl #16
    4e6c:	00000050 	andeq	r0, r0, r0, asr r0
    4e70:	00000000 	andeq	r0, r0, r0
    4e74:	001e0400 	andseq	r0, lr, r0, lsl #8
    4e78:	001eca08 	andseq	ip, lr, r8, lsl #20
    4e7c:	54000108 	strpl	r0, [r0], #-264	; 0x108
	...
    4e88:	08001ea8 	stmdaeq	r0, {r3, r5, r7, r9, sl, fp, ip}
    4e8c:	08001ec2 	stmdaeq	r0, {r1, r6, r7, r9, sl, fp, ip}
    4e90:	9f360002 	svcls	0x00360002
    4e94:	08001ec4 	stmdaeq	r0, {r2, r6, r7, r9, sl, fp, ip}
    4e98:	08001eca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, fp, ip}
    4e9c:	00530001 	subseq	r0, r3, r1
    4ea0:	00000000 	andeq	r0, r0, r0
    4ea4:	ca000000 	bgt	4eac <__Stack_Size+0x4aac>
    4ea8:	e008001e 	and	r0, r8, lr, lsl r0
    4eac:	0208001e 	andeq	r0, r8, #30
    4eb0:	e09f3000 	adds	r3, pc, r0
    4eb4:	e208001e 	and	r0, r8, #30
    4eb8:	0108001e 	tsteq	r8, lr, lsl r0
    4ebc:	1ee25300 	cdpne	3, 14, cr5, cr2, cr0, {0}
    4ec0:	1eea0800 	cdpne	8, 14, cr0, cr10, cr0, {0}
    4ec4:	00020800 	andeq	r0, r2, r0, lsl #16
    4ec8:	1eea9f30 	mcrne	15, 7, r9, cr10, cr0, {1}
    4ecc:	1eec0800 	cdpne	8, 14, cr0, cr12, cr0, {0}
    4ed0:	00010800 	andeq	r0, r1, r0, lsl #16
    4ed4:	001eec53 	andseq	lr, lr, r3, asr ip
    4ed8:	001ef408 	andseq	pc, lr, r8, lsl #8
    4edc:	30000208 	andcc	r0, r0, r8, lsl #4
    4ee0:	001ef49f 	mulseq	lr, pc, r4	; <UNPREDICTABLE>
    4ee4:	001ef608 	andseq	pc, lr, r8, lsl #12
    4ee8:	53000108 	movwpl	r0, #264	; 0x108
    4eec:	08001ef6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sl, fp, ip}
    4ef0:	08001fae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, sl, fp, ip}
    4ef4:	9f300002 	svcls	0x00300002
    4ef8:	08001fae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, sl, fp, ip}
    4efc:	08001fbb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r8, r9, sl, fp, ip}
    4f00:	6c530001 	mrrcvs	0, 0, r0, r3, cr1
    4f04:	76080020 	strvc	r0, [r8], -r0, lsr #32
    4f08:	02080020 	andeq	r0, r8, #32
    4f0c:	769f3000 	ldrvc	r3, [pc], r0
    4f10:	8c080020 	stchi	0, cr0, [r8], {32}
    4f14:	06080020 	streq	r0, [r8], -r0, lsr #32
    4f18:	19e90300 	stmibne	r9!, {r8, r9}^
    4f1c:	009f0800 	addseq	r0, pc, r0, lsl #16
    4f20:	00000000 	andeq	r0, r0, r0
    4f24:	bc000000 	stclt	0, cr0, [r0], {-0}
    4f28:	c008001f 	andgt	r0, r8, pc, lsl r0
    4f2c:	0208001f 	andeq	r0, r8, #31
    4f30:	cc9f3000 	ldcgt	0, cr3, [pc], {0}
    4f34:	0208001f 	andeq	r0, r8, #31
    4f38:	01080020 	tsteq	r8, r0, lsr #32
    4f3c:	20585000 	subscs	r5, r8, r0
    4f40:	20640800 	rsbcs	r0, r4, r0, lsl #16
    4f44:	00010800 	andeq	r0, r1, r0, lsl #16
    4f48:	00000050 	andeq	r0, r0, r0, asr r0
    4f4c:	00000000 	andeq	r0, r0, r0
    4f50:	001eca00 	andseq	ip, lr, r0, lsl #20
    4f54:	001fb408 	andseq	fp, pc, r8, lsl #8
    4f58:	54000108 	strpl	r0, [r0], #-264	; 0x108
    4f5c:	08001fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, ip}
    4f60:	08001fd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, sl, fp, ip}
    4f64:	6c540001 	mrrcvs	0, 0, r0, r4, cr1
    4f68:	8c080020 	stchi	0, cr0, [r8], {32}
    4f6c:	01080020 	tsteq	r8, r0, lsr #32
    4f70:	00005400 	andeq	r5, r0, r0, lsl #8
    4f74:	00000000 	andeq	r0, r0, r0
    4f78:	1f440000 	svcne	0x00440000
    4f7c:	1f6a0800 	svcne	0x006a0800
    4f80:	00010800 	andeq	r0, r1, r0, lsl #16
    4f84:	00000051 	andeq	r0, r0, r1, asr r0
    4f88:	00000000 	andeq	r0, r0, r0
    4f8c:	001f4400 	andseq	r4, pc, r0, lsl #8
    4f90:	001f6a08 	andseq	r6, pc, r8, lsl #20
    4f94:	72000908 	andvc	r0, r0, #8, 18	; 0x20000
    4f98:	1a700800 	bne	1c06fa0 <__Stack_Size+0x1c06ba0>
    4f9c:	9f1aff08 	svcls	0x001aff08
	...
    4fa8:	08001eca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, fp, ip}
    4fac:	08002064 	stmdaeq	r0, {r2, r5, r6, sp}
    4fb0:	9f300002 	svcls	0x00300002
    4fb4:	0800206c 	stmdaeq	r0, {r2, r3, r5, r6, sp}
    4fb8:	0800208c 	stmdaeq	r0, {r2, r3, r7, sp}
    4fbc:	9f300002 	svcls	0x00300002
	...
    4fc8:	08001f5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl, fp, ip}
    4fcc:	08001f6a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, fp, ip}
    4fd0:	00530001 	subseq	r0, r3, r1
    4fd4:	00000000 	andeq	r0, r0, r0
    4fd8:	d6000000 	strle	r0, [r0], -r0
    4fdc:	f608001e 			; <UNDEFINED> instruction: 0xf608001e
    4fe0:	0108001e 	tsteq	r8, lr, lsl r0
    4fe4:	1fae5200 	svcne	0x00ae5200
    4fe8:	1fb00800 	svcne	0x00b00800
    4fec:	00010800 	andeq	r0, r1, r0, lsl #16
    4ff0:	00000052 	andeq	r0, r0, r2, asr r0
    4ff4:	00000000 	andeq	r0, r0, r0
    4ff8:	00209400 	eoreq	r9, r0, r0, lsl #8
    4ffc:	0020a808 	eoreq	sl, r0, r8, lsl #16
    5000:	53000108 	movwpl	r0, #264	; 0x108
    5004:	080020a8 	stmdaeq	r0, {r3, r5, r7, sp}
    5008:	080020b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, sp}
    500c:	08740008 	ldmdaeq	r4!, {r3}^
    5010:	ff080194 			; <UNDEFINED> instruction: 0xff080194
    5014:	21249f1a 	teqcs	r4, sl, lsl pc
    5018:	212c0800 	teqcs	ip, r0, lsl #16
    501c:	00010800 	andeq	r0, r1, r0, lsl #16
    5020:	00212c53 	eoreq	r2, r1, r3, asr ip
    5024:	00213108 	eoreq	r3, r1, r8, lsl #2
    5028:	74000808 	strvc	r0, [r0], #-2056	; 0x808
    502c:	08019408 	stmdaeq	r1, {r3, sl, ip, pc}
    5030:	349f1aff 	ldrcc	r1, [pc], #2815	; 5038 <__Stack_Size+0x4c38>
    5034:	3c080021 	stccc	0, cr0, [r8], {33}	; 0x21
    5038:	01080021 	tsteq	r8, r1, lsr #32
    503c:	00005300 	andeq	r5, r0, r0, lsl #6
    5040:	00000000 	andeq	r0, r0, r0
    5044:	20a40000 	adccs	r0, r4, r0
    5048:	21260800 	teqcs	r6, r0, lsl #16
    504c:	00030800 	andeq	r0, r3, r0, lsl #16
    5050:	009f1074 	addseq	r1, pc, r4, ror r0	; <UNPREDICTABLE>
    5054:	00000000 	andeq	r0, r0, r0
    5058:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    505c:	b7080020 	strlt	r0, [r8, -r0, lsr #32]
    5060:	01080020 	tsteq	r8, r0, lsr #32
    5064:	00005300 	andeq	r5, r0, r0, lsl #6
    5068:	00000000 	andeq	r0, r0, r0
    506c:	20bc0000 	adcscs	r0, ip, r0
    5070:	20c40800 	sbccs	r0, r4, r0, lsl #16
    5074:	00010800 	andeq	r0, r1, r0, lsl #16
    5078:	0020c450 	eoreq	ip, r0, r0, asr r4
    507c:	0020d608 	eoreq	sp, r0, r8, lsl #12
    5080:	57000108 	strpl	r0, [r0, -r8, lsl #2]
	...
    508c:	080020ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sp}
    5090:	080020b4 	stmdaeq	r0, {r2, r4, r5, r7, sp}
    5094:	00760016 	rsbseq	r0, r6, r6, lsl r0
    5098:	244b4012 	strbcs	r4, [fp], #-18
    509c:	16007322 	strne	r7, [r0], -r2, lsr #6
    50a0:	244b4014 	strbcs	r4, [fp], #-20
    50a4:	01282d22 	teqeq	r8, r2, lsr #26
    50a8:	9f131600 	svcls	0x00131600
    50ac:	080020b4 	stmdaeq	r0, {r2, r4, r5, r7, sp}
    50b0:	080020b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, sp}
    50b4:	1474001c 	ldrbtne	r0, [r4], #-28
    50b8:	ff0a0294 			; <UNDEFINED> instruction: 0xff0a0294
    50bc:	40121aff 			; <UNDEFINED> instruction: 0x40121aff
    50c0:	7322244b 	teqvc	r2, #1258291200	; 0x4b000000
    50c4:	40141600 	andsmi	r1, r4, r0, lsl #12
    50c8:	2d22244b 	cfstrscs	mvf2, [r2, #-300]!	; 0xfffffed4
    50cc:	16000128 	strne	r0, [r0], -r8, lsr #2
    50d0:	00009f13 	andeq	r9, r0, r3, lsl pc
    50d4:	00000000 	andeq	r0, r0, r0
    50d8:	21580000 	cmpcs	r8, r0
    50dc:	218c0800 	orrcs	r0, ip, r0, lsl #16
    50e0:	00010800 	andeq	r0, r1, r0, lsl #16
    50e4:	00218c50 	eoreq	r8, r1, r0, asr ip
    50e8:	00219808 	eoreq	r9, r1, r8, lsl #16
    50ec:	f3000408 	vshl.u8	d0, d8, d0
    50f0:	009f5001 	addseq	r5, pc, r1
    50f4:	00000000 	andeq	r0, r0, r0
    50f8:	60000000 	andvs	r0, r0, r0
    50fc:	90080021 	andls	r0, r8, r1, lsr #32
    5100:	01080021 	tsteq	r8, r1, lsr #32
    5104:	00005500 	andeq	r5, r0, r0, lsl #10
    5108:	00000000 	andeq	r0, r0, r0
    510c:	21a00000 	movcs	r0, r0
    5110:	21ab0800 			; <UNDEFINED> instruction: 0x21ab0800
    5114:	00010800 	andeq	r0, r1, r0, lsl #16
    5118:	0021b052 	eoreq	fp, r1, r2, asr r0
    511c:	0021b208 	eoreq	fp, r1, r8, lsl #4
    5120:	53000108 	movwpl	r0, #264	; 0x108
    5124:	080021b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, sp}
    5128:	080021b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sp}
    512c:	b8520001 	ldmdalt	r2, {r0}^
    5130:	c7080021 	strgt	r0, [r8, -r1, lsr #32]
    5134:	08080021 	stmdaeq	r8, {r0, r5}
    5138:	94087300 	strls	r7, [r8], #-768	; 0x300
    513c:	1aff0801 	bne	fffc7148 <SCS_BASE+0x1ffb9148>
    5140:	0021da9f 	mlaeq	r1, pc, sl, sp	; <UNPREDICTABLE>
    5144:	0021e508 	eoreq	lr, r1, r8, lsl #10
    5148:	53000108 	movwpl	r0, #264	; 0x108
	...
    5154:	080021f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sp}
    5158:	0800220e 	stmdaeq	r0, {r1, r2, r3, r9, sp}
    515c:	0e500001 	cdpeq	0, 5, cr0, cr0, cr1, {0}
    5160:	10080022 	andne	r0, r8, r2, lsr #32
    5164:	03080022 	movweq	r0, #32802	; 0x8022
    5168:	9f7e7000 	svcls	0x007e7000
    516c:	08002210 	stmdaeq	r0, {r4, r9, sp}
    5170:	08002220 	stmdaeq	r0, {r5, r9, sp}
    5174:	7f700003 	svcvc	0x00700003
    5178:	0022209f 	mlaeq	r2, pc, r0, r2	; <UNPREDICTABLE>
    517c:	00222408 	eoreq	r2, r2, r8, lsl #8
    5180:	50000108 	andpl	r0, r0, r8, lsl #2
    5184:	08002224 	stmdaeq	r0, {r2, r5, r9, sp}
    5188:	08002226 	stmdaeq	r0, {r1, r2, r5, r9, sp}
    518c:	7e700003 	cdpvc	0, 7, cr0, cr0, cr3, {0}
    5190:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5194:	00000000 	andeq	r0, r0, r0
    5198:	0021f600 	eoreq	pc, r1, r0, lsl #12
    519c:	0021fc08 	eoreq	pc, r1, r8, lsl #24
    51a0:	51000108 	tstpl	r0, r8, lsl #2
    51a4:	080021fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sp}
    51a8:	08002226 	stmdaeq	r0, {r1, r2, r5, r9, sp}
    51ac:	01f30004 	mvnseq	r0, r4
    51b0:	00009f51 	andeq	r9, r0, r1, asr pc
    51b4:	00000000 	andeq	r0, r0, r0
    51b8:	21f60000 	mvnscs	r0, r0
    51bc:	21fe0800 	mvnscs	r0, r0, lsl #16
    51c0:	00010800 	andeq	r0, r1, r0, lsl #16
    51c4:	0021fe52 	eoreq	pc, r1, r2, asr lr	; <UNPREDICTABLE>
    51c8:	00222608 	eoreq	r2, r2, r8, lsl #12
    51cc:	f3000408 	vshl.u8	d0, d8, d0
    51d0:	009f5201 	addseq	r5, pc, r1, lsl #4
    51d4:	00000000 	andeq	r0, r0, r0
    51d8:	06000000 	streq	r0, [r0], -r0
    51dc:	08080022 	stmdaeq	r8, {r1, r5}
    51e0:	01080022 	tsteq	r8, r2, lsr #32
    51e4:	22085200 	andcs	r5, r8, #0, 4
    51e8:	22200800 	eorcs	r0, r0, #0, 16
    51ec:	000f0800 	andeq	r0, pc, r0, lsl #16
    51f0:	0a5201f3 	beq	14859c4 <__Stack_Size+0x14855c4>
    51f4:	231affff 	tstcs	sl, #1020	; 0x3fc
    51f8:	73263101 	teqvc	r6, #1073741824	; 0x40000000
    51fc:	209f1c00 	addscs	r1, pc, r0, lsl #24
    5200:	22080022 	andcs	r0, r8, #34	; 0x22
    5204:	10080022 	andne	r0, r8, r2, lsr #32
    5208:	5201f300 	andpl	pc, r1, #0, 6
    520c:	1affff0a 	bne	4e3c <__Stack_Size+0x4a3c>
    5210:	26310123 	ldrtcs	r0, [r1], -r3, lsr #2
    5214:	22200073 	eorcs	r0, r0, #115	; 0x73
    5218:	0022229f 	mlaeq	r2, pc, r2, r2	; <UNPREDICTABLE>
    521c:	00222608 	eoreq	r2, r2, r8, lsl #12
    5220:	f3000f08 	vpmax.f32	d0, d0, d8
    5224:	ff0a5201 			; <UNDEFINED> instruction: 0xff0a5201
    5228:	01231aff 	strdeq	r1, [r3, -pc]!
    522c:	00732631 	rsbseq	r2, r3, r1, lsr r6
    5230:	00009f1c 	andeq	r9, r0, ip, lsl pc
    5234:	00000000 	andeq	r0, r0, r0
    5238:	22100000 	andscs	r0, r0, #0
    523c:	22180800 	andscs	r0, r8, #0, 16
    5240:	00080800 	andeq	r0, r8, r0, lsl #16
    5244:	01947e70 	orrseq	r7, r4, r0, ror lr
    5248:	9f1aff08 	svcls	0x001aff08
    524c:	08002218 	stmdaeq	r0, {r3, r4, r9, sp}
    5250:	0800221c 	stmdaeq	r0, {r2, r3, r4, r9, sp}
    5254:	1c540001 	mrrcne	0, 0, r0, r4, cr1
    5258:	20080022 	andcs	r0, r8, r2, lsr #32
    525c:	08080022 	stmdaeq	r8, {r1, r5}
    5260:	947e7000 	ldrbtls	r7, [lr], #-0
    5264:	1aff0801 	bne	fffc7270 <SCS_BASE+0x1ffb9270>
    5268:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    526c:	00000000 	andeq	r0, r0, r0
    5270:	00221000 	eoreq	r1, r2, r0
    5274:	00222008 	eoreq	r2, r2, r8
    5278:	70001208 	andvc	r1, r0, r8, lsl #4
    527c:	0801947f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, sl, ip, pc}
    5280:	24381aff 	ldrtcs	r1, [r8], #-2815	; 0xaff
    5284:	01947e70 	orrseq	r7, r4, r0, ror lr
    5288:	211aff08 	tstcs	sl, r8, lsl #30
    528c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5290:	00000000 	andeq	r0, r0, r0
    5294:	00220600 	eoreq	r0, r2, r0, lsl #12
    5298:	00220808 	eoreq	r0, r2, r8, lsl #16
    529c:	51000108 	tstpl	r0, r8, lsl #2
    52a0:	08002220 	stmdaeq	r0, {r5, r9, sp}
    52a4:	08002222 	stmdaeq	r0, {r1, r5, r9, sp}
    52a8:	0073000a 	rsbseq	r0, r3, sl
    52ac:	00712432 	rsbseq	r2, r1, r2, lsr r4
    52b0:	9f042322 	svcls	0x00042322
    52b4:	08002222 	stmdaeq	r0, {r1, r5, r9, sp}
    52b8:	08002224 	stmdaeq	r0, {r2, r5, r9, sp}
    52bc:	7f73000a 	svcvc	0x0073000a
    52c0:	00712432 	rsbseq	r2, r1, r2, lsr r4
    52c4:	9f042322 	svcls	0x00042322
	...
    52d0:	08002226 	stmdaeq	r0, {r1, r2, r5, r9, sp}
    52d4:	08002238 	stmdaeq	r0, {r3, r4, r5, r9, sp}
    52d8:	44500001 	ldrbmi	r0, [r0], #-1
    52dc:	46080022 	strmi	r0, [r8], -r2, lsr #32
    52e0:	08080022 	stmdaeq	r8, {r1, r5}
    52e4:	31017300 	mrscc	r7, SP_irq
    52e8:	22007024 	andcs	r7, r0, #36	; 0x24
    52ec:	0022469f 	mlaeq	r2, pc, r6, r4	; <UNPREDICTABLE>
    52f0:	00224808 	eoreq	r4, r2, r8, lsl #16
    52f4:	73000808 	movwvc	r0, #2056	; 0x808
    52f8:	70243100 	eorvc	r3, r4, r0, lsl #2
    52fc:	009f2200 	addseq	r2, pc, r0, lsl #4
    5300:	00000000 	andeq	r0, r0, r0
    5304:	26000000 	strcs	r0, [r0], -r0
    5308:	2c080022 	stccs	0, cr0, [r8], {34}	; 0x22
    530c:	01080022 	tsteq	r8, r2, lsr #32
    5310:	222c5100 	eorcs	r5, ip, #0, 2
    5314:	224a0800 	subcs	r0, sl, #0, 16
    5318:	00040800 	andeq	r0, r4, r0, lsl #16
    531c:	9f5101f3 	svcls	0x005101f3
	...
    5328:	08002226 	stmdaeq	r0, {r1, r2, r5, r9, sp}
    532c:	0800222e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sp}
    5330:	2e520001 	cdpcs	0, 5, cr0, cr2, cr1, {0}
    5334:	4a080022 	bmi	2053c4 <__Stack_Size+0x204fc4>
    5338:	04080022 	streq	r0, [r8], #-34	; 0x22
    533c:	5201f300 	andpl	pc, r1, #0, 6
    5340:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5344:	00000000 	andeq	r0, r0, r0
    5348:	00223600 	eoreq	r3, r2, r0, lsl #12
    534c:	00223808 	eoreq	r3, r2, r8, lsl #16
    5350:	52000108 	andpl	r0, r0, #8, 2
    5354:	08002238 	stmdaeq	r0, {r3, r4, r5, r9, sp}
    5358:	08002244 	stmdaeq	r0, {r2, r6, r9, sp}
    535c:	01f3000f 	mvnseq	r0, pc
    5360:	ffff0a52 			; <UNDEFINED> instruction: 0xffff0a52
    5364:	3101231a 	tstcc	r1, sl, lsl r3
    5368:	1c007326 	stcne	3, cr7, [r0], {38}	; 0x26
    536c:	0022449f 	mlaeq	r2, pc, r4, r4	; <UNPREDICTABLE>
    5370:	00224608 	eoreq	r4, r2, r8, lsl #12
    5374:	f3001008 	vhadd.u8	d1, d0, d8
    5378:	ff0a5201 			; <UNDEFINED> instruction: 0xff0a5201
    537c:	01231aff 	strdeq	r1, [r3, -pc]!
    5380:	00732631 	rsbseq	r2, r3, r1, lsr r6
    5384:	469f2220 	ldrmi	r2, [pc], r0, lsr #4
    5388:	4a080022 	bmi	205418 <__Stack_Size+0x205018>
    538c:	0f080022 	svceq	0x00080022
    5390:	5201f300 	andpl	pc, r1, #0, 6
    5394:	1affff0a 	bne	4fc4 <__Stack_Size+0x4bc4>
    5398:	26310123 	ldrtcs	r0, [r1], -r3, lsr #2
    539c:	9f1c0073 	svcls	0x001c0073
	...
    53a8:	08002236 	stmdaeq	r0, {r1, r2, r4, r5, r9, sp}
    53ac:	08002238 	stmdaeq	r0, {r3, r4, r5, r9, sp}
    53b0:	3c510001 	mrrccc	0, 0, r0, r1, cr1
    53b4:	46080022 	strmi	r0, [r8], -r2, lsr #32
    53b8:	0a080022 	beq	205448 <__Stack_Size+0x205048>
    53bc:	32007300 	andcc	r7, r0, #0, 6
    53c0:	22007124 	andcs	r7, r0, #36, 2
    53c4:	469f0423 	ldrmi	r0, [pc], r3, lsr #8
    53c8:	48080022 	stmdami	r8, {r1, r5}
    53cc:	0a080022 	beq	20545c <__Stack_Size+0x20505c>
    53d0:	327f7300 	rsbscc	r7, pc, #0, 6
    53d4:	22007124 	andcs	r7, r0, #36, 2
    53d8:	009f0423 	addseq	r0, pc, r3, lsr #8
	...
    53e8:	01000000 	mrseq	r0, (UNDEF: 0)
    53ec:	00005000 	andeq	r5, r0, r0
    53f0:	00000000 	andeq	r0, r0, r0
    53f4:	00040000 	andeq	r0, r4, r0
    53f8:	9f5001f3 	svcls	0x005001f3
	...
    540c:	00500001 	subseq	r0, r0, r1
    5410:	00000000 	andeq	r0, r0, r0
    5414:	04000000 	streq	r0, [r0], #-0
    5418:	5001f300 	andpl	pc, r1, r0, lsl #6
    541c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5420:	00000000 	andeq	r0, r0, r0
    5424:	00225c00 	eoreq	r5, r2, r0, lsl #24
    5428:	00225e08 	eoreq	r5, r2, r8, lsl #28
    542c:	50000108 	andpl	r0, r0, r8, lsl #2
    5430:	0800225e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r9, sp}
    5434:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
    5438:	01f30004 	mvnseq	r0, r4
    543c:	00009f50 	andeq	r9, r0, r0, asr pc
    5440:	00000000 	andeq	r0, r0, r0
    5444:	225c0000 	subscs	r0, ip, #0
    5448:	22720800 	rsbscs	r0, r2, #0, 16
    544c:	00010800 	andeq	r0, r1, r0, lsl #16
    5450:	00227251 	eoreq	r7, r2, r1, asr r2
    5454:	00227808 	eoreq	r7, r2, r8, lsl #16
    5458:	f3000408 	vshl.u8	d0, d8, d0
    545c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    546c:	01000000 	mrseq	r0, (UNDEF: 0)
    5470:	00005000 	andeq	r5, r0, r0
    5474:	00000000 	andeq	r0, r0, r0
    5478:	00040000 	andeq	r0, r4, r0
    547c:	9f5001f3 	svcls	0x005001f3
	...
    5488:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
    548c:	0800227a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, sp}
    5490:	7a500001 	bvc	140549c <__Stack_Size+0x140509c>
    5494:	aa080022 	bge	205524 <__Stack_Size+0x205124>
    5498:	04080022 	streq	r0, [r8], #-34	; 0x22
    549c:	5001f300 	andpl	pc, r1, r0, lsl #6
    54a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    54a4:	00000000 	andeq	r0, r0, r0
    54a8:	00229000 	eoreq	r9, r2, r0
    54ac:	0022a208 	eoreq	sl, r2, r8, lsl #4
    54b0:	53000108 	movwpl	r0, #264	; 0x108
	...
    54bc:	080022aa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sp}
    54c0:	080022ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sp}
    54c4:	ac500001 	mrrcge	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    54c8:	dc080022 	stcle	0, cr0, [r8], {34}	; 0x22
    54cc:	04080022 	streq	r0, [r8], #-34	; 0x22
    54d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    54d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    54d8:	00000000 	andeq	r0, r0, r0
    54dc:	0022c200 	eoreq	ip, r2, r0, lsl #4
    54e0:	0022d408 	eoreq	sp, r2, r8, lsl #8
    54e4:	53000108 	movwpl	r0, #264	; 0x108
	...
    54f8:	00500001 	subseq	r0, r0, r1
    54fc:	00000000 	andeq	r0, r0, r0
    5500:	04000000 	streq	r0, [r0], #-0
    5504:	5001f300 	andpl	pc, r1, r0, lsl #6
    5508:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5518:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5524:	01f30004 	mvnseq	r0, r4
    5528:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5538:	00010000 	andeq	r0, r1, r0
    553c:	00000050 	andeq	r0, r0, r0, asr r0
    5540:	00000000 	andeq	r0, r0, r0
    5544:	f3000400 	vshl.u8	d0, d0, d0
    5548:	009f5001 	addseq	r5, pc, r1
    554c:	00000000 	andeq	r0, r0, r0
    5550:	dc000000 	stcle	0, cr0, [r0], {-0}
    5554:	de080022 	cdple	0, 0, cr0, cr8, cr2, {1}
    5558:	01080022 	tsteq	r8, r2, lsr #32
    555c:	22de5000 	sbcscs	r5, lr, #0
    5560:	23020800 	movwcs	r0, #10240	; 0x2800
    5564:	00040800 	andeq	r0, r4, r0, lsl #16
    5568:	9f5001f3 	svcls	0x005001f3
	...
    5574:	080022f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, sp}
    5578:	080022f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sp}
    557c:	00730006 	rsbseq	r0, r3, r6
    5580:	9f273008 	svcls	0x00273008
    5584:	080022f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sp}
    5588:	080022fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, sp}
    558c:	00730009 	rsbseq	r0, r3, r9
    5590:	08273008 	stmdaeq	r7!, {r3, ip, sp}
    5594:	009f2730 	addseq	r2, pc, r0, lsr r7	; <UNPREDICTABLE>
    5598:	00000000 	andeq	r0, r0, r0
    559c:	02000000 	andeq	r0, r0, #0
    55a0:	04080023 	streq	r0, [r8], #-35	; 0x23
    55a4:	01080023 	tsteq	r8, r3, lsr #32
    55a8:	23045000 	movwcs	r5, #16384	; 0x4000
    55ac:	23280800 	teqcs	r8, #0, 16
    55b0:	00040800 	andeq	r0, r4, r0, lsl #16
    55b4:	9f5001f3 	svcls	0x005001f3
	...
    55c0:	08002318 	stmdaeq	r0, {r3, r4, r8, r9, sp}
    55c4:	0800231c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sp}
    55c8:	00730007 	rsbseq	r0, r3, r7
    55cc:	2730000a 	ldrcs	r0, [r0, -sl]!
    55d0:	00231c9f 	mlaeq	r3, pc, ip, r1	; <UNPREDICTABLE>
    55d4:	00232008 	eoreq	r2, r3, r8
    55d8:	73000b08 	movwvc	r0, #2824	; 0xb08
    55dc:	30000a00 	andcc	r0, r0, r0, lsl #20
    55e0:	30000a27 	andcc	r0, r0, r7, lsr #20
    55e4:	00009f27 	andeq	r9, r0, r7, lsr #30
	...
    55f4:	00010000 	andeq	r0, r1, r0
    55f8:	00000050 	andeq	r0, r0, r0, asr r0
    55fc:	00000000 	andeq	r0, r0, r0
    5600:	f3000400 	vshl.u8	d0, d0, d0
    5604:	009f5001 	addseq	r5, pc, r1
	...
    5614:	01000000 	mrseq	r0, (UNDEF: 0)
    5618:	00005000 	andeq	r5, r0, r0
    561c:	00000000 	andeq	r0, r0, r0
    5620:	00040000 	andeq	r0, r4, r0
    5624:	9f5001f3 	svcls	0x005001f3
	...
    5630:	08002328 	stmdaeq	r0, {r3, r5, r8, r9, sp}
    5634:	0800232a 	stmdaeq	r0, {r1, r3, r5, r8, r9, sp}
    5638:	2a500001 	bcs	1405644 <__Stack_Size+0x1405244>
    563c:	48080023 	stmdami	r8, {r0, r1, r5}
    5640:	04080023 	streq	r0, [r8], #-35	; 0x23
    5644:	5001f300 	andpl	pc, r1, r0, lsl #6
    5648:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5658:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5664:	01f30004 	mvnseq	r0, r4
    5668:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5678:	00010000 	andeq	r0, r1, r0
    567c:	00000050 	andeq	r0, r0, r0, asr r0
    5680:	00000000 	andeq	r0, r0, r0
    5684:	f3000400 	vshl.u8	d0, d0, d0
    5688:	009f5001 	addseq	r5, pc, r1
	...
    5698:	01000000 	mrseq	r0, (UNDEF: 0)
    569c:	00005000 	andeq	r5, r0, r0
    56a0:	00000000 	andeq	r0, r0, r0
    56a4:	00040000 	andeq	r0, r4, r0
    56a8:	9f5001f3 	svcls	0x005001f3
	...
    56bc:	00500001 	subseq	r0, r0, r1
    56c0:	00000000 	andeq	r0, r0, r0
    56c4:	04000000 	streq	r0, [r0], #-0
    56c8:	5001f300 	andpl	pc, r1, r0, lsl #6
    56cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    56dc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    56e8:	01f30004 	mvnseq	r0, r4
    56ec:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    56fc:	00010000 	andeq	r0, r1, r0
    5700:	00000050 	andeq	r0, r0, r0, asr r0
    5704:	00000000 	andeq	r0, r0, r0
    5708:	f3000400 	vshl.u8	d0, d0, d0
    570c:	009f5001 	addseq	r5, pc, r1
	...
    571c:	01000000 	mrseq	r0, (UNDEF: 0)
    5720:	00005000 	andeq	r5, r0, r0
    5724:	00000000 	andeq	r0, r0, r0
    5728:	00040000 	andeq	r0, r4, r0
    572c:	9f5001f3 	svcls	0x005001f3
	...
    5740:	00500001 	subseq	r0, r0, r1
    5744:	00000000 	andeq	r0, r0, r0
    5748:	04000000 	streq	r0, [r0], #-0
    574c:	5001f300 	andpl	pc, r1, r0, lsl #6
    5750:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5760:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    576c:	01f30004 	mvnseq	r0, r4
    5770:	00009f50 	andeq	r9, r0, r0, asr pc
    5774:	00000000 	andeq	r0, r0, r0
    5778:	23480000 	movtcs	r0, #32768	; 0x8000
    577c:	234a0800 	movtcs	r0, #43008	; 0xa800
    5780:	00010800 	andeq	r0, r1, r0, lsl #16
    5784:	00234a50 	eoreq	r4, r3, r0, asr sl
    5788:	00236e08 	eoreq	r6, r3, r8, lsl #28
    578c:	f3000408 	vshl.u8	d0, d8, d0
    5790:	009f5001 	addseq	r5, pc, r1
    5794:	00000000 	andeq	r0, r0, r0
    5798:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    579c:	70080023 	andvc	r0, r8, r3, lsr #32
    57a0:	01080023 	tsteq	r8, r3, lsr #32
    57a4:	23705000 	cmncs	r0, #0
    57a8:	23940800 	orrscs	r0, r4, #0, 16
    57ac:	00040800 	andeq	r0, r4, r0, lsl #16
    57b0:	9f5001f3 	svcls	0x005001f3
	...
    57c4:	00500001 	subseq	r0, r0, r1
    57c8:	00000000 	andeq	r0, r0, r0
    57cc:	04000000 	streq	r0, [r0], #-0
    57d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    57d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    57e4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    57f0:	01f30004 	mvnseq	r0, r4
    57f4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5804:	00010000 	andeq	r0, r1, r0
    5808:	00000050 	andeq	r0, r0, r0, asr r0
    580c:	00000000 	andeq	r0, r0, r0
    5810:	f3000400 	vshl.u8	d0, d0, d0
    5814:	009f5001 	addseq	r5, pc, r1
    5818:	00000000 	andeq	r0, r0, r0
    581c:	94000000 	strls	r0, [r0], #-0
    5820:	a2080023 	andge	r0, r8, #35	; 0x23
    5824:	01080023 	tsteq	r8, r3, lsr #32
    5828:	23a25000 			; <UNDEFINED> instruction: 0x23a25000
    582c:	23b40800 			; <UNDEFINED> instruction: 0x23b40800
    5830:	00040800 	andeq	r0, r4, r0, lsl #16
    5834:	9f5001f3 	svcls	0x005001f3
	...
    5840:	08002394 	stmdaeq	r0, {r2, r4, r7, r8, r9, sp}
    5844:	08002398 	stmdaeq	r0, {r3, r4, r7, r8, r9, sp}
    5848:	98510001 	ldmdals	r1, {r0}^
    584c:	b4080023 	strlt	r0, [r8], #-35	; 0x23
    5850:	04080023 	streq	r0, [r8], #-35	; 0x23
    5854:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5858:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    585c:	00000000 	andeq	r0, r0, r0
    5860:	0023b400 	eoreq	fp, r3, r0, lsl #8
    5864:	0023c208 	eoreq	ip, r3, r8, lsl #4
    5868:	50000108 	andpl	r0, r0, r8, lsl #2
    586c:	080023c2 	stmdaeq	r0, {r1, r6, r7, r8, r9, sp}
    5870:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
    5874:	01f30004 	mvnseq	r0, r4
    5878:	00009f50 	andeq	r9, r0, r0, asr pc
    587c:	00000000 	andeq	r0, r0, r0
    5880:	23b40000 			; <UNDEFINED> instruction: 0x23b40000
    5884:	23b80800 			; <UNDEFINED> instruction: 0x23b80800
    5888:	00010800 	andeq	r0, r1, r0, lsl #16
    588c:	0023b851 	eoreq	fp, r3, r1, asr r8
    5890:	0023d408 	eoreq	sp, r3, r8, lsl #8
    5894:	f3000408 	vshl.u8	d0, d8, d0
    5898:	009f5101 	addseq	r5, pc, r1, lsl #2
    589c:	00000000 	andeq	r0, r0, r0
    58a0:	d4000000 	strle	r0, [r0], #-0
    58a4:	de080023 	cdple	0, 0, cr0, cr8, cr3, {1}
    58a8:	01080023 	tsteq	r8, r3, lsr #32
    58ac:	23de5000 	bicscs	r5, lr, #0
    58b0:	23f40800 	mvnscs	r0, #0, 16
    58b4:	00040800 	andeq	r0, r4, r0, lsl #16
    58b8:	9f5001f3 	svcls	0x005001f3
	...
    58c4:	080023f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sp}
    58c8:	080023fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sp}
    58cc:	fe500001 	cdp2	0, 5, cr0, cr0, cr1, {0}
    58d0:	14080023 	strne	r0, [r8], #-35	; 0x23
    58d4:	04080024 	streq	r0, [r8], #-36	; 0x24
    58d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    58dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    58e0:	00000000 	andeq	r0, r0, r0
    58e4:	00241400 	eoreq	r1, r4, r0, lsl #8
    58e8:	00241e08 	eoreq	r1, r4, r8, lsl #28
    58ec:	50000108 	andpl	r0, r0, r8, lsl #2
    58f0:	0800241e 	stmdaeq	r0, {r1, r2, r3, r4, sl, sp}
    58f4:	08002430 	stmdaeq	r0, {r4, r5, sl, sp}
    58f8:	01f30004 	mvnseq	r0, r4
    58fc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    590c:	00010000 	andeq	r0, r1, r0
    5910:	00000051 	andeq	r0, r0, r1, asr r0
    5914:	00000000 	andeq	r0, r0, r0
    5918:	f3000400 	vshl.u8	d0, d0, d0
    591c:	009f5101 	addseq	r5, pc, r1, lsl #2
    5920:	00000000 	andeq	r0, r0, r0
    5924:	01000000 	mrseq	r0, (UNDEF: 0)
    5928:	00005100 	andeq	r5, r0, r0, lsl #2
    592c:	00000000 	andeq	r0, r0, r0
    5930:	00040000 	andeq	r0, r4, r0
    5934:	9f5101f3 	svcls	0x005101f3
	...
    5948:	00530001 	subseq	r0, r3, r1
    594c:	00000000 	andeq	r0, r0, r0
    5950:	01000000 	mrseq	r0, (UNDEF: 0)
    5954:	00005300 	andeq	r5, r0, r0, lsl #6
    5958:	00000000 	andeq	r0, r0, r0
    595c:	00010000 	andeq	r0, r1, r0
    5960:	00000053 	andeq	r0, r0, r3, asr r0
    5964:	00000000 	andeq	r0, r0, r0
    5968:	00243000 	eoreq	r3, r4, r0
    596c:	00243c08 	eoreq	r3, r4, r8, lsl #24
    5970:	50000108 	andpl	r0, r0, r8, lsl #2
    5974:	0800243c 	stmdaeq	r0, {r2, r3, r4, r5, sl, sp}
    5978:	08002470 	stmdaeq	r0, {r4, r5, r6, sl, sp}
    597c:	01f30004 	mvnseq	r0, r4
    5980:	00009f50 	andeq	r9, r0, r0, asr pc
    5984:	00000000 	andeq	r0, r0, r0
    5988:	24300000 	ldrtcs	r0, [r0], #-0
    598c:	245e0800 	ldrbcs	r0, [lr], #-2048	; 0x800
    5990:	00010800 	andeq	r0, r1, r0, lsl #16
    5994:	00245e51 	eoreq	r5, r4, r1, asr lr
    5998:	00247008 	eoreq	r7, r4, r8
    599c:	f3000408 	vshl.u8	d0, d8, d0
    59a0:	009f5101 	addseq	r5, pc, r1, lsl #2
    59a4:	00000000 	andeq	r0, r0, r0
    59a8:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    59ac:	50080024 	andpl	r0, r8, r4, lsr #32
    59b0:	01080024 	tsteq	r8, r4, lsr #32
    59b4:	24505300 	ldrbcs	r5, [r0], #-768	; 0x300
    59b8:	24520800 	ldrbcs	r0, [r2], #-2048	; 0x800
    59bc:	00050800 	andeq	r0, r5, r0, lsl #16
    59c0:	25350071 	ldrcs	r0, [r5, #-113]!	; 0x71
    59c4:	0024529f 	mlaeq	r4, pc, r2, r5	; <UNPREDICTABLE>
    59c8:	00245408 	eoreq	r5, r4, r8, lsl #8
    59cc:	53000108 	movwpl	r0, #264	; 0x108
    59d0:	0800245c 	stmdaeq	r0, {r2, r3, r4, r6, sl, sp}
    59d4:	08002464 	stmdaeq	r0, {r2, r5, r6, sl, sp}
    59d8:	00530001 	subseq	r0, r3, r1
	...
    59e8:	01000000 	mrseq	r0, (UNDEF: 0)
    59ec:	00005000 	andeq	r5, r0, r0
    59f0:	00000000 	andeq	r0, r0, r0
    59f4:	00040000 	andeq	r0, r4, r0
    59f8:	9f5001f3 	svcls	0x005001f3
	...
    5a04:	08002470 	stmdaeq	r0, {r4, r5, r6, sl, sp}
    5a08:	0800247a 	stmdaeq	r0, {r1, r3, r4, r5, r6, sl, sp}
    5a0c:	7a500001 	bvc	1405a18 <__Stack_Size+0x1405618>
    5a10:	90080024 	andls	r0, r8, r4, lsr #32
    5a14:	04080024 	streq	r0, [r8], #-36	; 0x24
    5a18:	5001f300 	andpl	pc, r1, r0, lsl #6
    5a1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5a2c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5a38:	01f30004 	mvnseq	r0, r4
    5a3c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5a4c:	00010000 	andeq	r0, r1, r0
    5a50:	00000051 	andeq	r0, r0, r1, asr r0
    5a54:	00000000 	andeq	r0, r0, r0
    5a58:	f3000400 	vshl.u8	d0, d0, d0
    5a5c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5a6c:	01000000 	mrseq	r0, (UNDEF: 0)
    5a70:	00005200 	andeq	r5, r0, r0, lsl #4
    5a74:	00000000 	andeq	r0, r0, r0
    5a78:	00040000 	andeq	r0, r4, r0
    5a7c:	9f5201f3 	svcls	0x005201f3
	...
    5a90:	00500001 	subseq	r0, r0, r1
    5a94:	00000000 	andeq	r0, r0, r0
    5a98:	04000000 	streq	r0, [r0], #-0
    5a9c:	5001f300 	andpl	pc, r1, r0, lsl #6
    5aa0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5ab0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5abc:	01f30004 	mvnseq	r0, r4
    5ac0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5ad0:	00010000 	andeq	r0, r1, r0
    5ad4:	00000050 	andeq	r0, r0, r0, asr r0
    5ad8:	00000000 	andeq	r0, r0, r0
    5adc:	f3000400 	vshl.u8	d0, d0, d0
    5ae0:	009f5001 	addseq	r5, pc, r1
	...
    5af0:	01000000 	mrseq	r0, (UNDEF: 0)
    5af4:	00005100 	andeq	r5, r0, r0, lsl #2
    5af8:	00000000 	andeq	r0, r0, r0
    5afc:	00040000 	andeq	r0, r4, r0
    5b00:	9f5101f3 	svcls	0x005101f3
	...
    5b14:	00500001 	subseq	r0, r0, r1
    5b18:	00000000 	andeq	r0, r0, r0
    5b1c:	04000000 	streq	r0, [r0], #-0
    5b20:	5001f300 	andpl	pc, r1, r0, lsl #6
    5b24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5b34:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5b40:	01f30004 	mvnseq	r0, r4
    5b44:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5b54:	00010000 	andeq	r0, r1, r0
    5b58:	00000050 	andeq	r0, r0, r0, asr r0
    5b5c:	00000000 	andeq	r0, r0, r0
    5b60:	f3000400 	vshl.u8	d0, d0, d0
    5b64:	009f5001 	addseq	r5, pc, r1
    5b68:	00000000 	andeq	r0, r0, r0
    5b6c:	01000000 	mrseq	r0, (UNDEF: 0)
    5b70:	00005000 	andeq	r5, r0, r0
    5b74:	00000000 	andeq	r0, r0, r0
    5b78:	00040000 	andeq	r0, r4, r0
    5b7c:	9f5001f3 	svcls	0x005001f3
	...
    5b88:	00500001 	subseq	r0, r0, r1
	...
    5b98:	01000000 	mrseq	r0, (UNDEF: 0)
    5b9c:	00005100 	andeq	r5, r0, r0, lsl #2
    5ba0:	00000000 	andeq	r0, r0, r0
    5ba4:	00040000 	andeq	r0, r4, r0
    5ba8:	9f5101f3 	svcls	0x005101f3
	...
    5bb4:	00510001 	subseq	r0, r1, r1
    5bb8:	00000000 	andeq	r0, r0, r0
    5bbc:	04000000 	streq	r0, [r0], #-0
    5bc0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5bc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5bc8:	00000000 	andeq	r0, r0, r0
    5bcc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5be0:	00520001 	subseq	r0, r2, r1
    5be4:	00000000 	andeq	r0, r0, r0
    5be8:	04000000 	streq	r0, [r0], #-0
    5bec:	5201f300 	andpl	pc, r1, #0, 6
    5bf0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5bf4:	00000000 	andeq	r0, r0, r0
    5bf8:	52000100 	andpl	r0, r0, #0, 2
	...
    5c0c:	00510001 	subseq	r0, r1, r1
	...
    5c1c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c20:	00005300 	andeq	r5, r0, r0, lsl #6
    5c24:	00000000 	andeq	r0, r0, r0
    5c28:	00050000 	andeq	r0, r5, r0
    5c2c:	25350072 	ldrcs	r0, [r5, #-114]!	; 0x72
    5c30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5c34:	00000000 	andeq	r0, r0, r0
    5c38:	53000100 	movwpl	r0, #256	; 0x100
	...
    5c44:	00530001 	subseq	r0, r3, r1
	...
    5c54:	01000000 	mrseq	r0, (UNDEF: 0)
    5c58:	00005100 	andeq	r5, r0, r0, lsl #2
    5c5c:	00000000 	andeq	r0, r0, r0
    5c60:	00010000 	andeq	r0, r1, r0
    5c64:	00000051 	andeq	r0, r0, r1, asr r0
	...
    5c74:	53000100 	movwpl	r0, #256	; 0x100
	...
    5c80:	00720005 	rsbseq	r0, r2, r5
    5c84:	009f2535 	addseq	r2, pc, r5, lsr r5	; <UNPREDICTABLE>
    5c88:	00000000 	andeq	r0, r0, r0
    5c8c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c90:	00005300 	andeq	r5, r0, r0, lsl #6
    5c94:	00000000 	andeq	r0, r0, r0
    5c98:	00010000 	andeq	r0, r1, r0
    5c9c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5cac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5cb8:	01f30004 	mvnseq	r0, r4
    5cbc:	00009f50 	andeq	r9, r0, r0, asr pc
    5cc0:	00000000 	andeq	r0, r0, r0
    5cc4:	00010000 	andeq	r0, r1, r0
    5cc8:	00000050 	andeq	r0, r0, r0, asr r0
    5ccc:	00000000 	andeq	r0, r0, r0
    5cd0:	f3000400 	vshl.u8	d0, d0, d0
    5cd4:	009f5001 	addseq	r5, pc, r1
	...
    5ce4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ce8:	00005100 	andeq	r5, r0, r0, lsl #2
    5cec:	00000000 	andeq	r0, r0, r0
    5cf0:	00040000 	andeq	r0, r4, r0
    5cf4:	9f5101f3 	svcls	0x005101f3
	...
    5d00:	00510001 	subseq	r0, r1, r1
	...
    5d10:	01000000 	mrseq	r0, (UNDEF: 0)
    5d14:	00005200 	andeq	r5, r0, r0, lsl #4
    5d18:	00000000 	andeq	r0, r0, r0
    5d1c:	00040000 	andeq	r0, r4, r0
    5d20:	9f5201f3 	svcls	0x005201f3
	...
    5d2c:	00520001 	subseq	r0, r2, r1
	...
    5d3c:	01000000 	mrseq	r0, (UNDEF: 0)
    5d40:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    5d50:	00010000 	andeq	r0, r1, r0
    5d54:	00000053 	andeq	r0, r0, r3, asr r0
    5d58:	00000000 	andeq	r0, r0, r0
    5d5c:	72000500 	andvc	r0, r0, #0, 10
    5d60:	9f253500 	svcls	0x00253500
	...
    5d6c:	00530001 	subseq	r0, r3, r1
    5d70:	00000000 	andeq	r0, r0, r0
    5d74:	01000000 	mrseq	r0, (UNDEF: 0)
    5d78:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5d88:	00010000 	andeq	r0, r1, r0
    5d8c:	00000050 	andeq	r0, r0, r0, asr r0
    5d90:	00000000 	andeq	r0, r0, r0
    5d94:	f3000400 	vshl.u8	d0, d0, d0
    5d98:	009f5001 	addseq	r5, pc, r1
    5d9c:	00000000 	andeq	r0, r0, r0
    5da0:	01000000 	mrseq	r0, (UNDEF: 0)
    5da4:	00005000 	andeq	r5, r0, r0
    5da8:	00000000 	andeq	r0, r0, r0
    5dac:	00040000 	andeq	r0, r4, r0
    5db0:	9f5001f3 	svcls	0x005001f3
	...
    5dc4:	00510001 	subseq	r0, r1, r1
    5dc8:	00000000 	andeq	r0, r0, r0
    5dcc:	04000000 	streq	r0, [r0], #-0
    5dd0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5dd4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5dd8:	00000000 	andeq	r0, r0, r0
    5ddc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5df0:	00520001 	subseq	r0, r2, r1
    5df4:	00000000 	andeq	r0, r0, r0
    5df8:	04000000 	streq	r0, [r0], #-0
    5dfc:	5201f300 	andpl	pc, r1, #0, 6
    5e00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e04:	00000000 	andeq	r0, r0, r0
    5e08:	52000100 	andpl	r0, r0, #0, 2
	...
    5e1c:	00510001 	subseq	r0, r1, r1
	...
    5e2c:	01000000 	mrseq	r0, (UNDEF: 0)
    5e30:	00005300 	andeq	r5, r0, r0, lsl #6
    5e34:	00000000 	andeq	r0, r0, r0
    5e38:	00050000 	andeq	r0, r5, r0
    5e3c:	25350072 	ldrcs	r0, [r5, #-114]!	; 0x72
    5e40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e44:	00000000 	andeq	r0, r0, r0
    5e48:	53000100 	movwpl	r0, #256	; 0x100
	...
    5e54:	00530001 	subseq	r0, r3, r1
	...
    5e64:	01000000 	mrseq	r0, (UNDEF: 0)
    5e68:	00005000 	andeq	r5, r0, r0
    5e6c:	00000000 	andeq	r0, r0, r0
    5e70:	00040000 	andeq	r0, r4, r0
    5e74:	9f5001f3 	svcls	0x005001f3
	...
    5e88:	00500001 	subseq	r0, r0, r1
    5e8c:	00000000 	andeq	r0, r0, r0
    5e90:	04000000 	streq	r0, [r0], #-0
    5e94:	5001f300 	andpl	pc, r1, r0, lsl #6
    5e98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5ea8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5eb4:	01f30004 	mvnseq	r0, r4
    5eb8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5ec8:	00010000 	andeq	r0, r1, r0
    5ecc:	00000050 	andeq	r0, r0, r0, asr r0
    5ed0:	00000000 	andeq	r0, r0, r0
    5ed4:	f3000400 	vshl.u8	d0, d0, d0
    5ed8:	009f5001 	addseq	r5, pc, r1
    5edc:	00000000 	andeq	r0, r0, r0
    5ee0:	01000000 	mrseq	r0, (UNDEF: 0)
    5ee4:	00005000 	andeq	r5, r0, r0
    5ee8:	00000000 	andeq	r0, r0, r0
    5eec:	00040000 	andeq	r0, r4, r0
    5ef0:	9f5001f3 	svcls	0x005001f3
	...
    5f04:	00500001 	subseq	r0, r0, r1
    5f08:	00000000 	andeq	r0, r0, r0
    5f0c:	04000000 	streq	r0, [r0], #-0
    5f10:	5001f300 	andpl	pc, r1, r0, lsl #6
    5f14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5f24:	70000e00 	andvc	r0, r0, r0, lsl #28
    5f28:	1aff0800 	bne	fffc7f30 <SCS_BASE+0x1ffb9f30>
    5f2c:	00712438 	rsbseq	r2, r1, r8, lsr r4
    5f30:	211aff08 	tstcs	sl, r8, lsl #30
    5f34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5f38:	00000000 	andeq	r0, r0, r0
    5f3c:	f3000f00 	vpmax.f32	d0, d0, d0
    5f40:	ff085001 			; <UNDEFINED> instruction: 0xff085001
    5f44:	7124381a 	teqvc	r4, sl, lsl r8
    5f48:	1aff0800 	bne	fffc7f50 <SCS_BASE+0x1ffb9f50>
    5f4c:	00009f21 	andeq	r9, r0, r1, lsr #30
    5f50:	00000000 	andeq	r0, r0, r0
    5f54:	24900000 	ldrcs	r0, [r0], #0
    5f58:	24940800 	ldrcs	r0, [r4], #2048	; 0x800
    5f5c:	00010800 	andeq	r0, r1, r0, lsl #16
    5f60:	00249450 	eoreq	r9, r4, r0, asr r4
    5f64:	00249a08 	eoreq	r9, r4, r8, lsl #20
    5f68:	f3000408 	vshl.u8	d0, d8, d0
    5f6c:	009f5001 	addseq	r5, pc, r1
    5f70:	00000000 	andeq	r0, r0, r0
    5f74:	90000000 	andls	r0, r0, r0
    5f78:	94080024 	strls	r0, [r8], #-36	; 0x24
    5f7c:	01080024 	tsteq	r8, r4, lsr #32
    5f80:	24945000 	ldrcs	r5, [r4], #0
    5f84:	249a0800 	ldrcs	r0, [sl], #2048	; 0x800
    5f88:	00010800 	andeq	r0, r1, r0, lsl #16
    5f8c:	00000053 	andeq	r0, r0, r3, asr r0
    5f90:	00000000 	andeq	r0, r0, r0
    5f94:	00249000 	eoreq	r9, r4, r0
    5f98:	00249408 	eoreq	r9, r4, r8, lsl #8
    5f9c:	70000d08 	andvc	r0, r0, r8, lsl #26
    5fa0:	70253800 	eorvc	r3, r5, r0, lsl #16
    5fa4:	1aff0800 	bne	fffc7fac <SCS_BASE+0x1ffb9fac>
    5fa8:	9f212438 	svcls	0x00212438
    5fac:	08002494 	stmdaeq	r0, {r2, r4, r7, sl, sp}
    5fb0:	0800249a 	stmdaeq	r0, {r1, r3, r4, r7, sl, sp}
    5fb4:	01f3000e 	mvnseq	r0, lr
    5fb8:	73253850 	teqvc	r5, #80, 16	; 0x500000
    5fbc:	1aff0800 	bne	fffc7fc4 <SCS_BASE+0x1ffb9fc4>
    5fc0:	9f212438 	svcls	0x00212438
	...
    5fcc:	080024bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, sp}
    5fd0:	080024c4 	stmdaeq	r0, {r2, r6, r7, sl, sp}
    5fd4:	c4500001 	ldrbgt	r0, [r0], #-1
    5fd8:	e0080024 	and	r0, r8, r4, lsr #32
    5fdc:	04080024 	streq	r0, [r8], #-36	; 0x24
    5fe0:	5001f300 	andpl	pc, r1, r0, lsl #6
    5fe4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5fe8:	00000000 	andeq	r0, r0, r0
    5fec:	0024bc00 	eoreq	fp, r4, r0, lsl #24
    5ff0:	0024c908 	eoreq	ip, r4, r8, lsl #18
    5ff4:	51000108 	tstpl	r0, r8, lsl #2
    5ff8:	080024c9 	stmdaeq	r0, {r0, r3, r6, r7, sl, sp}
    5ffc:	080024e0 	stmdaeq	r0, {r5, r6, r7, sl, sp}
    6000:	00560001 	subseq	r0, r6, r1
    6004:	00000000 	andeq	r0, r0, r0
    6008:	bc000000 	stclt	0, cr0, [r0], {-0}
    600c:	cc080024 	stcgt	0, cr0, [r8], {36}	; 0x24
    6010:	02080024 	andeq	r0, r8, #36	; 0x24
    6014:	cc9f3000 	ldcgt	0, cr3, [pc], {0}
    6018:	e0080024 	and	r0, r8, r4, lsr #32
    601c:	07080024 	streq	r0, [r8, -r4, lsr #32]
    6020:	0a007400 	beq	23028 <__Stack_Size+0x22c28>
    6024:	9f1affff 	svcls	0x001affff
	...
    6030:	0800252a 	stmdaeq	r0, {r1, r3, r5, r8, sl, sp}
    6034:	0800252e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, sp}
    6038:	00730007 	rsbseq	r0, r3, r7
    603c:	2720200a 	strcs	r2, [r0, -sl]!
    6040:	00252e9f 	mlaeq	r5, pc, lr, r2	; <UNPREDICTABLE>
    6044:	00253208 	eoreq	r3, r5, r8, lsl #4
    6048:	73000608 	movwvc	r0, #1544	; 0x608
    604c:	27200800 	strcs	r0, [r0, -r0, lsl #16]!
    6050:	0025329f 	mlaeq	r5, pc, r2, r3	; <UNPREDICTABLE>
    6054:	00253608 	eoreq	r3, r5, r8, lsl #12
    6058:	53000108 	movwpl	r0, #264	; 0x108
    605c:	08002536 	stmdaeq	r0, {r1, r2, r4, r5, r8, sl, sp}
    6060:	0800254f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r8, sl, sp}
    6064:	0071000b 	rsbseq	r0, r1, fp
    6068:	1abfbf0a 	bne	feff5c98 <SCS_BASE+0x1efe7c98>
    606c:	2720200a 	strcs	r2, [r0, -sl]!
    6070:	0025529f 	mlaeq	r5, pc, r2, r5	; <UNPREDICTABLE>
    6074:	00256008 	eoreq	r6, r5, r8
    6078:	71000b08 	tstvc	r0, r8, lsl #22
    607c:	bfbf0a00 	svclt	0x00bf0a00
    6080:	20200a1a 	eorcs	r0, r0, sl, lsl sl
    6084:	00009f27 	andeq	r9, r0, r7, lsr #30
    6088:	00000000 	andeq	r0, r0, r0
    608c:	25920000 	ldrcs	r0, [r2]
    6090:	25be0800 	ldrcs	r0, [lr, #2048]!	; 0x800
    6094:	00010800 	andeq	r0, r1, r0, lsl #16
    6098:	00000053 	andeq	r0, r0, r3, asr r0
	...
    60a8:	71000700 	tstvc	r0, r0, lsl #14
    60ac:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    60b0:	00009f1a 	andeq	r9, r0, sl, lsl pc
    60b4:	00000000 	andeq	r0, r0, r0
    60b8:	00070000 	andeq	r0, r7, r0
    60bc:	ff0a0071 			; <UNDEFINED> instruction: 0xff0a0071
    60c0:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    60c4:	00000000 	andeq	r0, r0, r0
    60c8:	Address 0x00000000000060c8 is out of bounds.


Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_HP(void)
{
   0:	00000001 	andeq	r0, r0, r1
  u32 wEPVal = 0;

  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
   4:	00000001 	andeq	r0, r0, r1
   8:	00000001 	andeq	r0, r0, r1
   c:	00000001 	andeq	r0, r0, r1
	...
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
  18:	080001a4 	stmdaeq	r0, {r2, r5, r7, r8}
  1c:	080001b0 	stmdaeq	r0, {r4, r5, r7, r8}
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
  20:	080001b0 	stmdaeq	r0, {r4, r5, r7, r8}
  24:	080001c4 	stmdaeq	r0, {r2, r6, r7, r8}
  28:	080001c4 	stmdaeq	r0, {r2, r6, r7, r8}
    if ((wEPVal & EP_CTR_RX) != 0)
  2c:	080001d8 	stmdaeq	r0, {r3, r4, r6, r7, r8}
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
  30:	080001d8 	stmdaeq	r0, {r3, r4, r6, r7, r8}
  34:	08000226 	stmdaeq	r0, {r1, r2, r5, r9}
  38:	00000001 	andeq	r0, r0, r1

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
  3c:	00000001 	andeq	r0, r0, r1

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
  40:	00000001 	andeq	r0, r0, r1
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
  44:	00000001 	andeq	r0, r0, r1
  48:	08000228 	stmdaeq	r0, {r3, r5, r9}
  4c:	08000250 	stmdaeq	r0, {r4, r6, r9}

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
  50:	00000001 	andeq	r0, r0, r1
  54:	00000001 	andeq	r0, r0, r1
  58:	08000250 	stmdaeq	r0, {r4, r6, r9}


    } /* if((wEPVal & EP_CTR_TX) != 0) */

  }/* while(...) */
}
  5c:	08000262 	stmdaeq	r0, {r1, r5, r6, r9}
  60:	08000262 	stmdaeq	r0, {r1, r5, r6, r9}
  64:	08000296 	stmdaeq	r0, {r1, r2, r4, r7, r9}
  68:	08000296 	stmdaeq	r0, {r1, r2, r4, r7, r9}
  6c:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
  70:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
  74:	080002be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9}
  78:	00000001 	andeq	r0, r0, r1
  7c:	00000001 	andeq	r0, r0, r1
  80:	080002be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9}
  84:	080002d0 	stmdaeq	r0, {r4, r6, r7, r9}
  88:	00000001 	andeq	r0, r0, r1
  8c:	00000001 	andeq	r0, r0, r1
  90:	00000001 	andeq	r0, r0, r1
  94:	00000001 	andeq	r0, r0, r1
  98:	00000001 	andeq	r0, r0, r1
  9c:	00000001 	andeq	r0, r0, r1
  a0:	00000001 	andeq	r0, r0, r1
  a4:	00000001 	andeq	r0, r0, r1
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
  a8:	080002d0 	stmdaeq	r0, {r4, r6, r7, r9}
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
  ac:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
  b0:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
      break; 
      
    default:
      break;
  }
}
  b4:	0800032a 	stmdaeq	r0, {r1, r3, r5, r8, r9}
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
  b8:	0800032a 	stmdaeq	r0, {r1, r3, r5, r8, r9}
  bc:	0800034e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9}
  c0:	08000350 	stmdaeq	r0, {r4, r6, r8, r9}
  c4:	08000408 	stmdaeq	r0, {r3, sl}
  c8:	08000408 	stmdaeq	r0, {r3, sl}
  cc:	080007fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl}
  d0:	080007fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl}
  d4:	08000888 	stmdaeq	r0, {r3, r7, fp}
  d8:	08000888 	stmdaeq	r0, {r3, r7, fp}
  dc:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
  e0:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
  e4:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
  e8:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
  ec:	08000adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp}
	...
  f8:	08000adc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, fp}
  fc:	08000ade 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, fp}
 100:	08000ade 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, fp}
 104:	08000ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp}
 108:	08000ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp}
 10c:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
 110:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
 114:	08000ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp}
 118:	08000ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp}
 11c:	08000ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp}
 120:	08000ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp}
 124:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 128:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 12c:	08000aea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, fp}
 130:	08000aea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, fp}
 134:	08000aec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, fp}
 138:	08000aec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, fp}
 13c:	08000b00 	stmdaeq	r0, {r8, r9, fp}
 140:	08000b00 	stmdaeq	r0, {r8, r9, fp}
 144:	08000b02 	stmdaeq	r0, {r1, r8, r9, fp}
 148:	08000b02 	stmdaeq	r0, {r1, r8, r9, fp}
 14c:	08000b04 	stmdaeq	r0, {r2, r8, r9, fp}
 150:	08000b04 	stmdaeq	r0, {r2, r8, r9, fp}
 154:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
 158:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
 15c:	08000b08 	stmdaeq	r0, {r3, r8, r9, fp}
 160:	08000b08 	stmdaeq	r0, {r3, r8, r9, fp}
 164:	08000b0a 	stmdaeq	r0, {r1, r3, r8, r9, fp}
 168:	08000b0a 	stmdaeq	r0, {r1, r3, r8, r9, fp}
 16c:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
 170:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
 174:	08000b0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, fp}
 178:	08000b0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, fp}
 17c:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
 180:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
 184:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
 188:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
 18c:	08000b14 	stmdaeq	r0, {r2, r4, r8, r9, fp}
 190:	08000b14 	stmdaeq	r0, {r2, r4, r8, r9, fp}
 194:	08000b16 	stmdaeq	r0, {r1, r2, r4, r8, r9, fp}
 198:	00000001 	andeq	r0, r0, r1
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00000001 	andeq	r0, r0, r1
 1a4:	00000001 	andeq	r0, r0, r1
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000001 	andeq	r0, r0, r1
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	08000b16 	stmdaeq	r0, {r1, r2, r4, r8, r9, fp}
 1d4:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
 1d8:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
 1dc:	08000b1a 	stmdaeq	r0, {r1, r3, r4, r8, r9, fp}
 1e0:	08000b1a 	stmdaeq	r0, {r1, r3, r4, r8, r9, fp}
 1e4:	08000b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp}
 1e8:	08000b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp}
 1ec:	08000b20 	stmdaeq	r0, {r5, r8, r9, fp}
 1f0:	08000b20 	stmdaeq	r0, {r5, r8, r9, fp}
 1f4:	08000b22 	stmdaeq	r0, {r1, r5, r8, r9, fp}
 1f8:	08000b22 	stmdaeq	r0, {r1, r5, r8, r9, fp}
 1fc:	08000b24 	stmdaeq	r0, {r2, r5, r8, r9, fp}
 200:	08000b24 	stmdaeq	r0, {r2, r5, r8, r9, fp}
 204:	08000b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp}
 208:	08000b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp}
 20c:	08000b28 	stmdaeq	r0, {r3, r5, r8, r9, fp}
 210:	08000b28 	stmdaeq	r0, {r3, r5, r8, r9, fp}
 214:	08000b2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, fp}
 218:	08000b2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, fp}
 21c:	08000b2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, fp}
 220:	08000b2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, fp}
 224:	08000b40 	stmdaeq	r0, {r6, r8, r9, fp}
 228:	08000b40 	stmdaeq	r0, {r6, r8, r9, fp}
 22c:	08000b42 	stmdaeq	r0, {r1, r6, r8, r9, fp}
 230:	08000b42 	stmdaeq	r0, {r1, r6, r8, r9, fp}
 234:	08000b44 	stmdaeq	r0, {r2, r6, r8, r9, fp}
 238:	08000b44 	stmdaeq	r0, {r2, r6, r8, r9, fp}
 23c:	08000b46 	stmdaeq	r0, {r1, r2, r6, r8, r9, fp}
 240:	08000b46 	stmdaeq	r0, {r1, r2, r6, r8, r9, fp}
 244:	08000b48 	stmdaeq	r0, {r3, r6, r8, r9, fp}
 248:	08000b48 	stmdaeq	r0, {r3, r6, r8, r9, fp}
 24c:	08000b4a 	stmdaeq	r0, {r1, r3, r6, r8, r9, fp}
 250:	08000b4a 	stmdaeq	r0, {r1, r3, r6, r8, r9, fp}
 254:	08000b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp}
 258:	08000b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp}
 25c:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
 260:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
 264:	08000b50 	stmdaeq	r0, {r4, r6, r8, r9, fp}
 268:	08000b50 	stmdaeq	r0, {r4, r6, r8, r9, fp}
 26c:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
 270:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
 274:	08000bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp}
 278:	08000bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp}
 27c:	08000bc2 	stmdaeq	r0, {r1, r6, r7, r8, r9, fp}
 280:	08000bc2 	stmdaeq	r0, {r1, r6, r7, r8, r9, fp}
 284:	08000bc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, fp}
 288:	08000bc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, fp}
 28c:	08000bc6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, fp}
 290:	08000bc6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, fp}
 294:	08000bc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, fp}
 298:	08000bc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, fp}
 29c:	08000bca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, fp}
 2a0:	08000bca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, fp}
 2a4:	08000bcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, fp}
 2a8:	08000bcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, fp}
 2ac:	08000bce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, fp}
 2b0:	08000bce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, fp}
 2b4:	08000bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp}
 2b8:	08000bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp}
 2bc:	08000bd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, r9, fp}
 2c0:	08000bd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, r9, fp}
 2c4:	08000bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp}
 2c8:	08000bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp}
 2cc:	08000bd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, fp}
 2d0:	08000bd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, fp}
 2d4:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
 2d8:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
 2dc:	08000bda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, fp}
 2e0:	08000bda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, fp}
 2e4:	08000bdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, fp}
 2e8:	08000bdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, fp}
 2ec:	08000bde 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, fp}
 2f0:	08000bde 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, fp}
 2f4:	08000be0 	stmdaeq	r0, {r5, r6, r7, r8, r9, fp}
 2f8:	08000be0 	stmdaeq	r0, {r5, r6, r7, r8, r9, fp}
 2fc:	08000be2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, fp}
 300:	08000be2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, fp}
 304:	08000be4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, fp}
 308:	08000be4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, fp}
 30c:	08000be6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, fp}
 310:	08000be6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, fp}
 314:	08000be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp}
 318:	08000be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp}
 31c:	08000bea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, r9, fp}
	...
 328:	08000c1a 	stmdaeq	r0, {r1, r3, r4, sl, fp}
 32c:	08000c9a 	stmdaeq	r0, {r1, r3, r4, r7, sl, fp}
 330:	08000c9c 	stmdaeq	r0, {r2, r3, r4, r7, sl, fp}
 334:	08000ca2 	stmdaeq	r0, {r1, r5, r7, sl, fp}
 338:	08000ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp}
 33c:	08000cb4 	stmdaeq	r0, {r2, r4, r5, r7, sl, fp}
	...
 348:	08000bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp}
 34c:	08000bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp}
 350:	08000bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp}
 354:	08000cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp}
 358:	08000cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp}
 35c:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
 360:	00000001 	andeq	r0, r0, r1
 364:	00000001 	andeq	r0, r0, r1
	...
 370:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
 374:	08000dc4 	stmdaeq	r0, {r2, r6, r7, r8, sl, fp}
	...
 380:	08000dc4 	stmdaeq	r0, {r2, r6, r7, r8, sl, fp}
 384:	08000ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp}
 388:	08000ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp}
 38c:	08000de8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, fp}
 390:	08000de8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, fp}
 394:	08000dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp}
 398:	08000dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp}
 39c:	08000dfe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, sl, fp}
 3a0:	08000e00 	stmdaeq	r0, {r9, sl, fp}
 3a4:	08000e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp}
 3a8:	08000e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp}
 3ac:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
 3b0:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
 3b4:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
 3b8:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
 3bc:	08000ea8 	stmdaeq	r0, {r3, r5, r7, r9, sl, fp}
 3c0:	08000ea8 	stmdaeq	r0, {r3, r5, r7, r9, sl, fp}
 3c4:	08000ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp}
 3c8:	08000ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp}
 3cc:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
 3d0:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
 3d4:	08000fd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, fp}
 3d8:	08000fd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, fp}
 3dc:	08000fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp}
 3e0:	08000fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp}
 3e4:	08000ff0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, fp}
 3e8:	08000ff0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, fp}
 3ec:	08001010 	stmdaeq	r0, {r4, ip}
	...
 3f8:	08001010 	stmdaeq	r0, {r4, ip}
 3fc:	08001038 	stmdaeq	r0, {r3, r4, r5, ip}
 400:	08001038 	stmdaeq	r0, {r3, r4, r5, ip}
 404:	08001070 	stmdaeq	r0, {r4, r5, r6, ip}
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	08001070 	stmdaeq	r0, {r4, r5, r6, ip}
 414:	0800108c 	stmdaeq	r0, {r2, r3, r7, ip}
 418:	0800108c 	stmdaeq	r0, {r2, r3, r7, ip}
 41c:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
 420:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
 424:	080010b4 	stmdaeq	r0, {r2, r4, r5, r7, ip}
 428:	080010b4 	stmdaeq	r0, {r2, r4, r5, r7, ip}
 42c:	080010e8 	stmdaeq	r0, {r3, r5, r6, r7, ip}
 430:	080010e8 	stmdaeq	r0, {r3, r5, r6, r7, ip}
 434:	08001112 	stmdaeq	r0, {r1, r4, r8, ip}
	...
 440:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
 444:	0800112c 	stmdaeq	r0, {r2, r3, r5, r8, ip}
 448:	00000001 	andeq	r0, r0, r1
 44c:	00000001 	andeq	r0, r0, r1
 450:	0800112c 	stmdaeq	r0, {r2, r3, r5, r8, ip}
 454:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
 458:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
 45c:	0800115c 	stmdaeq	r0, {r2, r3, r4, r6, r8, ip}
 460:	0800115c 	stmdaeq	r0, {r2, r3, r4, r6, r8, ip}
 464:	0800116c 	stmdaeq	r0, {r2, r3, r5, r6, r8, ip}
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
 474:	00000001 	andeq	r0, r0, r1
 478:	00000001 	andeq	r0, r0, r1
 47c:	00000001 	andeq	r0, r0, r1
 480:	00000001 	andeq	r0, r0, r1
 484:	00000001 	andeq	r0, r0, r1
 488:	00000001 	andeq	r0, r0, r1
 48c:	00000001 	andeq	r0, r0, r1
 490:	00000001 	andeq	r0, r0, r1
 494:	00000001 	andeq	r0, r0, r1
 498:	0800116c 	stmdaeq	r0, {r2, r3, r5, r6, r8, ip}
 49c:	08001178 	stmdaeq	r0, {r3, r4, r5, r6, r8, ip}
 4a0:	08001178 	stmdaeq	r0, {r3, r4, r5, r6, r8, ip}
 4a4:	080011a0 	stmdaeq	r0, {r5, r7, r8, ip}
 4a8:	080011a0 	stmdaeq	r0, {r5, r7, r8, ip}
 4ac:	080011d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, ip}
 4b0:	080011d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, ip}
 4b4:	08001218 	stmdaeq	r0, {r3, r4, r9, ip}
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	00000001 	andeq	r0, r0, r1
 4c4:	00000001 	andeq	r0, r0, r1
 4c8:	08001218 	stmdaeq	r0, {r3, r4, r9, ip}
 4cc:	08001260 	stmdaeq	r0, {r5, r6, r9, ip}
 4d0:	00000001 	andeq	r0, r0, r1
 4d4:	00000001 	andeq	r0, r0, r1
 4d8:	00000001 	andeq	r0, r0, r1
 4dc:	00000001 	andeq	r0, r0, r1
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
	...
 500:	08001260 	stmdaeq	r0, {r5, r6, r9, ip}
 504:	0800126c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip}
 508:	0800126c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip}
 50c:	08001278 	stmdaeq	r0, {r3, r4, r5, r6, r9, ip}
 510:	08001278 	stmdaeq	r0, {r3, r4, r5, r6, r9, ip}
 514:	08001284 	stmdaeq	r0, {r2, r7, r9, ip}
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
 520:	00000001 	andeq	r0, r0, r1
 524:	00000001 	andeq	r0, r0, r1
 528:	00000001 	andeq	r0, r0, r1
 52c:	00000001 	andeq	r0, r0, r1
	...
 538:	00000001 	andeq	r0, r0, r1
 53c:	00000001 	andeq	r0, r0, r1
 540:	00000001 	andeq	r0, r0, r1
 544:	00000001 	andeq	r0, r0, r1
 548:	08001284 	stmdaeq	r0, {r2, r7, r9, ip}
 54c:	08001320 	stmdaeq	r0, {r5, r8, r9, ip}
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
 558:	08001320 	stmdaeq	r0, {r5, r8, r9, ip}
 55c:	0800132c 	stmdaeq	r0, {r2, r3, r5, r8, r9, ip}
 560:	00000001 	andeq	r0, r0, r1
 564:	00000001 	andeq	r0, r0, r1
 568:	00000001 	andeq	r0, r0, r1
 56c:	00000001 	andeq	r0, r0, r1
 570:	00000001 	andeq	r0, r0, r1
 574:	00000001 	andeq	r0, r0, r1
 578:	0800132c 	stmdaeq	r0, {r2, r3, r5, r8, r9, ip}
 57c:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
 580:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
 584:	08001334 	stmdaeq	r0, {r2, r4, r5, r8, r9, ip}
 588:	00000001 	andeq	r0, r0, r1
 58c:	00000001 	andeq	r0, r0, r1
 590:	00000001 	andeq	r0, r0, r1
 594:	00000001 	andeq	r0, r0, r1
 598:	00000001 	andeq	r0, r0, r1
 59c:	00000001 	andeq	r0, r0, r1
 5a0:	00000001 	andeq	r0, r0, r1
 5a4:	00000001 	andeq	r0, r0, r1
 5a8:	00000001 	andeq	r0, r0, r1
 5ac:	00000001 	andeq	r0, r0, r1
 5b0:	08001334 	stmdaeq	r0, {r2, r4, r5, r8, r9, ip}
 5b4:	08001388 	stmdaeq	r0, {r3, r7, r8, r9, ip}
 5b8:	00000001 	andeq	r0, r0, r1
 5bc:	00000001 	andeq	r0, r0, r1
	...
 5c8:	00000001 	andeq	r0, r0, r1
 5cc:	00000001 	andeq	r0, r0, r1
 5d0:	00000001 	andeq	r0, r0, r1
 5d4:	00000001 	andeq	r0, r0, r1
 5d8:	08001388 	stmdaeq	r0, {r3, r7, r8, r9, ip}
 5dc:	0800139c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, ip}
 5e0:	0800139c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, ip}
 5e4:	08001420 	stmdaeq	r0, {r5, sl, ip}
 5e8:	00000001 	andeq	r0, r0, r1
 5ec:	00000001 	andeq	r0, r0, r1
 5f0:	00000001 	andeq	r0, r0, r1
 5f4:	00000001 	andeq	r0, r0, r1
 5f8:	00000001 	andeq	r0, r0, r1
 5fc:	00000001 	andeq	r0, r0, r1
 600:	00000001 	andeq	r0, r0, r1
 604:	00000001 	andeq	r0, r0, r1
 608:	00000001 	andeq	r0, r0, r1
 60c:	00000001 	andeq	r0, r0, r1
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
 630:	00000001 	andeq	r0, r0, r1
 634:	00000001 	andeq	r0, r0, r1
 638:	00000001 	andeq	r0, r0, r1
 63c:	00000001 	andeq	r0, r0, r1
 640:	00000001 	andeq	r0, r0, r1
 644:	00000001 	andeq	r0, r0, r1
 648:	00000001 	andeq	r0, r0, r1
 64c:	00000001 	andeq	r0, r0, r1
 650:	00000001 	andeq	r0, r0, r1
 654:	00000001 	andeq	r0, r0, r1
 658:	08001420 	stmdaeq	r0, {r5, sl, ip}
 65c:	08001434 	stmdaeq	r0, {r2, r4, r5, sl, ip}
 660:	08001434 	stmdaeq	r0, {r2, r4, r5, sl, ip}
 664:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
 668:	00000001 	andeq	r0, r0, r1
 66c:	00000001 	andeq	r0, r0, r1
 670:	00000001 	andeq	r0, r0, r1
 674:	00000001 	andeq	r0, r0, r1
 678:	00000001 	andeq	r0, r0, r1
 67c:	00000001 	andeq	r0, r0, r1
 680:	00000001 	andeq	r0, r0, r1
 684:	00000001 	andeq	r0, r0, r1
 688:	00000001 	andeq	r0, r0, r1
 68c:	00000001 	andeq	r0, r0, r1
 690:	00000001 	andeq	r0, r0, r1
 694:	00000001 	andeq	r0, r0, r1
 698:	00000001 	andeq	r0, r0, r1
 69c:	00000001 	andeq	r0, r0, r1
 6a0:	00000001 	andeq	r0, r0, r1
 6a4:	00000001 	andeq	r0, r0, r1
 6a8:	00000001 	andeq	r0, r0, r1
 6ac:	00000001 	andeq	r0, r0, r1
 6b0:	00000001 	andeq	r0, r0, r1
 6b4:	00000001 	andeq	r0, r0, r1
	...
 6c0:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
 6c4:	08001488 	stmdaeq	r0, {r3, r7, sl, ip}
 6c8:	08001488 	stmdaeq	r0, {r3, r7, sl, ip}
 6cc:	080014c0 	stmdaeq	r0, {r6, r7, sl, ip}
 6d0:	00000001 	andeq	r0, r0, r1
 6d4:	00000001 	andeq	r0, r0, r1
 6d8:	00000001 	andeq	r0, r0, r1
 6dc:	00000001 	andeq	r0, r0, r1
 6e0:	080014c0 	stmdaeq	r0, {r6, r7, sl, ip}
 6e4:	080014d4 	stmdaeq	r0, {r2, r4, r6, r7, sl, ip}
 6e8:	080014d4 	stmdaeq	r0, {r2, r4, r6, r7, sl, ip}
 6ec:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
 6f0:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
 6f4:	080014f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, ip}
 6f8:	080014f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, ip}
 6fc:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
 700:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
 704:	08001518 	stmdaeq	r0, {r3, r4, r8, sl, ip}
 708:	08001518 	stmdaeq	r0, {r3, r4, r8, sl, ip}
 70c:	0800152c 	stmdaeq	r0, {r2, r3, r5, r8, sl, ip}
 710:	0800152c 	stmdaeq	r0, {r2, r3, r5, r8, sl, ip}
 714:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
 718:	00000001 	andeq	r0, r0, r1
 71c:	00000001 	andeq	r0, r0, r1
 720:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
 724:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
 728:	00000001 	andeq	r0, r0, r1
 72c:	00000001 	andeq	r0, r0, r1
 730:	00000001 	andeq	r0, r0, r1
 734:	00000001 	andeq	r0, r0, r1
 738:	00000001 	andeq	r0, r0, r1
 73c:	00000001 	andeq	r0, r0, r1
 740:	00000001 	andeq	r0, r0, r1
 744:	00000001 	andeq	r0, r0, r1
 748:	00000001 	andeq	r0, r0, r1
 74c:	00000001 	andeq	r0, r0, r1
 750:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
 754:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
 758:	00000001 	andeq	r0, r0, r1
 75c:	00000001 	andeq	r0, r0, r1
 760:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
 764:	080015e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, ip}
 768:	080015e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, ip}
 76c:	08001600 	stmdaeq	r0, {r9, sl, ip}
 770:	08001600 	stmdaeq	r0, {r9, sl, ip}
 774:	08001618 	stmdaeq	r0, {r3, r4, r9, sl, ip}
 778:	08001618 	stmdaeq	r0, {r3, r4, r9, sl, ip}
 77c:	08001630 	stmdaeq	r0, {r4, r5, r9, sl, ip}
 780:	00000001 	andeq	r0, r0, r1
 784:	00000001 	andeq	r0, r0, r1
 788:	00000001 	andeq	r0, r0, r1
 78c:	00000001 	andeq	r0, r0, r1
 790:	00000001 	andeq	r0, r0, r1
 794:	00000001 	andeq	r0, r0, r1
 798:	08001630 	stmdaeq	r0, {r4, r5, r9, sl, ip}
 79c:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
 7a0:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
 7a4:	08001686 	stmdaeq	r0, {r1, r2, r7, r9, sl, ip}
 7a8:	08001688 	stmdaeq	r0, {r3, r7, r9, sl, ip}
 7ac:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
 7b0:	00000001 	andeq	r0, r0, r1
 7b4:	00000001 	andeq	r0, r0, r1
 7b8:	00000001 	andeq	r0, r0, r1
 7bc:	00000001 	andeq	r0, r0, r1
	...
 7c8:	00000001 	andeq	r0, r0, r1
 7cc:	00000001 	andeq	r0, r0, r1
 7d0:	00000001 	andeq	r0, r0, r1
 7d4:	00000001 	andeq	r0, r0, r1
 7d8:	00000001 	andeq	r0, r0, r1
 7dc:	00000001 	andeq	r0, r0, r1
	...
 7e8:	00000001 	andeq	r0, r0, r1
 7ec:	00000001 	andeq	r0, r0, r1
 7f0:	00000001 	andeq	r0, r0, r1
 7f4:	00000001 	andeq	r0, r0, r1
	...
 800:	00000001 	andeq	r0, r0, r1
 804:	00000001 	andeq	r0, r0, r1
 808:	00000001 	andeq	r0, r0, r1
 80c:	00000001 	andeq	r0, r0, r1
 810:	00000001 	andeq	r0, r0, r1
 814:	00000001 	andeq	r0, r0, r1
 818:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
 81c:	080016d4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, ip}
 820:	00000001 	andeq	r0, r0, r1
 824:	00000001 	andeq	r0, r0, r1
 828:	00000001 	andeq	r0, r0, r1
 82c:	00000001 	andeq	r0, r0, r1
 830:	00000001 	andeq	r0, r0, r1
 834:	00000001 	andeq	r0, r0, r1
 838:	00000001 	andeq	r0, r0, r1
 83c:	00000001 	andeq	r0, r0, r1
 840:	00000001 	andeq	r0, r0, r1
 844:	00000001 	andeq	r0, r0, r1
 848:	00000001 	andeq	r0, r0, r1
 84c:	00000001 	andeq	r0, r0, r1
 850:	00000001 	andeq	r0, r0, r1
 854:	00000001 	andeq	r0, r0, r1
 858:	00000001 	andeq	r0, r0, r1
 85c:	00000001 	andeq	r0, r0, r1
 860:	00000001 	andeq	r0, r0, r1
 864:	00000001 	andeq	r0, r0, r1
 868:	080016d4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, ip}
 86c:	080016ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip}
 870:	00000001 	andeq	r0, r0, r1
 874:	00000001 	andeq	r0, r0, r1
 878:	080016ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip}
 87c:	080016fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, sl, ip}
 880:	00000001 	andeq	r0, r0, r1
 884:	00000001 	andeq	r0, r0, r1
 888:	00000001 	andeq	r0, r0, r1
 88c:	00000001 	andeq	r0, r0, r1
 890:	00000001 	andeq	r0, r0, r1
 894:	00000001 	andeq	r0, r0, r1
 898:	00000001 	andeq	r0, r0, r1
 89c:	00000001 	andeq	r0, r0, r1
 8a0:	00000001 	andeq	r0, r0, r1
 8a4:	00000001 	andeq	r0, r0, r1
 8a8:	00000001 	andeq	r0, r0, r1
 8ac:	00000001 	andeq	r0, r0, r1
 8b0:	00000001 	andeq	r0, r0, r1
 8b4:	00000001 	andeq	r0, r0, r1
 8b8:	00000001 	andeq	r0, r0, r1
 8bc:	00000001 	andeq	r0, r0, r1
 8c0:	00000001 	andeq	r0, r0, r1
 8c4:	00000001 	andeq	r0, r0, r1
 8c8:	080016fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, sl, ip}
 8cc:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
 8d0:	00000001 	andeq	r0, r0, r1
 8d4:	00000001 	andeq	r0, r0, r1
 8d8:	00000001 	andeq	r0, r0, r1
 8dc:	00000001 	andeq	r0, r0, r1
 8e0:	00000001 	andeq	r0, r0, r1
 8e4:	00000001 	andeq	r0, r0, r1
 8e8:	00000001 	andeq	r0, r0, r1
 8ec:	00000001 	andeq	r0, r0, r1
 8f0:	00000001 	andeq	r0, r0, r1
 8f4:	00000001 	andeq	r0, r0, r1
 8f8:	00000001 	andeq	r0, r0, r1
 8fc:	00000001 	andeq	r0, r0, r1
 900:	00000001 	andeq	r0, r0, r1
 904:	00000001 	andeq	r0, r0, r1
 908:	00000001 	andeq	r0, r0, r1
 90c:	00000001 	andeq	r0, r0, r1
 910:	00000001 	andeq	r0, r0, r1
 914:	00000001 	andeq	r0, r0, r1
 918:	00000001 	andeq	r0, r0, r1
 91c:	00000001 	andeq	r0, r0, r1
 920:	00000001 	andeq	r0, r0, r1
 924:	00000001 	andeq	r0, r0, r1
 928:	00000001 	andeq	r0, r0, r1
 92c:	00000001 	andeq	r0, r0, r1
 930:	00000001 	andeq	r0, r0, r1
 934:	00000001 	andeq	r0, r0, r1
 938:	00000001 	andeq	r0, r0, r1
 93c:	00000001 	andeq	r0, r0, r1
 940:	00000001 	andeq	r0, r0, r1
 944:	00000001 	andeq	r0, r0, r1
 948:	00000001 	andeq	r0, r0, r1
 94c:	00000001 	andeq	r0, r0, r1
 950:	00000001 	andeq	r0, r0, r1
 954:	00000001 	andeq	r0, r0, r1
 958:	00000001 	andeq	r0, r0, r1
 95c:	00000001 	andeq	r0, r0, r1
 960:	00000001 	andeq	r0, r0, r1
 964:	00000001 	andeq	r0, r0, r1
 968:	00000001 	andeq	r0, r0, r1
 96c:	00000001 	andeq	r0, r0, r1
 970:	00000001 	andeq	r0, r0, r1
 974:	00000001 	andeq	r0, r0, r1
 978:	00000001 	andeq	r0, r0, r1
 97c:	00000001 	andeq	r0, r0, r1
 980:	00000001 	andeq	r0, r0, r1
 984:	00000001 	andeq	r0, r0, r1
 988:	00000001 	andeq	r0, r0, r1
 98c:	00000001 	andeq	r0, r0, r1
 990:	00000001 	andeq	r0, r0, r1
 994:	00000001 	andeq	r0, r0, r1
 998:	00000001 	andeq	r0, r0, r1
 99c:	00000001 	andeq	r0, r0, r1
 9a0:	00000001 	andeq	r0, r0, r1
 9a4:	00000001 	andeq	r0, r0, r1
 9a8:	00000001 	andeq	r0, r0, r1
 9ac:	00000001 	andeq	r0, r0, r1
 9b0:	00000001 	andeq	r0, r0, r1
 9b4:	00000001 	andeq	r0, r0, r1
 9b8:	00000001 	andeq	r0, r0, r1
 9bc:	00000001 	andeq	r0, r0, r1
 9c0:	00000001 	andeq	r0, r0, r1
 9c4:	00000001 	andeq	r0, r0, r1
 9c8:	00000001 	andeq	r0, r0, r1
 9cc:	00000001 	andeq	r0, r0, r1
 9d0:	00000001 	andeq	r0, r0, r1
 9d4:	00000001 	andeq	r0, r0, r1
 9d8:	00000001 	andeq	r0, r0, r1
 9dc:	00000001 	andeq	r0, r0, r1
 9e0:	00000001 	andeq	r0, r0, r1
 9e4:	00000001 	andeq	r0, r0, r1
 9e8:	00000001 	andeq	r0, r0, r1
 9ec:	00000001 	andeq	r0, r0, r1
 9f0:	00000001 	andeq	r0, r0, r1
 9f4:	00000001 	andeq	r0, r0, r1
 9f8:	00000001 	andeq	r0, r0, r1
 9fc:	00000001 	andeq	r0, r0, r1
 a00:	00000001 	andeq	r0, r0, r1
 a04:	00000001 	andeq	r0, r0, r1
 a08:	00000001 	andeq	r0, r0, r1
 a0c:	00000001 	andeq	r0, r0, r1
 a10:	00000001 	andeq	r0, r0, r1
 a14:	00000001 	andeq	r0, r0, r1
 a18:	00000001 	andeq	r0, r0, r1
 a1c:	00000001 	andeq	r0, r0, r1
 a20:	00000001 	andeq	r0, r0, r1
 a24:	00000001 	andeq	r0, r0, r1
 a28:	00000001 	andeq	r0, r0, r1
 a2c:	00000001 	andeq	r0, r0, r1
 a30:	00000001 	andeq	r0, r0, r1
 a34:	00000001 	andeq	r0, r0, r1
 a38:	00000001 	andeq	r0, r0, r1
 a3c:	00000001 	andeq	r0, r0, r1
 a40:	00000001 	andeq	r0, r0, r1
 a44:	00000001 	andeq	r0, r0, r1
 a48:	00000001 	andeq	r0, r0, r1
 a4c:	00000001 	andeq	r0, r0, r1
 a50:	00000001 	andeq	r0, r0, r1
 a54:	00000001 	andeq	r0, r0, r1
 a58:	00000001 	andeq	r0, r0, r1
 a5c:	00000001 	andeq	r0, r0, r1
 a60:	00000001 	andeq	r0, r0, r1
 a64:	00000001 	andeq	r0, r0, r1
 a68:	00000001 	andeq	r0, r0, r1
 a6c:	00000001 	andeq	r0, r0, r1
 a70:	00000001 	andeq	r0, r0, r1
 a74:	00000001 	andeq	r0, r0, r1
 a78:	00000001 	andeq	r0, r0, r1
 a7c:	00000001 	andeq	r0, r0, r1
 a80:	00000001 	andeq	r0, r0, r1
 a84:	00000001 	andeq	r0, r0, r1
 a88:	00000001 	andeq	r0, r0, r1
 a8c:	00000001 	andeq	r0, r0, r1
 a90:	00000001 	andeq	r0, r0, r1
 a94:	00000001 	andeq	r0, r0, r1
 a98:	00000001 	andeq	r0, r0, r1
 a9c:	00000001 	andeq	r0, r0, r1
 aa0:	00000001 	andeq	r0, r0, r1
 aa4:	00000001 	andeq	r0, r0, r1
 aa8:	00000001 	andeq	r0, r0, r1
 aac:	00000001 	andeq	r0, r0, r1
 ab0:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
 ab4:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 ab8:	00000001 	andeq	r0, r0, r1
 abc:	00000001 	andeq	r0, r0, r1
 ac0:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 ac4:	08001714 	stmdaeq	r0, {r2, r4, r8, r9, sl, ip}
	...
 ad0:	00000001 	andeq	r0, r0, r1
 ad4:	00000001 	andeq	r0, r0, r1
 ad8:	08001714 	stmdaeq	r0, {r2, r4, r8, r9, sl, ip}
 adc:	08001720 	stmdaeq	r0, {r5, r8, r9, sl, ip}
 ae0:	08001720 	stmdaeq	r0, {r5, r8, r9, sl, ip}
 ae4:	08001748 	stmdaeq	r0, {r3, r6, r8, r9, sl, ip}
 ae8:	08001748 	stmdaeq	r0, {r3, r6, r8, r9, sl, ip}
 aec:	08001760 	stmdaeq	r0, {r5, r6, r8, r9, sl, ip}
 af0:	00000001 	andeq	r0, r0, r1
 af4:	00000001 	andeq	r0, r0, r1
 af8:	00000001 	andeq	r0, r0, r1
 afc:	00000001 	andeq	r0, r0, r1
	...
 b08:	08001760 	stmdaeq	r0, {r5, r6, r8, r9, sl, ip}
 b0c:	080017f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, ip}
 b10:	080017f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, ip}
 b14:	0800187c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip}
 b18:	0800187c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip}
 b1c:	08001892 	stmdaeq	r0, {r1, r4, r7, fp, ip}
 b20:	00000001 	andeq	r0, r0, r1
 b24:	00000001 	andeq	r0, r0, r1
 b28:	00000001 	andeq	r0, r0, r1
 b2c:	00000001 	andeq	r0, r0, r1
 b30:	08001892 	stmdaeq	r0, {r1, r4, r7, fp, ip}
 b34:	080018aa 	stmdaeq	r0, {r1, r3, r5, r7, fp, ip}
 b38:	080018aa 	stmdaeq	r0, {r1, r3, r5, r7, fp, ip}
 b3c:	080018dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip}
 b40:	00000001 	andeq	r0, r0, r1
 b44:	00000001 	andeq	r0, r0, r1
 b48:	00000001 	andeq	r0, r0, r1
 b4c:	00000001 	andeq	r0, r0, r1
 b50:	00000001 	andeq	r0, r0, r1
 b54:	00000001 	andeq	r0, r0, r1
 b58:	00000001 	andeq	r0, r0, r1
 b5c:	00000001 	andeq	r0, r0, r1
 b60:	00000001 	andeq	r0, r0, r1
 b64:	00000001 	andeq	r0, r0, r1
 b68:	00000001 	andeq	r0, r0, r1
 b6c:	00000001 	andeq	r0, r0, r1
 b70:	080018dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip}
 b74:	080018e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, ip}
 b78:	080018e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, ip}
 b7c:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
 b80:	00000001 	andeq	r0, r0, r1
 b84:	00000001 	andeq	r0, r0, r1
 b88:	00000001 	andeq	r0, r0, r1
 b8c:	00000001 	andeq	r0, r0, r1
 b90:	00000001 	andeq	r0, r0, r1
 b94:	00000001 	andeq	r0, r0, r1
 b98:	00000001 	andeq	r0, r0, r1
 b9c:	00000001 	andeq	r0, r0, r1
 ba0:	00000001 	andeq	r0, r0, r1
 ba4:	00000001 	andeq	r0, r0, r1
 ba8:	00000001 	andeq	r0, r0, r1
 bac:	00000001 	andeq	r0, r0, r1
 bb0:	00000001 	andeq	r0, r0, r1
 bb4:	00000001 	andeq	r0, r0, r1
 bb8:	00000001 	andeq	r0, r0, r1
 bbc:	00000001 	andeq	r0, r0, r1
 bc0:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
 bc4:	080018f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, ip}
 bc8:	080018f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, ip}
 bcc:	08001900 	stmdaeq	r0, {r8, fp, ip}
 bd0:	08001900 	stmdaeq	r0, {r8, fp, ip}
 bd4:	0800193e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, fp, ip}
 bd8:	00000001 	andeq	r0, r0, r1
 bdc:	00000001 	andeq	r0, r0, r1
	...
 be8:	08001940 	stmdaeq	r0, {r6, r8, fp, ip}
 bec:	08001990 	stmdaeq	r0, {r4, r7, r8, fp, ip}
	...
 bf8:	08001990 	stmdaeq	r0, {r4, r7, r8, fp, ip}
 bfc:	080019c4 	stmdaeq	r0, {r2, r6, r7, r8, fp, ip}
	...
 c08:	08001cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, ip}
 c0c:	08001ce2 	stmdaeq	r0, {r1, r5, r6, r7, sl, fp, ip}
 c10:	08001ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip}
 c14:	08001cea 	stmdaeq	r0, {r1, r3, r5, r6, r7, sl, fp, ip}
 c18:	08001cee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, sl, fp, ip}
 c1c:	08001cf2 	stmdaeq	r0, {r1, r4, r5, r6, r7, sl, fp, ip}
 c20:	08001cf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, sl, fp, ip}
 c24:	08001cfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, fp, ip}
 c28:	08001cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp, ip}
 c2c:	08001d00 	stmdaeq	r0, {r8, sl, fp, ip}
	...
 c38:	08001cea 	stmdaeq	r0, {r1, r3, r5, r6, r7, sl, fp, ip}
 c3c:	08001cee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, sl, fp, ip}
 c40:	08001cf2 	stmdaeq	r0, {r1, r4, r5, r6, r7, sl, fp, ip}
 c44:	08001cf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, sl, fp, ip}
 c48:	08001cfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, fp, ip}
 c4c:	08001cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp, ip}
 c50:	08001d00 	stmdaeq	r0, {r8, sl, fp, ip}
 c54:	08001d0e 	stmdaeq	r0, {r1, r2, r3, r8, sl, fp, ip}
	...
 c60:	08001eca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, fp, ip}
 c64:	08002064 	stmdaeq	r0, {r2, r5, r6, sp}
 c68:	0800206c 	stmdaeq	r0, {r2, r3, r5, r6, sp}
 c6c:	0800208c 	stmdaeq	r0, {r2, r3, r7, sp}
	...
 c78:	080019c4 	stmdaeq	r0, {r2, r6, r7, r8, fp, ip}
 c7c:	080019e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, ip}
 c80:	080019e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, ip}
 c84:	08001a0c 	stmdaeq	r0, {r2, r3, r9, fp, ip}
 c88:	08001a0c 	stmdaeq	r0, {r2, r3, r9, fp, ip}
 c8c:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
 c90:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
 c94:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
 c98:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
 c9c:	08001b80 	stmdaeq	r0, {r7, r8, r9, fp, ip}
 ca0:	08001b80 	stmdaeq	r0, {r7, r8, r9, fp, ip}
 ca4:	08001bc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, fp, ip}
 ca8:	08001bc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, fp, ip}
 cac:	08001ca0 	stmdaeq	r0, {r5, r7, sl, fp, ip}
 cb0:	08001ca0 	stmdaeq	r0, {r5, r7, sl, fp, ip}
 cb4:	08001d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp, ip}
 cb8:	08001d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp, ip}
 cbc:	08001d50 	stmdaeq	r0, {r4, r6, r8, sl, fp, ip}
 cc0:	08001d50 	stmdaeq	r0, {r4, r6, r8, sl, fp, ip}
 cc4:	08001d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp, ip}
 cc8:	08001d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp, ip}
 ccc:	08001db0 	stmdaeq	r0, {r4, r5, r7, r8, sl, fp, ip}
 cd0:	08001db0 	stmdaeq	r0, {r4, r5, r7, r8, sl, fp, ip}
 cd4:	0800208c 	stmdaeq	r0, {r2, r3, r7, sp}
 cd8:	0800208c 	stmdaeq	r0, {r2, r3, r7, sp}
 cdc:	08002158 	stmdaeq	r0, {r3, r4, r6, r8, sp}
 ce0:	08002158 	stmdaeq	r0, {r3, r4, r6, r8, sp}
 ce4:	08002198 	stmdaeq	r0, {r3, r4, r7, r8, sp}
 ce8:	08002198 	stmdaeq	r0, {r3, r4, r7, r8, sp}
 cec:	080021f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sp}
 cf0:	080021f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sp}
 cf4:	080021f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sp}
	...
 d00:	080021f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sp}
 d04:	08002226 	stmdaeq	r0, {r1, r2, r5, r9, sp}
 d08:	08002226 	stmdaeq	r0, {r1, r2, r5, r9, sp}
 d0c:	0800224a 	stmdaeq	r0, {r1, r3, r6, r9, sp}
	...
 d18:	00000001 	andeq	r0, r0, r1
 d1c:	00000001 	andeq	r0, r0, r1
 d20:	00000001 	andeq	r0, r0, r1
 d24:	00000001 	andeq	r0, r0, r1
	...
 d30:	08002432 	stmdaeq	r0, {r1, r4, r5, sl, sp}
 d34:	08002434 	stmdaeq	r0, {r2, r4, r5, sl, sp}
 d38:	08002444 	stmdaeq	r0, {r2, r6, sl, sp}
 d3c:	08002470 	stmdaeq	r0, {r4, r5, r6, sl, sp}
	...
 d48:	00000001 	andeq	r0, r0, r1
 d4c:	00000001 	andeq	r0, r0, r1
 d50:	00000001 	andeq	r0, r0, r1
 d54:	00000001 	andeq	r0, r0, r1
	...
 d60:	00000001 	andeq	r0, r0, r1
 d64:	00000001 	andeq	r0, r0, r1
 d68:	00000001 	andeq	r0, r0, r1
 d6c:	00000001 	andeq	r0, r0, r1
	...
 d78:	00000001 	andeq	r0, r0, r1
 d7c:	00000001 	andeq	r0, r0, r1
 d80:	00000001 	andeq	r0, r0, r1
 d84:	00000001 	andeq	r0, r0, r1
 d88:	00000001 	andeq	r0, r0, r1
 d8c:	00000001 	andeq	r0, r0, r1
	...
 d98:	00000001 	andeq	r0, r0, r1
 d9c:	00000001 	andeq	r0, r0, r1
 da0:	00000001 	andeq	r0, r0, r1
 da4:	00000001 	andeq	r0, r0, r1
	...
 db0:	00000001 	andeq	r0, r0, r1
 db4:	00000001 	andeq	r0, r0, r1
 db8:	00000001 	andeq	r0, r0, r1
 dbc:	00000001 	andeq	r0, r0, r1
	...
 dc8:	00000001 	andeq	r0, r0, r1
 dcc:	00000001 	andeq	r0, r0, r1
 dd0:	00000001 	andeq	r0, r0, r1
 dd4:	00000001 	andeq	r0, r0, r1
 dd8:	00000001 	andeq	r0, r0, r1
 ddc:	00000001 	andeq	r0, r0, r1
 de0:	00000001 	andeq	r0, r0, r1
 de4:	00000001 	andeq	r0, r0, r1
 de8:	00000001 	andeq	r0, r0, r1
 dec:	00000001 	andeq	r0, r0, r1
 df0:	00000001 	andeq	r0, r0, r1
 df4:	00000001 	andeq	r0, r0, r1
 df8:	00000001 	andeq	r0, r0, r1
 dfc:	00000001 	andeq	r0, r0, r1
 e00:	0800224c 	stmdaeq	r0, {r2, r3, r6, r9, sp}
 e04:	0800225c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sp}
 e08:	00000001 	andeq	r0, r0, r1
 e0c:	00000001 	andeq	r0, r0, r1
 e10:	00000001 	andeq	r0, r0, r1
 e14:	00000001 	andeq	r0, r0, r1
 e18:	00000001 	andeq	r0, r0, r1
 e1c:	00000001 	andeq	r0, r0, r1
 e20:	0800225c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sp}
 e24:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
 e28:	00000001 	andeq	r0, r0, r1
 e2c:	00000001 	andeq	r0, r0, r1
 e30:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
 e34:	080022aa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sp}
 e38:	080022aa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sp}
 e3c:	080022dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sp}
 e40:	00000001 	andeq	r0, r0, r1
 e44:	00000001 	andeq	r0, r0, r1
 e48:	00000001 	andeq	r0, r0, r1
 e4c:	00000001 	andeq	r0, r0, r1
 e50:	00000001 	andeq	r0, r0, r1
 e54:	00000001 	andeq	r0, r0, r1
 e58:	080022dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sp}
 e5c:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
 e60:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
 e64:	08002328 	stmdaeq	r0, {r3, r5, r8, r9, sp}
 e68:	00000001 	andeq	r0, r0, r1
 e6c:	00000001 	andeq	r0, r0, r1
 e70:	00000001 	andeq	r0, r0, r1
 e74:	00000001 	andeq	r0, r0, r1
 e78:	08002328 	stmdaeq	r0, {r3, r5, r8, r9, sp}
 e7c:	08002348 	stmdaeq	r0, {r3, r6, r8, r9, sp}
 e80:	00000001 	andeq	r0, r0, r1
 e84:	00000001 	andeq	r0, r0, r1
 e88:	00000001 	andeq	r0, r0, r1
 e8c:	00000001 	andeq	r0, r0, r1
 e90:	00000001 	andeq	r0, r0, r1
 e94:	00000001 	andeq	r0, r0, r1
 e98:	00000001 	andeq	r0, r0, r1
 e9c:	00000001 	andeq	r0, r0, r1
 ea0:	00000001 	andeq	r0, r0, r1
 ea4:	00000001 	andeq	r0, r0, r1
 ea8:	00000001 	andeq	r0, r0, r1
 eac:	00000001 	andeq	r0, r0, r1
 eb0:	00000001 	andeq	r0, r0, r1
 eb4:	00000001 	andeq	r0, r0, r1
 eb8:	00000001 	andeq	r0, r0, r1
 ebc:	00000001 	andeq	r0, r0, r1
 ec0:	00000001 	andeq	r0, r0, r1
 ec4:	00000001 	andeq	r0, r0, r1
 ec8:	08002348 	stmdaeq	r0, {r3, r6, r8, r9, sp}
 ecc:	0800236e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, sp}
 ed0:	0800236e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, sp}
 ed4:	08002394 	stmdaeq	r0, {r2, r4, r7, r8, r9, sp}
 ed8:	00000001 	andeq	r0, r0, r1
 edc:	00000001 	andeq	r0, r0, r1
 ee0:	00000001 	andeq	r0, r0, r1
 ee4:	00000001 	andeq	r0, r0, r1
 ee8:	08002394 	stmdaeq	r0, {r2, r4, r7, r8, r9, sp}
 eec:	080023b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sp}
 ef0:	080023b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sp}
 ef4:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
 ef8:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
 efc:	080023f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sp}
 f00:	080023f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sp}
 f04:	08002414 	stmdaeq	r0, {r2, r4, sl, sp}
 f08:	08002414 	stmdaeq	r0, {r2, r4, sl, sp}
 f0c:	08002430 	stmdaeq	r0, {r4, r5, sl, sp}
 f10:	00000001 	andeq	r0, r0, r1
 f14:	00000001 	andeq	r0, r0, r1
 f18:	08002430 	stmdaeq	r0, {r4, r5, sl, sp}
 f1c:	08002470 	stmdaeq	r0, {r4, r5, r6, sl, sp}
 f20:	00000001 	andeq	r0, r0, r1
 f24:	00000001 	andeq	r0, r0, r1
 f28:	08002470 	stmdaeq	r0, {r4, r5, r6, sl, sp}
 f2c:	08002490 	stmdaeq	r0, {r4, r7, sl, sp}
 f30:	00000001 	andeq	r0, r0, r1
 f34:	00000001 	andeq	r0, r0, r1
 f38:	00000001 	andeq	r0, r0, r1
 f3c:	00000001 	andeq	r0, r0, r1
 f40:	00000001 	andeq	r0, r0, r1
 f44:	00000001 	andeq	r0, r0, r1
 f48:	00000001 	andeq	r0, r0, r1
 f4c:	00000001 	andeq	r0, r0, r1
 f50:	00000001 	andeq	r0, r0, r1
 f54:	00000001 	andeq	r0, r0, r1
 f58:	00000001 	andeq	r0, r0, r1
 f5c:	00000001 	andeq	r0, r0, r1
 f60:	00000001 	andeq	r0, r0, r1
 f64:	00000001 	andeq	r0, r0, r1
 f68:	00000001 	andeq	r0, r0, r1
 f6c:	00000001 	andeq	r0, r0, r1
 f70:	00000001 	andeq	r0, r0, r1
 f74:	00000001 	andeq	r0, r0, r1
 f78:	00000001 	andeq	r0, r0, r1
 f7c:	00000001 	andeq	r0, r0, r1
 f80:	00000001 	andeq	r0, r0, r1
 f84:	00000001 	andeq	r0, r0, r1
 f88:	00000001 	andeq	r0, r0, r1
 f8c:	00000001 	andeq	r0, r0, r1
 f90:	00000001 	andeq	r0, r0, r1
 f94:	00000001 	andeq	r0, r0, r1
 f98:	08002490 	stmdaeq	r0, {r4, r7, sl, sp}
 f9c:	0800249a 	stmdaeq	r0, {r1, r3, r4, r7, sl, sp}
	...
 fa8:	0800249c 	stmdaeq	r0, {r2, r3, r4, r7, sl, sp}
 fac:	080024bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, sp}
 fb0:	080024bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, sp}
 fb4:	080024e0 	stmdaeq	r0, {r5, r6, r7, sl, sp}
	...
 fc0:	080024e0 	stmdaeq	r0, {r5, r6, r7, sl, sp}
 fc4:	0800264c 	stmdaeq	r0, {r2, r3, r6, r9, sl, sp}
 fc8:	00000001 	andeq	r0, r0, r1
 fcc:	00000001 	andeq	r0, r0, r1
	...
